{"version":3,"sources":["webpack:///src/app/views/forms/incident-report/incident-report.component.html","webpack:///src/app/views/forms/incident-report/incident-report.component.ts","webpack:///src/app/views/forms/hazard-report/hazard-report.component.html","webpack:///src/app/views/forms/hazard-report/hazard-report.component.ts","webpack:///src/app/views/forms/risk-assessment-swms/add-item/add-item.component.ts","webpack:///src/app/views/forms/risk-assessment-swms/add-item/add-item.component.html","webpack:///src/app/views/forms/hazard-form-table-details/hazard-form-table-details.component.ts","webpack:///src/app/views/forms/hazard-form-table-details/hazard-form-table-details.component.html","webpack:///src/app/views/forms/toolbox-talk/toolbox-talk.component.html","webpack:///src/app/views/forms/toolbox-talk/toolbox-talk.component.ts","webpack:///src/app/views/forms/forms.module.ts","webpack:///src/app/views/forms/forms-routing.module.ts","webpack:///src/app/views/forms/site-inspection/site-inspection.component.ts","webpack:///src/app/views/forms/site-inspection/site-inspection.component.html","webpack:///src/app/views/forms/forms.component.ts","webpack:///src/app/views/forms/forms.component.html","webpack:///src/app/views/forms/display-table/display-table.component.ts","webpack:///src/app/views/forms/display-table/display-table.component.html","webpack:///src/app/views/forms/risk-assesment-table/risk-assesment-table.component.ts","webpack:///src/app/views/forms/risk-assesment-table/risk-assesment-table.component.html","webpack:///src/app/views/forms/risk-assessment-swms/risk-assessment-swms.component.html","webpack:///src/app/views/forms/risk-assessment-swms/risk-assessment-swms.component.ts","webpack:///src/app/views/forms/incidents-table/incidents-table.component.ts","webpack:///src/app/views/forms/incidents-table/incidents-table.component.html","webpack:///src/app/views/forms/site-inspection-table/site-inspection-table.component.ts","webpack:///src/app/views/forms/site-inspection-table/site-inspection-table.component.html"],"names":["IncidentReportComponent","fb","dynamicFormsService","logicalFormInfo","activatedRoute","setTitle","upload","router","ngZone","fileArr","imgArr","fileObj","PPEselection","ppeArr","changesArr","natureOfIncArr","incidentsArr","rootArr","allJobNumbers","maxDate","Date","minDate","PPE","changes","rootCauseIncident","natureOFIncidents","incidents","ppeSelectedArr","changesSelectedArr","natureOfIncSelectedArr","typeOfIncidentsSelectedArr","rootSelectedArr","signaturePadOptions","minWidth","canvasWidth","canvasHeight","signaturePadOptions1","IncidentReport","group","array","arrObj","jobNumber","required","projectName","siteName","customerName","streetAddress","customerContact","projectManager","personCompletingForm","customerContactPhone","customerEmail","dateOfFormCompletion","name","department","position","locationOfTheIncident","dateOfTheIncident","timeOfTheIncident","whyDidtheUnsafeConditonExist","completedName","completedPosition","completedDepartment","completedDate","reviewedName","reviewedPosition","reviewedDepartment","reviewedDate","priorIncident","similarIncident","witnessStatement","nameOfWitness","file","similarIncidentText","priorIncidentText","instructions","signaturePad","signaturePad1","changesMadeOther","changesMadeOtherText","onStable","pipe","subscribe","autosize","resizeToFitContent","id","snapshot","params","console","log","homebarTitle","next","getAllJobNumber","getAllProjectMang","getAllChanges","getAllPPE","getAllTypeOfInc","getAllRoot","getAllNatureOfInc","getAllStaff","getIncidentsByid","addAction","add","push","newAction","get","correctAction","personRes","complete","date","i","item","controls","length","removeAt","index","_id","forEach","value","patchValue","updateValueAndValidity","res","data","projectMang","ppeAdd","ppeAction","getAllTypeOfIncident","incidentsAdd","incidentsAction","getAllRootCause","rootCauseIncidentAdd","rootCauseIncidentAction","getAllNatOfInc","natureAdd","natureAction","getAllChangesMade","changeAdd","changeAction","event","fileData","target","files","type","alert","set","clear","toDataURL","setValue","singRequired","invalid","singRequired1","untouched","touched","e","checked","j","splice","staff","getIncidentReportById","selectedImage","key","Object","keys","changeIndex","dataUrl","check","then","fromDataURL","check2","updateIncidentReport","fire","title","showConfirmButton","timer","navigate","err","error","addIncidentReport","formdata","FormData","append","jobNoSel","browser","changesSelected","drawStart","drawComplete","drawStart1","drawComplete1","clear1","onSubmit","selector","templateUrl","styleUrls","HazardReportComponent","url","myControl","options","whsData","hazardData","myControlEmail","myControlManagerEmail","myControlManager","Consequences","Likelihood","RiskRating","ActionRequired","hazardReport","fullName","email","phone","pattern","describeHazard","dateHazardReport","locationHazard","dateHazardIdentify","compilePosition","compileDepartment","employeeParttime","managerSupervisor","managerSupervisorEmail","whsManagerEmail","action","eliminateHazard","eliminateCorrect","elliminateAction","eliminateWhen","substituteCorrect","substituteAction","substituteWhen","isolatedCorrect","isolatedAction","isolatedWhen","solutionCorrect","solutionAction","solutionWhen","procedureRemove","procedureRemoveCorrect","procedureRemoveAction","procedureRemoveWhen","PPECorrect","PPEAction","PPEWhen","fileUpload","consequence","riskRating","actionRequired","likelihood","reduceRisk","procedures","process","isolatedHazard","eliminateHazardAction","filteredOptions","valueChanges","val","filter","filteredManager","getAllHazardTreatmentRelation","getall","getHazardByid","getHazardFormDataById","getAllWHSManager","response","option","toLowerCase","indexOf","getAllManager","manager","addition","parseInt","updateHazardFormData","addHazardFormData","reset","change","getHazardNo","onFormSubmit","AddItemComponent","dialogRef","dataRec","addItem","close","closeDialog","HazardFormTableDetailsComponent","displayedColumns","getAllHazardFormData","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","deleteHazardFormData","showDatas","element","dataSource","paginator","sort","ToolboxTalkComponent","sign","sing2Required","signaturePadOptions2","toolBox","streetAddr","custConct","custConctPh","custEmail","jobNumberId","meetingBy","issues","corrAction","attendees","getToolboxByid","addIssues","addCorrectAct","addAttendee","getToolboxById","signaturePad2","setTimeout","signaturePadArr","toArray","x","signature","attendee","employee","correctAct","topicDisc","topicRes","issuesForm","correctActForm","attendeeForm","editToolBox","addtoolBox","onSave","FormsModule1","provide","useClass","multi","declarations","imports","providers","routes","path","component","FormsRoutingModule","forChild","exports","SiteInspectionComponent","datePipe","siteshow","siteAction","item_values","keyArr","sidePreview","siteCategorytTopic","getAllCategory","getAllTopic","getSiteInspection","formatDate","sitePreview","transform","add2","allTopic","PersonResponsible","topicId","y","at","find","ele","includes","tempValue","obj","b","getAllJobtask","jobTaskData","eve","showsite","showAction","updateSiteInspection","addSiteInspection","getAllSiteInspectionCategory","allcategory","getAllSiteInspectionTopic","newAction2","categoryId","tabClick","FormsComponent","dialog","spinner","page","pageSize","collectionSize","ELEMENT_DATA","link","formName","DisplayTableComponent","getToolBox","deleteToolBox","gettoolBox","tempArray","RiskAssesmentTableComponent","deleteAssessment","localStorage","setItem","$","hide","attr","appendTo","getAllassessmet","RiskAssessmentSWMSComponent","Editor","RiskAssessment","SWMSShow","chemicalTask","jobTask","resiRiskLevel","riskLevel","highRiskConstruction","licenseAndQualification","checkArray","allHazards","allContrlActReq","isSelected","isHazardous","hasJuridiction","hasLegist","hasRegulation","highRiskConstruction2","label","PPEselection2","secondEditor","riskArr","COPArr","taskArr","licenceArr","jobTaskSelected","hazard","allChemicals","allCOPSelected","regulatorData","safety","JurisdictionData","states","selectedFile1","getItem","riskAssessmentFb","SWMSTab","streetNo","suburb","town","employee1","employee2","dateTime","statesSWMS","projectManagerSWMS","jurisdiction","safetyLeg","regulator","location","qty","hazardous","ppeSelection","SDSRegister","residualRisk","persResp","riskConstruction","riskConstruction2","PPESelection2","licence","editor","signature1","signature2","getAllJobTask","getAllHighRisk","getAllLicence","addActionSDSRegister","getAllResidualRiskLevel","getAllRiskLevel","getAllChemical","getAllHazard","getAllContrActReq","getAllRegulator","getAllSafe","getAllState","getAllJurisdiction","getAssessmentByid","jurisdictionId","safetyLegislationId","regulatorId","getAssessmentbyId","time","toTimeString","setTime","slice","dateGet","check1","chemicalName","PushActionSDSRegister","PushActionRiskLevel","PushActionResiRiskLevel","PushActionPersonRes","codeOfPract","identifyHazards","checkHazards","checkJobtask","checkPPE","checkRisk","checkLicense","allHazardsTitle","allContrlActReqTitle","z","c","d","streetNumber","stateId","riskLevelFA","riskLevelFG","GetriskLevelFG","residlRiskLevelFA","residlRiskLevelFG","GetresidlRiskLevelFG","personResFA","personResFG","GetpersonResFG","sdsRegisterFA","sdsRegisterFG","GetsdsRegisterFG","cop","quantity","expDate","window","print","signaturePad1Div","signRequired","jobtask","jobtaskk","ppe","ppeSelect","ppe2","getAllRisk","riskConstruct","riskCons","riskConstruct2","mode","getFormDataById","subComponents","Licence","license","getAllHazards","getAllContrlActReq","risk","jobTaskRecd","k","c1","d1","chemical","highRisk","ppeItem","addActionRiskLevel","addActionResiRiskLevel","addActionPersonRes","allCOPTitle","myMap","Map","has","Array","from","Set","map","JSON","stringify","parse","getAllResidual","previousIndex","currentIndex","staffId","open","width","afterClosed","addChemical","getAllSafety","getAllStates","fileInput","updateAssessment","addAssessment","timePicker","timeArr","split","setHours","setMinutes","a","toUTCString","toISOString","timepicker","IncidentsTableComponent","getIncidentReport","deleteIncidentReport","getAllIncidentReport","SiteInspectionTableComponent","getsiteInspection","deleteSiteInspection","getAllSiteInspection"],"mappings":"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;AACE;;AACG;;AAAiB;;AAEpB;;AAWF;;AACF;;AACA;;AACE;;AACE;;AACG;;AAAW;;AAEd;;AAOF;;AACF;;AACA;;AACE;;AACE;;AACG;;AAAO;;AASV;;AAIA;;AACA;;AACF;;AACF;;AACA;;AACA;;AACA;;AACE;;AACE;;AACG;;AAAyB;;AAE5B;;AAKA;;AAAwB;;AAAM;;AAC9B;;AAAiC;;AAAG;;AACpC;;AAAgC;;AAAE;;AACpC;;AACA;;AACF;;AACA;;AACE;;AACE;;AACG;;AAAiB;;AAEpB;;AAUF;;AACF;;AACA;;AACE;;AACE;;AACG;;AAAW;;AAEd;;AAOF;;AACF;;AACA;;AACE;;AACE;;AACG;;AAAO;;AASV;;AAIA;;AACA;;AACF;;AACF;;AACA;;AACA;;AACA;;AACE;;AACE;;AACG;;AAAwC;;AAE3C;;AAKQ;;AAAwB;;AAAM;;AAC9B;;AAAiC;;AAAG;;AACpC;;AAAgC;;AAAE;;AACpC;;AACR;;AACF;;AACA;;AACE;;AACE;;AACG;;AAAiB;;AAEpB;;AAUF;;AACF;;AACA;;AACE;;AACE;;AACG;;AAAW;;AAEd;;AAOF;;AACF;;AACA;;AACE;;AACE;;AACG;;AAAO;;AASV;;AAIA;;AACA;;AACF;;AACF;;AACA;;AACA;;AACA;;AACE;;AACE;;AACG;;AAA+B;;AAElC;;AAKA;;AAAwB;;AAAM;;AAC9B;;AAAiC;;AAAG;;AACpC;;AAAgC;;AAAE;;AACpC;;AACA;;AACF;;AACA;;AACE;;AACE;;AACG;;AAAiB;;AAEpB;;AAUF;;AACF;;AACA;;AACE;;AACE;;AACG;;AAAW;;AAGd;;AAOF;;AACF;;AACA;;AACE;;AACE;;AACG;;AAAO;;AASV;;AAIA;;AACA;;AACF;;AACF;;AACF;;AACA;;AAAI;;AAAyB;;AAE7B;;AACE;;AACE;;AACE;;AAA0B;;AAAI;;AAC9B;;AASE;;AAQJ;;AACF;;AACA;;AACE;;AACE;;AAA0B;;AAAQ;;AAClC;;AASE;;AAQJ;;AACF;;AACA;;AACE;;AACE;;AAA2B;;AAAU;;AACrC;;AASE;;AAQJ;;AACF;;AACA;;AACE;;AAA0B;;AAAW;;AA0CvC;;AAIE;AAAA,qBAAU,IAAA5F,OAAA,QAAV;AAAyB,aAAzB;;AAJF;;AAUA;;AACA;;AAME;;AACE;;AAAoD;;AAAI;;AAItD;;AAMA;;AACA;;AACA;;AAQJ;;AACF;;AACA;;AACE;;AAAO;;AAAS;;AAChB;;AACE;;AAEE;AAAA,qBAAgB,IAAAE,SAAA,EAAhB;AAA2B,aAA3B,EAA4B,YAA5B,EAA4B;AAAA,qBACd,IAAAC,YAAA,EADc;AACA,aAD5B;;AAID;;AACD;;AAOF;;AAEA;;AAA6C;AAAA,qBAAS,IAAAxC,KAAA,EAAT;AAAgB,aAAhB;;AAC3C;;AACF;;AACF;;AACF;;AAEF;;AAEA;;AACA;;AACE;;AAA0F;AAAA,qBAAS,IAAAkI,YAAA,EAAT;AAAuB,aAAvB;;AAAyB;;AAAM;;AAC3H;;AACF;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAzvCsC;;AACA;;AAAA;;AAGZ;;AAAA;;AA8Ed;;AAAA;;AAIC;;AAAA;;AAkCD;;AAAA;;AAIC;;AAAA;;AAkBD;;AAAA;;AAIC;;AAAA;;AAQF;;AAAA;;AAkBC;;AAAA;;AAIC;;AAAA;;AAkBD;;AAAA;;AAIC;;AAAA;;AAmD2B;;AAAA;;AAsCA;;AAAA;;AA2BpB;;AAAA;;AAGoB;;AAAA;;AAuC5B;;AAAA;;AAID;;AAAA;;AAgBC;;AAAA;;AAJgB,4FAA4B,KAA5B,EAA4B,WAA5B;;AAOiB;;AAAA;;AAIhC;;AAAA;;AAkBD;;AAAA;;AAIC;;AAAA;;AAgBD;;AAAA;;AAJgB,4FAA6B,KAA7B,EAA6B,WAA7B;;AAOiB;;AAAA;;AAIhC;;AAAA;;AAeD;;AAAA;;AAI4C;;AAAA;;AAI3C;;AAAA;;AAsH6B;;AAAA;;AAmBD;;AAAA;;AAmBJ;;AAAA;;AAmFX;;AAAA;;AAiBA;;AAAA;;AAcC;;AAAA;;AAWC;;AAAA;;AAIe;;AAAA;;AAuBhB;;AAAA;;AAkBA;;AAAA;;AAcA;;AAAA;;AAWC;;AAAA;;AAIe;;AAAA;;AAuBhB;;AAAA;;AAkBA;;AAAA;;AAcA;;AAAA;;AAWC;;AAAA;;AAIe;;AAAA;;AAuBhB;;AAAA;;AAiBA;;AAAA;;AAcA;;AAAA;;AAWC;;AAAA;;AAIe;;AAAA;;AAuBhB;;AAAA;;AAiBD;;AAAA;;AAcC;;AAAA;;AAWC;;AAAA;;AAIe;;AAAA;;AAuBhB;;AAAA;;AAiBD;;AAAA;;AAeA;;AAAA;;AAWE;;AAAA;;AAIe;;AAAA;;AAiB/B;;AAAA;;AAIC;;AAAA;;AAkBD;;AAAA;;AAIC;;AAAA;;AAkBD;;AAAA;;AAIC;;AAAA;;AA6ED;;AAAA;;AAHkB,4FAA6B,KAA7B,EAA6B,WAA7B,EAA6B,KAA7B,EAA6B,WAA7B;;AAMe;;AAAA;;AAGhC;;AAAA;;AAiBD;;AAAA;;AAJA;;AAOD;;AAAA;;AAkBkD;;AAAA;;;;;;;;;;wECpuChDlF,qB,EAAqB;gBALjC,uDAKiC;iBALvB;AACTH,oBAAQ,EAAE,mBADD;AAETC,uBAAW,EAAE,gCAFJ;AAGTC,qBAAS,EAAE,CAAC,gCAAD;AAHF,W;AAKuB,U;;;;;;;;;;;;;;;;;;;AAkBPnH,uBAAa,EAAE,CAAF;kBAArC,uDAAqC;mBAA3B,Y;AAA2B,WAAE,C;AAEjBM,kBAAQ,EAAE,CAAF;kBAA9B,uDAA8B;mBAApB,U;AAAoB,WAAE;;;;;;;;;;;ACtCnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACCI;;AAA8C;;AAAqB;;;;;;AACnE;;AAAiD;;AAAwB;;;;;;AACzE;;AAAyC;;AAA2B;;;;;;AACpE;;AAA6C;;AAA8B;;;;;;AAC3E;;AAAuC;;AAAY;;;;;;;;AAa3C;;AAAsJ;AAAA;;AAAA;;AAAA;AAAA;;AAAqB;;AAAG;;;;;;AAAnD;;;;;;;;AAC3H;;AAAoI;AAAA;;AAAA;;AAAA;AAAA;;AAAqB;;AAAM;;;;;;AAAtD;;;;UDTxGiM,gB;AAIX,kCACUnR,EADV,EAEUE,eAFV,EAGSkR,SAHT,EAIkC3J,IAJlC,EAI2C;AAAA;;AAHjC,eAAAzH,EAAA,GAAAA,EAAA;AACA,eAAAE,eAAA,GAAAA,eAAA;AACD,eAAAkR,SAAA,GAAAA,SAAA;AACyB,eAAA3J,IAAA,GAAAA,IAAA;AAEhC,eAAK4J,OAAL,GAAe5J,IAAf;AACD;;;;iBACD,oBAAQ;AACNlC,mBAAO,CAACC,GAAR,CAAY,KAAK6L,OAAjB;AAEA,iBAAKC,OAAL,GAAe,KAAKtR,EAAL,CAAQqC,KAAR,CAAc;AAC3BqI,mBAAK,EAAE,CAAC,EAAD,EAAK,0DAAWjI,QAAhB;AADoB,aAAd,CAAf;;AAIA,gBAAG,KAAK4O,OAAL,CAAaxI,IAAb,KAAoB,qBAApB,IAA2C,KAAKwI,OAAL,CAAaxI,IAAb,KAAoB,gBAAlE,EAAmF;AACjF,mBAAKyI,OAAL,CAAa9K,GAAb,CAAiB,OAAjB,EAA0B0C,QAA1B,CAAmC,KAAKmI,OAAL,CAAa3G,KAAhD;AACD;AACF;;;iBACD,uBAAW;AACT,iBAAK0G,SAAL,CAAeG,KAAf,CAAqB,OAArB;AAED;;;iBACH,oBAAQ;AACN,iBAAKH,SAAL,CAAeG,KAAf,CAAqB,KAAKD,OAAL,CAAa9K,GAAb,CAAiB,OAAjB,EAA0Ba,KAA/C;;AACA,gBAAG,KAAKgK,OAAL,CAAaxI,IAAb,KAAoB,qBAApB,IAA2C,KAAKwI,OAAL,CAAaxI,IAAb,KAAoB,gBAAlE,EAAmF;AACjF,iEAAK4B,IAAL,CAAU;AACRC,qBAAK,EAAE,4BADC;AAERC,iCAAiB,EAAE,KAFX;AAGRC,qBAAK,EAAE;AAHC,eAAV;AAKC,aANH,MAMO;AACH,iEAAKH,IAAL,CAAU;AACRC,qBAAK,EAAE,0BADC;AAERC,iCAAiB,EAAE,KAFX;AAGRC,qBAAK,EAAE;AAHC,eAAV;AAKD;AAEJ;;;;;;;yBA3CYuG,gB,EAAgB,2H,EAAA,wK,EAAA,sI,EAAA,gEAQjB,wEARiB,C;AAQF,O;;;cARdA,gB;AAAgB,qC;AAAA,iB;AAAA,e;AAAA,mY;AAAA;AAAA;ACV7B;;AACI;;AACA;;AACA;;AACA;;AACA;;AAEA;;AAEA;;AACA;;AACA;;AAEA;;AACI;;AACI;;AAA0B;AAAA,qBAAS,IAAAK,WAAA,EAAT;AAAsB,aAAtB;;AAAwB;;AAAK;;AAC3D;;AACA;;AACI;;AACA;;AACJ;;AACJ;;AACJ;;;;AAtBM;;AACG;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAa8B;;AAAA;;AACA;;AAAA;;;;;;;;;wEDT1BL,gB,EAAgB;gBAL5B,uDAK4B;iBALlB;AACTtF,oBAAQ,EAAE,cADD;AAETC,uBAAW,EAAE,2BAFJ;AAGTC,qBAAS,EAAE,CAAC,2BAAD;AAHF,W;AAKkB,U;;;;;;;;;;oBAQxB,oD;qBAAO,wE;;;;;;;;;;;;;AElBZ;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACSU;;AAAuD;;AAAI;;;;;;AAC3D;;AAAmD;;AAAmB;;;;;;AAAnB;;AAAA;;;;;;AAOvD;;AAAuD;;AAAK;;;;;;AAC5D;;AAAmD;;AAAoB;;;;;;AAApB;;AAAA;;;;;;AAGnD;;AAAuC;;AAAK;;;;;;AAC5C;;AAAuC;;AAAiB;;;;;;AAAjB;;AAAA;;;;;;AAGvC;;AAAsC;;AAAK;;;;;;AAC3C;;AAAwC;;AAAkB;;;;;;AAAlB;;AAAA;;;;;;AAGtC;;AAAsC;;AAAQ;;;;;;AAC9C;;AAAwC;;AAAqB;;;;;;AAArB;;AAAA;;;;;;AAG1C;;AAAuC;;AAAO;;;;;;;;AAC9C;;AAEA;;AACE;;AAA+C;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAC3C;;AACJ;;AACA;;AAAiD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAC7C;;AACJ;;AACA;;AACF;;;;;;AAEE;;;;;;AACA;;;;;;;;;;;;UDlCK0F,+B;AAMX,iDAAoBvR,eAApB,EAAmEI,MAAnE,EAAmF;AAAA;;AAA/D,eAAAJ,eAAA,GAAAA,eAAA;AAA+C,eAAAI,MAAA,GAAAA,MAAA;AALnE,eAAAoR,gBAAA,GAA6B,CAAC,UAAD,EAAY,MAAZ,EAAmB,OAAnB,EAA2B,OAA3B,EAAmC,MAAnC,EAA0C,QAA1C,CAA7B;AAKsF;;;;iBAGtF,oBAAQ;AACN,iBAAKC,oBAAL;AACD;;;iBACD,iBAAOvM,EAAP,EAAS;AAAA;;AAEP,+DAAKqF,IAAL,CAAU;AACRC,mBAAK,EAAE,eADC;AAERkH,kBAAI,0BAFI;AAGRC,kBAAI,EAAE,SAHE;AAIRC,8BAAgB,EAAE,IAJV;AAKRC,gCAAkB,EAAE,SALZ;AAMRC,+BAAiB,EAAE,MANX;AAORC,+BAAiB,EAAE;AAPX,aAAV,EAQG5H,IARH,CAQQ,UAAC6H,MAAD,EAAY;AAClB,kBAAIA,MAAM,CAAC7K,KAAX,EAAkB;AAChB,uBAAI,CAACnH,eAAL,CAAqBiS,oBAArB,CAA0C/M,EAA1C,EAA8CH,SAA9C,CAAwD,UAACuC,GAAD,EAAS;AAC7D,qEAAKiD,IAAL,CAAU;AACRC,yBAAK,EAAE,sBADC;AAERC,qCAAiB,EAAE,KAFX;AAGRC,yBAAK,EAAE;AAHC,mBAAV;AAKArF,yBAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BgC,GAA3B;;AACA,yBAAI,CAACmK,oBAAL;AACD,iBARH;AASD;AACF,aApBD;AAsBD;;;iBACD,gCAAoB;AAAA;;AAElB,iBAAKzR,eAAL,CAAqByR,oBAArB,GAA4C1M,SAA5C,CAAsD,UAACuC,GAAD,EAAW;AAE/DjC,qBAAO,CAACC,GAAR,CAAY,KAAZ,EAAkBgC,GAAG,CAACC,IAAtB;AAEA,qBAAI,CAAC2K,SAAL,GAAgB5K,GAAG,CAACC,IAApB;;AACA,qBAAI,CAAC2K,SAAL,CAAehL,OAAf,CAAuB,UAACiL,OAAD,EAASxL,CAAT,EAAe;AACxC,uBAAO,OAAI,CAACuL,SAAL,CAAevL,CAAf,EAAkBK,KAAlB,GAAyBL,CAAhC;AACD,eAFG;;AAGJtB,qBAAO,CAACC,GAAR,CAAY,gBAAZ,EAA6B,OAAI,CAAC4M,SAAlC;AAEI,qBAAI,CAACE,UAAL,GAAkB,IAAI,0EAAJ,CAA4B,OAAI,CAACF,SAAjC,CAAlB;AACA,qBAAI,CAACE,UAAL,CAAgBC,SAAhB,GAA4B,OAAI,CAACA,SAAjC;AACA,qBAAI,CAACD,UAAL,CAAgBE,IAAhB,GAAuB,OAAI,CAACA,IAA5B;AACAjN,qBAAO,CAACC,GAAR,CAAY,SAAZ,EAAsB,OAAI,CAAC4M,SAA3B;AACD,aAdD;AAeD;;;iBACD,cAAKhN,EAAL,EAAO;AAEL,iBAAK9E,MAAL,CAAYuK,QAAZ,CAAqB,CAAC,4BAA0BzF,EAA3B,CAArB;AACD;;;;;;;yBA1DUqM,+B,EAA+B,wK,EAAA,uH;AAAA,O;;;cAA/BA,+B;AAA+B,sD;AAAA;AAAA;sEAI/B,wE,EAAY,I;;sEACZ,8D,EAAO,I;;;;;;;;;;;;;;;AClBpB;;AAAqE;;AAAmD;;AACxH;;AACI;;AAAK;;AAAgB;;AACrB;;AACA;;AACE;;AAGE;;AACE;;AACA;;AACF;;AAKJ;;AACE;;AACA;;AACF;;AACA;;AACE;;AACA;;AACF;;AACA;;AACE;;AACA;;AACF;;AACA;;AACI;;AACA;;AACF;;AACD;;AACC;;AACA;;AAWF;;AACI;;AACA;;AACF;;AAEA;;AAIF;;;;AAtDiC;;AAKd;;AAAA;;AAyCK;;AAAA;;AACa;;AAAA;;AAGpB;;AAAA;;;;;;;;;wEDrCRA,+B,EAA+B;gBAL3C,uDAK2C;iBALjC;AACT5F,oBAAQ,EAAE,+BADD;AAETC,uBAAW,EAAE,4CAFJ;AAGTC,qBAAS,EAAE,CAAC,4CAAD;AAHF,W;AAKiC,U;;;;;;;AAIjBwG,mBAAS,EAAE,CAAF;kBAAjC,uDAAiC;mBAAvB,wE;AAAuB,WAAE,C;AAChBC,cAAI,EAAE,CAAF;kBAAvB,uDAAuB;mBAAb,8D;AAAa,WAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AElB5B;;AAA0F;;AAAmD;;;;AAAnF;;;;;;;;;;AAC1D;;AAAmG;;AAAmD;;;;AAA7F;;;;;;AAiBjD;;AAMA;;AAAqB;;;;;;AASnB;;AAMF;;AAAyB;;;;;;AAWvB;;AAMF;;AAAwB;;;;;;AAWtB;;AAMF;;AAA4B;;;;;;AAc1B;;AAMD;;AAAwB;;;;;;AAWvB;;AAMF;;AAAiB;;;;;;AAkBb;;AAAgE;;AAAmB;;;;;;AAA3E;;AAAwD;;AAAA;;;;;;AAKlE;;AAMF;;AAAsB;;;;;;AAcnB;;AAKH;;AAAgB;;;;;;AAgBZ;;AAAiD;;AAAW;;;;;;AAA5B;;AAAiB;;AAAA;;;;;;AAEnD;;AAKF;;AAAsB;;;;;;AAalB;;AAIF;;AAAsB;;;;;;AAyBlB;;AAMF;;AAAsB;;;;;;AAcpB;;AAMF;;AAAsB;;;;;;AAkBpB;;AAMF;;AAAsB;;;;;;;;AA9D5B;;AAIE;;AACE;;AACE;;AACE;;AAAqD;;AAAK;;AAC1D;;AAIA;;AAQF;;AACA;;AACE;;AACE;;AACF;;AACA;;AAOA;;AAQF;;AACA;;AACE;;AACE;;AACF;;AACA;;AAOE;;AAAwB;;AAAM;;AAC9B;;AAAoB;;AAAG;;AACvB;;AAAmB;;AAAE;;AACvB;;AACA;;AAQF;;AACA;;AACE;;AAGE;AAAA;;AAAA;;AAAA;AAAA;;AACC;;AACH;;AACF;;AACA;;AACE;;AAGE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AACF;;AACF;;AACF;;AACF;;AACF;;;;;;;;;;;;;;;AAlFE;;AAOM;;AAAA;;AAIC;;AAAA;;AAgBC;;AAAA;;AAID;;AAAA;;AAgBC;;AAAA;;AAQD;;AAAA;;;;;;AAkDH;;AAMA;;AAAsB;;;;;;AAepB;;AAAiD;;AAAY;;;;;;AAA7B;;AAAiB;;AAAA;;;;;;AAEnD;;AAMA;;AAAsB;;;;;;AAgBtB;;AAMA;;AAAsB;;;;;;;;AArE5B;;AAIE;;AACE;;AACE;;AAAqD;;AAAM;;AAC3D;;AAOE;;AAAwB;;AAAM;;AAC9B;;AAAoB;;AAAG;;AACvB;;AAAmB;;AAAE;;AACvB;;AACA;;AAQF;;AACA;;AACE;;AACE;;AACF;;AACA;;AAOE;;AAAwB;;AAAM;;AAC9B;;AACF;;AACA;;AAQF;;AACA;;AACE;;AAAqD;;AAAQ;;AAC7D;;AAOE;;AAAwB;;AAAM;;AAC9B;;AAAoB;;AAAG;;AACvB;;AAAmB;;AAAE;;AACvB;;AACA;;AAQF;;AACA;;AACE;;AAGE;AAAA;;AAAA;;AAAA;AAAA;;AACC;;AACH;;AACF;;AACA;;AACE;;AAGE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AACF;;AACF;;AACF;;AACF;;;;;;;;;;;;;;;AAxFE;;AASM;;AAAA;;AAQC;;AAAA;;AAgBD;;AAAA;;AAIsB;;AAAA;;AAGrB;;AAAA;;AAcD;;AAAA;;AAQC;;AAAA;;;;;;AA8CH;;AAMA;;AAAsB;;;;;;AAgBpB;;AAIJ;;AAAsB;;;;;;;;AA1C1B;;AAIE;;AACE;;AACE;;AACE;;AACF;;AACA;;AAOA;;AAQF;;AACA;;AACE;;AAAqD;;AAAS;;AAE9D;;AACE;;AAEE;AAAA;;AAAA;;AAAA;;AAAA;AAAA,aAA8B,YAA9B,EAA8B;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA,WAA9B;;AAMD;;AACD;;AAOF;;AACA;;AAA6C;AAAA;;AAAA;;AAAA;;AAAA;;AAAS;;AAAc,mBAAF,qBAAE;AAAF,WAArB;;AAC3C;;AACF;;AACF;;AAEA;;AACE;;AAA6B;AAAA;;AAAA;;AAAA;AAAA;;AAC1B;;AACH;;AACF;;AACA;;AACE;;AAA6B;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAC3B;;AACF;;AACF;;AACF;;AACF;;;;;;;;;;;AA5DE;;AAKM;;AAAA;;AAMA;;AAAA;;AAIC;;AAAA;;AAiBC;;AAAA;;AAJA;;AASH;;AAAA;;;;UCpaAC,oB;AAcX,sCACUzS,EADV,EAEUC,mBAFV,EAGUG,QAHV,EAIUF,eAJV,EAKUC,cALV,EAMSG,MANT,EAMuB;AAAA;;AALb,eAAAN,EAAA,GAAAA,EAAA;AACA,eAAAC,mBAAA,GAAAA,mBAAA;AACA,eAAAG,QAAA,GAAAA,QAAA;AACA,eAAAF,eAAA,GAAAA,eAAA;AACA,eAAAC,cAAA,GAAAA,cAAA;AACD,eAAAG,MAAA,GAAAA,MAAA;AAlBT,eAAAW,aAAA,GAAgB,EAAhB;AACA,eAAAyR,IAAA,GAAK,EAAL;AAGA,eAAAxR,OAAA,GAAU,IAAIC,IAAJ,EAAV;AACA,eAAAC,OAAA,GAAU,IAAID,IAAJ,EAAV;AAKA,eAAAwR,aAAA,GAAc,EAAd;AA0NO,eAAAxQ,oBAAA,GAA+B;AACpC;AACAH,oBAAQ,EAAE,CAF0B;AAGpCC,uBAAW,EAAE,GAHuB;AAIpCC,wBAAY,EAAE;AAJsB,WAA/B;AAMA,eAAA0Q,oBAAA,GAA+B;AACpC;AACA5Q,oBAAQ,EAAE,CAF0B;AAGpCC,uBAAW,EAAE,GAHuB;AAIpCC,wBAAY,EAAE;AAJsB,WAA/B;AAtNL,eAAK2Q,OAAL,GAAe,KAAK7S,EAAL,CAAQqC,KAAR,CAAc;AAC3BM,oBAAQ,EAAE,CAAC,EAAD,EAAI,0DAAWF,QAAf,CADiB;AAE3BG,wBAAY,EAAE,CAAC,EAAD,EAAI,0DAAWH,QAAf,CAFa;AAG3BqQ,sBAAU,EAAC,CAAC,EAAD,EAAI,0DAAWrQ,QAAf,CAHgB;AAI3BsQ,qBAAS,EAAE,CAAC,EAAD,EAAI,0DAAWtQ,QAAf,CAJgB;AAK3BuQ,uBAAW,EAAE,CAAC,EAAD,EAAI,0DAAWvQ,QAAf,CALc;AAM3BwQ,qBAAS,EAAE,CAAC,EAAD,EAAI,0DAAWxQ,QAAf,CANgB;AAO3ByQ,uBAAW,EAAE,CAAC,EAAD,EAAI,0DAAWzQ,QAAf,CAPc;AAQ3B0Q,qBAAS,EAAC,CAAC,EAAD,EAAI,0DAAW1Q,QAAf,CARiB;AAS3BmE,gBAAI,EAAC,CAAC,EAAD,EAAI,0DAAWnE,QAAf,CATsB;AAU3BmC,yBAAa,EAAC,CAAC,EAAD,EAAI,0DAAWnC,QAAf,CAVa;AAW3B2Q,kBAAM,EAAE,KAAKpT,EAAL,CAAQsC,KAAR,CAAc,EAAd,CAXmB;AAY3B+Q,sBAAU,EAAE,KAAKrT,EAAL,CAAQsC,KAAR,CAAc,EAAd,CAZe;AAa3BgR,qBAAS,EAAE,KAAKtT,EAAL,CAAQsC,KAAR,CAAc,EAAd;AAbgB,WAAd,CAAf;AAeD;;;;iBAED,oBAAQ;AACN,iBAAK8C,EAAL,GAAQ,KAAKjF,cAAL,CAAoBkF,QAApB,CAA6BC,MAA7B,CAAoCF,EAA5C;AACA,iBAAKO,eAAL;AACA,iBAAKO,WAAL;AACA,iBAAKjG,mBAAL,CAAyBwF,YAAzB,CAAsCC,IAAtC,CAA2C,mBAA3C;AACA,iBAAKtF,QAAL,CAAcA,QAAd,CAAuB,uBAAvB;;AACA,gBAAG,KAAKgF,EAAL,KAAU,MAAb,EACA;AACEG,qBAAO,CAACC,GAAR,CAAY,IAAZ,EAAiB,KAAKJ,EAAtB;AACA,mBAAKmO,cAAL,CAAoB,KAAKnO,EAAzB;AACD,aAJD,MAMA;AACE,mBAAKoO,SAAL;AACA,mBAAKC,aAAL;AACA,mBAAKC,WAAL;AACD;AAGF;;;iBAED,wBAAetO,EAAf,EAAiB;AAAA;;AAEf,iBAAKlF,eAAL,CAAqByT,cAArB,CAAoCvO,EAApC,EAAwCH,SAAxC,CAAkD,UAACuC,GAAD,EAAW;AAC3DjC,qBAAO,CAACC,GAAR,CAAYgC,GAAZ,EAD2D,CAE3D;AACD;AACA;;AACC,qBAAI,CAACqL,OAAL,CAAavL,UAAb,CAAwB;AACtB3E,wBAAQ,EAAC6E,GAAG,CAACC,IAAJ,CAAS9E,QADI;AAEtBC,4BAAY,EAAE4E,GAAG,CAACC,IAAJ,CAAS7E,YAFD;AAGtBkQ,0BAAU,EAACtL,GAAG,CAACC,IAAJ,CAASqL,UAHE;AAItBC,yBAAS,EAAEvL,GAAG,CAACC,IAAJ,CAASsL,SAJE;AAKtBC,2BAAW,EAAExL,GAAG,CAACC,IAAJ,CAASuL,WALA;AAMtBC,yBAAS,EAAEzL,GAAG,CAACC,IAAJ,CAASwL,SANE;AAOtBC,2BAAW,EAAE1L,GAAG,CAACC,IAAJ,CAASyL,WAPA;AAQtBC,yBAAS,EAAC3L,GAAG,CAACC,IAAJ,CAAS0L,SARG;AAStBvM,oBAAI,EAACY,GAAG,CAACC,IAAJ,CAASb;AATQ,eAAxB;;AAWA,qBAAI,CAACuD,OAAL,GAAe3C,GAAG,CAACC,IAAJ,CAAS7C,aAAxB;;AACA,kBAAIwF,KAAK,GAAE,SAAPA,KAAO;AAAA,uBAAY;AAAA;AAAA;AAAA;AAAA;AAAE,+BAAKxF,aAAL,IAAsB,IAAtB;;AAAF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAZ;AAAA,eAAX;;AACAwF,mBAAK,GAAGC,IAAR,CAAa,YAAM;AAEjB,uBAAI,CAACzF,aAAL,CAAmB0F,WAAnB,CAA+B9C,GAAG,CAACC,IAAJ,CAAS7C,aAAxC;AACD,eAHD;AAIAW,qBAAO,CAACC,GAAR,CAAY,oBAAZ,EAAiC,OAAI,CAACZ,aAAtC;;AAEA,kBAAI2F,MAAM,GAAE,SAARA,MAAQ;AAAA,uBAAY;AAAA;AAAA;AAAA;AAAA;AAAE,+BAAKqJ,aAAL,IAAsB,IAAtB;;AAAF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAZ;AAAA,eAAZ;;AACArJ,oBAAM,GAAGF,IAAT,CAAc,YAAM;AAClB9E,uBAAO,CAACC,GAAR,CAAa,OAAI,CAACoO,aAAlB;AACAC,0BAAU,CAAC,YAAM;AACf,sBAAIC,eAAe,GAAC,OAAI,CAACF,aAAL,CAAmBG,OAAnB,EAApB;;AACAvM,qBAAG,CAACC,IAAJ,CAAS6L,SAAT,CAAmBlM,OAAnB,CAA2B,UAAC4M,CAAD,EAAGnN,CAAH,EAAS;AAClCiN,mCAAe,CAACjN,CAAD,CAAf,CAAmByD,WAAnB,CAA+B0J,CAAC,CAACC,SAAjC;AACD,mBAFD;AAGD,iBALS,EAKP,IALO,CAAV;AAMD,eARD;;AASA,qBAAI,CAACpB,OAAL,CAAavL,UAAb,CAAwB;AACtB1C,6BAAa,EAAE4C,GAAG,CAACC,IAAJ,CAAS7C;AADF,eAAxB;;AAGA,mBAAK,IAAIiC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAIW,GAAG,CAACC,IAAJ,CAAS6L,SAAT,CAAmBtM,MAAxC,EAAgDH,CAAC,EAAjD,EAAqD;AACnD,uBAAI,CAAC6M,WAAL;;AACA,uBAAI,CAACQ,QAAL,GAAgBnN,QAAhB,CAAyBF,CAAzB,EAA4BL,GAA5B,CAAgC,UAAhC,EAA4Cc,UAA5C,CAAuDE,GAAG,CAACC,IAAJ,CAAS6L,SAAT,CAAmBzM,CAAnB,EAAsBsN,QAA7E;;AACC,uBAAI,CAACD,QAAL,GAAgBnN,QAAhB,CAAyBF,CAAzB,EAA4BL,GAA5B,CAAgC,WAAhC,EAA6Cc,UAA7C,CAAwDE,GAAG,CAACC,IAAJ,CAAS6L,SAAT,CAAmBzM,CAAnB,EAAsBoN,SAA9E;AAEF;;AAAA,mBAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGxM,GAAG,CAACC,IAAJ,CAAS4L,UAAT,CAAoBrM,MAAxC,EAAgDgN,CAAC,EAAjD,EAAqD;AACrD,uBAAI,CAAEP,aAAN;;AACD,uBAAI,CAACW,UAAL,GAAkBrN,QAAlB,CAA2BiN,CAA3B,EAA8BxN,GAA9B,CAAkC,QAAlC,EAA4Cc,UAA5C,CAAwDE,GAAG,CAACC,IAAJ,CAAS4L,UAAT,CAAoBW,CAApB,EAAuBpG,MAA/E;;AACA,uBAAI,CAACwG,UAAL,GAAkBrN,QAAlB,CAA2BiN,CAA3B,EAA8BxN,GAA9B,CAAkC,UAAlC,EAA8Cc,UAA9C,CAA0DE,GAAG,CAACC,IAAJ,CAAS4L,UAAT,CAAoBW,CAApB,EAAuBrN,QAAjF;;AACA,uBAAI,CAACyN,UAAL,GAAkBrN,QAAlB,CAA2BiN,CAA3B,EAA8BxN,GAA9B,CAAkC,WAAlC,EAA+Cc,UAA/C,CAA2DE,GAAG,CAACC,IAAJ,CAAS4L,UAAT,CAAoBW,CAApB,EAAuBtN,SAAlF;AACC;;AACD,mBAAK,IAAIG,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAGW,GAAG,CAACC,IAAJ,CAAS2L,MAAT,CAAgBpM,MAApC,EAA4CH,EAAC,EAA7C,EAAiD;AAC/C,uBAAI,CAAC2M,SAAL;;AACA,uBAAI,CAACJ,MAAL,GAAcrM,QAAd,CAAuBF,EAAvB,EAA0BL,GAA1B,CAA8B,OAA9B,EAAuCc,UAAvC,CAAmDE,GAAG,CAACC,IAAJ,CAAS2L,MAAT,CAAgBvM,EAAhB,EAAmBK,KAAtE;;AACA,uBAAI,CAACkM,MAAL,GAAcrM,QAAd,CAAuBF,EAAvB,EAA0BL,GAA1B,CAA8B,WAA9B,EAA2Cc,UAA3C,CAAuDE,GAAG,CAACC,IAAJ,CAAS2L,MAAT,CAAgBvM,EAAhB,EAAmBwN,SAA1E;;AACA,uBAAI,CAACjB,MAAL,GAAcrM,QAAd,CAAuBF,EAAvB,EAA0BL,GAA1B,CAA8B,UAA9B,EAA0Cc,UAA1C,CAAsDE,GAAG,CAACC,IAAJ,CAAS2L,MAAT,CAAgBvM,EAAhB,EAAmByN,QAAzE;AACD;AACF,aAtDD;AAuDD;;;iBACD,2BAAkB;AAAA;;AAChB,iBAAKpU,eAAL,CAAqByF,eAArB,GAAuCV,SAAvC,CAAiD,UAACuC,GAAD,EAAc;AAE7D,qBAAI,CAACvG,aAAL,GAAqBuG,GAAG,CAACC,IAAzB;AACD,aAHD;AAID;;;iBACD,oBAAQ;AAAA;;AACN,iBAAKxG,aAAL,CAAmBmG,OAAnB,CAA2B,UAACN,IAAD,EAAU;AACnC,kBAAI,OAAI,CAAC+L,OAAL,CAAarM,GAAb,CAAiB,aAAjB,EAAgCa,KAAhC,KAA0CP,IAAI,CAACK,GAAnD,EAAwD;AACtD5B,uBAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBsB,IAAxB;;AACA,uBAAI,CAAC+L,OAAL,CAAavL,UAAb,CAAwB;AACtB3E,0BAAQ,EAAEmE,IAAI,CAACnE,QADO;AAEtBC,8BAAY,EAAEkE,IAAI,CAAClE,YAFG;AAGtBkQ,4BAAU,EAAEhM,IAAI,CAACjE,aAHK;AAIrBkQ,2BAAS,EAAEjM,IAAI,CAAChE,eAJK;AAKtBkQ,6BAAW,EAAElM,IAAI,CAAC7D,oBALI;AAMtBgQ,2BAAS,EAAEnM,IAAI,CAAC5D,aANM;AAOtBV,2BAAS,EAAE,OAAI,CAACqQ,OAAL,CAAarM,GAAb,CAAiB,aAAjB,EAAgCa;AAPrB,iBAAxB;AASD;AACF,aAbD;AAcK,iBAAKwL,OAAL,CAAarM,GAAb,CAAiB,aAAjB,EAAgCe,sBAAhC;AAEN;;;iBACD,qBAAY;AACV,iBAAK6L,MAAL,GAAc9M,IAAd,CAAmB,KAAKiO,UAAL,EAAnB;AACD,W,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA,kBAAM;AACJ,mBAAO,KAAK1B,OAAL,CAAarM,GAAb,CAAiB,QAAjB,CAAP;AACD;;;iBACD,sBAAU;AACR,mBAAO,KAAKxG,EAAL,CAAQqC,KAAR,CAAc;AACnB6E,mBAAK,EAAE,CAAC,EAAD,EAAI,0DAAWzE,QAAf,CADY;AAEnB4R,uBAAS,EAAE,CAAC,EAAD,EAAI,0DAAW5R,QAAf,CAFQ;AAGnB6R,sBAAQ,EAAE,CAAC,EAAD,EAAI,0DAAW7R,QAAf;AAHS,aAAd,CAAP;AAKD;;;iBACD,sBAAaoE,CAAb,EAAgB;AACd,gBAAMC,IAAI,GAAc,KAAK+L,OAAL,CAAa9L,QAAb,CAAsB,QAAtB,CAAxB;AACA,gBAAID,IAAI,CAACE,MAAL,GAAc,CAAlB,EAAqBF,IAAI,CAACG,QAAL,CAAcJ,CAAd;AACtB;;;iBACD,yBAAgB;AACd,iBAAKuN,UAAL,GAAkB9N,IAAlB,CAAuB,KAAKkO,cAAL,EAAvB;AACD;;;iBACD,sBAAU;AACR,mBAAO,KAAK3B,OAAL,CAAarM,GAAb,CAAiB,YAAjB,CAAP;AACD;;;iBACD,0BAAc;AACZ,mBAAO,KAAKxG,EAAL,CAAQqC,KAAR,CAAc;AACnBuL,oBAAM,EAAE,CAAC,EAAD,EAAI,0DAAWnL,QAAf,CADW;AAEnBiE,uBAAS,EAAE,CAAC,EAAD,EAAI,0DAAWjE,QAAf,CAFQ;AAGnBkE,sBAAQ,EAAE,CAAC,EAAD,EAAI,0DAAWlE,QAAf;AAHS,aAAd,CAAP;AAKD;;;iBACD,0BAAiBoE,CAAjB,EAAoB;AAClB,gBAAMC,IAAI,GAAc,KAAK+L,OAAL,CAAa9L,QAAb,CAAsB,YAAtB,CAAxB;AACA,gBAAID,IAAI,CAACE,MAAL,GAAc,CAAlB,EAAqBF,IAAI,CAACG,QAAL,CAAcJ,CAAd;AACtB;;;iBACD,uBAAc;AACZ,iBAAKqN,QAAL,GAAgB5N,IAAhB,CAAqB,KAAKmO,YAAL,EAArB;AACD;;;iBACD,oBAAQ;AACN,mBAAO,KAAK5B,OAAL,CAAarM,GAAb,CAAiB,WAAjB,CAAP;AACD;;;iBACD,wBAAY;AACV,mBAAO,KAAKxG,EAAL,CAAQqC,KAAR,CAAc;AACnB8R,sBAAQ,EAAE,CAAC,EAAD,EAAI,0DAAW1R,QAAf,CADS;AAEnBwR,uBAAS,EAAE,CAAC,EAAD,EAAI,0DAAWxR,QAAf;AAFQ,aAAd,CAAP;AAID;;;iBACD,wBAAeoE,CAAf,EAAkB;AAChB,gBAAMC,IAAI,GAAc,KAAK+L,OAAL,CAAa9L,QAAb,CAAsB,WAAtB,CAAxB;AACA,gBAAID,IAAI,CAACE,MAAL,GAAc,CAAlB,EAAqBF,IAAI,CAACG,QAAL,CAAcJ,CAAd;AACtB;;;iBAcD,2BAAkB;AAChB;AACAtB,mBAAO,CAACC,GAAR,CAAY,KAAKZ,aAAjB,EAA+B,KAAKuF,OAApC;AACA,iBAAKvF,aAAL,CAAmBmE,GAAnB,CAAuB,UAAvB,EAAmC,CAAnC,EAHgB,CAGuB;;AAEvC,iBAAKnE,aAAL,CAAmB0F,WAAnB,CAA+B,KAAKH,OAApC,EALgB,CAMhB;AACA;AACA;AACD;;;iBAED,yBAAgB;AACd;AACA5E,mBAAO,CAACC,GAAR,CAAY,QAAZ,EAAqB,KAAKZ,aAA1B;AACA,iBAAKiO,OAAL,CAAa9L,QAAb,CAAsB,eAAtB,EAAuCmC,QAAvC,CAAgD,KAAKtE,aAAL,CAAmBqE,SAAnB,EAAhD;AACA1D,mBAAO,CAACC,GAAR,CAAY,uBAAZ,EAAoC,KAAKqN,OAAL,CAAa9L,QAAb,CAAsB,eAAtB,EAAuCM,KAA3E;AACA,iBAAK8B,YAAL,GAAoB,KAAK0J,OAAL,CAAa9L,QAAb,CAAsB,eAAtB,EAAuCqC,OAA3D;AAED;;;iBACD,kBAAS;AACP,iBAAKxE,aAAL,CAAmBoE,KAAnB;AACA,iBAAK6J,OAAL,CAAa9L,QAAb,CAAsB,eAAtB,EAAuCmC,QAAvC,CAAgD,EAAhD;AACA,iBAAKC,YAAL,GAAoB,KAAK0J,OAAL,CAAa9L,QAAb,CAAsB,eAAtB,EAAuCuC,SAA3D;AACD;;;iBACD,sBAAa;AACX;AACA;AACA/D,mBAAO,CAACC,GAAR,CAAY,eAAZ,EAHW,CAIX;AACD;;;iBACD,uBAAc0B,KAAd,EAAoBwL,IAApB,EAA0B;AACxBnN,mBAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBkN,IAAnB,EADwB,CAGxB;;AACF,iBAAKwB,QAAL,GAAgBnN,QAAhB,CAAyBG,KAAzB,EAAgCV,GAAhC,CAAoC,WAApC,EAAiD0C,QAAjD,CAA0DwJ,IAAI,CAACzJ,SAAL,EAA1D,EAJ0B,CAKxB;AACD;;;iBACD,gBAAOpC,CAAP,EAAU;AACR,iBAAKqN,QAAL,GAAgBnN,QAAhB,CAAyBF,CAAzB,EAA4BL,GAA5B,CAAgC,WAAhC,EAA6C0C,QAA7C,CAAsD,EAAtD;AACA,iBAAKyJ,aAAL,CAAmB9L,CAAnB,IAAsB,KAAKqN,QAAL,GAAgBnN,QAAhB,CAAyBF,CAAzB,EAA4BL,GAA5B,CAAgC,WAAhC,EAA6C8C,SAAnE,CAFQ,CAKR;AACD;;;iBACD,oBAAWpC,KAAX,EAAkB;AAChB;AACA3B,mBAAO,CAACC,GAAR,CAAY,eAAZ;AACA,iBAAKmN,aAAL,CAAmBzL,KAAnB,IAA0B,KAAKgN,QAAL,GAAgBnN,QAAhB,CAAyBG,KAAzB,EAAgCV,GAAhC,CAAoC,WAApC,EAAiD4C,OAA3E;AACA7D,mBAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmC,KAAKmN,aAAL,CAAmBzL,KAAnB,CAAnC;AAED;;;iBACD,kBAAM;AAAA;;AAEJ,iBAAK,IAAIA,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAI,KAAKgN,QAAL,GAAgBlN,MAA7C,EAAqDE,KAAK,EAA1D,EAA8D;AAC5D,mBAAKyL,aAAL,CAAmBzL,KAAnB,IAA0B,KAAKgN,QAAL,GAAgBnN,QAAhB,CAAyBG,KAAzB,EAAgCV,GAAhC,CAAoC,WAApC,EAAiD4C,OAA3E;AAED;;AAED,iBAAKD,YAAL,GAAoB,KAAK0J,OAAL,CAAa9L,QAAb,CAAsB,eAAtB,EAAuCqC,OAA3D;AAEA7D,mBAAO,CAACC,GAAR,CAAY,WAAZ,EAAwB,KAAKqN,OAAL,CAAaxL,KAArC;;AACA,gBAAG,KAAKjC,EAAL,KAAU,MAAb,EACA;AACE,kBAAMqC,IAAI,qBACL,KAAKoL,OAAL,CAAaxL,KADR,CAAV;AAGC,mBAAKnH,eAAL,CAAqBwU,WAArB,CAAiC,KAAKtP,EAAtC,EAAyCqC,IAAzC,EAA+CxC,SAA/C,CAAyD,UAACuC,GAAD,EAAO;AAE9DjC,uBAAO,CAACC,GAAR,CAAY,KAAZ,EAAkBgC,GAAlB;;AACA,uBAAI,CAAClH,MAAL,CAAYuK,QAAZ,CAAqB,CAAC,wBAAD,CAArB;AACD,eAJD;AAKF,aAVD,MAYA;AACE,kBAAMpD,MAAI,qBACL,KAAKoL,OAAL,CAAaxL,KADR,CAAV;;AAGC,mBAAKnH,eAAL,CAAqByU,UAArB,CAAgClN,MAAhC,EAAsCxC,SAAtC,CAAgD,UAACuC,GAAD,EAAO;AAErDjC,uBAAO,CAACC,GAAR,CAAY,KAAZ,EAAkBgC,GAAlB;;AACA,uBAAI,CAAClH,MAAL,CAAYuK,QAAZ,CAAqB,CAAC,wBAAD,CAArB;AACD,eAJD;AAKF;;AACD,iBAAKgI,OAAL,CAAa9B,KAAb;AACD;;;iBACD,uBAAW;AAAA;;AACT,iBAAK7Q,eAAL,CAAqBgG,WAArB,GAAmCjB,SAAnC,CAA6C,UAACuC,GAAD,EAAY;AACvD,qBAAI,CAACoC,KAAL,GAAWpC,GAAG,CAACC,IAAf;AACAlC,qBAAO,CAACC,GAAR,CAAY,KAAZ,EAAkB,OAAI,CAACoE,KAAvB;AACF,aAHA;AAID;;;;;;;yBA7UU6I,oB,EAAoB,2H,EAAA,iK,EAAA,yJ,EAAA,wK,EAAA,+H,EAAA,uH;AAAA,O;;;cAApBA,oB;AAAoB,yC;AAAA;AAAA;;;;;;;;;;;;;;;;;;ADbjC;;AACA;;AACA;;AACA;;AACE;;AACE;;AAAG;;AAAa;;AAClB;;AACA;;AACA;;AACE;;AAAiB;;AAAgB;;AACjC;;AACE;;AACE;;AACE;;AAAqD;;AAAS;;AAC9D;;AAIF;;AAQA;;AACA;;AACE;;AAAqD;;AAAa;;AAClE;;AAIA;;AAQF;;AACF;;AACA;;AACE;;AACE;;AAAqD;;AAAY;;AACjE;;AAIA;;AAQF;;AACA;;AACE;;AACE;;AACF;;AACA;;AAIA;;AAQF;;AACF;;AAEA;;AACE;;AACE;;AACE;;AACF;;AACA;;AAIA;;AAQF;;AACA;;AACE;;AACE;;AACF;;AACA;;AAIA;;AAQF;;AACF;;AACA;;AACE;;AACE;;AAAqD;;AAAU;;AAE/D;;AAIE;AAAA,qBAAU,IAAArH,QAAA,EAAV;AAAoB,aAApB;;AAKA;;AAAwB;;AAAM;;AAC9B;;AAIF;;AACA;;AAQF;;AAEA;;AACE;;AAAqD;;AAAI;;AACxD;;AAMA;;AACA;;AACA;;AAQH;;AACF;;AACA;;AACE;;AACE;;AACE;;AACF;;AACA;;AAME;;AACF;;AACA;;AAOF;;AACA;;AACE;;AAAqD;;AAAU;;AAC/D;;AACE;;AAEE;AAAA,qBAAgB,IAAAK,UAAA,EAAhB;AAA4B,aAA5B,EAA6B,YAA7B,EAA6B;AAAA,qBACf,IAAAC,aAAA,EADe;AACA,aAD7B;;AAID;;AACD;;AAMF;;AACA;;AAA6C;AAAA,qBAAS,IAAAC,MAAA,EAAT;AAAiB,aAAjB;;AAC3C;;AACF;;AACF;;AACF;;AACF;;AACA;;AACE;;AAAiB;;AAA4B;;AAC/C;;AACA;;AACE;;AAqFF;;AAEA;;AAAiB;;AAAiB;;AAClC;;AACE;;AA2FF;;AACA;;AAAiB;;AAAyB;;AAC1C;;AACE;;AA+DF;;AACF;;AACA;;AAAwG;AAAA,qBAAS,IAAAiJ,MAAA,EAAT;AAAiB,aAAjB;;AAEtG;;AACF;;AACF;;AAAM;;;;;;;;;;;;;;;;;;;;;;;;;AA/cgC;;AACA;;AAAA;;AAChC;;AAAA;;AAaI;;AAAA;;AAIC;;AAAA;;AAWD;;AAAA;;AAIC;;AAAA;;AAaD;;AAAA;;AAIC;;AAAA;;AAaD;;AAAA;;AAIC;;AAAA;;AAgBD;;AAAA;;AAIC;;AAAA;;AAaD;;AAAA;;AAIC;;AAAA;;AAkBC;;AAAA;;AAK8C;;AAAA;;AAM/C;;AAAA;;AAcA;;AAAA;;AAHkB,4FAA6B,KAA7B,EAA6B,WAA7B,EAA6B,KAA7B,EAA6B,WAA7B;;AAMe;;AAAA;;AAGjC;;AAAA;;AAkBC;;AAAA;;AAEsB;;AAAA;;AAGvB;;AAAA;;AAeG;;AAAA;;AAJA;;AAOD;;AAAA;;AAiBe;;AAAA;;AAyFA;;AAAA;;AA8FA;;AAAA;;AAgEiC;;AAAA;;;;;;;;;wEC9bhDnC,oB,EAAoB;gBALhC,uDAKgC;iBALtB;AACT5G,oBAAQ,EAAE,kBADD;AAETC,uBAAW,EAAE,+BAFJ;AAGTC,qBAAS,EAAE,CAAC,+BAAD;AAHF,W;AAKsB,U;;;;;;;;;;;;;;;AASNnH,uBAAa,EAAE,CAAF;kBAArC,uDAAqC;mBAA3B,Y;AAA2B,WAAE,C;AAIbgP,uBAAa,EAAE,CAAF;kBAAxC,0DAAwC;mBAA3B,Y;AAA2B,WAAE;;;;;;;;;;;AC1B5C;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAoEaiB,Y;;;;;cAAAA;;;;2BAAAA,Y;AAAY,S;AAAA,mBATb,CACR,qGADQ,EAER;AACEC,iBAAO,EAAC,uEADV;AAEEC,kBAAQ,EAAC,2FAFX;AAGEC,eAAK,EAAC;AAHR,SAFQ,C;AAOT,kBAtBQ,CACP,4DADO,EAEP,wEAFO,EAGP,mEAHO,EAIP,yEAJO,EAKP,0EALO,EAMP,2DANO,EAOP,2EAPO,EAQP,0EARO,EASP,4DATO,EAUP,oFAVO,EAWP,uEAXO,EAYP,iFAZO,CAsBR;;;;4HAEUH,Y,EAAY;AAAA,yBArCrB,+DAqCqB,EApCrB,kGAoCqB,EAnCrB,yFAmCqB,EAlCrB,4FAkCqB,EAjCrB,kGAiCqB,EAhCrB,iHAgCqB,EA/BrB,mGA+BqB,EA9BrB,6FA8BqB,EA7BrB,oHA6BqB,EA5BrB,+HA4BqB,EA3BrB,mGA2BqB,EA1BrB,iHA0BqB;AA1BM,oBAG3B,4DAH2B,EAI3B,wEAJ2B,EAK3B,mEAL2B,EAM3B,yEAN2B,EAO3B,0EAP2B,EAQ3B,2DAR2B,EAS3B,2EAT2B,EAU3B,0EAV2B,EAW3B,4DAX2B,EAY3B,oFAZ2B,EAa3B,uEAb2B,EAc3B,iFAd2B;AA0BN,S;AAZF,O;;;;;wEAYVA,Y,EAAY;gBAvCxB,sDAuCwB;iBAvCf;AACRI,wBAAY,EAAE,CACZ,+DADY,EAEZ,kGAFY,EAGZ,yFAHY,EAIZ,4FAJY,EAKZ,kGALY,EAMZ,iHANY,EAOZ,mGAPY,EAQZ,6FARY,EASZ,oHATY,EAUZ,+HAVY,EAWZ,mGAXY,EAYZ,iHAZY,CADN;AAeRC,mBAAO,EAAE,CACP,4DADO,EAEP,wEAFO,EAGP,mEAHO,EAIP,yEAJO,EAKP,0EALO,EAMP,2DANO,EAOP,2EAPO,EAQP,0EARO,EASP,4DATO,EAUP,oFAVO,EAWP,uEAXO,EAYP,iFAZO,CAfD;AA8BRC,qBAAS,EAAC,CACR,qGADQ,EAER;AACEL,qBAAO,EAAC,uEADV;AAEEC,sBAAQ,EAAC,2FAFX;AAGEC,mBAAK,EAAC;AAHR,aAFQ;AA9BF,W;AAuCe,U;;;;;;;;;;ACpEzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAcA,UAAMI,MAAM,GAAW,CACrB;AAAEC,YAAI,EAAE,EAAR;AAAYC,iBAAS,EAAE;AAAvB,OADqB,EAErB;AAAED,YAAI,EAAE,OAAR;AAAiBC,iBAAS,EAAE;AAA5B,OAFqB,EAGrB;AAAED,YAAI,EAAE,iBAAR;AAA2BC,iBAAS,EAAE;AAAtC,OAHqB,EAIrB;AAAED,YAAI,EAAE,iBAAR;AAA2BC,iBAAS,EAAE;AAAtC,OAJqB,EAKrB;AAAED,YAAI,EAAE,eAAR;AAAyBC,iBAAS,EAAE;AAApC,OALqB,EAMrB;AAAED,YAAI,EAAE,iBAAR;AAA2BC,iBAAS,EAAE;AAAtC,OANqB,EAOrB;AAAED,YAAI,EAAE,oBAAR;AAA8BC,iBAAS,EAAE;AAAzC,OAPqB,EAQrB;AAAED,YAAI,EAAE,iBAAR;AAA2BC,iBAAS,EAAE;AAAtC,OARqB,EASrB;AAAED,YAAI,EAAE,WAAR;AAAqBC,iBAAS,EAAE;AAAhC,OATqB,EAUrB;AAAED,YAAI,EAAC,qBAAP;AAA8BC,iBAAS,EAAC;AAAxC,OAVqB,EAWrB;AAACD,YAAI,EAAC,aAAN;AAAoBC,iBAAS,EAAC;AAA9B,OAXqB,EAYrB;AAAED,YAAI,EAAE,gBAAR;AAA0BC,iBAAS,EAAC;AAApC,OAZqB,CAAvB;;UAmBaC,kB;;;;;cAAAA;;;;2BAAAA,kB;AAAkB,S;AAAA,kBAHpB,CAAC,6DAAaC,QAAb,CAAsBJ,MAAtB,CAAD,CAGoB,EAFnB,4DAEmB;;;;4HAAlBG,kB,EAAkB;AAAA;AAAA,oBAFnB,4DAEmB;AAAA,S;AAFP,O;;;;;wEAEXA,kB,EAAkB;gBAJ9B,sDAI8B;iBAJrB;AACRL,mBAAO,EAAE,CAAC,6DAAaM,QAAb,CAAsBJ,MAAtB,CAAD,CADD;AAERK,mBAAO,EAAE,CAAC,4DAAD;AAFD,W;AAIqB,U;;;;;;;;;;AChC/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;ACDA;;AAA0F;;AAAmD;;;;AAAnF;;;;;;;;;;AAC1D;;AAA6G;;AAAmD;;;;AAAvG;;;;;;AAwD7C;;AACJ;;AAAsB;;;;;;AAOlB;;AACE;;AAAsB;;;;;;AASxB;;AACE;;AAAsB;;;;;;AAOxB;;AACE;;AAAsB;;;;;;AAUxB;;AACE;;AAAsB;;;;;;AAOxB;;AACE;;AAAsB;;;;;;AAetB;;AAAgE;;AAAmB;;;;;;AAA3E;;AAAwD;;AAAA;;;;;;AAKlE;;AACE;;AAAsB;;;;;;AAatB;;AAA4D;;AAAc;;;;;;AAAlE;;AAAoD;;AAAA;;;;;;AAK9D;;AACE;;AAAsB;;;;;;AAcxB;;AACE;;AAAgB;;;;;;AActB;;AACE;;AAAoB;;AAA+B;;AACrD;;;;;;;;AADsB;;AAAA;;;;;;AASd;;AACC;;AACD;;;;;;;;AADC;;AAAA;;;;;;AAED;;AACE;;AAKE;;AACJ;;;;;;;;AAHI;;AAAA;;;;;;;;AAIJ;;AACE;;AAGE;AAAA;;AAAA;;AAAA;AAAA;;AAHF;;AAME;;AACJ;;;;;;;;AAHI;;AAAA;;AACA;;;;;;AAlBN;;AACE;;AAGA;;AAQA;;AAUN;;;;;;;;;;AArBoB;;AAAA;;AAGV;;AAAA;;AAQA;;AAAA;;;;;;AAjBZ;;AAEE;;AAGI;;AAuBJ;;AACF;;;;;;;;;;AA3BgB;;AAAA;;AAGe;;AAAA;;;;;;AAV/B;;AACA;;AAGA;;AACA;;AA8BF;;AACA;;;;;;;;AAnCqB;;AAAA;;AAKF;;AAAA;;;;;;;;AAkCnB;;AACA;;AACE;;AAAoB;;AAAY;;AAClC;;AACA;;AACE;;AACE;;AACE;;AACF;;AACA;;AACE;;AAKE;;AACJ;;AACA;;AACE;;AAGE;AAAA;;AAAA;;AAAA;AAAA;;AAHF;;AAME;;AACJ;;AACF;;AACA;;AACE;;AACE;;AACF;;AAEA;;AACE;;AAKE;;AACJ;;AACA;;AACE;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAJF;;AAME;;AACJ;;AACF;;AACA;;AACE;;AACE;;AACF;;AAEA;;AACE;;AAKE;;AACJ;;AACA;;AACE;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAJF;;AAME;;AACJ;;AACF;;AAEA;;AACE;;AACE;;AACF;;AAEA;;AACE;;AAKE;;AACJ;;AACA;;AACE;;AAGE;AAAA;;AAAA;;AAAA;AAAA;;AAHF;;AAME;;AACJ;;AACF;;AACA;;AACE;;AACE;;AACF;;AAEA;;AACE;;AAKE;;AACJ;;AACA;;AACE;;AAGE;AAAA;;AAAA;;AAAA;AAAA;;AAHF;;AAME;;AACJ;;AACF;;AACA;;AACE;;AACE;;AACF;;AACA;;AACF;;AACF;;AAEA;;AACE;;AAAoB;;AAAiB;;AACvC;;AACA;;AACE;;AACE;;AACE;;AACF;;AAEA;;AACE;;AAKE;;AACJ;;AACA;;AACE;;AAGE;AAAA;;AAAA;;AAAA;AAAA;;AAHF;;AAME;;AACJ;;AACF;;AACA;;AACE;;AACE;;AACF;;AAEA;;AACE;;AAKE;;AACJ;;AACA;;AACE;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAJF;;AAME;;AACJ;;AACF;;AACA;;AACE;;AACE;;AACF;;AAEA;;AACE;;AAKE;;AACJ;;AACA;;AACE;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAJF;;AAME;;AACJ;;AACF;;AAEA;;AACE;;AACE;;AACF;;AAEA;;AACE;;AAKE;;AACJ;;AACA;;AACE;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAJF;;AAME;;AACJ;;AACF;;AACA;;AACE;;AACE;;AACF;;AAEA;;AACE;;AAKE;;AACJ;;AACA;;AACE;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAJF;;AAME;;AACJ;;AACF;;AACF;;AAEA;;AACE;;AAAoB;;AAAgB;;AACtC;;AACA;;AACE;;AACE;;AACE;;AACF;;AAEA;;AACE;;AAKE;;AACJ;;AACA;;AACE;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAJF;;AAME;;AACJ;;AACF;;AACA;;AACE;;AACE;;AACF;;AAEA;;AACE;;AAKE;;AACJ;;AACA;;AACE;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAJF;;AAME;;AACJ;;AACF;;AACA;;AACE;;AACE;;AACF;;AAEA;;AACE;;AAKE;;AACJ;;AACA;;AACE;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAJF;;AAME;;AACJ;;AACF;;AAEA;;AACE;;AACE;;AACF;;AAEA;;AACE;;AAKE;;AACJ;;AACA;;AACE;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAJF;;AAME;;AACJ;;AACF;;AACA;;AACE;;AACE;;AACF;;AAEA;;AACE;;AAKE;;AACJ;;AACA;;AACE;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAJF;;AAME;;AACJ;;AACF;;AACA;;AACE;;AACE;;AACF;;AAEA;;AACE;;AAKE;;AACJ;;AACA;;AACE;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAJF;;AAME;;AACJ;;AACF;;AACA;;AACE;;AACE;;AACF;;AAEA;;AACE;;AAKE;;AACJ;;AACA;;AACE;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAJF;;AAME;;AACJ;;AACF;;AACA;;AACE;;AACE;;AACF;;AAEA;;AACE;;AAKE;;AACJ;;AACA;;AACE;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAJF;;AAME;;AACJ;;AACF;;AACA;;AACE;;AACE;;AACF;;AAEA;;AACE;;AAKE;;AACJ;;AACA;;AACE;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAJF;;AAME;;AACJ;;AACF;;AACF;;AAEA;;AACE;;AAAoB;;AAAiB;;AACvC;;AACA;;AACE;;AACE;;AACE;;AACF;;AAEA;;AACE;;AAKE;;AACJ;;AACA;;AACE;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAJF;;AAME;;AACJ;;AACF;;AACA;;AACE;;AACE;;AACF;;AAEA;;AACE;;AAKE;;AACJ;;AACA;;AACE;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAJF;;AAME;;AACJ;;AACF;;AACA;;AACE;;AACE;;AACF;;AAEA;;AACE;;AAKE;;AACJ;;AACA;;AACE;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAJF;;AAME;;AACJ;;AACF;;AAEA;;AACE;;AACE;;AACF;;AAEA;;AACE;;AAKE;;AACJ;;AACA;;AACE;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAJF;;AAME;;AACJ;;AACF;;AACA;;AACE;;AACE;;AACF;;AAEA;;AACE;;AAKE;;AACJ;;AACA;;AACE;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAJF;;AAME;;AACJ;;AACF;;AACA;;AACE;;AACE;;AACF;;AAEA;;AACE;;AAKE;;AACJ;;AACA;;AACE;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAJF;;AAME;;AACJ;;AACF;;AACA;;AACE;;AACE;;AACF;;AAEA;;AACE;;AAKE;;AACJ;;AACA;;AACE;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAJF;;AAME;;AACJ;;AACF;;AACA;;AACE;;AACE;;AACF;;AAEA;;AACE;;AAKE;;AACJ;;AACA;;AACE;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAJF;;AAME;;AACJ;;AACF;;AACA;;AACE;;AACE;;AACF;;AAEA;;AACE;;AAKE;;AACJ;;AACA;;AACE;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAJF;;AAME;;AACJ;;AACF;;AACF;;AAEA;;AACE;;AAAoB;;AAAoB;;AAC1C;;AACA;;AACE;;AACE;;AACE;;AACF;;AAEA;;AACE;;AAKE;;AACJ;;AACA;;AACE;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAJF;;AAME;;AACJ;;AACF;;AACA;;AACE;;AACE;;AACF;;AAEA;;AACE;;AAKE;;AACJ;;AACA;;AACE;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAJF;;AAME;;AACJ;;AACF;;AACA;;AACE;;AACE;;AACF;;AAEA;;AACE;;AAKE;;AACJ;;AACA;;AACE;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAJF;;AAME;;AACJ;;AACF;;AAEA;;AACE;;AACE;;AACF;;AAEA;;AACE;;AAKE;;AACJ;;AACA;;AACE;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAJF;;AAME;;AACJ;;AACF;;AACA;;AACE;;AACE;;AACF;;AAEA;;AACE;;AAKE;;AACJ;;AACA;;AACE;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAJF;;AAME;;AACJ;;AACF;;AACF;;AAEA;;AACE;;AAAoB;;AAAS;;AAC/B;;AACA;;AACE;;AACE;;AACE;;AACF;;AAEA;;AACE;;AAKE;;AACJ;;AACA;;AACE;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAJF;;AAME;;AACJ;;AACF;;AACA;;AACE;;AACE;;AACF;;AAEA;;AACE;;AAKE;;AACJ;;AACA;;AACE;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAJF;;AAME;;AACJ;;AACF;;AACA;;AACE;;AACE;;AACF;;AAEA;;AACE;;AAKE;;AACJ;;AACA;;AACE;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAJF;;AAME;;AACJ;;AACF;;AAEA;;AACE;;AACE;;AACF;;AAEA;;AACE;;AAKE;;AACJ;;AACA;;AACE;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAJF;;AAME;;AACJ;;AACF;;AACF;;AAEA;;AACE;;AAAoB;;AAAS;;AAC/B;;AACA;;AACE;;AACE;;AACE;;AACF;;AAEA;;AACE;;AAKE;;AACJ;;AACA;;AACE;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAJF;;AAME;;AACJ;;AACF;;AACA;;AACE;;AACE;;AACF;;AAEA;;AACE;;AAKE;;AACJ;;AACA;;AACE;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAJF;;AAME;;AACJ;;AACF;;AACA;;AACE;;AACE;;AACF;;AAEA;;AACE;;AAKE;;AACJ;;AACA;;AACE;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAJF;;AAME;;AACJ;;AACF;;AAEA;;AACE;;AACE;;AACF;;AAEA;;AACE;;AAKE;;AACJ;;AACA;;AACE;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAJF;;AAME;;AACJ;;AACF;;AACF;;AAEA;;AACE;;AAAoB;;AAAmB;;AACzC;;AACA;;AACE;;AACE;;AACE;;AACF;;AAEA;;AACE;;AAKE;;AACJ;;AACA;;AACE;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAJF;;AAME;;AACJ;;AACF;;AACA;;AACE;;AACE;;AACF;;AAEA;;AACE;;AAKE;;AACJ;;AACA;;AACE;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAJF;;AAME;;AACJ;;AACF;;AACA;;AACE;;AACE;;AACF;;AAEA;;AACE;;AAKE;;AACJ;;AACA;;AACE;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAJF;;AAME;;AACJ;;AACF;;AAEA;;AACE;;AACE;;AACF;;AAEA;;AACE;;AAKE;;AACJ;;AACA;;AACE;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAJF;;AAME;;AACJ;;AACF;;AAEA;;AACE;;AACE;;AACF;;AAEA;;AACE;;AAKE;;AACJ;;AACA;;AACE;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAJF;;AAME;;AACJ;;AACF;;AAEA;;AACE;;AACE;;AACF;;AAEA;;AACE;;AAKE;;AACJ;;AACA;;AACE;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAJF;;AAME;;AACJ;;AACF;;AAEA;;AACE;;AACE;;AACF;;AAEA;;AACE;;AAKE;;AACJ;;AACA;;AACE;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAJF;;AAME;;AACJ;;AACF;;AAEA;;AACE;;AACE;;AACF;;AAEA;;AACE;;AAKE;;AACJ;;AACA;;AACE;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAJF;;AAME;;AACJ;;AACF;;AAEA;;AACE;;AACE;;AACF;;AAEA;;AACE;;AAKE;;AACJ;;AACA;;AACE;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAJF;;AAME;;AACJ;;AACF;;AACF;;AAEA;;AACE;;AAAoB;;AAAe;;AACrC;;AACA;;AACE;;AACE;;AACE;;AACF;;AAEA;;AACE;;AAKE;;AACJ;;AACA;;AACE;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAJF;;AAME;;AACJ;;AACF;;AACA;;AACE;;AACE;;AACF;;AAEA;;AACE;;AAKE;;AACJ;;AACA;;AACE;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAJF;;AAME;;AACJ;;AACF;;AACA;;AACE;;AACE;;AACF;;AAEA;;AACE;;AAKE;;AACJ;;AACA;;AACE;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAJF;;AAME;;AACJ;;AACF;;AAEA;;AACE;;AAAqD;;AAAa;;AAElE;;AACE;;AAKE;;AACJ;;AACA;;AACE;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAJF;;AAME;;AACJ;;AACF;;AAEA;;AACE;;AACE;;AACF;;AAEA;;AACE;;AAKE;;AACJ;;AACA;;AACE;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAJF;;AAME;;AACJ;;AACF;;AAEA;;AACE;;AACE;;AACF;;AAEA;;AACE;;AAKE;;AACJ;;AACA;;AACE;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAJF;;AAME;;AACJ;;AACF;;AAEA;;AACE;;AACE;;AACF;;AAEA;;AACE;;AAKE;;AACJ;;AACA;;AACE;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAJF;;AAME;;AACJ;;AACF;;AACF;;AACF;;;;;;;;AAlhDE;;AAOA;;AACE;;AAAoB;;AAAgB;;AACtC;;AACA;;AACE;;AACE;;AACE;;AAAqD;;AAAS;;AAC9D;;AACA;;AAEF;;AACA;;AACE;;AACE;;AACF;;AACA;;AACA;;AAEF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACF;;AACA;;AACA;;AAEF;;AACA;;AACE;;AACE;;AACF;;AACA;;AACA;;AAEF;;AACF;;AAEA;;AACE;;AACE;;AACE;;AACF;;AACA;;AACA;;AAEF;;AACA;;AACE;;AACE;;AACF;;AACA;;AACA;;AAEF;;AACF;;AACA;;AACE;;AACE;;AAAqD;;AAAU;;AAE/D;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAGA;;AAAwB;;AAAM;;AAC9B;;AAIF;;AACA;;AAEF;;AACA;;AACE;;AACE;;AACF;;AACA;;AAME;;AAAwB;;AAAM;;AAC9B;;AAIF;;AACA;;AAEF;;AACF;;AACA;;AACE;;AACE;;AAAqD;;AAAI;;AACzD;;AAKA;;AACA;;AAEA;;AAEF;;AAQF;;AACF;;AAEA;;AACE;;AAqCF;;AAGA;;AA02CF;;;;;;;;;;;;;;;;;;;;;;;;;;;AArgDiG;;AAAA;;AAClF;;AAAA;;AAOwE;;AAAA;;AACxE;;AAAA;;AASsE;;AAAA;;AACtE;;AAAA;;AAOuE;;AAAA;;AACvE;;AAAA;;AAUuE;;AAAA;;AACvE;;AAAA;;AAOuE;;AAAA;;AACvE;;AAAA;;AAaL;;AAAA;;AAG8C;;AAAA;;AAKzC;;AAAA;;AAWL;;AAAA;;AAG4C;;AAAA;;AAKvC;;AAAA;;AAUP;;AAAA;;AAHkB,0FAA6B,KAA7B,EAA6B,cAA7B,EAA6B,KAA7B,EAA6B,cAA7B;;AAKe;;AAAA;;AAG1B;;AAAA;;AAce;;AAAA;;AAwCtB;;AAAA;;;;;;AA63CI;;AACE;;AAAsB;;;;;;AAoBxB;;AACE;;AAAsB;;;;;;AAqBtB;;AAAiD;;AAAY;;;;;;AAA7B;;AAAiB;;AAAA;;;;;;AAEnD;;AACE;;AAAsB;;;;;;AA8BxB;;AACE;;AAAsB;;;;;;AArFhC;;AACE;;AACE;;AACE;;AACE;;AACE;;AACF;;AACA;;AACA;;AAcF;;AAEA;;AACE;;AACE;;AACF;;AACA;;AACA;;AASF;;AAEA;;AACE;;AACE;;AACF;;AACA;;AAME;;AAAwB;;AAAM;;AAC9B;;AACF;;AACA;;AAEF;;AAeA;;AACE;;AACE;;AACF;;AACA;;AAME;;AAAwB;;AAAM;;AAC9B;;AAAiC;;AAAG;;AACpC;;AAAgC;;AAAE;;AACpC;;AACA;;AAEF;;AACF;;AACF;;AACF;;;;;;;;;;;;;;;;;AAxFO;;AAAA;;AAEuB;;AAAA;;AAIkD;;AAAA;;AACjE;;AAAA;;AAgBe;;AAAA;;AAIoD;;AAAA;;AACnE;;AAAA;;AAWgB;;AAAA;;AAQrB;;AAAA;;AAGsB;;AAAA;;AAEjB;;AAAA;;AAyBL;;AAAA;;AAMK;;AAAA;;;;;;;;AA5FjB;;AAOA;;AACE;;AA0FF;;AACA;;AAA6B;AAAA;;AAAA;;AAAA;AAAA;;AAC1B;;AACH;;AAEA;;AAA6B;AAAA;;AAAA;;AAAA;AAAA;;AAC3B;;AACF;;AACA;;AAA8B;;AAAkB;;AAChD;;AAA8B;;AAAoB;;AACpD;;;;;;AApGyB;;AAAA;;;;UDpjDhBC,uB;AAgCX,yCACU1V,EADV,EAEUC,mBAFV,EAGUG,QAHV,EAIUF,eAJV,EAKSI,MALT,EAMUH,cANV,EAOUwV,QAPV,EAO4B;AAAA;;AANlB,eAAA3V,EAAA,GAAAA,EAAA;AACA,eAAAC,mBAAA,GAAAA,mBAAA;AACA,eAAAG,QAAA,GAAAA,QAAA;AACA,eAAAF,eAAA,GAAAA,eAAA;AACD,eAAAI,MAAA,GAAAA,MAAA;AACC,eAAAH,cAAA,GAAAA,cAAA;AACA,eAAAwV,QAAA,GAAAA,QAAA;AApCV,eAAAC,QAAA,GAAW,IAAX;AACA,eAAAC,UAAA,GAAa,KAAb;AAGA,eAAA3U,OAAA,GAAU,IAAIC,IAAJ,EAAV;AACA,eAAAC,OAAA,GAAU,IAAID,IAAJ,EAAV;AACA,eAAA2U,WAAA,GAAmB,CAAC,aAAD,EAAgB,WAAhB,EAA6B,QAA7B,CAAnB;AAEA,eAAA7U,aAAA,GAAgB,EAAhB;AACA,eAAAyG,WAAA,GAAc,EAAd;AACA,eAAAqO,MAAA,GAAS,CACP,WADO,EAEP,UAFO,EAGP,cAHO,EAIP,UAJO,EAKP,YALO,EAMP,QANO,EAOP,WAPO,EAQP,aARO,EASP,WATO,EAUP,gBAVO,EAWP,MAXO,EAYP,gBAZO,CAAT;AA4BE,eAAKC,WAAL,GAAmB,KAAKhW,EAAL,CAAQqC,KAAR,CAAc;AAC/BG,qBAAS,EAAE,CAAC,EAAD,EAAK,0DAAWC,QAAhB,CADoB;AAE/BE,oBAAQ,EAAE,CAAC,EAAD,EAAK,0DAAWF,QAAhB,CAFqB;AAG/BG,wBAAY,EAAE,CAAC,EAAD,EAAK,0DAAWH,QAAhB,CAHiB;AAI/B;AACAqQ,sBAAU,EAAE,CAAC,EAAD,EAAK,0DAAWrQ,QAAhB,CALmB;AAM/B;AACAsQ,qBAAS,EAAE,CAAC,EAAD,EAAK,0DAAWtQ,QAAhB,CAPoB;AAQ/BuQ,uBAAW,EAAE,CAAC,EAAD,EAAK,0DAAWvQ,QAAhB,CARkB;AAS/BwQ,qBAAS,EAAE,CAAC,EAAD,EAAK,0DAAWxQ,QAAhB,CAToB;AAU/BmE,gBAAI,EAAE,CAAC,EAAD,EAAK,0DAAWnE,QAAhB,CAVyB;AAW/BM,0BAAc,EAAE,CAAC,EAAD,EAAK,0DAAWN,QAAhB,CAXe;AAY/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAoT,sBAAU,EAAE,KAAK7V,EAAL,CAAQsC,KAAR,CAAc,EAAd,CArEmB;AAsE/B2T,8BAAkB,EAAE,KAAKjW,EAAL,CAAQsC,KAAR,CAAc,EAAd;AAtEW,WAAd,CAAnB;AAwED;;;;iBAED,oBAAQ;AAAA;;AACN,iBAAK8C,EAAL,GAAU,KAAKjF,cAAL,CAAoBkF,QAApB,CAA6BC,MAA7B,CAAoCF,EAA9C;AAEA,iBAAKnF,mBAAL,CAAyBwF,YAAzB,CAAsCC,IAAtC,CAA2C,sBAA3C;AACA,iBAAKtF,QAAL,CAAcA,QAAd,CAAuB,0BAAvB;AACA,iBAAKuF,eAAL;AACA,iBAAKC,iBAAL;AACA,iBAAKsQ,cAAL;AACA,iBAAKC,WAAL;AACA,iBAAKjQ,WAAL;;AACA,gBAAI,KAAKd,EAAL,IAAW,MAAf,EAAuB;AACrB,mBAAKlF,eAAL,CAAqBkW,iBAArB,CAAuC,KAAKhR,EAA5C,EAAgDH,SAAhD,CAA0D,UAACuC,GAAD,EAAc;AACtEjC,uBAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBgC,GAAG,CAACC,IAAvB;AAEA,uBAAI,CAAC2K,SAAL,GAAiB5K,GAAG,CAACC,IAArB;AACAoM,0BAAU,CAAC,YAAM;;;AACf,sBAAIwC,UAAJ;;AACA,sBAAI,OAAI,CAACjE,SAAL,CAAekE,WAAf,CAA2B,CAA3B,EAA8B1P,IAAlC,EAAwC;AACtC,wBAAIA,IAAI,GAAG,IAAIzF,IAAJ,CAAS,OAAI,CAACiR,SAAL,CAAekE,WAAf,CAA2B,CAA3B,EAA8B1P,IAAvC,CAAX;AACAyP,8BAAU,GAAG,OAAI,CAACV,QAAL,CAAcY,SAAd,CAAwB3P,IAAxB,EAA8B,YAA9B,CAAb;;AACA,2BAAI,CAACoP,WAAL,CAAiB1O,UAAjB,CAA4B;AAAEV,0BAAI,EAAEyP;AAAR,qBAA5B;AACD,mBAJD,MAIO;AACLA,8BAAU,GAAG,EAAb;AACD;;AAED,yBAAI,CAACL,WAAL,CAAiB1O,UAAjB,CAA4B;AAC1B3E,4BAAQ,EAAE,OAAI,CAACyP,SAAL,CAAekE,WAAf,CAA2B,CAA3B,EAA8B3T,QADd;AAE1BC,gCAAY,EAAE,OAAI,CAACwP,SAAL,CAAekE,WAAf,CAA2B,CAA3B,EAA8B1T,YAFlB;AAG1BkQ,8BAAU,EAAE,OAAI,CAACV,SAAL,CAAekE,WAAf,CAA2B,CAA3B,EAA8BxD,UAHhB;AAI1BC,6BAAS,EAAE,OAAI,CAACX,SAAL,CAAekE,WAAf,CAA2B,CAA3B,EAA8BvD,SAJf;AAK1BC,+BAAW,EAAE,OAAI,CAACZ,SAAL,CAAekE,WAAf,CAA2B,CAA3B,EAA8BtD,WALjB;AAM1BC,6BAAS,EAAE,OAAI,CAACb,SAAL,CAAekE,WAAf,CAA2B,CAA3B,EAA8BrD,SANf;AAO1BzQ,6BAAS,EAAE,OAAI,CAAC4P,SAAL,CAAekE,WAAf,CAA2B,CAA3B,EAA8B9T,SAPf;AAQ1BO,kCAAc,EAAE,OAAI,CAACqP,SAAL,CAAekE,WAAf,CAA2B,CAA3B,EAA8BvT;AARpB,mBAA5B;;AAWA,sBAAI,OAAI,CAACyT,IAAL,GAAYzP,QAAhB,EAA0B;AACxB,wBAAIgD,GAAJ;;AACA,yBAAM,IAAIlD,CAAC,GAAG,CAAd,EAAgBA,CAAC,GAAG,OAAI,CAAC4P,QAAL,CAAczP,MAAlC,EAAyCH,CAAC,EAA1C,EAA8C;AAE1C,2BAAK,IAAIK,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAE,OAAI,CAACkL,SAAL,CAAekE,WAAf,CAA2B,CAA3B,EAA8BL,kBAA9B,CAAiDjP,MAA5E,EAAoFE,KAAK,EAAzF,EAA6F;AAC3F6C,2BAAG,GAAGC,MAAM,CAACC,IAAP,CACJ,OAAI,CAACmI,SAAL,CAAekE,WAAf,CAA2B,CAA3B,EAA8BL,kBAA9B,CAAiD/O,KAAjD,CADI,CAAN;AAGA,qCAAI,CAACsP,IAAL,GACDzP,QADC,CACQF,CADR,EACWL,GADX,CACeuD,GADf,OACmB,IADnB,IACmB,aADnB,GACmB,MADnB,GACmB,GACnBb,QADmB,CAEnB,OAAI,CAACkJ,SAAL,CAAekE,WAAf,CAA2B,CAA3B,EAA8BL,kBAA9B,CAAiD/O,KAAjD,EAAwD6C,GAAxD,CAFmB,CADnB;AAKD;AAEJ;AACF;AACF,iBAtCS,EAsCP,GAtCO,CAAV;AAuCD,eA3CD;AA4CD;AACF;;;iBACD,2BAAe,CACb;AACA;AACD;;;iBACD,oBAAW;AAAA;;AACT,iBAAK9I,aAAL,CAAmBmG,OAAnB,CAA2B,UAACN,IAAD,EAAU;AACnC,kBAAI,OAAI,CAACkP,WAAL,CAAiBxP,GAAjB,CAAqB,WAArB,EAAkCa,KAAlC,KAA4CP,IAAI,CAACK,GAArD,EAA0D;AACxD5B,uBAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBsB,IAAxB;;AACA,uBAAI,CAACkP,WAAL,CAAiB1O,UAAjB,CAA4B;AAC1B3E,0BAAQ,EAAEmE,IAAI,CAACnE,QADW;AAE1BC,8BAAY,EAAEkE,IAAI,CAAClE,YAFO;AAG1BkQ,4BAAU,EAAEhM,IAAI,CAACjE,aAHS;AAI1BkQ,2BAAS,EAAEjM,IAAI,CAAChE,eAJU;AAK1BkQ,6BAAW,EAAElM,IAAI,CAAC7D,oBALQ;AAM1BgQ,2BAAS,EAAEnM,IAAI,CAAC5D,aANU;AAO1BV,2BAAS,EAAE,OAAI,CAACwT,WAAL,CAAiBxP,GAAjB,CAAqB,WAArB,EAAkCa;AAPnB,iBAA5B;AASD;AACF,aAbD;AAcA,iBAAK2O,WAAL,CAAiBxP,GAAjB,CAAqB,WAArB,EAAkCe,sBAAlC;AACD;;;iBACD,qBAAY;AACV;AACE,mBAAKlB,GAAL,GAAWC,IAAX,CAAgB,KAAKC,SAAL,EAAhB;AACD;AACF;;;iBACD,eAAG;AACD,mBAAO,KAAKyP,WAAL,CAAiBxP,GAAjB,CAAqB,YAArB,CAAP;AACD;;;iBACD,qBAAS;AACP,mBAAO,KAAKxG,EAAL,CAAQqC,KAAR,CAAc;AACnByE,kBAAI,EAAE,CAAC,EAAD,EAAI,0DAAWrE,QAAf,CADa;AAEnBmL,oBAAM,EAAE,CAAC,EAAD,EAAI,0DAAWnL,QAAf,CAFW;AAGnBiU,+BAAiB,EAAE,CAAC,EAAD,EAAI,0DAAWjU,QAAf,CAHA;AAInBkE,sBAAQ,EAAE,CAAC,EAAD,EAAI,0DAAWlE,QAAf,CAJS;AAKnBkU,qBAAO,EAAE,CAAC,EAAD,EAAI,0DAAWlU,QAAf;AALU,aAAd,CAAP;AAOD;;;iBACD,oBAAW;AACT,iBAAKmT,QAAL,GAAgB,IAAhB;AACA,iBAAKC,UAAL,GAAkB,KAAlB;AACAtQ,mBAAO,CAACC,GAAR,CAAY,KAAKwQ,WAAjB;AACD;;;iBACD,sBAAa;AAAA;;AACX,iBAAKH,UAAL,GAAkB,IAAlB;AACA,iBAAKD,QAAL,GAAgB,KAAhB;AACA,iBAAKvP,GAAL,GAAW2C,KAAX;;AACA,gBAAI,KAAK5D,EAAL,IAAW,MAAf,EAAuB;AACrB,mBACE,IAAI8B,KAAK,GAAG,CADd,EAEEA,KAAK,GAAG,KAAKkL,SAAL,CAAekE,WAAf,CAA2B,CAA3B,EAA8BT,UAA9B,CAAyC7O,MAFnD,EAGEE,KAAK,EAHP,EAIE;AACA3B,uBAAO,CAACC,GAAR,CAAY,KAAK4M,SAAL,CAAekE,WAAf,CAA2B,CAA3B,EAA8BT,UAA9B,CAAyC3O,KAAzC,EAAgDJ,IAA5D;AAEA,qBAAKV,SAAL;AACA,qBAAKC,GAAL,GACGU,QADH,CACYG,KADZ,EACmBV,GADnB,CACuB,MADvB,EAEG0C,QAFH,CAEY,KAAKkJ,SAAL,CAAekE,WAAf,CAA2B,CAA3B,EAA8BT,UAA9B,CAAyC3O,KAAzC,EAAgDJ,IAF5D;AAGA,qBAAKT,GAAL,GACGU,QADH,CACYG,KADZ,EACmBV,GADnB,CACuB,QADvB,EAEG0C,QAFH,CAEY,KAAKkJ,SAAL,CAAekE,WAAf,CAA2B,CAA3B,EAA8BT,UAA9B,CAAyC3O,KAAzC,EAAgD0G,MAF5D;AAGA,qBAAKvH,GAAL,GACGU,QADH,CACYG,KADZ,EACmBV,GADnB,CACuB,SADvB,EAEG0C,QAFH,CAEY,KAAKkJ,SAAL,CAAekE,WAAf,CAA2B,CAA3B,EAA8BT,UAA9B,CAAyC3O,KAAzC,EAAgDyP,OAF5D;AAGA,qBAAKtQ,GAAL,GACGU,QADH,CACYG,KADZ,EACmBV,GADnB,CACuB,mBADvB,EAEG0C,QAFH,CAGI,KAAKkJ,SAAL,CAAekE,WAAf,CAA2B,CAA3B,EAA8BT,UAA9B,CAAyC3O,KAAzC,EAAgDwP,iBAHpD;AAKA,qBAAKrQ,GAAL,GACGU,QADH,CACYG,KADZ,EACmBV,GADnB,CACuB,UADvB,EAEG0C,QAFH,CAEY,KAAKkJ,SAAL,CAAekE,WAAf,CAA2B,CAA3B,EAA8BT,UAA9B,CAAyC3O,KAAzC,EAAgDP,QAF5D;AAGD;AACF,aA3BD,MA2BO;AAAA;AACL,oBAAIoD,GAAG,GAAG,EAAV;;AACA,qBAAK,IAAI6M,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,OAAI,CAACH,QAAL,CAAczP,MAAlC,EAA0C4P,CAAC,EAA3C,EAA+C;AAC7C7M,qBAAG,CAACzD,IAAJ,CAAS0D,MAAM,CAACC,IAAP,CAAY,OAAI,CAACuM,IAAL,GAAYK,EAAZ,CAAeD,CAAf,EAAkBvP,KAA9B,CAAT;AACD;;AAED9B,uBAAO,CAACC,GAAR,CAAY,8CAAZ,EAA4DuE,GAA5D;;AANK,2CAOIlD,CAPJ;AAQH,sBAAI,CAAC,OAAI,CAACkP,MAAL,CAAYe,IAAZ,CAAiB,UAACC,GAAD;AAAA,2BAAShN,GAAG,CAAClD,CAAD,CAAH,CAAOmQ,QAAP,CAAgBD,GAAhB,CAAT;AAAA,mBAAjB,CAAL,EAAsD;AACpD,wBAAIE,SAAS,GAAG,OAAI,CAACT,IAAL,GAAYK,EAAZ,CAAehQ,CAAf,EAAkBL,GAAlB,CAAsBuD,GAAG,CAAClD,CAAD,CAAzB,EAA8BQ,KAA9C;;AACA9B,2BAAO,CAACC,GAAR,CAAY,WAAZ,EAAyByR,SAAzB;;AACA,wBAAIxP,IAAI,GAAG,OAAI,CAACgP,QAAL,CAAcK,IAAd,CAAmB,UAACI,GAAD,EAAS;AACrC,0BAAIA,GAAG,CAAC/P,GAAJ,IAAW8P,SAAf,EAA0B;AACxB1R,+BAAO,CAACC,GAAR,CAAY,KAAZ,EAAmB0R,GAAnB;AAEA,+BAAOA,GAAP;AACD;AACF,qBANU,CAAX;;AAOA,wBAAID,SAAS,IAAI,EAAjB,EAAqB;AACnB,0BAAIA,SAAS,IAAI,KAAjB,EAAwB;AACtB,4BAAI/P,OAAK,GAAG,OAAI,CAACb,GAAL,GAAWW,MAAvB;;AACA,+BAAI,CAACZ,SAAL;;AACAb,+BAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBiC,IAApB;;AAEA,+BAAI,CAACpB,GAAL,GAAWU,QAAX,CAAoBG,OAApB,EAA2BV,GAA3B,CAA+B,MAA/B,EAAuC0C,QAAvC,CAAgDzB,IAAI,CAACX,IAArD;;AACA,+BAAI,CAACT,GAAL,GAAWU,QAAX,CAAoBG,OAApB,EAA2BV,GAA3B,CAA+B,QAA/B,EAAyC0C,QAAzC,CAAkDzB,IAAI,CAACmG,MAAvD;;AACA,+BAAI,CAACvH,GAAL,GAAWU,QAAX,CAAoBG,OAApB,EAA2BV,GAA3B,CAA+B,SAA/B,EAA0C0C,QAA1C,CAAmDzB,IAAI,CAACN,GAAxD;AACD;AACF;AACF;AA7BE;;AAOL,qBAAK,IAAIN,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGkD,GAAG,CAAC/C,MAAJ,GAAa,CAAjC,EAAoCH,CAAC,EAArC,EAAyC;AAAA,wBAAhCA,CAAgC;AAuBxC;AA9BI;AA+BN;AACF;;;iBACD,wBAAe;AACb,gBAAIK,KAAK,GAAG,KAAKb,GAAL,GAAWW,MAAvB;AACA,iBAAKX,GAAL,GAAWY,QAAX,CAAoBC,KAAK,GAAG,CAA5B;AACD;;;iBACD,qBAAYuB,KAAZ,EAAmB;AACjB,gBAAI0O,CAAC,GAAGnN,MAAM,CAACC,IAAP,CAAY,KAAK+L,WAAL,CAAiB3O,KAA7B,CAAR;AACA9B,mBAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBiD,KAArB,EAFiB,CAGjB;AACA;AACA;AAEA;AACD;;;iBAED,yBAAgB;AAAA;;AACd,iBAAKvI,eAAL,CAAqBkX,aAArB,GAAqCnS,SAArC,CAA+C,UAACuC,GAAD,EAAc;AAC3D,qBAAI,CAAC6P,WAAL,GAAmB7P,GAAG,CAACC,IAAvB;AACAlC,qBAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgC,OAAI,CAAC6R,WAArC;AACD,aAHD;AAID;;;iBACD,6BAAoB;AAAA;;AAClB,iBAAKnX,eAAL,CAAqB0F,iBAArB,GAAyCX,SAAzC,CAAmD,UAACuC,GAAD,EAAc;AAC/D,qBAAI,CAACE,WAAL,GAAmBF,GAAG,CAACC,IAAvB;AACD,aAFD;AAGD;;;iBACD,2BAAkB;AAAA;;AAChB,iBAAKvH,eAAL,CAAqByF,eAArB,GAAuCV,SAAvC,CAAiD,UAACuC,GAAD,EAAc;AAC7D,qBAAI,CAACvG,aAAL,GAAqBuG,GAAG,CAACC,IAAzB;AACD,aAFD;AAGD;;;iBACD,kBAAS6P,GAAT,EAAc;AACZ/R,mBAAO,CAACC,GAAR,CAAY,aAAZ,EAA2B8R,GAA3B;;AACA,gBAAIA,GAAG,CAACpQ,KAAJ,IAAa,CAAjB,EAAoB;AAClB,mBAAKqQ,QAAL;AACD;;AACD,gBAAID,GAAG,CAACpQ,KAAJ,IAAa,CAAjB,EAAoB;AAClB,mBAAK8O,WAAL,CAAiBzO,sBAAjB;AACA,mBAAKiQ,UAAL;AACD;AACF;;;iBACD,kBAAS;AAAA;;AACPjS,mBAAO,CAACC,GAAR,CAAY,WAAZ,EAAyB,KAAKwQ,WAAL,CAAiB3O,KAA1C;;AACA,gBAAI,KAAKjC,EAAL,IAAW,MAAf,EAAuB;AACrB,kBAAMqC,IAAI,GAAG;AACX6O,2BAAW,EAAE,C,kBAEN,KAAKN,WAAL,CAAiB3O,K,CAFX;AADF,eAAb;AAOA,mBAAKnH,eAAL,CACGuX,oBADH,CACwB,KAAKrS,EAD7B,EACiCqC,IADjC,EAEGxC,SAFH,CAEa,UAACuC,GAAD,EAAS;AAClBjC,uBAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBgC,GAAnB;;AACA,uBAAI,CAAClH,MAAL,CAAYuK,QAAZ,CAAqB,CAAC,cAAD,CAArB,EAFkB,CAGlB;;;AACA,mEAAKJ,IAAL,CAAU;AACRC,uBAAK,EAAE,qBADC;AAERC,mCAAiB,EAAE,KAFX;AAGRC,uBAAK,EAAE;AAHC,iBAAV;;AAKA,uBAAI,CAACtK,MAAL,CAAYuK,QAAZ,CAAqB,CAAC,cAAD,CAArB;AACD,eAZH;AAaD,aArBD,MAqBO;AACL,kBAAMpD,MAAI,GAAG;AACX6O,2BAAW,EAAE,C,kBAEN,KAAKN,WAAL,CAAiB3O,K,CAFX;AADF,eAAb;AAOA,mBAAKnH,eAAL,CAAqBwX,iBAArB,CAAuCjQ,MAAvC,EAA6CxC,SAA7C,CAAuD,UAACuC,GAAD,EAAS;AAC9DjC,uBAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBgC,GAAnB;AACA,mEAAKiD,IAAL,CAAU;AACRC,uBAAK,EAAE,qBADC;AAERC,mCAAiB,EAAE,KAFX;AAGRC,uBAAK,EAAE;AAHC,iBAAV,EAF8D,CAO9D;;AACA,uBAAI,CAACtK,MAAL,CAAYuK,QAAZ,CAAqB,CAAC,cAAD,CAArB;AACD,eATD;AAUAtF,qBAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBiC,MAApB;AACD;;AACD,iBAAKuO,WAAL,CAAiBjF,KAAjB;AACD;;;iBACD,0BAAiB;AAAA;;AACf,iBAAK7Q,eAAL,CACGyX,4BADH,GAEG1S,SAFH,CAEa,UAACuC,GAAD,EAAc;AACvB,qBAAI,CAACoQ,WAAL,GAAmBpQ,GAAG,CAACC,IAAvB;AACAlC,qBAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BgC,GAA3B,EAFuB,CAGvB;AACA;AAEA;AACA;AACA;AAEA;AACA;AACD,aAdH;AAeD;;;iBACD,gBAAI;AACF,mBAAO,KAAKwO,WAAL,CAAiBxP,GAAjB,CAAqB,oBAArB,CAAP;AACD;;;iBACD,oBAAWU,KAAX,EAAgB;AACd,mBAAO,KAAKlH,EAAL,CAAQqC,KAAR,qBACJ,KAAKoU,QAAL,CAAcvP,KAAd,EAAqBC,GADjB,EACuB,CAAC,EAAD,CADvB,EAAP;AAGD;;;iBACD,uBAAc;AAAA;;AACZ,iBAAKjH,eAAL,CAAqB2X,yBAArB,GAAiD5S,SAAjD,CAA2D,UAACuC,GAAD,EAAc;AACvE,qBAAI,CAACiP,QAAL,GAAgBjP,GAAG,CAACC,IAApB;AACAlC,qBAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB,OAAI,CAACiR,QAA7B,EAFuE,CAIvE;;AAEA,mBAAK,IAAIvP,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG,OAAI,CAACuP,QAAL,CAAczP,MAA1C,EAAkDE,KAAK,EAAvD,EAA2D;AACzD;AAEA,uBAAI,CAACsP,IAAL,GAAYlQ,IAAZ,CAAiB,OAAI,CAACwR,UAAL,CAAgB5Q,KAAhB,CAAjB,EAHyD,CAIzD;;AACD;;AACD3B,qBAAO,CAACC,GAAR,CAAY,OAAI,CAACwQ,WAAL,CAAiB3O,KAA7B;AACD,aAbD;AAcD;;;iBACD,yBAAgBH,KAAhB,EAAuB;AAAA;;;;AACrB,gBAAIG,KAAJ;AACAA,iBAAK,GAAG,CAAH,KAAG,KAAKoP,QAAL,MAAa,IAAb,IAAa,aAAb,GAAa,MAAb,GAAa,GAAEK,IAAF,CAAO,UAACC,GAAD,EAAS;;;AACnC,qBAAO,CAAAA,GAAG,SAAH,IAAAA,GAAG,WAAH,GAAG,MAAH,GAAAA,GAAG,CAAEgB,UAAL,MAAe,MAAI,OAAI,CAACH,WAAL,CAAiB1Q,KAAjB,CAAJ,MAA2B,IAA3B,IAA2B,aAA3B,GAA2B,MAA3B,GAA2B,GAAEC,GAA5C,CAAP;AACD,aAFoB,CAArB;AAGA,mBAAOE,KAAK,IAAI,IAAhB;AACD;;;iBACD,uBAAc;AAAA;;AACZ,iBAAKnH,eAAL,CAAqBgG,WAArB,GAAmCjB,SAAnC,CAA6C,UAACuC,GAAD,EAAc;AACzD,qBAAI,CAACoC,KAAL,GAAapC,GAAG,CAACC,IAAjB;AACAlC,qBAAO,CAACC,GAAR,CAAY,KAAZ,EAAmB,OAAI,CAACoE,KAAxB;AACD,aAHD;AAID;;;;;;;yBAjaU8L,uB,EAAuB,2H,EAAA,iK,EAAA,yJ,EAAA,wK,EAAA,uH,EAAA,+H,EAAA,yH;AAAA,O;;;cAAvBA,uB;AAAuB,4C;AAAA,iB;AAAA,e;AAAA,upe;AAAA;AAAA;ACpBpC;;AACA;;AAEA;;AACE;;AACE;;AAAiB;;AAAgB;;AACnC;;AAkCA;;AAAe;AAAA,qBAAqB,IAAAsC,QAAA,QAArB;AAAqC,aAArC;;AACb;;AACE;;AAohDF;;AACA;;AACE;;AA6GF;;AACF;;AAGA;;AAA4F;AAAA,qBAAS,IAAApD,MAAA,EAAT;AAAiB,aAAjB;;AAE1F;;AACF;;AACF;;;;AArrDsC;;AACA;;AAAA;;AAEA;;AAAA;;AA2C/B;;AAAA;;AAshDA;;AAAA;;AA6GuD;;AAAA;;;;;;;;;wED7pDjDc,uB,EAAuB;gBALnC,uDAKmC;iBALzB;AACT7J,oBAAQ,EAAE,qBADD;AAETC,uBAAW,EAAE,kCAFJ;AAGTC,qBAAS,EAAE,CAAC,kCAAD;AAHF,W;AAKyB,U;;;;;;;;;;;;;;;;;;;;;;;;;;AEnBpC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACOM;;AAAuD;;AAAI;;;;;;AAC3D;;AAAuC;;AAAiB;;;;;;AAAjB;;AAAA;;;;;;AAO3C;;AAAuD;;AAAU;;;;;;AACjE;;AAAwC;;AAAyB;;AAAiB;;AAAQ;;;;;;AAAzB;;AAAA;;;;;;AAGjE;;AAAuC;;AAAe;;;;;;AACtD;;AAA0C;;AAIxC;;AAAsB;;AAAK;;AAC3B;;AAAuB;;AAAM;;AAC7B;;AAAuB;;AAAO;;AAC9B;;AAAyB;;AAAQ;;AACjC;;AAA2B;;AAAW;;AACtC;;AAAuB;;AAAM;;AAC7B;;AAAwB;;AAAQ;;AAClC;;AAAS;;;;;;AAGT;;AAAuC;;AAAe;;;;;;AACtD;;AAA0C;;AAA8D;;;;;;AAIxG;;AAAuC;;AAAO;;;;;;;;AAC9C;;AAUA;;AACE;;AACE;;AACF;;AACA;;AAA6B;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAC3B;;AACF;;AACA;;AACF;;;;;;AAPgC;;AAAA;;;;;;AAY9B;;;;;;AACA;;;;;;;;UDhDSkM,c;AA4BX,gCACSC,MADT,EAEUC,OAFV,EAGS7X,MAHT,EAIUF,QAJV,EAImC;AAAA;;AAH1B,eAAA8X,MAAA,GAAAA,MAAA;AACC,eAAAC,OAAA,GAAAA,OAAA;AACD,eAAA7X,MAAA,GAAAA,MAAA;AACC,eAAAF,QAAA,GAAAA,QAAA;AA5BV,eAAAgY,IAAA,GAAO,CAAP;AACA,eAAAC,QAAA,GAAW,EAAX;AACA,eAAAC,cAAA,GAAiB,EAAjB;AACA,eAAAC,YAAA,GAAe,CACb;AAAErR,iBAAK,EAAE,CAAT;AAAYwD,iBAAK,EAAE,kBAAnB;AAAuC8N,gBAAI,EAAE,CAAC,4BAA0B,MAA3B;AAA7C,WADa,EAIb;AAAEtR,iBAAK,EAAE,CAAT;AAAYwD,iBAAK,EAAE,sBAAnB;AAA2C8N,gBAAI,EAAE,CAAC,8BAA4B,MAA7B;AAAjD,WAJa,EAKb;AAAEtR,iBAAK,EAAE,CAAT;AAAYwD,iBAAK,EAAE,cAAnB;AAAmC8N,gBAAI,EAAE,CAAC,8BAA4B,MAA7B;AAAzC,WALa,EAMb;AAAEtR,iBAAK,EAAE,CAAT;AAAYwD,iBAAK,EAAE,iBAAnB;AAAsC8N,gBAAI,EAAE,CAAC,8BAA4B,MAA7B;AAA5C,WANa,EAOb;AAAEtR,iBAAK,EAAE,CAAT;AAAYwD,iBAAK,EAAE,iBAAnB;AAAsC8N,gBAAI,EAAE,CAAC,iCAA+B,MAAhC;AAA5C,WAPa,CAAf;AASA,eAAAC,QAAA,GAAW,EAAX,CAgBmC,CAdnC;;AACA,eAAA/G,gBAAA,GAA6B,CAAC,OAAD,EAAU,UAAV,EAAsB,eAAtB,EAAuC,gBAAvC,EAAyD,MAAzD,CAA7B;AACA,eAAAY,UAAA,GAAa,IAAI,0EAAJ,CAAuB,KAAKiG,YAA5B,CAAb;AAaK;;;;iBAVL,2BAAkB;AAChB,iBAAKjG,UAAL,CAAgBC,SAAhB,GAA4B,KAAKA,SAAjC;AACA,iBAAKD,UAAL,CAAgBE,IAAhB,GAAuB,KAAKA,IAA5B;AACD;;;iBAQH,cAAK9H,KAAL,EAAU;AAERnF,mBAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBkF,KAApB;;AACA,gBAAGA,KAAK,KAAG,cAAX,EACA;AACE,mBAAKpK,MAAL,CAAYuK,QAAZ,CAAqB,CAAC,wBAAD,CAArB;AACD;;AACD,gBAAGH,KAAK,KAAG,iBAAX,EACA;AACE,mBAAKpK,MAAL,CAAYuK,QAAZ,CAAqB,CAAC,kCAAD,CAArB;AACD;;AACD,gBAAGH,KAAK,KAAG,kBAAX,EACA;AACE,mBAAKpK,MAAL,CAAYuK,QAAZ,CAAqB,CAAC,0BAAD,CAArB;AAEH;;AACD,gBAAGH,KAAK,KAAG,sBAAX,EACE;AACE,mBAAKpK,MAAL,CAAYuK,QAAZ,CAAqB,CAAC,6BAAD,CAArB;AACD;;AACD,gBAAGH,KAAK,KAAG,iBAAX,EACA;AACE,mBAAKpK,MAAL,CAAYuK,QAAZ,CAAqB,CAAC,8BAAD,CAArB;AACD;AACF;;;iBAEC,oBAAQ;AAEN,iBAAKzK,QAAL,CAAcA,QAAd,CAAuB,cAAvB;AACD;;;;;;;yBA/DU6X,c,EAAc,mI,EAAA,8H,EAAA,uH,EAAA,yJ;AAAA,O;;;cAAdA,c;AAAc,kC;AAAA;AAAA;sEAEd,8D,EAAO,I;;sEAmBP,wE,EAAY,I;;;;;;;;;;;;;;;ACtCzB;;AACA;;AAAK;;AAAU;;AACf;;AACA;;AACE;;AAGE;;AACE;;AACA;;AACF;;AAKJ;;AACE;;AACA;;AACF;;AACA;;AACE;;AACA;;AAYF;;AACA;;AACE;;AACA;;AACF;;AAEC;;AACC;;AACA;;AAmBF;;AAII;;AACA;;AACF;;AAEA;;AAIF;;;;AApEmB;;AAAA;;AA4DK;;AAAA;;AACa;;AAAA;;AAGpB;;AAAA;;;;;;;;;wEDnDJA,c,EAAc;gBAL1B,uDAK0B;iBALhB;AACTpM,oBAAQ,EAAE,WADD;AAETC,uBAAW,EAAE,wBAFJ;AAGTC,qBAAS,EAAE,CAAC,wBAAD;AAHF,W;AAKgB,U;;;;;;;;;;;AAELyG,cAAI,EAAE,CAAF;kBAAvB,uDAAuB;mBAAb,8D;AAAa,WAAE,C;AAmBDD,mBAAS,EAAE,CAAF;kBAAjC,uDAAiC;mBAAvB,wE;AAAuB,WAAE;;;;;;;;;;;AEtCtC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACSU;;AAAuD;;AAAI;;;;;;AAC3D;;AAAmD;;AAAmB;;;;;;AAAnB;;AAAA;;;;;;AAOvD;;AAAuD;;AAAK;;;;;;AAC5D;;AAAuC;;AAAwB;;;;;;AAAxB;;AAAA;;;;;;AAGvC;;AAAuC;;AAAK;;;;;;AAC5C;;AAAuC;;AAAqB;;;;;;AAArB;;AAAA;;;;;;AAGvC;;AAAsC;;AAAK;;;;;;AAC3C;;AAAwC;;AAAsB;;;;;;AAAtB;;AAAA;;;;;;AAGtC;;AAAsC;;AAAS;;;;;;AAC/C;;AAAwC;;AAAqB;;;;;;AAArB;;AAAA;;;;;;AAG1C;;AAAuC;;AAAO;;;;;;;;AAC9C;;AAUA;;AACE;;AAA+C;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAC3C;;AACJ;;AACA;;AAAiD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAC7C;;AACJ;;AACA;;AACF;;;;;;AAEE;;;;;;AACA;;;;;;;;;;;;UD3CKmG,qB;AAMX,uCAAoBxY,eAApB,EAAmEI,MAAnE,EAAmF;AAAA;;AAA/D,eAAAJ,eAAA,GAAAA,eAAA;AAA+C,eAAAI,MAAA,GAAAA,MAAA;AALnE,eAAAoR,gBAAA,GAA6B,CAAC,UAAD,EAAY,MAAZ,EAAmB,OAAnB,EAA2B,OAA3B,EAAmC,MAAnC,EAA0C,QAA1C,CAA7B;AAKsF;;;;iBAEtF,oBAAQ;AACN,iBAAKiH,UAAL;AACD;;;iBACD,2BAAkB,CAChB;AACA;AACD;;;iBACD,iBAAOvT,EAAP,EAAS;AAAA;;AAEP,iBAAKlF,eAAL,CAAqB0Y,aAArB,CAAmCxT,EAAnC,EAAuCH,SAAvC,CAAiD,UAACuC,GAAD,EAAO;AACtDjC,qBAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBgC,GAAtB;;AACA,qBAAI,CAACmR,UAAL;AACD,aAHD;AAID;;;iBACD,sBAAU;AAAA;;AAER,iBAAKzY,eAAL,CAAqB2Y,UAArB,GAAkC5T,SAAlC,CAA4C,UAACuC,GAAD,EAAW;AAErD,qBAAI,CAAC4K,SAAL,GAAgB5K,GAAG,CAACC,IAApB;;AACA,qBAAI,CAAC2K,SAAL,CAAehL,OAAf,CAAuB,UAACiL,OAAD,EAASxL,CAAT,EAAe;AACpC,uBAAO,OAAI,CAACuL,SAAL,CAAevL,CAAf,EAAkBK,KAAlB,GAAyBL,CAAhC;AACD,eAFD;;AAGA,qBAAI,CAACiS,SAAL,GAAiB,IAAI,0EAAJ,CAA4B,OAAI,CAAC1G,SAAjC,CAAjB;AACA,qBAAI,CAAC0G,SAAL,CAAevG,SAAf,GAA2B,OAAI,CAACA,SAAhC;AACA,qBAAI,CAACuG,SAAL,CAAetG,IAAf,GAAsB,OAAI,CAACA,IAA3B;AACAjN,qBAAO,CAACC,GAAR,CAAY,SAAZ,EAAsB,OAAI,CAAC4M,SAA3B;AACD,aAVD;AAWD;;;iBACD,cAAKhN,EAAL,EAAO;AAEL,iBAAK9E,MAAL,CAAYuK,QAAZ,CAAqB,CAAC,8BAA4BzF,EAA7B,CAArB;AACD;;;;;;;yBAvCUsT,qB,EAAqB,wK,EAAA,uH;AAAA,O;;;cAArBA,qB;AAAqB,0C;AAAA;AAAA;sEAIrB,wE,EAAY,I;;sEACZ,8D,EAAO,I;;;;;;;;;;;;;;;ACjBpB;;AAAqE;;AAAmD;;AACxH;;AACI;;AAAK;;AAAiB;;AACtB;;AACA;;AACE;;AAGE;;AACE;;AACA;;AACF;;AAKJ;;AACE;;AACA;;AACF;;AACA;;AACE;;AACA;;AACF;;AACA;;AACE;;AACA;;AACF;;AACA;;AACI;;AACA;;AACF;;AACD;;AACC;;AACA;;AAmBF;;AACI;;AACA;;AACF;;AAEA;;AAIF;;;;AA9DiC;;AAKd;;AAAA;;AAiDK;;AAAA;;AACa;;AAAA;;AAGpB;;AAAA;;;;;;;;;wED9CRA,qB,EAAqB;gBALjC,uDAKiC;iBALvB;AACT7M,oBAAQ,EAAE,mBADD;AAETC,uBAAW,EAAE,gCAFJ;AAGTC,qBAAS,EAAE,CAAC,gCAAD;AAHF,W;AAKuB,U;;;;;;;AAIPwG,mBAAS,EAAE,CAAF;kBAAjC,uDAAiC;mBAAvB,wE;AAAuB,WAAE,C;AAChBC,cAAI,EAAE,CAAF;kBAAvB,uDAAuB;mBAAb,8D;AAAa,WAAE;;;;;;;;;;;AEjB5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACSU;;AAAuD;;AAAI;;;;;;AAC3D;;AAAmD;;AAAmB;;;;;;AAAnB;;AAAA;;;;;;AAOvD;;AAAuD;;AAAK;;;;;;AAC5D;;AAAuC;;AAAwB;;;;;;AAAxB;;AAAA;;;;;;AAGvC;;AAAuC;;AAAK;;;;;;AAC5C;;AAAuC;;AAAqB;;;;;;AAArB;;AAAA;;;;;;AAGvC;;AAAsC;;AAAK;;;;;;AAC3C;;AAAwC;;AAAsB;;;;;;AAAtB;;AAAA;;;;;;AAGtC;;AAAsC;;AAAS;;;;;;AAC/C;;AAAwC;;AAAqB;;;;;;AAArB;;AAAA;;;;;;AAG1C;;AAAuC;;AAAO;;;;;;;;AAC9C;;AAUA;;AACE;;AAA+C;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAC3C;;AACJ;;AACA;;AAAgD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAC9C;;AACJ;;AACE;;AAAiD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAC7C;;AACJ;;AACA;;AACF;;;;;;AAEE;;;;;;AACA;;;;;;;;;;;;UD9CKuG,2B;AAMX,6CAAoB7Y,eAApB,EAAmEI,MAAnE,EAAmF;AAAA;;AAA/D,eAAAJ,eAAA,GAAAA,eAAA;AAA+C,eAAAI,MAAA,GAAAA,MAAA;AALnE,eAAAoR,gBAAA,GAA6B,CAAC,UAAD,EAAY,MAAZ,EAAmB,OAAnB,EAA2B,OAA3B,EAAmC,MAAnC,EAA0C,QAA1C,CAA7B;AAKsF;;;;iBAEtF,oBAAQ;AACN,iBAAKiH,UAAL;AACD;;;iBACD,2BAAkB,CAChB;AACA;AACD;;;iBACD,iBAAOvT,EAAP,EAAS;AAAA;;AAEP,iBAAKlF,eAAL,CAAqB8Y,gBAArB,CAAsC5T,EAAtC,EAA0CH,SAA1C,CAAoD,UAACuC,GAAD,EAAO;AACzDjC,qBAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBgC,GAAtB;;AACA,qBAAI,CAACmR,UAAL;AACD,aAHD;AAID;;;iBACD,mBAAUvT,EAAV,EAAY;AAEVG,mBAAO,CAACC,GAAR,CAAY,OAAZ,EAFU,CAGV;;AACAyT,wBAAY,CAACC,OAAb,CAAqB,KAArB,EAA2B,OAA3B;AACAC,aAAC,CAAC,UAAD,CAAD,CAA0C;AAA1C,aACKC,IADL,GAC0C;AAD1C,aAEKC,IAFL,CAEU,KAFV,EAEiB,wDAAsDjU,EAFvE,EAE2E;AAF3E,aAGKkU,QAHL,CAGc,MAHd,EALU,CAQgC;AAE3C;;;iBACD,sBAAU;AAAA;;AAER,iBAAKpZ,eAAL,CAAqBqZ,eAArB,GAAuCtU,SAAvC,CAAiD,UAACuC,GAAD,EAAW;AAE1D,qBAAI,CAAC4K,SAAL,GAAgB5K,GAAG,CAACC,IAApB;;AACA,qBAAI,CAAC2K,SAAL,CAAehL,OAAf,CAAuB,UAACiL,OAAD,EAASxL,CAAT,EAAe;AACpC,uBAAO,OAAI,CAACuL,SAAL,CAAevL,CAAf,EAAkBK,KAAlB,GAAyBL,CAAhC;AACD,eAFD;;AAIA,qBAAI,CAACiS,SAAL,GAAiB,IAAI,0EAAJ,CAA4B,OAAI,CAAC1G,SAAjC,CAAjB;AACA,qBAAI,CAAC0G,SAAL,CAAevG,SAAf,GAA2B,OAAI,CAACA,SAAhC;AACA,qBAAI,CAACuG,SAAL,CAAetG,IAAf,GAAsB,OAAI,CAACA,IAA3B;AACAjN,qBAAO,CAACC,GAAR,CAAY,SAAZ,EAAsB,OAAI,CAAC4M,SAA3B;AACD,aAXD;AAYD;;;iBACD,cAAKhN,EAAL,EAAO;AAEL6T,wBAAY,CAACC,OAAb,CAAqB,KAArB,EAA2B,GAA3B;AACA,iBAAK5Y,MAAL,CAAYuK,QAAZ,CAAqB,CAAC,iCAA+BzF,EAAhC,CAArB;AACD;;;;;;;yBApDU2T,2B,EAA2B,wK,EAAA,uH;AAAA,O;;;cAA3BA,2B;AAA2B,iD;AAAA;AAAA;sEAI3B,wE,EAAY,I;;sEACZ,8D,EAAO,I;;;;;;;;;;;;;;;ACjBpB;;AAAqE;;AAAmD;;AACxH;;AACI;;AAAK;;AAAqB;;AAC1B;;AACA;;AACE;;AAGE;;AACE;;AACA;;AACF;;AAKJ;;AACE;;AACA;;AACF;;AACA;;AACE;;AACA;;AACF;;AACA;;AACE;;AACA;;AACF;;AACA;;AACI;;AACA;;AACF;;AACD;;AACC;;AACA;;AAsBF;;AACI;;AACA;;AACF;;AAEA;;AAIF;;;;AAjEiC;;AAKd;;AAAA;;AAoDK;;AAAA;;AACa;;AAAA;;AAGpB;;AAAA;;;;;;;;;wEDjDRA,2B,EAA2B;gBALvC,uDAKuC;iBAL7B;AACTlN,oBAAQ,EAAE,0BADD;AAETC,uBAAW,EAAE,uCAFJ;AAGTC,qBAAS,EAAE,CAAC,uCAAD;AAHF,W;AAK6B,U;;;;;;;AAIbwG,mBAAS,EAAE,CAAF;kBAAjC,uDAAiC;mBAAvB,wE;AAAuB,WAAE,C;AAChBC,cAAI,EAAE,CAAF;kBAAvB,uDAAuB;mBAAb,8D;AAAa,WAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEjB5B;;AAA0F;;AAAmD;;;;AAAnF;;;;;;;;;;AAC1D;;AAAyG;;AAAmD;;;;AAAnG;;;;;;AAGzD;;AACE;;AACF;;;;;;AACA;;AACE;;AACF;;;;;;AAqEY;;AAMH;;AAAsB;;;;;;AAiBf;;AAIA;;AACF;;;;;;AAkBE;;AAIA;;AACF;;;;;;AAgBE;;AAIA;;AACF;;;;;;AAgBE;;AAIA;;AACF;;;;;;AAeA;;AAAyD;;AAAe;;;;;;AAAhE;;AAAiD;;AAAA;;;;;;AAYzD;;AAIA;;AACF;;;;;;AAmBI;;AAIA;;AACF;;;;;;AAiBE;;AAIA;;AACF;;;;;;AAkBE;;AAIA;;AACF;;;;;;AAgBE;;AAAgE;;AAAmB;;;;;;AAA3E;;AAAwD;;AAAA;;;;;;AAGlE;;AAIA;;AACF;;;;;;AAeM;;AAA4D;;AAAc;;;;;;AAAlE;;AAAoD;;AAAA;;;;;;AAG9D;;AAIA;;AACF;;;;;;;;AAwBA;;AACE;;AAIE;;AAKE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AALF;;AAQA;;AAAuD;;AAErD;;AAEJ;;AACF;;;;;;;;AAlByE;;AAWnE;;AAAA;;AAJA,uFAAa,OAAb,EAAa,8BAAb;;AAMK;;AAAA;;AAAgD;;AAAA;;;;;;;;AAgH3D;;AAIE;;AAKE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AALF;;AASA;;AAAyD;;AAEvD;;AACJ;;;;;;;;AAfkE;;AAO9D;;AAAA;;AAFA,wFAAc,SAAd,EAAc,sBAAd;;AAOM;;AAAA;;AAAiD;;AAAA;;;;;;;;AAY7D;;AAIE;;AAKE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AALF;;AASA;;AAA0D;;AAExD;;AACJ;;;;;;;;AAfsD;;AASlD;;AAAA;;AAJA,yFAAe,SAAf,EAAe,qBAAf;;AAOuC;;AAAA;;AAAiB;;AAAA;;;;;;;;AAa5D;;AAIE;;AAKE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AALF;;AASA;;AAAyD;;AAEvD;;AACJ;;;;;;;;AAf0D;;AAStD;;AAAA;;AAJA,wFAAc,SAAd,EAAc,yBAAd;;AAOuC;;AAAA;;AAAgB;;AAAA;;;;;;AAwBrD;;AAIA;;AACF;;;;;;AAeA;;AAIF;;AAAsB;;;;;;AA2BlB;;AAMF;;AAAgB;;;;;;AAsChB;;AAMH;;AAAsB;;;;;;AAiBnB;;AAIA;;AACF;;;;;;AAgBE;;AAIA;;AACF;;;;;;AAgBE;;AAIA;;AACF;;;;;;AAaE;;AAIA;;AACF;;;;;;AAeE;;AAAyD;;AAAe;;;;;;AAAhE;;AAAiD;;AAAA;;;;;;AAE3D;;AAIA;;AACF;;;;;;AAgBI;;AAIA;;AACF;;;;;;AAgBE;;AAIA;;AACF;;;;;;AAgBE;;AAIA;;AACF;;;;;;AAgBA;;AAAgE;;AAAmB;;;;;;AAA3E;;AAAwD;;AAAA;;;;;;AAGlE;;AAIA;;AACF;;;;;;AAiBQ;;AAA4D;;AAAc;;;;;;AAAlE;;AAAoD;;AAAA;;;;;;AAG9D;;AAIJ;;AACF;;;;;;AAkBM;;AAAyD;;AAAM;;;;;;AAC/D;;AAAiF;;AAAsB;;;;;;AAA/F;;AAAyE;;AAAA;;;;;;AAGnF;;AAIC;;AACD;;;;;;AAaE;;AAAoD;;AAAM;;;;;;AAC1D;;AAEE;;AACF;;;;;;AAHQ;;AAEN;;AAAA;;;;;;AAGJ;;AAIE;;AACF;;;;;;AAgBE;;AAAwD;;AAAM;;;;;;AAC9D;;AAAwE;;AAAmB;;;;;;AAAnF;;AAAgE;;AAAA;;;;;;AAE1E;;AAIE;;AACF;;;;;;AAKN;;AAAkC;;AAAiB;;;;;;AAKjD;;AAIE;;AAQA;;AAAwD;;AAEtD;;AACJ;;;;;;;AATI;;AAAA,wFAAc,SAAd,EAAc,IAAd;;AAMK;;AAAA;;AAAiD;;AAAA;;;;;;;;AAQ1D;;AAIE;;AAKE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AALF;;AASA;;AAAyD;;AAEvD;;AACJ;;;;;;;;AAfmE;;AAO/D;;AAAA;;AAFA,wFAAc,SAAd,EAAc,sBAAd;;AAOM;;AAAA;;AAAiD;;AAAA;;;;;;;;AAyG3D;;AAIE;;AAME;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AANF;;AASA;;AAA0D;;AAExD;;AACJ;;;;;;;;AAfuD;;AAQnD;;AAAA;;AAHA,yFAAe,SAAf,EAAe,qBAAf;;AAOuC;;AAAA;;AAAiB;;AAAA;;;;;;AAwBtD;;AAA+C;;AAAM;;;;;;AAEnD;;AACE;;AACF;;;;;;AADE;;AAAA;;;;;;AAGJ;;AAIA;;AACF;;;;;;AAkBM;;AAIJ;;AACF;;;;;;AAiBI;;AAAyD;;AAAM;;;;;;AAIjE;;AAIA;;AACF;;;;;;AAiBM;;AAIJ;;AACF;;;;;;AAiBE;;AAIA;;AACF;;;;;;;;AAvHF;;AACE;;AACE;;AACE;;AACG;;AAAgB;;AACS;AAAA;;AAAA;;AAAA;AAAA;;AAAyB;;AAAkB;;AAAO;;AAE9E;;AAQF;;AAEE;;AAGF;;AACA;;AAMA;;AACF;;AACA;;AACE;;AACE;;AACG;;AAAQ;;AAEX;;AAUE;;AAMJ;;AACF;;AACA;;AACE;;AACE;;AACG;;AAAS;;AAEZ;;AASA;;AACA;;AAAoB;;AAAG;;AACvB;;AAAmB;;AAAE;;AACvB;;AACA;;AAMA;;AACF;;AACA;;AACE;;AACE;;AACG;;AAAG;;AAEN;;AASE;;AAMJ;;AACF;;AACA;;AACE;;AACE;;AACG;;AAAW;;AAEd;;AASF;;AAMA;;AACF;;AACA;;AACE;;AACE;;AAAyC;;AAAgB;;AACzD;;AAA4B;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA5B;;AACF;;AACF;;AACA;;AACE;;AAAqD;AAAA;;AAAA;;AAAA;AAAA;;AAClD;;AACH;;AACA;;AAA6B;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAgC;;AAAsB;;AACrF;;AACF;;;;;;;;;;;;;;;;;;;AAtI+E;;AAYzE;;AAAA;;AAGO;;AAAA;;AAEkB;;AAAA;;AAK1B;;AAAA;;AAmBC;;AAAA;;AAID;;AAAA;;AAkBC;;AAAA;;AAGS;;AAAA;;AAKV;;AAAA;;AAkBG;;AAAA;;AAIH;;AAAA;;AAkBG;;AAAA;;AAIH;;AAAA;;;;;;AAtHT;;AACE;;AAAI;;AAAY;;AAChB;;AACE;;AAuIF;;AACF;;;;;;AAxI0C;;AAAA;;;;;;;;AAiKzB;;AAAiC;;AAAgD;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,uCAAoB,qBAApB,EAAyC,iBAAzC,EAAyC,MAAzC;AAAyC,WAAzC;;AAA4D;;AAAI;;AAAa;;AAAmC;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA,yCAAsB,iBAAtB,EAAuC,iBAAvC,EAAuC,MAAvC,EAAuC,MAAvC;AAAuC,WAAvC;;AAA6D;;AAAM;;AAAa;;;;;;AAHtR;;AACE;;AACG;;AAA4B;;AAAkB;;AAC9C;;AACP;;AACE;;;;;;AAHiC;;AAAA;;AACb;;AAAA;;;;;;AAcpB;;AAA0D;;AAAc;;;;;;AAAjC;;AAAmB;;AAAA;;;;;;;;AAY1D;;AAA+C;;AAAgD;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,uCAAoB,gBAApB,EAAoC,uBAApC,EAAoC,MAApC;AAAoC,WAApC;;AAA4D;;AAAI;;AAAa;;AAAoC;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA,yCAAsB,YAAtB,EAAoC,iBAAF,MAAlC,EAAkC,MAAlC,EAAkC,MAAlC;AAAkC,WAAlC;;AAA6D;;AAAM;;AAA6B;;;;;;AAHhT;;AACE;;AACE;;AAA2B;;AAAuB;;AACtD;;AACF;;AACE;;;;;;AAH+B;;AAAA;;AACT;;AAAA;;;;;;AAkBxB;;AAA8D;;AAAc;;;;;;AAAjC;;AAAmB;;AAAA;;;;;;AAc3D;;AAGE;;AACF;;;;;;AADE;;AAAA;;;;;;;;AA7Eb;;AAKE;;AACE;;AAAI;;AAA6B;;AACnC;;AAEA;;AACE;;AACI;;AAAkB;;AAAgB;;AAAuE;AAAA;;AAAA;;AAAA;;AAAA,oCAAiB,iBAAjB,EAAkC,MAAlC;AAAkC,WAAlC;;AAAwC;;AAAkB;;AAAO;;AAC1K;;AACE;;AAMF;;AACJ;;AACA;;AACE;;AACE;;AAAkB;;AAAI;;AACtB;;AAME;;AACF;;AACF;;AACF;;AAEA;;AAEI;;AAAkB;;AAA2B;;AAAuE;AAAA;;AAAA;;AAAA;;AAAA,oCAAiB,YAAjB,EAA6B,MAA7B;AAA6B,WAA7B;;AAAmC;;AAAkB;;AAAO;;AAChL;;AACE;;AAMF;;AAGJ;;AAED;;AACE;;AACC;;AACE;;AAAkB;;AAAa;;AAC/B;;AAMA;;AAEA;;AACA;;AACF;;AACC;;AAAuC;;AAA+B;;AAAkB;;AACvF;;AACE;;AAOC;;AAKF;;AACD;;AACC;;AACA;;AACP;;AACA;;AACF;;;;;;;;;AA/EQ;;AAAA;;AAOyB;;AAAA;;AASR;;AAAA;;AAQU;;AAAA;;AASI;;AAAA;;AAad;;AAAA;;AAQQ;;AAAA;;AAMpB;;AAAA;;AAKQ;;AAAA;;AAIS;;AAAA;;;;;;AAwExB;;AAIA;;AACF;;;;;;AAcI;;AAIF;;AAAsB;;;;;;;;AAt2CpC;;AACE;;AACE;;AACE;;AAME;;AAAI;;AAAgB;;AACpB;;AACE;;AACE;;AACE;;AACG;;AAAS;;AASZ;;AAIJ;;AAQF;;AACI;;AACE;;AACG;;AAAa;;AAShB;;AAGA;;AAMF;;AACF;;AACA;;AACE;;AACE;;AACG;;AAAa;;AAShB;;AAGA;;AAMF;;AACA;;AACE;;AACG;;AAAc;;AASjB;;AAGA;;AAMF;;AACA;;AACE;;AACG;;AAAM;;AAST;;AAGA;;AAMF;;AACA;;AACE;;AACG;;AAAK;;AAER;;AAQF;;AAAwB;;AAAM;;AAC9B;;AAWA;;AACA;;AAMA;;AACF;;AAEA;;AACE;;AACE;;AACG;;AAAgB;;AASnB;;AAGA;;AAOF;;AACA;;AACE;;AACG;;AAAsB;;AASzB;;AAGA;;AAMF;;AACF;;AACA;;AACE;;AACE;;AACG;;AAAc;;AASjB;;AAGA;;AAOF;;AACA;;AACE;;AACG;;AAAU;;AAEb;;AAIA;AAAA;;AAAA;;AAAA;AAAA;;AAIA;;AAAwB;;AAAM;;AAC9B;;AAEF;;AACA;;AAMA;;AACA;;AACE;;AACG;;AAAe;;AAElB;;AAIE;AAAA;;AAAA;;AAAA,8CAA4B,gBAA5B,EAA4C,MAA5C;AAA4C,WAA5C;;AAIA;;AAAwB;;AAAM;;AAC9B;;AAEF;;AACA;;AAMF;;AACF;;AACA;;AACE;;AACE;;AACG;;AAAI;;AAGP;;AAKJ;;AACA;;AACE;;AACF;;AACA;;AACA;;AACE;;AAAI;;AAAS;;AACf;;AAEA;;AACE;;AAmBF;;AAEA;;AACA;;AACE;;AACE;;AACE;;AACE;;AAA4B;;AAAiB;;AAC7C;;AAA4B;;AAAa;;AAC3C;;AACF;;AACA;;AACE;;AACE;;AACA;;AAAgB;;AAAW;;AAC3B;;AACE;;AAAoB;;AAAU;;AAChC;;AACA;;AACE;;AAAoB;;AAAW;;AACjC;;AACF;;AACA;;AACE;;AAAI;;AAAC;;AACL;;AAAI;;AAAC;;AACL;;AAAI;;AAAC;;AACL;;AAAI;;AAAC;;AACL;;AAAI;;AAAC;;AACP;;AACA;;AACE;;AACE;;AAAoB;;AAAU;;AAChC;;AACA;;AAAI;;AAAC;;AACL;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AACE;;AAAqB;;AAAC;;AACxB;;AACA;;AAAgB;;AAAI;;AACpB;;AACE;;AAAqB;;AAAC;;AACxB;;AACA;;AAAgB;;AAAa;;AAC/B;;AACA;;AACE;;AAAI;;AAAC;;AACL;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAQ;;AACxB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAK;;AACvB;;AACA;;AACE;;AAAI;;AAAC;;AACL;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAQ;;AACxB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAQ;;AAC1B;;AACA;;AACE;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAM;;AACtB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAK;;AACvB;;AACA;;AACE;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAkC;;AAAC;;AACnC;;AAAgB;;AAAc;;AAC9B;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAY;;AAC9B;;AACF;;AACF;;AACF;;AACA;;AAEA;;AACE;;AAAI;;AAAsB;;AAC5B;;AAEA;;AACE;;AAiBF;;AACF;;AACA;;AACA;;AACE;;AAAI;;AAAa;;AACnB;;AAEA;;AACE;;AAiBF;;AAEA;;AAEA;;AACE;;AAAI;;AAA0B;;AAChC;;AAEA;;AACE;;AAiBF;;AAEA;;AACA;;AACE;;AACF;;AAEA;;AACE;;AACE;;AACG;;AAAU;;AAEb;;AACE;;AAOE;;AAMJ;;AACF;;AACA;;AACE;;AACG;;AAAS;;AAEZ;;AACE;;AAEE;AAAA;;AAAA;;AAAA;AAAA,aAA6B,YAA7B,EAA6B;AAAA;;AAAA;;AAAA;AAAA,WAA7B;;AAID;;AACD;;AAMF;;AACA;;AAA6C;AAAA;;AAAA;;AAAA;AAAA;;AAC3C;;AACF;;AACF;;AACA;;AACE;;AACG;;AAAI;;AAEP;;AAMI;;AAGA;AAAA;;AAAA;;AAAA;AAAA;;AAHA;;AAQA;;AACA;;AACA;;AASA;;AACD;;AAAI;;AACL;;AACN;;AAAiC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAwC;;AAGrE;;AACF;;AACF;;AACF;;AACF;;AACF;;AACA;;AACE;;AAOF;;AACE;;AACE;;AACE;;AACE;;AACE;;AACG;;AAAS;;AAEZ;;AAOE;;AAQJ;;AACF;;AACA;;AACE;;AACE;;AACG;;AAAa;;AAEhB;;AAQE;;AAMJ;;AACF;;AACA;;AACE;;AACE;;AACG;;AAAa;;AAEhB;;AAQE;;AAMJ;;AACF;;AACA;;AACE;;AACE;;AACG;;AAAW;;AAEd;;AAQE;;AAMJ;;AACF;;AACA;;AACE;;AACE;;AAA0B;;AAAS;;AACnC;;AAOE;;AAMJ;;AACF;;AACA;;AACE;;AACE;;AAA0B;;AAAK;;AAC/B;;AAQE;;AAAwB;;AAAM;;AAC9B;;AACF;;AACA;;AAMF;;AACF;;AACA;;AACE;;AACE;;AACG;;AAAgB;;AAEnB;;AAQE;;AAMJ;;AACF;;AACA;;AACE;;AACE;;AACG;;AAAsB;;AAEzB;;AAQE;;AAMJ;;AACF;;AACA;;AACE;;AACE;;AACG;;AAAsB;;AAEzB;;AAQE;;AAMJ;;AACF;;AACA;;AACE;;AACE;;AACG;;AAAU;;AAEb;;AAIA;AAAA;;AAAA;;AAAA;AAAA;;AAIA;;AAEF;;AACA;;AAMA;;AACF;;AACA;;AACE;;AACE;;AACG;;AAAe;;AAElB;;AAII;AAAA;;AAAA;;AAAA,8CAA4B,oBAA5B,EAAgD,MAAhD;AAAgD,WAAhD;;AAIA;;AAAwB;;AAAM;;AAC9B;;AAEF;;AACA;;AAMJ;;AACF;;AACF;;AACA;;AACA;;AACE;;AACE;;AACE;;AACG;;AAAY;;AAEf;;AAOE;;AACA;;AAEF;;AACA;;AAMF;;AACF;;AACA;;AACE;;AACE;;AAAQ;;AAAkB;;AAC1B;;AAOE;;AACA;;AAIF;;AACA;;AAMF;;AACF;;AACA;;AACE;;AACE;;AACG;;AAA6B;;AAEhC;;AAQE;;AACA;;AACF;;AACA;;AAMF;;AACF;;AACN;;AACI;;AACA;;AACA;;AAIE;;AAgBF;;AACA;;AACA;;AAAI;;AAAsB;;AAC1B;;AACE;;AAiBF;;AACA;;AACA;;AACE;;AACE;;AACE;;AACE;;AAA4B;;AAAiB;;AAC7C;;AAA4B;;AAAa;;AAC3C;;AACF;;AACA;;AACE;;AACE;;AACA;;AAAgB;;AAAW;;AAC3B;;AACE;;AAAoB;;AAAU;;AAChC;;AACA;;AACE;;AAAoB;;AAAW;;AACjC;;AACF;;AACA;;AACE;;AAAI;;AAAC;;AACL;;AAAI;;AAAC;;AACL;;AAAI;;AAAC;;AACL;;AAAI;;AAAC;;AACL;;AAAI;;AAAC;;AACP;;AACA;;AACE;;AACE;;AAAoB;;AAAU;;AAChC;;AACA;;AAAI;;AAAC;;AACL;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AACE;;AAAqB;;AAAC;;AACxB;;AACA;;AAAgB;;AAAI;;AACpB;;AACE;;AAAqB;;AAAC;;AACxB;;AACA;;AAAgB;;AAAa;;AAC/B;;AACA;;AACE;;AAAI;;AAAC;;AACL;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAQ;;AACxB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAK;;AACvB;;AACA;;AACE;;AAAI;;AAAC;;AACL;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAQ;;AACxB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAQ;;AAC1B;;AACA;;AACE;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAM;;AACtB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAK;;AACvB;;AACA;;AACE;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAkC;;AAAC;;AACnC;;AAAgB;;AAAc;;AAC9B;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAY;;AAC9B;;AACF;;AACF;;AACF;;AACA;;AACA;;AAAI;;AAAa;;AACjB;;AACE;;AAiBF;;AACA;;AACA;;AA8IA;;AACA;;AAGE;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AAsFF;;AACA;;AAyCA;;AACE;;AACF;;AACA;;AACA;;AAAI;;AAA+B;;AACnC;;AACE;;AACE;;AACE;;AACG;;AAAU;;AAEb;;AAQE;;AAMJ;;AACF;;AACA;;AACE;;AACE;;AAAO;;AAAU;;AACjB;;AACE;;AAEE;AAAA;;AAAA;;AAAA;AAAA,aAA6B,YAA7B,EAA6B;AAAA;;AAAA;;AAAA;AAAA,WAA7B;;AAIC;;AACD;;AAOJ;;AACF;;AACA;;AAA6C;AAAA;;AAAA;;AAAA;AAAA;;AAC3C;;AACF;;AACF;;AACF;;AACA;;AACE;;AAA2F;AAAA;;AAAA;;AAAA;AAAA;;AAAqB;;AAAM;;AACxH;;AACF;;AACF;;AAEF;;AAEE;;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAh2CU;;AAAA;;AAF2E;;AAK1E;;AAAA;;AAoBG;;AAAA;;AAD2E;;AAI1E;;AAAA;;AAoBD;;AAAA;;AADuE;;AAItE;;AAAA;;AAkBD;;AAAA;;AADyE;;AAIxE;;AAAA;;AAkBD;;AAAA;;AAGC;;AAAA;;AAeD;;AAAA;;AADA;;AAK4C;;AAAA;;AAa7C;;AAAA;;AAqBC;;AAAA;;AADwE;;AAIvE;;AAAA;;AAmBD;;AAAA;;AAD0E;;AAIzE;;AAAA;;AAoBD;;AAAA;;AADwE;;AAIvE;;AAAA;;AAgBD;;AAAA;;AAI8C;;AAAA;;AAI/C;;AAAA;;AAeG;;AAAA;;AAI4C;;AAAA;;AAI7C;;AAAA;;AAaiB;;AAAA,0FAA6B,OAA7B,EAA6B,cAA7B;;AAKW;;AAAA,gFAAmB,UAAnB,EAAmB,IAAnB;;AAUI;;AAAA;;AA8Hb;;AAAA;;AAyBJ;;AAAA;;AA0BA;;AAAA;;AAkCd;;AAAA;;AAGC;;AAAA;;AAiBD;;AAAA;;AAJA;;AAOD;;AAAA;;AAyBC;;AAAA;;AALkB,0FAA6B,KAA7B,EAA6B,cAA7B;;AAQe;;AAAA;;AAGhC;;AAAA;;AAUI;;AAAA,6FAA+B,OAA/B,EAA+B,cAA/B;;AA+BP;;AAAA;;AAD4B;;AAI3B;;AAAA;;AAoBD;;AAAA;;AADA;;AAIC;;AAAA;;AAkBD;;AAAA;;AADA;;AAIC;;AAAA;;AAkBD;;AAAA;;AADA;;AAIC;;AAAA;;AAeD;;AAAA;;AAGC;;AAAA;;AAeD;;AAAA;;AADA;;AAK8C;;AAAA;;AAG/C;;AAAA;;AAkBC;;AAAA;;AADA;;AAIC;;AAAA;;AAkBD;;AAAA;;AADA;;AAIC;;AAAA;;AAkBD;;AAAA;;AADA;;AAIC;;AAAA;;AAiBH;;AAAA;;AAG8C;;AAAA;;AAI/C;;AAAA;;AAiBK;;AAAA;;AAI4C;;AAAA;;AAIjD;;AAAA;;AAmBG;;AAAA;;AAGS;;AAAA;;AACmD;;AAAA;;AAI3D;;AAAA;;AAcD;;AAAA;;AAGS;;AAAA;;AAC6D;;AAAA;;AAMrE;;AAAA;;AAiBD;;AAAA;;AAGS;;AAAA;;AAC6C;;AAAA;;AAGrD;;AAAA;;AASJ;;AAAA;;AAMgB;;AAAA;;AAoBG;;AAAA;;AAsHF;;AAAA;;AAkBP;;AAAA;;AAsJM;;AAAA;;AA+HqC;;AAAA,4FAAiB,MAAjB,EAAiB,mBAAjB;;AAgBlD;;AAAA;;AAGC;;AAAA;;AAgBC;;AAAA;;AAJA;;AAOC;;AAAA;;AAca;;AAAA;;;;;;AAkGtB;;AAAyD;;AAAe;;;;;;AAAhE;;AAAiD;;AAAA;;;;;;AAuEvD;;AAAgE;;AAAmB;;;;;;AAA3E;;AAAwD;;AAAA;;;;;;AAe9D;;AAA4D;;AAAc;;;;;;AAAlE;;AAAoD;;AAAA;;;;;;;;AA0BhE;;AACE;;AAIE;;AAKE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AALF;;AAQA;;AAAuD;;AAErD;;AACJ;;AACF;;;;;;;;AAjByE;;AAWnE;;AAAA;;AAJA,wFAAa,OAAb,EAAa,gCAAb;;AAMK;;AAAA;;AAAgD;;AAAA;;;;;;;;AA+G3D;;AAIE;;AAKE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AALF;;AASA;;AAAyD;;AAEvD;;AACJ;;;;;;;;AAfkE;;AAO9D;;AAAA;;AAFA,yFAAc,SAAd,EAAc,wBAAd;;AAOM;;AAAA;;AAAiD;;AAAA;;;;;;;;AAY7D;;AAIE;;AAKE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AALF;;AASA;;AAA0D;;AAExD;;AACJ;;;;;;;;AAfsD;;AASlD;;AAAA;;AAJA,0FAAe,SAAf,EAAe,uBAAf;;AAOuC;;AAAA;;AAAiB;;AAAA;;;;;;;;AAa5D;;AAIE;;AAKE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AALF;;AASA;;AAAyD;;AAEvD;;AACJ;;;;;;;;AAf0D;;AAStD;;AAAA;;AAJA,yFAAc,SAAd,EAAc,2BAAd;;AAOuC;;AAAA;;AAAgB;;AAAA;;;;;;AAwDjD;;AAMF;;AAAgB;;;;;;;;AAnc9B;;AACE;;AAME;;AAAI;;AAAgB;;AACpB;;AACE;;AACE;;AACE;;AACG;;AAAS;;AASZ;;AACF;;AACA;;AACE;;AACG;;AAAa;;AAShB;;AAEF;;AACF;;AACA;;AACE;;AACE;;AACG;;AAAa;;AAShB;;AAEF;;AACA;;AACE;;AACG;;AAAc;;AASjB;;AACF;;AACA;;AACE;;AACG;;AAAM;;AAST;;AACF;;AACA;;AACE;;AACG;;AAAK;;AAER;;AAKF;;AAAwB;;AAAM;;AAC9B;;AAWA;;AACA;;AACF;;AAEA;;AACE;;AACE;;AACG;;AAAgB;;AASnB;;AAEF;;AACA;;AACE;;AACG;;AAAsB;;AASzB;;AAEF;;AACF;;AACA;;AACE;;AACE;;AACG;;AAAc;;AASjB;;AAEF;;AACA;;AACE;;AACG;;AAAU;;AAEb;;AAIA;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AAAwB;;AAAM;;AAC9B;;AAEF;;AACA;;AACA;;AACE;;AACG;;AAAe;;AAElB;;AAIE;AAAA;;AAAA;;AAAA,8CAA4B,gBAA5B,EAA4C,MAA5C;AAA4C,WAA5C;;AAEA;;AAAwB;;AAAM;;AAC9B;;AAEF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACG;;AAAI;;AAGP;;AAKA;;AACA;;AACF;;AACF;;AACA;;AACA;;AACE;;AAAI;;AAAS;;AACf;;AAEA;;AACE;;AAkBF;;AAEA;;AACA;;AACE;;AACE;;AACE;;AACE;;AAA4B;;AAAiB;;AAC7C;;AAA4B;;AAAa;;AAC3C;;AACF;;AACA;;AACE;;AACE;;AACA;;AAAgB;;AAAW;;AAC3B;;AACE;;AAAoB;;AAAU;;AAChC;;AACA;;AACE;;AAAoB;;AAAW;;AACjC;;AACF;;AACA;;AACE;;AAAI;;AAAC;;AACL;;AAAI;;AAAC;;AACL;;AAAI;;AAAC;;AACL;;AAAI;;AAAC;;AACL;;AAAI;;AAAC;;AACP;;AACA;;AACE;;AACE;;AAAoB;;AAAU;;AAChC;;AACA;;AAAI;;AAAC;;AACL;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AACE;;AAAqB;;AAAC;;AACxB;;AACA;;AAAgB;;AAAI;;AACpB;;AACE;;AAAqB;;AAAC;;AACxB;;AACA;;AAAgB;;AAAa;;AAC/B;;AACA;;AACE;;AAAI;;AAAC;;AACL;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAQ;;AACxB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAK;;AACvB;;AACA;;AACE;;AAAI;;AAAC;;AACL;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAQ;;AACxB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAQ;;AAC1B;;AACA;;AACE;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAM;;AACtB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAK;;AACvB;;AACA;;AACE;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAkC;;AAAC;;AACnC;;AAAgB;;AAAc;;AAC9B;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAY;;AAC9B;;AACF;;AACF;;AACF;;AACA;;AAEA;;AACE;;AAAI;;AAAsB;;AAC5B;;AAEA;;AACE;;AAiBF;;AACF;;AACA;;AACA;;AACE;;AAAI;;AAAa;;AACnB;;AAEA;;AACE;;AAiBF;;AAEA;;AAEA;;AACE;;AAAI;;AAA0B;;AAChC;;AAEA;;AACE;;AAiBF;;AAEA;;AACA;;AACE;;AACF;;AAEA;;AACE;;AACE;;AACG;;AAAU;;AAEb;;AACE;;AAMF;;AACF;;AACA;;AACE;;AACG;;AAAS;;AAEZ;;AACE;;AAEE;AAAA;;AAAA;;AAAA;AAAA,aAA6B,YAA7B,EAA6B;AAAA;;AAAA;;AAAA;AAAA,WAA7B;;AAGD;;AACH;;AACA;;AAA6C;AAAA;;AAAA;;AAAA;AAAA;;AAC3C;;AACF;;AACF;;AACA;;AACE;;AACG;;AAAI;;AAEP;;AACE;;AAGM;AAAA;;AAAA;;AAAA;AAAA;;AAHN;;AAQM;;AACA;;AACA;;AASA;;AACD;;AAAI;;AACL;;AACN;;AAAiC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAwC;;AAMzE;;AACF;;AACF;;AACF;;AACF;;;;;;;;;;;;;;;AA1XsD;;AAAA;;AAuEE;;AAAA;;AAeA;;AAAA;;AAW5B;;AAAA,2FAA6B,OAA7B,EAA6B,cAA7B;;AAKe;;AAAA,iFAAmB,UAAnB,EAAmB,IAAnB;;AAUA;;AAAA;;AA6Hb;;AAAA;;AAyBJ;;AAAA;;AA0BA;;AAAA;;AA2Cd;;AAAA;;AAoBI;;AAAA;;AALY,2FAA6B,KAA7B,EAA6B,cAA7B;;AAQqB;;AAAA;;AAGhC;;AAAA;;AAUI;;AAAA,8FAA+B,OAA/B,EAA+B,cAA/B;;;;;;AA4FT;;AAAyD;;AAAe;;;;;;AAAhE;;AAAiD;;AAAA;;;;;;AAsD3D;;AAAgE;;AAAmB;;;;;;AAA3E;;AAAwD;;AAAA;;;;;;AAiB5D;;AAA4D;;AAAc;;;;;;AAAlE;;AAAoD;;AAAA;;;;;;AAkB9D;;AAAyD;;AAAM;;;;;;AAC/D;;AAAiF;;AAAsB;;;;;;AAA/F;;AAAyE;;AAAA;;;;;;AAajF;;AAAoD;;AAAM;;;;;;AAC1D;;AAEE;;AACF;;;;;;AAHQ;;AAEN;;AAAA;;;;;;AAgBF;;AAAwD;;AAAM;;;;;;AAC9D;;AAAwE;;AAAmB;;;;;;AAAnF;;AAAgE;;AAAA;;;;;;AAMhF;;AAAkC;;AAAiB;;;;;;AAKjD;;AAIE;;AAQA;;AAAwD;;AAEtD;;AACJ;;;;;;;AATI;;AAAA,yFAAc,SAAd,EAAc,IAAd;;AAMK;;AAAA;;AAAiD;;AAAA;;;;;;;;AAQ1D;;AAIE;;AAKE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AALF;;AASA;;AAAyD;;AAEvD;;AACJ;;;;;;;;AAfmE;;AAO/D;;AAAA;;AAFA,yFAAc,SAAd,EAAc,wBAAd;;AAOM;;AAAA;;AAAiD;;AAAA;;;;;;;;AAyG3D;;AAIE;;AAME;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AANF;;AASA;;AAA0D;;AAExD;;AACJ;;;;;;;;AAfuD;;AAQnD;;AAAA;;AAHA,0FAAe,SAAf,EAAe,uBAAf;;AAOuC;;AAAA;;AAAiB;;AAAA;;;;;;AAsBtD;;AAA+C;;AAAM;;;;;;AAEnD;;AACE;;AACF;;;;;;AADE;;AAAA;;;;;;AA8BF;;AAAyD;;AAAM;;;;;;;;AA9CrE;;AACE;;AACE;;AACE;;AACG;;AAAgB;;AACS;AAAA;;AAAA;;AAAA;AAAA;;AAAyB;;AAAkB;;AAAO;;AAE9E;;AAMF;;AAEE;;AAGF;;AACA;;AACF;;AACA;;AACE;;AACE;;AACG;;AAAQ;;AAEX;;AAOF;;AACF;;AACA;;AACE;;AACE;;AACG;;AAAS;;AAEZ;;AAMA;;AACA;;AAAoB;;AAAG;;AACvB;;AAAmB;;AAAE;;AACvB;;AACA;;AACF;;AACA;;AACE;;AACE;;AACG;;AAAG;;AAEN;;AAOF;;AACF;;AACA;;AACE;;AACE;;AACG;;AAAW;;AAEd;;AAOF;;AACF;;AACA;;AACE;;AACE;;AAAyC;;AAAgB;;AACzD;;AACF;;AACF;;AACA;;AACE;;AAAqD;AAAA;;AAAA;;AAAA;AAAA;;AAClD;;AACH;;AACA;;AAA6B;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAgC;;AAAsB;;AACrF;;AACF;;;;;;;;AA5F+E;;AAalE;;AAAA;;AAEkB;;AAAA;;AA+BhB;;AAAA;;;;;;AAjDnB;;AACE;;AAAI;;AAAY;;AAChB;;AACE;;AA6FF;;AACF;;;;;;AA9F0C;;AAAA;;;;;;;;AAuHzB;;AAAiC;;AAAgD;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,uCAAoB,qBAApB,EAAyC,iBAAzC,EAAyC,MAAzC;AAAyC,WAAzC;;AAA4D;;AAAI;;AAAa;;AAAmC;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA,yCAAsB,iBAAtB,EAAuC,iBAAvC,EAAuC,MAAvC,EAAuC,MAAvC;AAAuC,WAAvC;;AAA6D;;AAAM;;AAAa;;;;;;AAHtR;;AACE;;AACG;;AAA4B;;AAAkB;;AAC9C;;AACP;;AACE;;;;;;AAHiC;;AAAA;;AACb;;AAAA;;;;;;AAcpB;;AAA0D;;AAAc;;;;;;AAAjC;;AAAmB;;AAAA;;;;;;;;AAY1D;;AAA+C;;AAAgD;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,uCAAoB,gBAApB,EAAoC,uBAApC,EAAoC,MAApC;AAAoC,WAApC;;AAA4D;;AAAI;;AAAa;;AAAoC;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA,yCAAsB,YAAtB,EAAoC,iBAAF,MAAlC,EAAkC,MAAlC,EAAkC,MAAlC;AAAkC,WAAlC;;AAA6D;;AAAM;;AAA6B;;;;;;AAHhT;;AACE;;AACE;;AAA2B;;AAAuB;;AACtD;;AACF;;AACE;;;;;;AAH+B;;AAAA;;AACT;;AAAA;;;;;;AAkBxB;;AAA8D;;AAAc;;;;;;AAAjC;;AAAmB;;AAAA;;;;;;AAc3D;;AAGE;;AACF;;;;;;AADE;;AAAA;;;;;;;;AA7Eb;;AAKE;;AACE;;AAAI;;AAA6B;;AACnC;;AAEA;;AACE;;AACI;;AAAkB;;AAAgB;;AAAuE;AAAA;;AAAA;;AAAA;;AAAA,oCAAiB,iBAAjB,EAAkC,MAAlC;AAAkC,WAAlC;;AAAwC;;AAAkB;;AAAO;;AAC1K;;AACE;;AAMF;;AACJ;;AACA;;AACE;;AACE;;AAAkB;;AAAI;;AACtB;;AAME;;AACF;;AACF;;AACF;;AAEA;;AAEI;;AAAkB;;AAA2B;;AAAuE;AAAA;;AAAA;;AAAA;;AAAA,oCAAiB,YAAjB,EAA6B,MAA7B;AAA6B,WAA7B;;AAAmC;;AAAkB;;AAAO;;AAChL;;AACE;;AAMF;;AAGJ;;AAED;;AACE;;AACC;;AACE;;AAAkB;;AAAa;;AAC/B;;AAMA;;AAEA;;AACA;;AACF;;AACC;;AAAuC;;AAA+B;;AAAkB;;AACvF;;AACE;;AAOC;;AAKF;;AACD;;AACC;;AACA;;AACP;;AACA;;AACF;;;;;;;;;AA/EQ;;AAAA;;AAOyB;;AAAA;;AASO;;AAAA;;AAQL;;AAAA;;AASI;;AAAA;;AAad;;AAAA;;AAQQ;;AAAA;;AAMpB;;AAAA;;AAKQ;;AAAA;;AAIS;;AAAA;;;;;;;;AA2F9B;;AAA8E;AAAA;;AAAA;;AAAA;AAAA;;AAAqB;;AAAM;;;;;;;;AAnoB/G;;AAMA;;AACE;;AACE;;AACE;;AACE;;AACE;;AACG;;AAAS;;AAEZ;;AAMF;;AACF;;AACA;;AACE;;AACE;;AACG;;AAAa;;AAEhB;;AAMF;;AACF;;AACA;;AACE;;AACE;;AACG;;AAAa;;AAEhB;;AAMF;;AACF;;AACA;;AACE;;AACE;;AACG;;AAAW;;AAEd;;AAMF;;AACF;;AACA;;AACE;;AACE;;AAA0B;;AAAS;;AACnC;;AAMF;;AACF;;AACA;;AACE;;AACE;;AAA0B;;AAAK;;AAC/B;;AAIE;;AAAwB;;AAAM;;AAC9B;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACG;;AAAgB;;AAEnB;;AAMF;;AACF;;AACA;;AACE;;AACE;;AACG;;AAAsB;;AAEzB;;AAMF;;AACF;;AACA;;AACE;;AACE;;AACG;;AAAsB;;AAEzB;;AAMF;;AACF;;AACA;;AACE;;AACE;;AACG;;AAAU;;AAEb;;AAIA;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AAEF;;AACA;;AACF;;AACA;;AACE;;AACE;;AACG;;AAAe;;AAElB;;AAII;AAAA;;AAAA;;AAAA,8CAA4B,oBAA5B,EAAgD,MAAhD;AAAgD,WAAhD;;AAEA;;AAAwB;;AAAM;;AAC9B;;AAEF;;AACJ;;AACF;;AACF;;AACA;;AACA;;AACE;;AACE;;AACE;;AACG;;AAAY;;AAEf;;AAKE;;AACA;;AAEF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAQ;;AAAkB;;AAC1B;;AAKE;;AACA;;AAIF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACG;;AAA6B;;AAEhC;;AAME;;AACA;;AACF;;AACF;;AACF;;AACN;;AACI;;AACA;;AACA;;AAIE;;AAgBF;;AACA;;AACA;;AAAI;;AAAsB;;AAC1B;;AACE;;AAiBF;;AACA;;AACA;;AACE;;AACE;;AACE;;AACE;;AAA4B;;AAAiB;;AAC7C;;AAA4B;;AAAa;;AAC3C;;AACF;;AACA;;AACE;;AACE;;AACA;;AAAgB;;AAAW;;AAC3B;;AACE;;AAAoB;;AAAU;;AAChC;;AACA;;AACE;;AAAoB;;AAAW;;AACjC;;AACF;;AACA;;AACE;;AAAI;;AAAC;;AACL;;AAAI;;AAAC;;AACL;;AAAI;;AAAC;;AACL;;AAAI;;AAAC;;AACL;;AAAI;;AAAC;;AACP;;AACA;;AACE;;AACE;;AAAoB;;AAAU;;AAChC;;AACA;;AAAI;;AAAC;;AACL;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AACE;;AAAqB;;AAAC;;AACxB;;AACA;;AAAgB;;AAAI;;AACpB;;AACE;;AAAqB;;AAAC;;AACxB;;AACA;;AAAgB;;AAAa;;AAC/B;;AACA;;AACE;;AAAI;;AAAC;;AACL;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAQ;;AACxB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAK;;AACvB;;AACA;;AACE;;AAAI;;AAAC;;AACL;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAQ;;AACxB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAQ;;AAC1B;;AACA;;AACE;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAM;;AACtB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAK;;AACvB;;AACA;;AACE;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAC;;AACjB;;AAAkC;;AAAC;;AACnC;;AAAgB;;AAAc;;AAC9B;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAY;;AAC9B;;AACF;;AACF;;AACF;;AACA;;AACA;;AAAI;;AAAa;;AACjB;;AACE;;AAiBF;;AACA;;AACA;;AAoGA;;AACA;;AAGE;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AAsFF;;AACA;;AAyCA;;AACE;;AACF;;AACA;;AACA;;AAAI;;AAA+B;;AACnC;;AACE;;AACE;;AACE;;AACG;;AAAU;;AAEb;;AAOF;;AACF;;AACA;;AACE;;AACE;;AAAO;;AAAU;;AACjB;;AACE;;AAEE;AAAA;;AAAA;;AAAA;AAAA,aAA6B,YAA7B,EAA6B;AAAA;;AAAA;;AAAA;AAAA,WAA7B;;AAGD;;AACH;;AACF;;AACA;;AAA8C;AAAA;;AAAA;;AAAA;AAAA;;AAC5C;;AACF;;AACF;;AACF;;AACA;;AACE;;AACF;;AACF;;AACF;;AAEF;;;;;;AAxjB4D;;AAAA;;AAsDF;;AAAA;;AAiBE;;AAAA;;AAkBrC;;AAAA;;AACmD;;AAAA;;AAanD;;AAAA;;AAC6D;;AAAA;;AAkB7D;;AAAA;;AAC6C;;AAAA;;AAMzD;;AAAA;;AAMgB;;AAAA;;AAoBG;;AAAA;;AAsHF;;AAAA;;AAkBP;;AAAA;;AA4GM;;AAAA;;AA+HqC;;AAAA,4FAAiB,MAAjB,EAAiB,mBAAjB;;AAwBhD;;AAAA;;AAaC;;AAAA;;;;;;AAQf;;AACE;;AACE;;AACF;;AACF;;;;;;AAFmC;;AAAA;;;;;;AAHrC;;AACE;;AAKD;;;;;;AALuB;;AAAA;;;;UCn/EXgH,2B;AA8IX,6CACSlZ,MADT,EAEU4X,MAFV,EAGUlY,EAHV,EAIUE,eAJV,EAKUC,cALV,EAMUC,QANV,EAOSC,MAPT,EAOyC;AAAA;;AANhC,eAAAC,MAAA,GAAAA,MAAA;AACC,eAAA4X,MAAA,GAAAA,MAAA;AACA,eAAAlY,EAAA,GAAAA,EAAA;AACA,eAAAE,eAAA,GAAAA,eAAA;AACA,eAAAC,cAAA,GAAAA,cAAA;AACA,eAAAC,QAAA,GAAAA,QAAA;AACD,eAAAC,MAAA,GAAAA,MAAA;AA/IF,eAAAoZ,MAAA,GAAS,8DAAT;AAIP,eAAAC,cAAA,GAAiB,IAAjB;AACA,eAAAC,QAAA,GAAW,KAAX;AACA,eAAAC,YAAA,GAAe,KAAf,CAyIyC,CAxIzC;;AACA,eAAAC,OAAA,GAAU,EAAV;AACA,eAAAjQ,KAAA,GAAQ,EAAR;AACA,eAAAkQ,aAAA,GAAgB,EAAhB;AACA,eAAAC,SAAA,GAAY,EAAZ;AACA,eAAAC,oBAAA,GAAuB,EAAvB;AACA,eAAArZ,YAAA,GAAe,EAAf;AACA,eAAAsZ,uBAAA,GAA0B,EAA1B;AACA,eAAAC,UAAA,GAAa,EAAb;AACA,eAAAjZ,aAAA,GAAgB,EAAhB;AACA,eAAAkZ,UAAA,GAAa,EAAb;AACA,eAAAC,eAAA,GAAkB,EAAlB;AAEA,eAAAC,UAAA,GAAa,EAAb;AACA,eAAAC,WAAA,GAAc,EAAd;AACA,eAAAC,cAAA,GAAiB,KAAjB;AACA,eAAAC,SAAA,GAAY,KAAZ;AACA,eAAAC,aAAA,GAAgB,KAAhB;AACA,eAAArZ,OAAA,GAAU,IAAID,IAAJ,EAAV;AACA,eAAAD,OAAA,GAAU,IAAIC,IAAJ,EAAV;AAEA,eAAAuZ,qBAAA,GAAwB,CACtB;AACEC,iBAAK,EAAE,6DADT;AAEEtT,iBAAK,EAAE;AAFT,WADsB,EAKtB;AAAEsT,iBAAK,EAAE,kCAAT;AAA6CtT,iBAAK,EAAE;AAApD,WALsB,EAMtB;AACEsT,iBAAK,EACH,sEAFJ;AAGEtT,iBAAK,EAAE;AAHT,WANsB,EAWtB;AAAEsT,iBAAK,EAAE,qCAAT;AAAgDtT,iBAAK,EAAE;AAAvD,WAXsB,EAYtB;AAAEsT,iBAAK,EAAE,iCAAT;AAA4CtT,iBAAK,EAAE;AAAnD,WAZsB,EAatB;AAAEsT,iBAAK,EAAE,mCAAT;AAA8CtT,iBAAK,EAAE;AAArD,WAbsB,EActB;AAAEsT,iBAAK,EAAE,+CAAT;AAA0DtT,iBAAK,EAAE;AAAjE,WAdsB,EAetB;AAAEsT,iBAAK,EAAE,oCAAT;AAA+CtT,iBAAK,EAAE;AAAtD,WAfsB,EAgBtB;AACEsT,iBAAK,EAAE,wDADT;AAEEtT,iBAAK,EAAE;AAFT,WAhBsB,EAoBtB;AAAEsT,iBAAK,EAAE,4CAAT;AAAuDtT,iBAAK,EAAE;AAA9D,WApBsB,EAqBtB;AAAEsT,iBAAK,EAAE,4CAAT;AAAuDtT,iBAAK,EAAE;AAA9D,WArBsB,EAsBtB;AAAEsT,iBAAK,EAAE,sBAAT;AAAiCtT,iBAAK,EAAE;AAAxC,WAtBsB,EAuBtB;AACEsT,iBAAK,EACH,wEAFJ;AAGEtT,iBAAK,EAAE;AAHT,WAvBsB,EA4BtB;AAAEsT,iBAAK,EAAE,sCAAT;AAAiDtT,iBAAK,EAAE;AAAxD,WA5BsB,EA6BtB;AAAEsT,iBAAK,EAAE,aAAT;AAAwBtT,iBAAK,EAAE;AAA/B,WA7BsB,CAAxB;AAgCA,eAAAuT,aAAA,GAAgB,CACd;AAAED,iBAAK,EAAE,sBAAT;AAAiCtT,iBAAK,EAAE;AAAxC,WADc,EAEd;AAAEsT,iBAAK,EAAE,UAAT;AAAqBtT,iBAAK,EAAE;AAA5B,WAFc,EAGd;AAAEsT,iBAAK,EAAE,aAAT;AAAwBtT,iBAAK,EAAE;AAA/B,WAHc,EAId;AAAEsT,iBAAK,EAAE,sBAAT;AAAiCtT,iBAAK,EAAE;AAAxC,WAJc,EAKd;AAAEsT,iBAAK,EAAE,QAAT;AAAmBtT,iBAAK,EAAE;AAA1B,WALc,EAMd;AAAEsT,iBAAK,EAAE,sBAAT;AAAiCtT,iBAAK,EAAE;AAAxC,WANc,EAOd;AAAEsT,iBAAK,EAAE,UAAT;AAAqBtT,iBAAK,EAAE;AAA5B,WAPc,EAQd;AAAEsT,iBAAK,EAAE,oBAAT;AAA+BtT,iBAAK,EAAE;AAAtC,WARc,EASd;AAAEsT,iBAAK,EAAE,mBAAT;AAA8BtT,iBAAK,EAAE;AAArC,WATc,EAUd;AAAEsT,iBAAK,EAAE,eAAT;AAA0BtT,iBAAK,EAAE;AAAjC,WAVc,EAWd;AAAEsT,iBAAK,EAAE,wBAAT;AAAmCtT,iBAAK,EAAE;AAA1C,WAXc,EAYd;AAAEsT,iBAAK,EAAE,qBAAT;AAAgCtT,iBAAK,EAAE;AAAvC,WAZc,EAad;AAAEsT,iBAAK,EAAE,mBAAT;AAA8BtT,iBAAK,EAAE;AAArC,WAbc,EAcd;AAAEsT,iBAAK,EAAE,YAAT;AAAuBtT,iBAAK,EAAE;AAA9B,WAdc,EAed;AAAEsT,iBAAK,EAAE,cAAT;AAAyBtT,iBAAK,EAAE;AAAhC,WAfc,EAgBd;AAAEsT,iBAAK,EAAE,gBAAT;AAA2BtT,iBAAK,EAAE;AAAlC,WAhBc,EAiBd;AAAEsT,iBAAK,EAAE,YAAT;AAAuBtT,iBAAK,EAAE;AAA9B,WAjBc,EAkBd;AAAEsT,iBAAK,EAAE,OAAT;AAAkBtT,iBAAK,EAAE;AAAzB,WAlBc,EAmBd;AAAEsT,iBAAK,EAAE,eAAT;AAA0BtT,iBAAK,EAAE;AAAjC,WAnBc,CAAhB;AAqBA,eAAAwT,YAAA;AAgCA,eAAAC,OAAA,GAAU,EAAV;AACA,eAAAC,MAAA,GAAS,EAAT;AACA,eAAAna,MAAA,GAAS,EAAT;AACA,eAAAoa,OAAA,GAAU,EAAV;AACA,eAAAC,UAAA,GAAa,EAAb;AACA,eAAA5D,WAAA,GAAc,EAAd;AACA,eAAA6D,eAAA,GAAkB,EAAlB;AACA,eAAAC,MAAA,GAAS,EAAT;AACA,eAAAzT,WAAA,GAAc,EAAd;AACA,eAAA0T,YAAA,GAAe,EAAf;AACA,eAAAC,cAAA,GAAiB,EAAjB;AAKA,eAAAC,aAAA,GAAqB,EAArB;AACA,eAAAC,MAAA,GAAc,EAAd;AACA,eAAAC,gBAAA,GAAwB,EAAxB;AACA,eAAAC,MAAA,GAAc,EAAd;AAEA,eAAAC,aAAA,GAAgB,EAAhB;AAgfO,eAAAvZ,oBAAA,GAA+B;AACpC;AACAH,oBAAQ,EAAE,CAF0B;AAGpCC,uBAAW,EAAE,GAHuB;AAIpCC,wBAAY,EAAE;AAJsB,WAA/B;AAMA,eAAA0Q,oBAAA,GAA+B;AACpC;AACA5Q,oBAAQ,EAAE,CAF0B;AAGpCC,uBAAW,EAAE,GAHuB;AAIpCC,wBAAY,EAAE;AAJsB,WAA/B;AA1eL,eAAKkI,KAAL,GAAa6O,YAAY,CAAC0C,OAAb,CAAqB,KAArB,CAAb;AACApW,iBAAO,CAACC,GAAR,CAAY,WAAZ,EAAyB,KAAK4E,KAA9B;AACA,eAAKhF,EAAL,GAAU,KAAKjF,cAAL,CAAoBkF,QAApB,CAA6BC,MAA7B,CAAoCF,EAA9C;AACAG,iBAAO,CAACC,GAAR,CAAY,IAAZ,EAAkB,KAAKJ,EAAvB;AACA,eAAKwW,gBAAL,GAAwB,KAAK5b,EAAL,CAAQqC,KAAR,CAAc;AACpCwZ,mBAAO,EAAE,KAAK7b,EAAL,CAAQsC,KAAR,CAAc,EAAd,CAD2B;AAEpCE,qBAAS,EAAE,CAAC,EAAD,EAAK,0DAAWC,QAAhB,CAFyB;AAGpCE,oBAAQ,EAAE,CAAC,EAAD,EAAK,0DAAWF,QAAhB,CAH0B;AAIpCG,wBAAY,EAAE,CAAC,EAAD,EAAK,0DAAWH,QAAhB,CAJsB;AAKpCqZ,oBAAQ,EAAE,CAAC,EAAD,EAAK,0DAAWrZ,QAAhB,CAL0B;AAMpCqQ,sBAAU,EAAE,CAAC,EAAD,EAAK,0DAAWrQ,QAAhB,CANwB;AAOpCsZ,kBAAM,EAAE,CAAC,EAAD,EAAK,0DAAWtZ,QAAhB,CAP4B;AAQpCuZ,gBAAI,EAAE,CAAC,EAAD,EAAK,0DAAWvZ,QAAhB,CAR8B;AASpCsQ,qBAAS,EAAE,CAAC,EAAD,EAAK,0DAAWtQ,QAAhB,CATyB;AAUpCuQ,uBAAW,EAAE,CAAC,EAAD,EAAK,0DAAWvQ,QAAhB,CAVuB;AAWpCwQ,qBAAS,EAAE,CAAC,EAAD,EAAK,0DAAWxQ,QAAhB,CAXyB;AAYpCwZ,qBAAS,EAAE,CAAC,EAAD,EAAK,0DAAWxZ,QAAhB,CAZyB;AAapCyZ,qBAAS,EAAE,CAAC,EAAD,EAAK,0DAAWzZ,QAAhB,CAbyB;AAcpC0Z,oBAAQ,EAAE,CAAC,EAAD,EAAK,0DAAW1Z,QAAhB,CAd0B;AAepC2Z,sBAAU,EAAE,CAAC,EAAD,EAAK,0DAAW3Z,QAAhB,CAfwB;AAgBpCM,0BAAc,EAAE,CAAC,EAAD,EAAK,0DAAWN,QAAhB,CAhBoB;AAiBpCmE,gBAAI,EAAE,CAAC,IAAIzF,IAAJ,EAAD,CAjB8B;AAkBpCkb,8BAAkB,EAAE,CAAC,EAAD,EAAK,0DAAW5Z,QAAhB,CAlBgB;AAmBpC6Z,wBAAY,EAAE,CAAC,EAAD,EAAK,0DAAW7Z,QAAhB,CAnBsB;AAoBpC8Z,qBAAS,EAAE,CAAC,EAAD,EAAK,0DAAW9Z,QAAhB,CApByB;AAqBpC+Z,qBAAS,EAAE,CAAC,EAAD,EAAK,0DAAW/Z,QAAhB,CArByB;AAsBpCga,oBAAQ,EAAE,CAAC,EAAD,CAtB0B;AAuBpCC,eAAG,EAAE,EAvB+B;AAwBpC;AACAC,qBAAS,EAAE,KAAK3c,EAAL,CAAQsC,KAAR,CAAc,EAAd,CAzByB;AA0BpCsa,wBAAY,EAAE,KAAK5c,EAAL,CAAQsC,KAAR,CAAc,EAAd,CA1BsB;AA2BpCiC,gBAAI,EAAE,KAAKvE,EAAL,CAAQsC,KAAR,CAAc,EAAd,CA3B8B;AA4BpCua,uBAAW,EAAE,KAAK7c,EAAL,CAAQsC,KAAR,CAAc,EAAd,CA5BuB;AA6BpCyX,qBAAS,EAAE,KAAK/Z,EAAL,CAAQsC,KAAR,CAAc,EAAd,CA7ByB;AA8BpCwa,wBAAY,EAAE,KAAK9c,EAAL,CAAQsC,KAAR,CAAc,EAAd,CA9BsB;AA+BpCya,oBAAQ,EAAE,KAAK/c,EAAL,CAAQsC,KAAR,CAAc,EAAd,CA/B0B;AAgCpCuX,mBAAO,EAAE,KAAK7Z,EAAL,CAAQsC,KAAR,CAAc,EAAd,CAhC2B;AAiCpC0a,4BAAgB,EAAE,KAAKhd,EAAL,CAAQsC,KAAR,CAAc,EAAd,CAjCkB;AAkCpC2a,6BAAiB,EAAE,KAAKjd,EAAL,CAAQsC,KAAR,CAAc,EAAd,CAlCiB;AAmCpC3B,wBAAY,EAAE,KAAKX,EAAL,CAAQsC,KAAR,CAAc,EAAd,CAnCsB;AAoCpC4a,yBAAa,EAAE,KAAKld,EAAL,CAAQsC,KAAR,CAAc,EAAd,CApCqB;AAqCpC6a,mBAAO,EAAE,KAAKnd,EAAL,CAAQsC,KAAR,CAAc,EAAd,CArC2B;AAsCpC8a,kBAAM,EAAE,CAAC,EAAD,CAtC4B;AAuCpCC,sBAAU,EAAE,CAAC,EAAD,CAvCwB;AAwCpCC,sBAAU,EAAE,CAAC,EAAD;AAxCwB,WAAd,CAAxB;AA0CD;;;;eACD,eAAmB;AACjB,mBAAO,KAAK1B,gBAAL,CAAsB7U,QAA7B;AACD;;;iBAED,oBAAQ;AAAA;;AACN,iBAAKwW,aAAL;AACA,iBAAKzX,SAAL;AACA,iBAAK0X,cAAL;AACA,iBAAKC,aAAL;AACA,iBAAK7X,iBAAL;AACA,iBAAK8X,oBAAL;AACA,iBAAK/X,eAAL;AACA,iBAAKgY,uBAAL;AACA,iBAAKzX,WAAL;AACA,iBAAK0X,eAAL;AACA,iBAAKC,cAAL;AACA,iBAAKC,YAAL;AACA,iBAAKC,iBAAL;AACA,iBAAKC,eAAL;AACA,iBAAKC,UAAL;AACA,iBAAKC,WAAL;AACA,iBAAKC,kBAAL;;AACA,gBAAI,KAAK/Y,EAAL,IAAW,MAAf,EAAuB;AACrB,mBAAKgZ,iBAAL,CAAuB,KAAKhZ,EAA5B;AACD,aApBK,CAqBN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,iBAAKhF,QAAL,CAAcA,QAAd,CAAuB,yBAAvB,EA7BM,CA8BN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAKwb,gBAAL,CAAsBpV,GAAtB,CAA0B,YAA1B,EAAwCoJ,YAAxC,CAAqD3K,SAArD,CAA+D,UAACuC,GAAD,EAAS;AACtE,kBAAIA,GAAJ,EAAS;AACPjC,uBAAO,CAACC,GAAR,CAAYgC,GAAZ;;AAEA,qBAAK,IAAIX,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,OAAI,CAAC4U,MAAL,CAAYzU,MAAhC,EAAwCH,CAAC,EAAzC,EAA6C;AAC3C,sBAAIW,GAAG,KAAK,OAAI,CAACiU,MAAL,CAAY5U,CAAZ,EAAeM,GAA3B,EAAgC;AAC9B5B,2BAAO,CAACC,GAAR,CAAY,UAAZ;;AAEA,2BAAI,CAACoW,gBAAL,CAAsBpV,GAAtB,CAA0B,cAA1B,EAA0C0C,QAA1C,CAAmD,OAAI,CAACuS,MAAL,CAAY5U,CAAZ,EAAewX,cAAf,CAA8BlX,GAAjF;;AACA,2BAAI,CAACyU,gBAAL,CAAsBpV,GAAtB,CAA0B,WAA1B,EAAuC0C,QAAvC,CAAgD,OAAI,CAACuS,MAAL,CAAY5U,CAAZ,EAAeyX,mBAAf,CAAmCnX,GAAnF;;AACA,2BAAI,CAACyU,gBAAL,CAAsBpV,GAAtB,CAA0B,WAA1B,EAAuC0C,QAAvC,CAAgD,OAAI,CAACuS,MAAL,CAAY5U,CAAZ,EAAe0X,WAAf,CAA2BpX,GAA3E;;AACA;AACD;AACF;AAGF;AACF,aAjBD;AAkBD;;;iBACD,2BAAkB/B,EAAlB,EAAsB;AAAA;;AACpBG,mBAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBJ,EAApB;AACA,iBAAKlF,eAAL,CAAqBse,iBAArB,CAAuCpZ,EAAvC,EAA2CH,SAA3C,CAAqD,UAACuC,GAAD,EAAc;;;AACjE,qBAAI,CAAC6T,cAAL,GAAsB,EAAtB;AACA9V,qBAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BgC,GAAG,CAACC,IAAnC;;AACA,kBAAI2C,KAAK,GAAG,SAARA,KAAQ;AAAA,uBAAY;AAAA;AAAA;AAAA;AAAA;AAAE,+BAAKxF,aAAL,IAAsB,IAAtB;;AAAF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAZ;AAAA,eAAZ;;AACAwF,mBAAK,GAAGC,IAAR,CAAa,YAAM;AACjB,uBAAI,CAACzF,aAAL,CAAmB0F,WAAnB,CAA+B9C,GAAG,CAACC,IAAJ,CAAS4V,UAAxC;AACD,eAFD,EAJiE,CAOjE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEC,kBAAKlB,QAAQ,GAAC,IAAKhb,IAAL,CAAUqG,GAAG,CAACC,IAAJ,CAAS0U,QAAnB,CAAd;AAEA,kBAAIsC,IAAI,GAACtC,QAAQ,CAACuC,YAAT,EAAT;AACAnZ,qBAAO,CAACC,GAAR,CAAY,kCAAZ,EAA+CiZ,IAA/C;AACA,qBAAI,CAACE,OAAL,GAAaF,IAAI,CAACG,KAAL,CAAW,CAAX,EAAa,CAAb,CAAb,CAnBgE,CAoBhE;AACC;AACA;AACD;AACC;;AACArZ,qBAAO,CAACC,GAAR,CAAY,iCAAZ,EAA+C,OAAI,CAACmZ,OAApD;AAED,kBAAI/X,IAAI,GAACY,GAAG,CAACC,IAAJ,CAAS0U,QAAlB,CA3BgE,CA4BlE;AAED;;AACE,qBAAI,CAAC0C,OAAL,GAAc,IAAI1d,IAAJ,CAASyF,IAAT,CAAd;;AAGA,kBAAIkY,MAAM,GAAG,SAATA,MAAS;AAAA,uBAAY;AAAA;AAAA;AAAA;AAAA;AAAE,+BAAKlL,aAAL,IAAsB,IAAtB;;AAAF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAZ;AAAA,eAAb;;AACAkL,oBAAM,GAAGzU,IAAT,CAAc,YAAM;AAClB,uBAAI,CAACuJ,aAAL,CAAmBtJ,WAAnB,CAA+B9C,GAAG,CAACC,IAAJ,CAAS6V,UAAxC;AACD,eAFD;;AAGA,kBAAI,CAAA9V,GAAG,SAAH,IAAAA,GAAG,WAAH,GAAG,MAAH,GAAAA,GAAG,CAAEC,IAAL,CAAU6U,YAAV,KAA0B,EAA9B,EAAkC;AAChC,uBAAI,CAAC/B,cAAL,GAAsB,IAAtB;AACD;;AACD,kBAAI,CAAA/S,GAAG,SAAH,IAAAA,GAAG,WAAH,GAAG,MAAH,GAAAA,GAAG,CAAEC,IAAL,CAAU8U,SAAV,KAAuB,EAA3B,EAA+B;AAC7B,uBAAI,CAAC/B,SAAL,GAAiB,IAAjB;AACD;;AACD,kBAAI,CAAAhT,GAAG,SAAH,IAAAA,GAAG,WAAH,GAAG,MAAH,GAAAA,GAAG,CAAEC,IAAL,CAAU+U,SAAV,KAAuB,EAA3B,EAA+B;AAC7B,uBAAI,CAAC/B,aAAL,GAAqB,IAArB;AACD;;AACD,qBAAI,CAACmB,gBAAL,CAAsBtU,UAAtB,CAAiC,MAAD,OAAC,CAAD,EAAC,EAC5BE,GAAG,CAACC,IADwB,CAAjC;;AAGA,kBAAMX,IAAI,GAAc,OAAI,CAAC8U,gBAAL,CAAsB7U,QAAtB,CAA+B,aAA/B,CAAxB;;AACA,qBAAOD,IAAI,CAACE,MAAL,GAAc,CAArB,EAAwB;AACtBF,oBAAI,CAACG,QAAL,CAAc,CAAd;AACD;;AACD,oBAAAO,GAAG,SAAH,IAAAA,GAAG,WAAH,GAAG,MAAH,GAAAA,GAAG,CAAEC,IAAL,MAAS,IAAT,IAAS,aAAT,GAAS,MAAT,GAAS,GAAEoV,WAAF,CAAczV,OAAd,CAAsB,UAACiL,OAAD,EAAUnL,KAAV,EAAoB;AACjD,uBAAI,CAAC0S,YAAL,GAAoB,IAApB;AACArU,uBAAO,CAACC,GAAR,CAAY,WAAZ,EAAyB6M,OAAzB;;AAEA,oBAAI,CAAAA,OAAO,SAAP,IAAAA,OAAO,WAAP,GAAO,MAAP,GAAAA,OAAO,CAAE0M,YAAT,KAAyB,EAA7B,EAAiC;AAC/B,yBAAI,CAAC1E,UAAL,CAAgBnT,KAAhB,IAAyB,IAAzB;AACD;;AACD,oBAAI,CAAAmL,OAAO,SAAP,IAAAA,OAAO,WAAP,GAAO,MAAP,GAAAA,OAAO,CAAEsK,SAAT,KAAsB,EAA1B,EAA8B;AAC5B,yBAAI,CAACrC,WAAL,CAAiBpT,KAAjB,IAA0B,IAA1B;AACD;;AACD,uBAAI,CAAC8X,qBAAL,CAA2B3M,OAA3B;;AACA,oBAAGA,OAAO,CAAC9N,IAAX,EAAgB;AACd,yBAAI,CAACmX,aAAL,CAAmBpV,IAAnB,CAAwB+L,OAAO,CAAC9N,IAAhC;;AACAgB,yBAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB,OAAI,CAACkW,aAA7B;AACD;AAEF,eAhBQ,CAAT;AAiBAlU,iBAAG,CAACC,IAAJ,CAASsS,SAAT,CAAmB3S,OAAnB,CAA2B,UAAAiL,OAAO,EAAI;AACpC9M,uBAAO,CAACC,GAAR,CAAY,WAAZ,EAAyB6M,OAAO,CAAC0H,SAAjC;;AACA,uBAAI,CAACkF,mBAAL,CAAyB5M,OAAzB;AACD,eAHD;AAIA7K,iBAAG,CAACC,IAAJ,CAASqV,YAAT,CAAsB1V,OAAtB,CAA8B,UAAAiL,OAAO,EAAI;AACvC,uBAAI,CAAC6M,uBAAL,CAA6B7M,OAA7B;AACD,eAFD;AAGA7K,iBAAG,CAACC,IAAJ,CAASsS,SAAT,CAAmB3S,OAAnB,CAA2B,UAAAiL,OAAO,EAAI;AACpC,uBAAI,CAAC8M,mBAAL,CAAyB9M,OAAzB;AACD,eAFD;AAGA7K,iBAAG,CAACC,IAAJ,CAAS2X,WAAT,CAAqBhY,OAArB,CAA6B,UAAAiL,OAAO,EAAI;AACtC9M,uBAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB6M,OAArB;;AACA,uBAAI,CAACgJ,cAAL,CAAoB/U,IAApB,CAAyB+L,OAAzB;AACD,eAHD;AAIA7K,iBAAG,CAACC,IAAJ,CAAS4X,eAAT,CAAyBjY,OAAzB,CAAiC,UAACiL,OAAD,EAAUnL,KAAV,EAAoB;AACnD3B,uBAAO,CAACC,GAAR,CAAY,SAAZ,EAAuB6M,OAAvB;;AACA,uBAAI,CAACiN,YAAL,CAAkBjN,OAAlB,EAA2BnL,KAA3B,EAFmD,CAGnD;AACA;AACA;;AACD,eAND;AAOAM,iBAAG,CAACC,IAAJ,CAASoS,OAAT,CAAiBzS,OAAjB,CAAyB,UAACiL,OAAD,EAAUnL,KAAV,EAAoB;AAC3C,uBAAI,CAACqY,YAAL,CAAkBlN,OAAlB,EAA2BnL,KAA3B,EAD2C,CAE3C;;AACD,eAHD;AAIAM,iBAAG,CAACC,IAAJ,CAAS9G,YAAT,CAAsByG,OAAtB,CAA8B,UAACiL,OAAD,EAAUnL,KAAV,EAAoB;AAChD,uBAAI,CAACsY,QAAL,CAAcnN,OAAd,EAAuBnL,KAAvB;AACD,eAFD;AAGAM,iBAAG,CAACC,IAAJ,CAASyV,aAAT,CAAuB9V,OAAvB,CAA+B,UAACiL,OAAD,EAAUnL,KAAV,EAAoB;AACjD,uBAAI,CAACsY,QAAL,CAAcnN,OAAd,EAAuBnL,KAAvB;AACD,eAFD;AAGAM,iBAAG,CAACC,IAAJ,CAASuV,gBAAT,CAA0B5V,OAA1B,CAAkC,UAACiL,OAAD,EAAUnL,KAAV,EAAoB;AACpD,uBAAI,CAACuY,SAAL,CAAepN,OAAf,EAAwBnL,KAAxB;AACD,eAFD;AAGAM,iBAAG,CAACC,IAAJ,CAAS0V,OAAT,CAAiB/V,OAAjB,CAAyB,UAACiL,OAAD,EAAUnL,KAAV,EAAoB;AAC3C,uBAAI,CAACwY,YAAL,CAAkBrN,OAAlB,EAA2BnL,KAA3B;AACD,eAFD;AAGD,aA5GD;AA+GD;;;iBACD,sBAAaO,IAAb,EAAmBZ,CAAnB,EAAsB;AACpB,iBAAK,IAAI6C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK2N,WAAL,CAAiBrQ,MAArC,EAA6C0C,CAAC,EAA9C,EAAkD;AAChD,kBAAI,KAAK2N,WAAL,CAAiB3N,CAAjB,EAAoBvC,GAApB,IAA2BM,IAAI,CAACN,GAApC,EAAyC;AACvC,qBAAKkQ,WAAL,CAAiB3N,CAAjB,EAAoBiW,eAApB,GAAsC,EAAtC;AACA,qBAAKtI,WAAL,CAAiB3N,CAAjB,EAAoBkW,oBAApB,GAA2C,EAA3C;AACA,qBAAKvI,WAAL,CAAiB3N,CAAjB,EAAoBiW,eAApB,GAAsClY,IAAI,CAACkY,eAA3C;AACA,qBAAKtI,WAAL,CAAiB3N,CAAjB,EAAoBkW,oBAApB,GAA2CnY,IAAI,CAACmY,oBAAhD;AACAra,uBAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+B,KAAK6R,WAAL,CAAiB3N,CAAjB,EAAoBiW,eAAnD;AACApa,uBAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+B,KAAK6R,WAAL,CAAiB3N,CAAjB,EAAoBkW,oBAAnD;AAED;AACF;AACF;;;iBACD,sBAAavN,OAAb,EAAsBnL,KAAtB,EAA6B;AAC3B,gBAAI2Y,CAAC,GAAG,KAAKxI,WAAL,CAAiBnQ,KAAjB,EAAwBC,GAAhC;AACA5B,mBAAO,CAACC,GAAR,CAAY,GAAZ,EAAiBqa,CAAjB;AACAta,mBAAO,CAACC,GAAR,CAAY,KAAZ,EAAmB6M,OAAO,CAACwN,CAAD,CAA1B;AACA,gBAAIC,CAAC,GAAG,KAAKlE,gBAAL,CAAsB7U,QAAtB,CAA+B,SAA/B,CAAR;AACA,gBAAIgZ,CAAC,GAAGD,CAAC,CAAC/Y,QAAF,CAAWG,KAAX,CAAR;;AACA,gBAAImL,OAAO,CAACwN,CAAD,CAAX,EAAgB;AACdE,eAAC,CAAChZ,QAAF,CAAW8Y,CAAX,EAAc3W,QAAd,CAAuBmJ,OAAO,CAACwN,CAAD,CAA9B;AACA,mBAAK3E,eAAL,CAAqB5U,IAArB,CAA0B,KAAK+Q,WAAL,CAAiBnQ,KAAjB,CAA1B;AACA3B,qBAAO,CAACC,GAAR,CAAY,cAAZ,EAA4B,KAAK0V,eAAjC;AACD;AACF;;;iBACD,mBAAU7I,OAAV,EAAmBnL,KAAnB,EAA0B;AACxB,gBAAI2Y,CAAC,GAAG,KAAK7F,oBAAL,CAA0B9S,KAA1B,EAAiCC,GAAzC;AACA5B,mBAAO,CAACC,GAAR,CAAY,KAAZ,EAAmB6M,OAAO,CAACwN,CAAD,CAA1B;AACA,gBAAIC,CAAC,GAAG,KAAKlE,gBAAL,CAAsB7U,QAAtB,CAA+B,kBAA/B,CAAR;AACA,gBAAIgZ,CAAC,GAAGD,CAAC,CAAC/Y,QAAF,CAAWG,KAAX,CAAR;;AACA,gBAAImL,OAAO,CAACwN,CAAD,CAAX,EAAgB;AACdE,eAAC,CAAChZ,QAAF,CAAW8Y,CAAX,EAAc3W,QAAd,CAAuBmJ,OAAO,CAACwN,CAAD,CAA9B;AACD;AACF;;;iBACD,kBAASxN,OAAT,EAAkBnL,KAAlB,EAAyB;AACvB,gBAAI2Y,CAAC,GAAG,KAAKlf,YAAL,CAAkBuG,KAAlB,EAAyBC,GAAjC;AACA5B,mBAAO,CAACC,GAAR,CAAY,KAAZ,EAAmB6M,OAAO,CAACwN,CAAD,CAA1B;AACA,gBAAIC,CAAC,GAAG,KAAKlE,gBAAL,CAAsB7U,QAAtB,CAA+B,cAA/B,CAAR;AACA,gBAAIgZ,CAAC,GAAGD,CAAC,CAAC/Y,QAAF,CAAWG,KAAX,CAAR;;AACA,gBAAImL,OAAO,CAACwN,CAAD,CAAX,EAAgB;AACdE,eAAC,CAAChZ,QAAF,CAAW8Y,CAAX,EAAc3W,QAAd,CAAuBmJ,OAAO,CAACwN,CAAD,CAA9B;AACD;AACF;;;iBACD,sBAAaxN,OAAb,EAAsBnL,KAAtB,EAA6B;AAC3B,gBAAI2Y,CAAC,GAAG,KAAK5F,uBAAL,CAA6B/S,KAA7B,EAAoCC,GAA5C;AACA5B,mBAAO,CAACC,GAAR,CAAY,KAAZ,EAAmB6M,OAAO,CAACwN,CAAD,CAA1B;AACA,gBAAIC,CAAC,GAAG,KAAKlE,gBAAL,CAAsB7U,QAAtB,CAA+B,SAA/B,CAAR;AACA,gBAAIgZ,CAAC,GAAGD,CAAC,CAAC/Y,QAAF,CAAWG,KAAX,CAAR;;AACA,gBAAImL,OAAO,CAACwN,CAAD,CAAX,EAAgB;AACdE,eAAC,CAAChZ,QAAF,CAAW8Y,CAAX,EAAc3W,QAAd,CAAuBmJ,OAAO,CAACwN,CAAD,CAA9B;AACD;AAEF;;;iBACD,oBAAW;AAAA;;AACT,iBAAK5e,aAAL,CAAmBmG,OAAnB,CAA2B,UAACN,IAAD,EAAU;AACnC,kBAAI,OAAI,CAAC8U,gBAAL,CAAsBpV,GAAtB,CAA0B,WAA1B,EAAuCa,KAAvC,KAAiDP,IAAI,CAACK,GAA1D,EAA+D;AAC7D5B,uBAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBsB,IAAxB;;AACA,uBAAI,CAAC8U,gBAAL,CAAsBtU,UAAtB,CAAiC;AAC/B3E,0BAAQ,EAAEmE,IAAI,CAACnE,QADgB;AAE/BC,8BAAY,EAAEkE,IAAI,CAAClE,YAFY;AAG/BkZ,0BAAQ,EAAEhV,IAAI,CAACkZ,YAHgB;AAI/BlN,4BAAU,EAAEhM,IAAI,CAACjE,aAJc;AAK/BkZ,wBAAM,EAAEjV,IAAI,CAACiV,MALkB;AAM/BK,4BAAU,EAAEtV,IAAI,CAACmZ,OAAL,CAAa9Y,GANM;AAO/B4L,2BAAS,EAAEjM,IAAI,CAAChE,eAPe;AAQ/BkQ,6BAAW,EAAElM,IAAI,CAAC7D,oBARa;AAS/BgQ,2BAAS,EAAEnM,IAAI,CAAC5D,aATe;AAU/BV,2BAAS,EAAE,OAAI,CAACoZ,gBAAL,CAAsBpV,GAAtB,CAA0B,WAA1B,EAAuCa;AAVnB,iBAAjC;AAYD;AACF,aAhBD;AAiBA,iBAAKuU,gBAAL,CAAsBpV,GAAtB,CAA0B,WAA1B,EAAuCe,sBAAvC;AACD;;;iBAED,8BAAqB;AACnB;AACE,mBAAK2Y,WAAL,GAAmB5Z,IAAnB,CAAwB,KAAK6Z,WAAL,EAAxB;AACD;AACF;;;iBACD,6BAAoB1Y,IAApB,EAA0B;AACxB;AACE,mBAAKyY,WAAL,GAAmB5Z,IAAnB,CAAwB,KAAK8Z,cAAL,CAAoB3Y,IAApB,CAAxB;AACD;AACF;;;iBACD,kCAAyB;AACvB;AACE,mBAAK4Y,iBAAL,GAAyB/Z,IAAzB,CAA8B,KAAKga,iBAAL,EAA9B;AACD;AACF;;;iBACD,iCAAwB7Y,IAAxB,EAA8B;AAC5B;AACE,mBAAK4Y,iBAAL,GAAyB/Z,IAAzB,CAA8B,KAAKia,oBAAL,CAA0B9Y,IAA1B,CAA9B;AACD;AACF;;;iBACD,8BAAqB;AACnB;AACE,mBAAK+Y,WAAL,GAAmBla,IAAnB,CAAwB,KAAKma,WAAL,EAAxB;AACD;AACF;;;iBACD,6BAAoBhZ,IAApB,EAA0B;AACxB;AACE,mBAAK+Y,WAAL,GAAmBla,IAAnB,CAAwB,KAAKoa,cAAL,CAAoBjZ,IAApB,CAAxB;AACD;AACF;;;iBACD,gCAAuB;AACrB;AACE,mBAAKkZ,aAAL,GAAqBra,IAArB,CAA0B,KAAKsa,aAAL,EAA1B;AACD;AACF;;;iBACD,+BAAsBnZ,IAAtB,EAA4B;AAC1B;AACE,mBAAKkZ,aAAL,GAAqBra,IAArB,CAA0B,KAAKua,gBAAL,CAAsBpZ,IAAtB,CAA1B;AACD;AACF;;;iBACD,mBAAO;AACL,mBAAO,KAAKmU,gBAAL,CAAsBpV,GAAtB,CAA0B,SAA1B,CAAP;AACD;;;iBACD,eAAG;AACD,mBAAO,KAAKoV,gBAAL,CAAsBpV,GAAtB,CAA0B,aAA1B,CAAP;AACD;;;iBACD,yBAAa;AACX,mBAAO,KAAKoV,gBAAL,CAAsBpV,GAAtB,CAA0B,kBAA1B,CAAP;AACD;;;iBACD,0BAAc;AACZ,mBAAO,KAAKoV,gBAAL,CAAsBpV,GAAtB,CAA0B,mBAA1B,CAAP;AACD;;;iBACD,eAAG;AACD,mBAAO,KAAKoV,gBAAL,CAAsBpV,GAAtB,CAA0B,cAA1B,CAAP;AACD;;;iBACD,gBAAI;AACF,mBAAO,KAAKoV,gBAAL,CAAsBpV,GAAtB,CAA0B,eAA1B,CAAP;AACD;;;iBACD,mBAAO;AACL,mBAAO,KAAKoV,gBAAL,CAAsBpV,GAAtB,CAA0B,SAA1B,CAAP;AACD;;;iBACD,uBAAW;AACT,mBAAO,KAAKoV,gBAAL,CAAsBpV,GAAtB,CAA0B,WAA1B,CAAP;AACD;;;iBACD,6BAAiB;AACf,mBAAO,KAAKoV,gBAAL,CAAsBpV,GAAtB,CAA0B,cAA1B,CAAP;AACD;;;iBACD,yBAAa;AACX,mBAAO,KAAKoV,gBAAL,CAAsBpV,GAAtB,CAA0B,aAA1B,CAAP;AACD;;;iBACD,uBAAW;AACT,mBAAO,KAAKoV,gBAAL,CAAsBpV,GAAtB,CAA0B,UAA1B,CAAP;AACD;;;iBACD,uBAAW;AACT,mBAAO,KAAKxG,EAAL,CAAQqC,KAAR,CAAc;AACnB0X,uBAAS,EAAE,CAAC,EAAD;AADQ,aAAd,CAAP;AAGD;;;iBACD,wBAAetS,IAAf,EAAmB;AACjB,mBAAO,KAAKzH,EAAL,CAAQqC,KAAR,CAAc;AACnB0X,uBAAS,EAAEtS,IAAI,CAACsS;AADG,aAAd,CAAP;AAGD;;;iBACD,6BAAiB;AACf,mBAAO,KAAK/Z,EAAL,CAAQqC,KAAR,CAAc;AACnByX,2BAAa,EAAE,CAAC,EAAD;AADI,aAAd,CAAP;AAGD;;;iBACD,8BAAqBrS,IAArB,EAAyB;AACvB,mBAAO,KAAKzH,EAAL,CAAQqC,KAAR,CAAc;AACnByX,2BAAa,EAAErS,IAAI,CAACqS;AADD,aAAd,CAAP;AAGD;;;iBACD,uBAAW;AACT,mBAAO,KAAK9Z,EAAL,CAAQqC,KAAR,CAAc;AACnBqE,uBAAS,EAAE,CAAC,EAAD;AADQ,aAAd,CAAP;AAGD;;;iBACD,wBAAee,IAAf,EAAmB;AACjB,mBAAO,KAAKzH,EAAL,CAAQqC,KAAR,CAAc;AACnBqE,uBAAS,EAAE,CAAC,EAAD;AADQ,aAAd,CAAP;AAGD;;;iBACD,kBAASQ,KAAT,EAAc;AACZ,mBAAO,KAAKlH,EAAL,CAAQqC,KAAR,qBACJ,KAAKgV,WAAL,CAAiBnQ,KAAjB,EAAwBC,GADpB,EAC0B,CAAC,EAAD,CAD1B,EAAP;AAGD;;;iBACD,oBAAWD,KAAX,EAAgB;AACd,mBAAO,KAAKlH,EAAL,CAAQqC,KAAR,CAAc;AACnBye,iBAAG,EAAE,CAAC,EAAD;AADc,aAAd,CAAP;AAGD;;;iBACD,kBAAS5Z,KAAT,EAAc;AACZ,mBAAO,KAAKlH,EAAL,CAAQqC,KAAR,qBACJ,KAAK2X,oBAAL,CAA0B9S,KAA1B,EAAiCC,GAD7B,EACmC,CAAC,EAAD,CADnC,EAAP;AAGD;;;iBACD,mBAAUD,KAAV,EAAe;AACb,mBAAO,KAAKlH,EAAL,CAAQqC,KAAR,qBACJ,KAAK1B,YAAL,CAAkBuG,KAAlB,EAAyBC,GADrB,EAC2B,CAAC,EAAD,CAD3B,EAAP;AAGD;;;iBACD,iBAAQD,KAAR,EAAa;AACX,mBAAO,KAAKlH,EAAL,CAAQqC,KAAR,qBACJ,KAAK4X,uBAAL,CAA6B/S,KAA7B,EAAoCC,GADhC,EACsC,CAAC,EAAD,CADtC,EAAP;AAGD,W,CACD;AACA;AACA;;;;iBACA,yBAAa;AACX,mBAAO,KAAKnH,EAAL,CAAQqC,KAAR,CAAc;AACnB0c,0BAAY,EAAE,CAAC,EAAD,CADK;AAEnBtC,sBAAQ,EAAE,CAAC,EAAD,CAFS;AAGnBE,uBAAS,EAAE,CAAC,EAAD,CAHQ;AAInBoE,sBAAQ,EAAE,CAAC,EAAD,CAJS;AAKnBC,qBAAO,EAAE,CAAC,EAAD,CALU;AAMnBzc,kBAAI,EAAE,CAAC,EAAD;AANa,aAAd,CAAP;AAQD;;;iBACD,0BAAiBkD,IAAjB,EAAqB;AACnB,mBAAO,KAAKzH,EAAL,CAAQqC,KAAR,CAAc;AACnB0c,0BAAY,EAAEtX,IAAI,CAACsX,YADA;AAEnBtC,sBAAQ,EAAEhV,IAAI,CAACgV,QAFI;AAGnBE,uBAAS,EAAElV,IAAI,CAACkV,SAHG;AAInBoE,sBAAQ,EAAEtZ,IAAI,CAACsZ,QAJI;AAKnBC,qBAAO,EAAEvZ,IAAI,CAACuZ,OALK;AAMnBzc,kBAAI,EAAEkD,IAAI,CAAClD,IANQ,CASnB;AACA;AACA;AACA;;AAZmB,aAAd,CAAP;AAeD;;;iBACD,2BAAkBsC,CAAlB,EAAqB;AACnB,gBAAMC,IAAI,GAAc,KAAK8U,gBAAL,CAAsB7U,QAAtB,CAA+B,aAA/B,CAAxB;;AACA,gBAAID,IAAI,CAACE,MAAL,GAAc,CAAlB,EAAqB;AACnBF,kBAAI,CAACG,QAAL,CAAcJ,CAAd;AACD;AACF;;;iBACD,oBAAW;AACT,iBAAK6S,cAAL,GAAsB,IAAtB;AACA,iBAAKC,QAAL,GAAgB,KAAhB;AACD;;;iBACD,sBAAa;AACX,iBAAKA,QAAL,GAAgB,IAAhB;AACA,iBAAKD,cAAL,GAAsB,KAAtB;AACD;;;iBAcD,2BAAkB;AAChB,gBAAI,KAAKtP,KAAL,IAAc,OAAlB,EAA2B;AACzByJ,wBAAU,CAAC,YAAY;AAAEoN,sBAAM,CAACC,KAAP;AAAiB,eAAhC,EAAkC,IAAlC,CAAV;AACAjI,0BAAY,CAACC,OAAb,CAAqB,KAArB,EAA4B,GAA5B;AACD,aAJe,CAKhB;AACA;AACA;AACA;AACA;;;AACA3T,mBAAO,CAACC,GAAR,CAAY,WAAZ;AACAD,mBAAO,CAACC,GAAR,CAAY,KAAK2b,gBAAjB;AACD;;;iBAED,yBAAgB;AACd;AACA5b,mBAAO,CAACC,GAAR,CAAY,KAAKZ,aAAL,CAAmBqE,SAAnB,EAAZ;AACA,iBAAK2S,gBAAL,CAAsB7U,QAAtB,CAA+B,YAA/B,EAA6CmC,QAA7C,CAAsD,KAAKtE,aAAL,CAAmBqE,SAAnB,EAAtD;AACA,iBAAKE,YAAL,GAAoB,KAAKyS,gBAAL,CAAsB7U,QAAtB,CAA+B,YAA/B,EAA6CqC,OAAjE;AACD;;;iBACD,kBAAS;AACP7D,mBAAO,CAACC,GAAR,CAAY,QAAZ;AACA,iBAAKZ,aAAL,CAAmBoE,KAAnB;AAEA,iBAAKG,YAAL,GAAoB,KAAKyS,gBAAL,CAAsB7U,QAAtB,CAA+B,YAA/B,EAA6CuC,SAAjE;AACD;;;iBACD,sBAAa;AACX;AACA/D,mBAAO,CAACC,GAAR,CAAY,eAAZ,EAFW,CAIX;AACD;;;iBACD,yBAAgB;AACd;AACAD,mBAAO,CAACC,GAAR,CAAY,KAAKoO,aAAL,CAAmB3K,SAAnB,EAAZ;AACA,iBAAK2S,gBAAL,CAAsB7U,QAAtB,CAA+B,YAA/B,EAA6CmC,QAA7C,CAAsD,KAAK0K,aAAL,CAAmB3K,SAAnB,EAAtD;AACA,iBAAKmY,YAAL,GAAoB,KAAKxF,gBAAL,CAAsB7U,QAAtB,CAA+B,YAA/B,EAA6CqC,OAAjE;AACD;;;iBACD,kBAAS;AACP7D,mBAAO,CAACC,GAAR,CAAY,QAAZ;AACA,iBAAKoO,aAAL,CAAmB5K,KAAnB;AAEA,iBAAKoY,YAAL,GAAoB,KAAKxF,gBAAL,CAAsB7U,QAAtB,CAA+B,YAA/B,EAA6CuC,SAAjE;AACD;;;iBACD,sBAAa;AACX;AACA/D,mBAAO,CAACC,GAAR,CAAY,eAAZ,EAFW,CAIX;AACD;;;iBAED,yBAAgB;AAAA;;AACd,iBAAKtF,eAAL,CAAqBkX,aAArB,GAAqCnS,SAArC,CAA+C,UAACuC,GAAD,EAAc;AAC3D,qBAAI,CAAC6P,WAAL,GAAmB7P,GAAG,CAACC,IAAvB;AACAlC,qBAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgC,OAAI,CAAC6R,WAArC;;AACA,mBAAK,IAAIxQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,OAAI,CAACwQ,WAAL,CAAiBrQ,MAArC,EAA6CH,CAAC,EAA9C,EAAkD;AAChD;AACA,uBAAI,CAACwa,OAAL,GAAe/a,IAAf,CAAoB,OAAI,CAACgb,QAAL,CAAcza,CAAd,CAApB;AACD;AACF,aAPD;AAQD;;;iBAED,qBAAY;AAAA;;AACV,iBAAK3G,eAAL,CAAqB4F,SAArB,GAAiCb,SAAjC,CAA2C,UAACuC,GAAD,EAAc;AACvD;AACA,qBAAI,CAAC7G,YAAL,GAAoB6G,GAAG,CAACC,IAAxB;;AACA,mBAAK,IAAIZ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,OAAI,CAAClG,YAAL,CAAkBqG,MAAtC,EAA8CH,CAAC,EAA/C,EAAmD;AACjD,uBAAI,CAACjG,MAAL,CAAYiG,CAAZ,IAAiB,CAAjB;;AACA,uBAAI,CAAC0a,GAAL,GAAWjb,IAAX,CAAgB,OAAI,CAACkb,SAAL,CAAe3a,CAAf,CAAhB;;AACA,uBAAI,CAAC4a,IAAL,GAAYnb,IAAZ,CAAiB,OAAI,CAACkb,SAAL,CAAe3a,CAAf,CAAjB;AACD;AACF,aARD;AASD;;;iBACD,6BAAoB;AAAA;;AAClB,iBAAK3G,eAAL,CAAqB0F,iBAArB,GAAyCX,SAAzC,CAAmD,UAACuC,GAAD,EAAc;AAC/D,qBAAI,CAACE,WAAL,GAAmBF,GAAG,CAACC,IAAvB,CAD+D,CAE/D;AACD,aAHD;AAID;;;iBACD,0BAAiB;AAAA;;AACf,iBAAKvH,eAAL,CAAqBwhB,UAArB,GAAkCzc,SAAlC,CAA4C,UAACuC,GAAD,EAAc;AACxD;AACA,qBAAI,CAACwS,oBAAL,GAA4BxS,GAAG,CAACC,IAAhC;;AACA,mBAAK,IAAIZ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,OAAI,CAACmT,oBAAL,CAA0BhT,MAA9C,EAAsDH,CAAC,EAAvD,EAA2D;AACzD,uBAAI,CAACiU,OAAL,CAAajU,CAAb,IAAkB,CAAlB;;AACA,uBAAI,CAAC8a,aAAL,GAAqBrb,IAArB,CAA0B,OAAI,CAACsb,QAAL,CAAc/a,CAAd,CAA1B;;AACA,uBAAI,CAACgb,cAAL,GAAsBvb,IAAtB,CAA2B,OAAI,CAACsb,QAAL,CAAc/a,CAAd,CAA3B;AACD;AACF,aARD;AASD;;;iBACD,2BAAkB;AAAA;;AAChB,gBAAIib,IAAI,GAAG,MAAX;AACA,iBAAK5hB,eAAL,CAAqB6hB,eAArB,CAAqCD,IAArC,EAA2C7c,SAA3C,CAAqD,UAACuC,GAAD,EAAS;AAC5D,qBAAI,CAACwS,oBAAL,GAA4BxS,GAAG,CAACC,IAAJ,CAAS,CAAT,EAAYua,aAAxC,CAD4D,CAE5D;;AACA,mBAAK,IAAInb,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,OAAI,CAACmT,oBAAL,CAA0BhT,MAA9C,EAAsDH,CAAC,EAAvD,EAA2D;AACzD,uBAAI,CAACiU,OAAL,CAAajU,CAAb,IAAkB,CAAlB;AACD;AACF,aAND;AAOD;;;iBACD,yBAAgB;AAAA;;AACd,iBAAK3G,eAAL,CAAqBud,aAArB,GAAqCxY,SAArC,CAA+C,UAACuC,GAAD,EAAS;AACtD,qBAAI,CAACyS,uBAAL,GAA+BzS,GAAG,CAACC,IAAnC,CADsD,CAEtD;AACA;AACA;AACA;;AACA,mBAAK,IAAIZ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,OAAI,CAACoT,uBAAL,CAA6BjT,MAAjD,EAAyDH,CAAC,EAA1D,EAA8D;AAC5D,uBAAI,CAACoU,UAAL,CAAgBpU,CAAhB,IAAqB,CAArB;;AACA,uBAAI,CAACob,OAAL,GAAe3b,IAAf,CAAoB,OAAI,CAAC4b,OAAL,CAAarb,CAAb,CAApB;AACD;AACF,aAVD;AAWD;;;iBACD,wBAAe;AAAA;;AACb,iBAAK3G,eAAL,CAAqBiiB,aAArB,GAAqCld,SAArC,CAA+C,UAACuC,GAAD,EAAc;AAC3D;AACA,qBAAI,CAAC2S,UAAL,GAAkB3S,GAAG,CAACC,IAAtB;AACD,aAHD;AAID;;;iBACD,6BAAoB;AAAA;;AAClB,iBAAKvH,eAAL,CAAqBkiB,kBAArB,GAA0Cnd,SAA1C,CAAoD,UAACuC,GAAD,EAAc;AAChE;AACA,qBAAI,CAAC4S,eAAL,GAAuB5S,GAAG,CAACC,IAA3B;AACD,aAHD;AAID;;;iBAGD,sBAAaoB,IAAb,EAAmB6B,KAAnB,EAA0B7D,CAA1B,EAA6B6C,CAA7B,EAAgC;AAAA;;AAC9BnE,mBAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBqD,IAAtB,EAA4B6B,KAA5B,EAAmC7D,CAAnC;AACAtB,mBAAO,CAACC,GAAR,CAAY,KAAK0V,eAAL,CAAqBrU,CAArB,CAAZ;AAEA,+DAAK4D,IAAL,CAAU;AACRC,mBAAK,EAAE,eADC;AAERkH,kBAAI,oCAA4BlH,KAA5B,QAFI;AAGRmH,kBAAI,EAAE,SAHE;AAIRC,8BAAgB,EAAE,IAJV;AAKRC,gCAAkB,EAAE,SALZ;AAMRC,+BAAiB,EAAE,MANX;AAORC,+BAAiB,EAAE;AAPX,aAAV,EAQG5H,IARH,CAQQ,UAAC6H,MAAD,EAAY;AAClB,kBAAIA,MAAM,CAAC7K,KAAX,EAAkB;AAChB,oBAAIwB,IAAI,KAAK,iBAAb,EAAgC;AAC9B,yBAAI,CAACqS,eAAL,CAAqBrU,CAArB,EAAwB8Y,eAAxB,CAAwChW,MAAxC,CAA+CD,CAA/C,EAAkD,CAAlD;AACD;;AACD,oBAAIb,IAAI,KAAK,YAAb,EAA2B;AACzB,yBAAI,CAACqS,eAAL,CAAqBrU,CAArB,EAAwB+Y,oBAAxB,CAA6CjW,MAA7C,CAAoDD,CAApD,EAAuD,CAAvD;AACD;AACF;AACF,aAjBD;AAkBD;;;iBACD,yBAAgBF,CAAhB,EAAmB0Y,OAAnB,EAA4Brb,CAA5B,EAA+B;AAC7BtB,mBAAO,CAACC,GAAR,CAAY,GAAZ,EAAiBgE,CAAC,CAACb,MAAF,CAASc,OAA1B;AACA,gBAAIqW,CAAC,GAAG,KAAKlE,gBAAL,CAAsB7U,QAAtB,CAA+B,SAA/B,CAAR;AACA,gBAAIgZ,CAAC,GAAGD,CAAC,CAAC/Y,QAAF,CAAWF,CAAX,CAAR;;AACA,gBAAI2C,CAAC,CAACb,MAAF,CAASc,OAAb,EAAsB;AACpBsW,eAAC,CAAChZ,QAAF,CAAWmb,OAAX,EAAoBhZ,QAApB,CAA6B,oBAA7B;AACD,aAFD,MAGK;AACH6W,eAAC,CAAChZ,QAAF,CAAWmb,OAAX,EAAoBnR,KAApB;AACD;AACF;;;iBACD,sBAAavH,CAAb,EAAgB6Y,IAAhB,EAAsBxb,CAAtB,EAAyB;AACvBtB,mBAAO,CAACC,GAAR,CAAY,GAAZ,EAAiBgE,CAAC,CAACb,MAAF,CAASc,OAA1B;AACA,gBAAIqW,CAAC,GAAG,KAAKlE,gBAAL,CAAsB7U,QAAtB,CAA+B,kBAA/B,CAAR;AACA,gBAAIgZ,CAAC,GAAGD,CAAC,CAAC/Y,QAAF,CAAWF,CAAX,CAAR;;AACA,gBAAI2C,CAAC,CAACb,MAAF,CAASc,OAAb,EAAsB;AACpBsW,eAAC,CAAChZ,QAAF,CAAWsb,IAAX,EAAiBnZ,QAAjB,CAA0B,6DAA1B;AACD,aAFD,MAGK;AACH6W,eAAC,CAAChZ,QAAF,CAAWsb,IAAX,EAAiBtR,KAAjB;AACD;AACF;;;iBACD,qBAAYvH,CAAZ,EAAe+X,GAAf,EAAoB1a,CAApB,EAAuB;AACrBtB,mBAAO,CAACC,GAAR,CAAY,GAAZ,EAAiBgE,CAAC,CAACb,MAAF,CAASc,OAA1B;AACA,gBAAIqW,CAAC,GAAG,KAAKlE,gBAAL,CAAsB7U,QAAtB,CAA+B,cAA/B,CAAR;AACA,gBAAIgZ,CAAC,GAAGD,CAAC,CAAC/Y,QAAF,CAAWF,CAAX,CAAR;;AACA,gBAAI2C,CAAC,CAACb,MAAF,CAASc,OAAb,EAAsB;AACpBsW,eAAC,CAAChZ,QAAF,CAAWwa,GAAX,EAAgBrY,QAAhB,CAAyB,sBAAzB;AACD,aAFD,MAGK;AACH6W,eAAC,CAAChZ,QAAF,CAAWwa,GAAX,EAAgBxQ,KAAhB;AACD;AACF;;;iBACD,uBAAcvH,CAAd,EAAiB6Y,IAAjB,EAAuBxb,CAAvB,EAA0B;AACxBtB,mBAAO,CAACC,GAAR,CAAY,GAAZ,EAAiBgE,CAAC,CAACb,MAAF,CAASc,OAA1B;AACA,gBAAIqW,CAAC,GAAG,KAAKlE,gBAAL,CAAsB7U,QAAtB,CAA+B,mBAA/B,CAAR;AACA,gBAAIgZ,CAAC,GAAGD,CAAC,CAAC/Y,QAAF,CAAWF,CAAX,CAAR;;AACA,gBAAI2C,CAAC,CAACb,MAAF,CAASc,OAAb,EAAsB;AACpBsW,eAAC,CAAChZ,QAAF,CAAWsb,IAAX,EAAiBnZ,QAAjB,CAA0B,6DAA1B;AACD,aAFD,MAGK;AACH6W,eAAC,CAAChZ,QAAF,CAAWsb,IAAX,EAAiBtR,KAAjB;AACD;AACF;;;iBACD,sBAAavH,CAAb,EAAgB+X,GAAhB,EAAqB1a,CAArB,EAAwB;AACtBtB,mBAAO,CAACC,GAAR,CAAY,GAAZ,EAAiBgE,CAAC,CAACb,MAAF,CAASc,OAA1B;AACA,gBAAIqW,CAAC,GAAG,KAAKlE,gBAAL,CAAsB7U,QAAtB,CAA+B,eAA/B,CAAR;AACA,gBAAIgZ,CAAC,GAAGD,CAAC,CAAC/Y,QAAF,CAAWF,CAAX,CAAR;;AACA,gBAAI2C,CAAC,CAACb,MAAF,CAASc,OAAb,EAAsB;AACpBsW,eAAC,CAAChZ,QAAF,CAAWwa,GAAX,EAAgBrY,QAAhB,CAAyB,sBAAzB;AACD,aAFD,MAGK;AACH6W,eAAC,CAAChZ,QAAF,CAAWwa,GAAX,EAAgBxQ,KAAhB;AACD;AACF;;;iBACD,yBAAgBvH,CAAhB,EAAmB8Y,WAAnB,EAAgC;AAAA;;AAC9B;AAEA/c,mBAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBgE,CAAC,CAACb,MAAF,CAAStB,KAA9B,EAAqCib,WAArC;AACA,gBAAIxb,IAAI,GAAG0C,CAAC,CAACb,MAAF,CAAStB,KAApB;;AACA,gBAAImC,CAAC,CAACb,MAAF,CAASc,OAAb,EAAsB;AACpB,mBAAKyQ,UAAL,CAAgB5T,IAAhB,CAAqBQ,IAArB;AACAvB,qBAAO,CAACC,GAAR,CAAY,aAAZ,EAA2B8c,WAA3B;AAEA,mBAAKpH,eAAL,CAAqB5U,IAArB,CAA0Bgc,WAA1B;AACD,aALD,MAKO;AACL,mBAAKpI,UAAL,CAAgB9S,OAAhB,CAAwB,UAACN,IAAD,EAAO4C,CAAP,EAAa;AACnC,oBAAI5C,IAAI,IAAI0C,CAAC,CAACb,MAAF,CAAStB,KAArB,EAA4B;AAC1B,yBAAI,CAAC6S,UAAL,CAAgBvQ,MAAhB,CAAuBD,CAAvB,EAA0B,CAA1B;;AACA,yBAAI,CAACwR,eAAL,CAAqBvR,MAArB,CAA4BD,CAA5B,EAA+B,CAA/B;;AACA;AACD;AACF,eAND;AAOD;;AAED,iBAAK,IAAI6Y,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKzH,OAAL,CAAa9T,MAAjC,EAAyCub,CAAC,EAA1C,EAA8C;AAC5C,mBAAKzH,OAAL,CAAayH,CAAb,IAAkB,CAAlB;AACA,kBAAIzC,CAAC,GAAG,KAAKlE,gBAAL,CAAsB7U,QAAtB,CAA+B,kBAA/B,CAAR;AACA,kBAAIyb,EAAE,GAAG,KAAK5G,gBAAL,CAAsB7U,QAAtB,CAA+B,mBAA/B,CAAT;AACA,kBAAIgZ,CAAC,GAAGD,CAAC,CAAC/Y,QAAF,CAAWwb,CAAX,CAAR;AACA,kBAAIE,EAAE,GAAGD,EAAE,CAACzb,QAAH,CAAYwb,CAAZ,CAAT;;AACAxC,eAAC,CAAChZ,QAAF,CAAW,KAAKiT,oBAAL,CAA0BuI,CAA1B,EAA6Bpb,GAAxC,EAA6C4J,KAA7C;;AACA0R,gBAAE,CAAC1b,QAAH,CAAY,KAAKiT,oBAAL,CAA0BuI,CAA1B,EAA6Bpb,GAAzC,EAA8C4J,KAA9C;AACD;;AACD,iBAAK,IAAIwR,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAG,KAAK3hB,MAAL,CAAYoG,MAAhC,EAAwCub,EAAC,EAAzC,EAA6C;AAC3C,mBAAK3hB,MAAL,CAAY2hB,EAAZ,IAAiB,CAAjB;AACA,kBAAIzC,EAAC,GAAG,KAAKlE,gBAAL,CAAsB7U,QAAtB,CAA+B,cAA/B,CAAR;AACA,kBAAIgZ,EAAC,GAAGD,EAAC,CAAC/Y,QAAF,CAAWwb,EAAX,CAAR;;AACAxC,gBAAC,CAAChZ,QAAF,CAAW,KAAKpG,YAAL,CAAkB4hB,EAAlB,EAAqBpb,GAAhC,EAAqC4J,KAArC;;AACA,kBAAIyR,GAAE,GAAG,KAAK5G,gBAAL,CAAsB7U,QAAtB,CAA+B,eAA/B,CAAT;AACA,kBAAI0b,GAAE,GAAGD,GAAE,CAACzb,QAAH,CAAYwb,EAAZ,CAAT;;AACAE,iBAAE,CAAC1b,QAAH,CAAY,KAAKpG,YAAL,CAAkB4hB,EAAlB,EAAqBpb,GAAjC,EAAsC4J,KAAtC;AACD;;AACD,iBAAK,IAAIwR,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAG,KAAKtH,UAAL,CAAgBjU,MAApC,EAA4Cub,GAAC,EAA7C,EAAiD;AAC/C,mBAAKtH,UAAL,CAAgBsH,GAAhB,IAAqB,CAArB;AACA,kBAAIzC,GAAC,GAAG,KAAKlE,gBAAL,CAAsB7U,QAAtB,CAA+B,SAA/B,CAAR;AACA,kBAAIgZ,GAAC,GAAGD,GAAC,CAAC/Y,QAAF,CAAWwb,GAAX,CAAR;;AACAxC,iBAAC,CAAChZ,QAAF,CAAW,KAAKkT,uBAAL,CAA6BsI,GAA7B,EAAgCpb,GAA3C,EAAgD4J,KAAhD;AACD;;AACD,iBAAK6I,YAAL,GAAoB,KAApB;AACArU,mBAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+B,KAAK0V,eAApC;AAEA,iBAAKA,eAAL,CAAqB9T,OAArB,CAA6B,UAACiL,OAAD,EAAa;AACxC;AAEA,kBAAIA,OAAO,CAACqQ,QAAR,IAAoB,KAAxB,EAA+B;AAC7B,uBAAI,CAAC9I,YAAL,GAAoB,IAApB;AACD;;AAEDvH,qBAAO,CAACgQ,IAAR,CAAajb,OAAb,CAAqB,UAACN,IAAD,EAAU;AAC7B,uBAAI,CAACkT,oBAAL,CAA0B5S,OAA1B,CAAkC,UAACub,QAAD,EAAWzb,KAAX,EAAqB;AACrD,sBAAIyb,QAAQ,CAACxb,GAAT,KAAiBL,IAArB,EAA2B;AACzB,2BAAI,CAACgU,OAAL,CAAa5T,KAAb,IAAsB,CAAtB;AACA,wBAAI4Y,GAAC,GAAG,OAAI,CAAClE,gBAAL,CAAsB7U,QAAtB,CAA+B,kBAA/B,CAAR;AACA,wBAAIgZ,GAAC,GAAGD,GAAC,CAAC/Y,QAAF,CAAWG,KAAX,CAAR;;AACA6Y,uBAAC,CAAChZ,QAAF,CAAW,OAAI,CAACiT,oBAAL,CAA0B9S,KAA1B,EAAiCC,GAA5C,EAAiD+B,QAAjD,CAA0D,6DAA1D;;AACA,wBAAIsZ,IAAE,GAAG,OAAI,CAAC5G,gBAAL,CAAsB7U,QAAtB,CAA+B,mBAA/B,CAAT;AACA,wBAAI0b,GAAE,GAAGD,IAAE,CAACzb,QAAH,CAAYG,KAAZ,CAAT;;AACAub,uBAAE,CAAC1b,QAAH,CAAY,OAAI,CAACiT,oBAAL,CAA0B9S,KAA1B,EAAiCC,GAA7C,EAAkD+B,QAAlD,CAA2D,6DAA3D,EAPyB,CAQzB;;;AACA3D,2BAAO,CAACC,GAAR,CAAY,GAAZ,EAAiBua,GAAC,CAAChZ,QAAF,CAAW,OAAI,CAACiT,oBAAL,CAA0B9S,KAA1B,EAAiCC,GAA5C,EAAiDE,KAAlE;AACD;AACF,iBAZD;AAaD,eAdD;AAeAgL,qBAAO,CAAChR,GAAR,CAAY+F,OAAZ,CAAoB,UAACN,IAAD,EAAU;AAC5B,uBAAI,CAACnG,YAAL,CAAkByG,OAAlB,CAA0B,UAACwb,OAAD,EAAU1b,KAAV,EAAoB;AAC5C,sBAAI0b,OAAO,CAACzb,GAAR,KAAgBL,IAApB,EAA0B;AACxB,2BAAI,CAAClG,MAAL,CAAYsG,KAAZ,IAAqB,CAArB;AACA,wBAAI4Y,IAAC,GAAG,OAAI,CAAClE,gBAAL,CAAsB7U,QAAtB,CAA+B,cAA/B,CAAR;AACA,wBAAIgZ,GAAC,GAAGD,IAAC,CAAC/Y,QAAF,CAAWG,KAAX,CAAR;;AACA6Y,uBAAC,CAAChZ,QAAF,CAAW,OAAI,CAACpG,YAAL,CAAkBuG,KAAlB,EAAyBC,GAApC,EAAyC+B,QAAzC,CAAkD,sBAAlD;;AACA,wBAAIsZ,IAAE,GAAG,OAAI,CAAC5G,gBAAL,CAAsB7U,QAAtB,CAA+B,eAA/B,CAAT;AACA,wBAAI0b,GAAE,GAAGD,IAAE,CAACzb,QAAH,CAAYG,KAAZ,CAAT;;AACAub,uBAAE,CAAC1b,QAAH,CAAY,OAAI,CAACpG,YAAL,CAAkBuG,KAAlB,EAAyBC,GAArC,EAA0C+B,QAA1C,CAAmD,sBAAnD;AACD;AACF,iBAVD;AAWD,eAZD;AAaAmJ,qBAAO,CAAC8K,OAAR,CAAgB/V,OAAhB,CAAwB,UAAA2P,GAAG,EAAI;AAC7B,uBAAI,CAACkD,uBAAL,CAA6B7S,OAA7B,CAAqC,UAACN,IAAD,EAAOI,KAAP,EAAiB;AACpD,sBAAIJ,IAAI,CAACK,GAAL,KAAa4P,GAAjB,EAAsB;AACpBxR,2BAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBsB,IAApB;AACAvB,2BAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBuR,GAAnB;AACA,2BAAI,CAACkE,UAAL,CAAgB/T,KAAhB,IAAyB,CAAzB;AACA,wBAAI4Y,IAAC,GAAG,OAAI,CAAClE,gBAAL,CAAsB7U,QAAtB,CAA+B,SAA/B,CAAR;AACA,wBAAIgZ,GAAC,GAAGD,IAAC,CAAC/Y,QAAF,CAAWG,KAAX,CAAR;;AACA6Y,uBAAC,CAAChZ,QAAF,CAAW,OAAI,CAACkT,uBAAL,CAA6B/S,KAA7B,EAAoCC,GAA/C,EAAoD+B,QAApD,CAA6D,oBAA7D;AACD;AACF,iBATD;AAUD,eAXD;AAYD,aA/CD,EA/C8B,CA+F9B;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA,mBAAO,KAAKgX,WAAL,GAAmBlZ,MAA1B,EAAkC;AAChC,mBAAKkZ,WAAL,GAAmBjZ,QAAnB,CAA4B,CAA5B;AACD;;AACD,mBAAO,KAAKoZ,iBAAL,GAAyBrZ,MAAhC,EAAwC;AACtC,mBAAKqZ,iBAAL,GAAyBpZ,QAAzB,CAAkC,CAAlC;AACD;;AACD,mBAAO,KAAKuZ,WAAL,GAAmBxZ,MAA1B,EAAkC;AAChC,mBAAKwZ,WAAL,GAAmBvZ,QAAnB,CAA4B,CAA5B;AACD;;AACD,iBAAKoU,cAAL,GAAsB,EAAtB;AACA,iBAAKH,eAAL,CAAqB9T,OAArB,CAA6B,UAACK,IAAD,EAAOZ,CAAP,EAAa;AACxC,qBAAI,CAACgc,kBAAL;;AACA,qBAAI,CAACC,sBAAL;;AACA,qBAAI,CAACC,kBAAL;;AACA,qBAAI,CAACvC,WAAL,GACGzZ,QADH,CACYF,CADZ,EACeL,GADf,CACmB,WADnB,EAEG0C,QAFH,CAEYzB,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAEmC,KAFlB;;AAGA,qBAAI,CAACsW,WAAL,GAAmBnZ,QAAnB,CAA4BF,CAA5B,EAA+BL,GAA/B,CAAmC,WAAnC,EAAgD0C,QAAhD,CAAyDzB,IAAI,CAACsS,SAA9D;;AACA,qBAAI,CAACsG,iBAAL,GACGtZ,QADH,CACYF,CADZ,EACeL,GADf,CACmB,eADnB,EAEG0C,QAFH,CAEYzB,IAAI,CAACqV,YAFjB;;AAGAvX,qBAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBiC,IAApB;AACAA,kBAAI,CAACub,WAAL,CAAiB5b,OAAjB,CAAyB,UAACiL,OAAD,EAAUnL,KAAV,EAAoB;AAC3C,uBAAI,CAACmU,cAAL,CAAoB/U,IAApB,CAAyB+L,OAAzB,EAD2C,CAE3C;;AACD,eAHD;AAKA9M,qBAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B,OAAI,CAAC6V,cAAnC;AACA,kBAAI4H,KAAK,GAAG,IAAIC,GAAJ,EAAZ;;AACA,qBAAI,CAAC7H,cAAL,CAAoBjU,OAApB,CAA4B,UAACN,IAAD,EAAU;AACpC,oBAAImc,KAAK,CAACE,GAAN,CAAUrc,IAAV,CAAJ,EAAqB;AACnBmc,uBAAK,CAACla,GAAN,CAAUjC,IAAV,EAAgBmc,KAAK,CAACzc,GAAN,CAAUM,IAAV,IAAkB,CAAlC;AACD,iBAFD,MAEO;AACLmc,uBAAK,CAACla,GAAN,CAAUjC,IAAV,EAAgB,CAAhB;AACD;AACF,eAND;;AAOA,qBAAI,CAACuU,cAAL,GAAsB+H,KAAK,CAACC,IAAN,CAAW,IAAIC,GAAJ,CAAQ,OAAI,CAACjI,cAAL,CAAoBkI,GAApB,CAAwB,UAAAvP,CAAC;AAAA,uBAAIwP,IAAI,CAACC,SAAL,CAAezP,CAAf,CAAJ;AAAA,eAAzB,CAAR,CAAX,EAAqEuP,GAArE,CAAyE,UAAA3M,CAAC;AAAA,uBAAI4M,IAAI,CAACE,KAAL,CAAW9M,CAAX,CAAJ;AAAA,eAA1E,CAAtB;AACArR,qBAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B,OAAI,CAAC6V,cAAnC,EAAmD4H,KAAnD;AACD,aA5BD;AA6BD;;;iBACD,2BAAkB;AAAA;;AAChB,iBAAK/iB,eAAL,CAAqByF,eAArB,GAAuCV,SAAvC,CAAiD,UAACuC,GAAD,EAAc;AAC7D,qBAAI,CAACvG,aAAL,GAAqBuG,GAAG,CAACC,IAAzB;AACD,aAFD;AAGD;;;iBACD,uBAAc;AAAA;;AACZ,iBAAKvH,eAAL,CAAqBgG,WAArB,GAAmCjB,SAAnC,CAA6C,UAACuC,GAAD,EAAc;AACzD,qBAAI,CAACoC,KAAL,GAAapC,GAAG,CAACC,IAAjB;AACD,aAFD;AAGD;;;iBACD,mCAA0B;AAAA;;AACxB,iBAAKvH,eAAL,CAAqByjB,cAArB,GAAsC1e,SAAtC,CAAgD,UAACuC,GAAD,EAAc;AAC5D,qBAAI,CAACsS,aAAL,GAAqBtS,GAAG,CAACC,IAAzB;AACD,aAFD;AAGD;;;iBACD,2BAAkB;AAAA;;AAChB,iBAAKvH,eAAL,CAAqB0d,eAArB,GAAuC3Y,SAAvC,CAAiD,UAACuC,GAAD,EAAc;AAC7D,qBAAI,CAACuS,SAAL,GAAiBvS,GAAG,CAACC,IAArB;AACD,aAFD;AAGD;;;iBACD,0BAAiB;AAAA;;AACf,iBAAKvH,eAAL,CAAqB2d,cAArB,GAAsC5Y,SAAtC,CAAgD,UAACuC,GAAD,EAAc;AAC5D,qBAAI,CAAC4T,YAAL,GAAoB5T,GAAG,CAACC,IAAxB;AAED,aAHD;AAID;;;iBACD,cAAKgB,KAAL,EAAmC;AAAA;;AACjC,2FACE,KAAKyS,eADP,EAEEzS,KAAK,CAACmb,aAFR,EAGEnb,KAAK,CAACob,YAHR;;AAKA,mBAAO,KAAK3D,WAAL,GAAmBlZ,MAA1B,EAAkC;AAChC,mBAAKkZ,WAAL,GAAmBjZ,QAAnB,CAA4B,CAA5B;AACD;;AACD,mBAAO,KAAKoZ,iBAAL,GAAyBrZ,MAAhC,EAAwC;AACtC,mBAAKqZ,iBAAL,GAAyBpZ,QAAzB,CAAkC,CAAlC;AACD;;AACD,mBAAO,KAAKuZ,WAAL,GAAmBxZ,MAA1B,EAAkC;AAChC,mBAAKwZ,WAAL,GAAmBvZ,QAAnB,CAA4B,CAA5B;AACD;;AACD,iBAAKoU,cAAL,GAAsB,EAAtB;AACA,iBAAKH,eAAL,CAAqB9T,OAArB,CAA6B,UAACK,IAAD,EAAOZ,CAAP,EAAa;;;AACxC,qBAAI,CAACgc,kBAAL;;AACA,qBAAI,CAACC,sBAAL;;AACA,qBAAI,CAACC,kBAAL;;AACA,qBAAI,CAACvC,WAAL,GACGzZ,QADH,CACYF,CADZ,EACeL,GADf,CACmB,WADnB,EAEG0C,QAFH,CAEY,CAAD,KAACzB,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAEqc,OAAN,MAAa,IAAb,IAAa,aAAb,GAAa,MAAb,GAAa,GAAE3c,GAF3B;;AAGA,qBAAI,CAAC+Y,WAAL,GAAmBnZ,QAAnB,CAA4BF,CAA5B,EAA+BL,GAA/B,CAAmC,WAAnC,EAAgD0C,QAAhD,CAAyDzB,IAAI,CAACsS,SAA9D;;AACA,qBAAI,CAACsG,iBAAL,GACGtZ,QADH,CACYF,CADZ,EACeL,GADf,CACmB,eADnB,EAEG0C,QAFH,CAEYzB,IAAI,CAACqV,YAFjB;;AAGAvX,qBAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBiC,IAApB;AAEAA,kBAAI,CAACub,WAAL,CAAiB5b,OAAjB,CAAyB,UAACiL,OAAD,EAAa;AACpC,uBAAI,CAACgJ,cAAL,CAAoB/U,IAApB,CAAyB+L,OAAzB;AACD,eAFD;AAGD,aAhBD;AAiBA9M,mBAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B,KAAK6V,cAAnC;AACD;;;iBACD,iBAAQxS,IAAR,EAAchC,CAAd,EAAiB;AAAA;;AACf,gBAAMuK,SAAS,GAAG,KAAK8G,MAAL,CAAY6L,IAAZ,CAAiB,6EAAjB,EAAmC;AACnDC,mBAAK,EAAE,OAD4C;AAEnD;AACAvc,kBAAI,EAAE;AACJoB,oBAAI,EAAEA,IADF;AAEJ6B,qBAAK,EAAE;AAFH;AAH6C,aAAnC,CAAlB;AASA0G,qBAAS,CAAC6S,WAAV,GAAwBhf,SAAxB,CAAkC,UAACiN,MAAD,EAAY;AAC5C,kBAAIzK,IAAI,GAAG;AACTiD,qBAAK,EAAEwH,MADE;AAET9M,kBAAE,EAAE;AAFK,eAAX;;AAIA,kBAAIyD,IAAI,KAAK,iBAAT,IAA8BqJ,MAAM,IAAI,OAA5C,EAAqD;AAEnD,uBAAI,CAACgJ,eAAL,CAAqBrU,CAArB,EAAwB8Y,eAAxB,CAAwCrZ,IAAxC,CAA6CmB,IAA7C;AACD;;AACD,kBAAIoB,IAAI,KAAK,YAAT,IAAyBqJ,MAAM,IAAI,OAAvC,EAAgD;AAC9C,uBAAI,CAACgJ,eAAL,CAAqBrU,CAArB,EAAwB+Y,oBAAxB,CAA6CtZ,IAA7C,CAAkDmB,IAAlD;AACD;;AAEDlC,qBAAO,CAACC,GAAR,CAAY,uBAAZ;AACD,aAdD;AAeD;;;iBACD,oBAAWqD,IAAX,EAAiB6B,KAAjB,EAAwB7D,CAAxB,EAA2B;AAAA;;AACzB,gBAAMuK,SAAS,GAAG,KAAK8G,MAAL,CAAY6L,IAAZ,CAAiB,6EAAjB,EAAmC;AACnDC,mBAAK,EAAE,OAD4C;AAEnD;AACAvc,kBAAI,EAAE;AACJoB,oBAAI,EAAEA,IADF;AAEJ6B,qBAAK,EAAEA;AAFH;AAH6C,aAAnC,CAAlB;AASA0G,qBAAS,CAAC6S,WAAV,GAAwBhf,SAAxB,CAAkC,UAACiN,MAAD,EAAY;AAC5C,kBAAIzK,IAAI,GAAG;AACTiD,qBAAK,EAAEwH,MADE;AAET9M,kBAAE,EAAE;AAFK,eAAX;;AAIA,kBAAIyD,IAAI,KAAK,qBAAT,IAAkCqJ,MAAM,IAAI,OAAhD,EAAyD;AAEvD,uBAAI,CAACgJ,eAAL,CAAqBrU,CAArB,EAAwB8Y,eAAxB,CAAwC9Y,CAAxC,IAA6CY,IAA7C;AACD;;AACD,kBAAIoB,IAAI,KAAK,gBAAT,IAA6BqJ,MAAM,IAAI,OAA3C,EAAoD;AAClD,uBAAI,CAACgJ,eAAL,CAAqBrU,CAArB,EAAwB+Y,oBAAxB,CAA6C/Y,CAA7C,IAAkDY,IAAlD;AACD;;AAEDlC,qBAAO,CAACC,GAAR,CAAY,uBAAZ;AAED,aAfD;AAgBD;;;iBACD,uBAAc;AAAA;;AACZ,gBAAM4L,SAAS,GAAG,KAAK8G,MAAL,CAAY6L,IAAZ,CAAiB,6EAAjB,EAAmC;AACnDC,mBAAK,EAAE,OAD4C;AAEnD;AACAvc,kBAAI,EAAE;AACJoB,oBAAI,EAAE,UADF;AAEJ6B,qBAAK,EAAE;AAFH;AAH6C,aAAnC,CAAlB;AAUA0G,qBAAS,CAAC6S,WAAV,GAAwBhf,SAAxB,CAAkC,UAACiN,MAAD,EAAY;AAC5C,kBAAIA,MAAM,IAAI,OAAV,IAAqBA,MAAzB,EAAiC;AAC/B,oBAAIzK,IAAI,GAAG;AACTiD,uBAAK,EAAEwH;AADE,iBAAX;;AAGA,uBAAI,CAAChS,eAAL,CAAqBgkB,WAArB,CAAiCzc,IAAjC,EAAuCxC,SAAvC,CAAiD,UAACuC,GAAD,EAAc;AAC7D,yBAAI,CAACqW,cAAL;AACD,iBAFD;AAGD;;AACDtY,qBAAO,CAACC,GAAR,CAAY,uBAAZ;AACD,aAVD;AAWD;;;iBACD,2BAAkB;AAAA;;AAChB,iBAAKtF,eAAL,CAAqB8d,eAArB,GAAuC/Y,SAAvC,CAAiD,UAACuC,GAAD,EAAc;AAC7DjC,qBAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCgC,GAAG,CAACC,IAAtC;AACA,qBAAI,CAAC6T,aAAL,GAAqB9T,GAAG,CAACC,IAAzB;AAED,aAJD;AAKD;;;iBAED,sBAAa;AAAA;;AACX,iBAAKvH,eAAL,CAAqBikB,YAArB,GAAoClf,SAApC,CAA8C,UAACuC,GAAD,EAAc;AAC1DjC,qBAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BgC,GAA3B;AACA,qBAAI,CAAC+T,MAAL,GAAc/T,GAAG,CAACC,IAAlB;AACD,aAHD;AAID;;;iBACD,8BAAqB;AAAA;;AACnB,iBAAKvH,eAAL,CAAqBie,kBAArB,GAA0ClZ,SAA1C,CAAoD,UAACuC,GAAD,EAAc;AAChEjC,qBAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCgC,GAAlC;AACA,qBAAI,CAACgU,gBAAL,GAAwBhU,GAAG,CAACC,IAA5B;AACD,aAHD;AAID;;;iBACD,uBAAc;AAAA;;AACZ,iBAAKvH,eAAL,CAAqBkkB,YAArB,GAAoCnf,SAApC,CAA8C,UAACuC,GAAD,EAAc;AAC1DjC,qBAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BgC,GAA9B;AACA,qBAAI,CAACiU,MAAL,GAAcjU,GAAG,CAACC,IAAlB;AACD,aAHD;AAID;;;iBAED,2BAAkBJ,KAAlB,EAAyBmC,CAAzB,EAA4B;AAC1B,gBAAInC,KAAK,KAAK,oBAAd,EAAoC;AAClC,mBAAKuU,gBAAL,CAAsBpV,GAAtB,CAA0B,gBAA1B,EAA4C0C,QAA5C,CAAqDM,CAAC,CAACb,MAAF,CAAStB,KAA9D;AACD;;AACD,gBAAIA,KAAK,KAAK,gBAAd,EAAgC;AAC9B9B,qBAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoC,KAAKzC,cAAzC;AACA,mBAAK6Y,gBAAL,CAAsBpV,GAAtB,CAA0B,oBAA1B,EAAgD0C,QAAhD,CAAyDM,CAAC,CAACb,MAAF,CAAStB,KAAlE;AACD;AACF;;;iBACD,yBAAgBgd,SAAhB,EAAgCxd,CAAhC,EAAmC;AAAA;;AACjC,gBAAM+B,KAAK,GAAGyb,SAAS,CAAC1b,MAAV,CAAiBC,KAAjB,CAAuB,CAAvB,CAAd;AACA,gBAAMqC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,oBAAQ,CAACE,MAAT,CAAgB,EAAhB,EAAoBvC,KAApB;AACArD,mBAAO,CAACC,GAAR,CAAYoD,KAAZ;AAEA,iBAAKvI,MAAL,CAAYA,MAAZ,CAAmB4K,QAAnB,EAA6BhG,SAA7B,CAAuC,UAACuC,GAAD,EAAS;AAC9CjC,qBAAO,CAACC,GAAR,CAAY,uCAAZ,EAAqDgC,GAArD;;AACA,qBAAI,CAACmZ,aAAL,GAAqB5Z,QAArB,CAA8BF,CAA9B,EAAiCL,GAAjC,CAAqC,MAArC,EAA6C0C,QAA7C,CAAsD1B,GAAG,CAACoB,KAAJ,CAAU,CAAV,CAAtD;;AACArD,qBAAO,CAACC,GAAR,CAAY,aAAZ,EAA2B,OAAI,CAACoW,gBAAL,CAAsBpV,GAAtB,CAA0B,aAA1B,EAAyCa,KAApE;AACD,aAJD;AAKD;;;iBACD,oBAAW;AAAA;;AACT,gBAAMI,IAAI,GAAG,MAAH,OAAG,CAAH,kBACL,KAAKmU,gBAAL,CAAsBvU,KADjB,CAAG,EACmB;AAC9B+X,yBAAW,EAAE,KAAK/D,cADY;AAE9BgE,6BAAe,EAAE,KAAKnE;AAFQ,aADnB,CAAb;AAKA3V,mBAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBiC,IAApB;;AACA,gBAAI,KAAKrC,EAAL,KAAY,MAAhB,EAAwB;AACtB,mBAAKlF,eAAL,CAAqBokB,gBAArB,CAAsC,KAAKlf,EAA3C,EAA+CqC,IAA/C,EAAqDxC,SAArD,CAA+D,UAACuC,GAAD,EAAS;AACtEjC,uBAAO,CAACC,GAAR,CAAY,+BAAZ,EAA6CgC,GAA7C;;AACA,uBAAI,CAAClH,MAAL,CAAYuK,QAAZ,CAAqB,CAAC,8BAAD,CAArB;AACD,eAHD;AAKD,aAND,MAOK;AACH,mBAAK3K,eAAL,CAAqBqkB,aAArB,CAAmC9c,IAAnC,EAAyCxC,SAAzC,CAAmD,UAACuC,GAAD,EAAS;AAC1D,uBAAI,CAAClH,MAAL,CAAYuK,QAAZ,CAAqB,CAAC,8BAAD,CAArB;;AACAtF,uBAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CgC,GAA5C;AACD,eAHD;AAID;;AACD,iBAAKoU,gBAAL,CAAsB7K,KAAtB;AACA,iBAAKsK,cAAL,GAAsB,EAAtB;AACA,iBAAKH,eAAL,GAAuB,EAAvB;AACA,iBAAKtW,aAAL,CAAmBoE,KAAnB;AACA,iBAAK4K,aAAL,CAAmB5K,KAAnB;AACD;;;iBACD,iBAAQP,KAAR,EAAe;AACblD,mBAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCiD,KAAK,CAACpB,KAAzC;AACA,iBAAKwX,OAAL,GAAepW,KAAK,CAACpB,KAArB;AACA9B,mBAAO,CAACC,GAAR,CAAY,YAAZ,EAA0B,KAAKoW,gBAAL,CAAsBpV,GAAtB,CAA0B,UAA1B,EAAsCa,KAAhE,EAHa,CAIb;AACA;AACA;AACA;AACA;AACA;AACD;;;iBACD,iBAAQoB,KAAR,EAAc+b,UAAd,EAA0B;AACxBjf,mBAAO,CAACC,GAAR,CAAY,cAAZ,EAA2B,KAAKqZ,OAAhC;AACA,gBAAIJ,IAAI,GAAGhW,KAAX;AACAlD,mBAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBgf,UAApB;AACA,gBAAIC,OAAO,GAAG,EAAd;AACAA,mBAAO,GAAGhG,IAAI,CAACiG,KAAL,CAAW,GAAX,CAAV;AACA,iBAAK7F,OAAL,CAAa8F,QAAb,CAAsBF,OAAO,CAAC,CAAD,CAA7B;AACA,iBAAK5F,OAAL,CAAa+F,UAAb,CAAwBH,OAAO,CAAC,CAAD,CAA/B;AACAlf,mBAAO,CAACC,GAAR,CAAY,YAAZ,EAA0B,KAAKqZ,OAA/B;AACF,gBAAIgG,CAAC,GAAC,IAAI1jB,IAAJ,CAAS,KAAK0d,OAAd,EAAuBiG,WAAvB,EAAN;AACCvf,mBAAO,CAACC,GAAR,CAAY,KAAZ,EAAkBqf,CAAlB;AACH,gBAAI1N,CAAC,GAAC,IAAIhW,IAAJ,CAAS0jB,CAAT,EAAYE,WAAZ,EAAN;AACAxf,mBAAO,CAACC,GAAR,CAAY,aAAZ,EAA0B2R,CAA1B;AACI,iBAAKyE,gBAAL,CAAsBpV,GAAtB,CAA0B,UAA1B,EAAsC0C,QAAtC,CAA+CiO,CAA/C;AAID;;;;;;;yBArvCUqC,2B,EAA2B,uH,EAAA,mI,EAAA,2H,EAAA,wK,EAAA,+H,EAAA,0J,EAAA,6K;AAAA,O;;;cAA3BA,2B;AAA2B,iD;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;ADzBxC;;AACA;;AAGA;;AAGA;;AAGA;;AACE;;AACE;;AAAiB;;AAAgB;;AACnC;;AAsCA;;AA03CA;;AAodA;;AAyoBF;;AACA;;AAOA;;;;AAlhFsC;;AACA;;AAAA;;AAGV;;AAAA;;AAGtB;;AAAA;;AAGsD;;AAAA;;AAyC1C;;AAAA;;AA03C4B;;AAAA;;AAqd3C;;AAAA;;AAyoBG;;AAAA;;;;;;;;;wECl/EOA,2B,EAA2B;gBALvC,uDAKuC;iBAL7B;AACT3N,oBAAQ,EAAE,0BADD;AAETC,uBAAW,EAAE,uCAFJ;AAGTC,qBAAS,EAAE,CAAC,uCAAD;AAHF,W;AAK6B,U;;;;;;;;;;;;;;;;;AACThJ,wBAAc,EAAE,CAAF;kBAA1C,uDAA0C;mBAAhC,gB;AAAgC,WAAE,C;AACdoe,0BAAgB,EAAE,CAAF;kBAA9C,uDAA8C;mBAApC,kB;AAAoC,WAAE,C;AACxBvc,uBAAa,EAAE,CAAF;kBAArC,uDAAqC;mBAA3B,Y;AAA2B,WAAE,C;AACfgP,uBAAa,EAAE,CAAF;kBAArC,uDAAqC;mBAA3B,Y;AAA2B,WAAE,C;AACfoR,oBAAU,EAAE,CAAF;kBAAlC,uDAAkC;mBAAxB,Y;AAAwB,WAAE;;;;;;;;;;;AC9BvC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACSU;;AAAuD;;AAAI;;;;;;AAC3D;;AAAmD;;AAAmB;;;;;;AAAnB;;AAAA;;;;;;AAOvD;;AAAuD;;AAAa;;;;;;AACpE;;AAAuC;;AAAuB;;;;;;AAAvB;;AAAA;;;;;;AAGvC;;AAAuC;;AAAa;;;;;;AACpD;;AAAuC;;AAAwB;;;;;;AAAxB;;AAAA;;;;;;AAGvC;;AAAsC;;AAAK;;;;;;AAC3C;;AAAwC;;AAA0B;;;;;;AAA1B;;AAAA;;;;;;AAGtC;;AAAsC;;AAAS;;;;;;AAC/C;;AAAwC;;AAAqB;;;;;;AAArB;;AAAA;;;;;;AAG1C;;AAAuC;;AAAO;;;;;;;;AAC9C;;AAUA;;AACE;;AAA+C;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAC3C;;AACJ;;AACA;;AAAiD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAC7C;;AACJ;;AACA;;AACF;;;;;;AAEE;;;;;;AACA;;;;;;;;;;;;UD1CKC,uB;AAMX,yCAAoB/kB,eAApB,EAAmEI,MAAnE,EAAmF;AAAA;;AAA/D,eAAAJ,eAAA,GAAAA,eAAA;AAA+C,eAAAI,MAAA,GAAAA,MAAA;AALrE,eAAAoR,gBAAA,GAA6B,CAAC,UAAD,EAAY,aAAZ,EAA0B,cAA1B,EAAyC,OAAzC,EAAiD,MAAjD,EAAwD,QAAxD,CAA7B;AAKwF;;;;iBAEtF,oBAAQ;AACN,iBAAKwT,iBAAL;AACD;;;iBACD,2BAAkB,CAClB;AACA;AACE;;;iBACF,iBAAO9f,EAAP,EAAS;AAAA;;AAEP,+DAAKqF,IAAL,CAAU;AACRC,mBAAK,EAAE,eADC;AAERkH,kBAAI,0BAFI;AAGRC,kBAAI,EAAE,SAHE;AAIRC,8BAAgB,EAAE,IAJV;AAKRC,gCAAkB,EAAE,SALZ;AAMRC,+BAAiB,EAAE,MANX;AAORC,+BAAiB,EAAE;AAPX,aAAV,EAQG5H,IARH,CAQQ,UAAC6H,MAAD,EAAY;AAClB,kBAAIA,MAAM,CAAC7K,KAAX,EAAkB;AAChB,uBAAI,CAACnH,eAAL,CAAqBilB,oBAArB,CAA0C/f,EAA1C,EAA8CH,SAA9C,CAAwD,UAACuC,GAAD,EAAO;AAC7DjC,yBAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBgC,GAAtB;AAEE,qEAAKiD,IAAL,CAAU;AACRC,yBAAK,EAAE,sBADC;AAERC,qCAAiB,EAAE,KAFX;AAGRC,yBAAK,EAAE;AAHC,mBAAV;AAKArF,yBAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BgC,GAA3B;;AACA,yBAAI,CAAC0d,iBAAL;AACD,iBAVH;AAWD;AACF,aAtBD;AAyBD;;;iBACD,6BAAiB;AAAA;;AAEf,iBAAKhlB,eAAL,CAAqBklB,oBAArB,GAA4CngB,SAA5C,CAAsD,UAACuC,GAAD,EAAW;AAE/D,qBAAI,CAAC4K,SAAL,GAAgB5K,GAAG,CAACC,IAApB;;AACA,qBAAI,CAAC2K,SAAL,CAAehL,OAAf,CAAuB,UAACiL,OAAD,EAASxL,CAAT,EAAe;AACpC,uBAAO,OAAI,CAACuL,SAAL,CAAevL,CAAf,EAAkBK,KAAlB,GAAyBL,CAAhC;AACD,eAFD;;AAGA,qBAAI,CAACiS,SAAL,GAAiB,IAAI,0EAAJ,CAA4B,OAAI,CAAC1G,SAAjC,CAAjB;AACA,qBAAI,CAAC0G,SAAL,CAAevG,SAAf,GAA2B,OAAI,CAACA,SAAhC;AACA,qBAAI,CAACuG,SAAL,CAAetG,IAAf,GAAsB,OAAI,CAACA,IAA3B;AACAjN,qBAAO,CAACC,GAAR,CAAY,SAAZ,EAAsB,OAAI,CAAC4M,SAA3B;AACD,aAVD;AAWD;;;iBACD,cAAKhN,EAAL,EAAO;AAEL,iBAAK9E,MAAL,CAAYuK,QAAZ,CAAqB,CAAC,8BAA4BzF,EAA7B,CAArB;AACD;;;;;;;yBA5DU6f,uB,EAAuB,wK,EAAA,uH;AAAA,O;;;cAAvBA,uB;AAAuB,4C;AAAA;AAAA;sEAIvB,wE,EAAY,I;;sEACZ,8D,EAAO,I;;;;;;;;;;;;;;;AClBpB;;AAAqE;;AAAmD;;AACxH;;AACI;;AAAK;;AAAoB;;AACzB;;AACA;;AACE;;AAGE;;AACE;;AACA;;AACF;;AAKJ;;AACE;;AACA;;AACF;;AACA;;AACE;;AACA;;AACF;;AACA;;AACE;;AACA;;AACF;;AACA;;AACI;;AACA;;AACF;;AACD;;AACC;;AACA;;AAmBF;;AACI;;AACA;;AACF;;AAEA;;AAIF;;;;AA9DiC;;AAKd;;AAAA;;AAiDK;;AAAA;;AACa;;AAAA;;AAGpB;;AAAA;;;;;;;;;wED7CRA,uB,EAAuB;gBALnC,uDAKmC;iBALzB;AACTpZ,oBAAQ,EAAE,qBADD;AAETC,uBAAW,EAAE,kCAFJ;AAGTC,qBAAS,EAAE,CAAC,kCAAD;AAHF,W;AAKyB,U;;;;;;;AAITwG,mBAAS,EAAE,CAAF;kBAAjC,uDAAiC;mBAAvB,wE;AAAuB,WAAE,C;AAChBC,cAAI,EAAE,CAAF;kBAAvB,uDAAuB;mBAAb,8D;AAAa,WAAE;;;;;;;;;;;AElB5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACSU;;AAAuD;;AAAI;;;;;;AAC3D;;AAAmD;;AAAmB;;;;;;AAAnB;;AAAA;;;;;;AAOvD;;AAAuD;;AAAK;;;;;;AAC5D;;AAAmD;;AAAwB;;;;;;AAAxB;;AAAA;;;;;;AAGnD;;AAAuC;;AAAK;;;;;;AAC5C;;AAAuC;;AAAuB;;;;;;AAAvB;;AAAA;;;;;;AAGvC;;AAAsC;;AAAK;;;;;;AAC3C;;AAAwC;;AAAsB;;;;;;AAAtB;;AAAA;;;;;;AAGtC;;AAAsC;;AAAS;;;;;;AAC/C;;AAAwC;;AAAqB;;;;;;AAArB;;AAAA;;;;;;AAG1C;;AAAuC;;AAAO;;;;;;;;AAC9C;;AAUA;;AACE;;AAA+C;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAC3C;;AACJ;;AACA;;AAAiD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAC7C;;AACJ;;AACA;;AACF;;;;;;AAEE;;;;;;AACA;;;;;;;;;;;;UD1CK6S,4B;AAMX,8CAAoBnlB,eAApB,EAAmEI,MAAnE,EAAmF;AAAA;;AAA/D,eAAAJ,eAAA,GAAAA,eAAA;AAA+C,eAAAI,MAAA,GAAAA,MAAA;AALnE,eAAAoR,gBAAA,GAA6B,CAAC,UAAD,EAAY,MAAZ,EAAmB,OAAnB,EAA2B,OAA3B,EAAmC,MAAnC,EAA0C,QAA1C,CAA7B;AAKsF;;;;iBAEtF,oBAAQ;AACN,iBAAK4T,iBAAL;AACD;;;iBACD,2BAAkB,CAEjB;;;iBACD,iBAAOlgB,EAAP,EAAS;AAAA;;AAEP,+DAAKqF,IAAL,CAAU;AACRC,mBAAK,EAAE,eADC;AAERkH,kBAAI,0BAFI;AAGRC,kBAAI,EAAE,SAHE;AAIRC,8BAAgB,EAAE,IAJV;AAKRC,gCAAkB,EAAE,SALZ;AAMRC,+BAAiB,EAAE,MANX;AAORC,+BAAiB,EAAE;AAPX,aAAV,EAQG5H,IARH,CAQQ,UAAC6H,MAAD,EAAY;AAClB,kBAAIA,MAAM,CAAC7K,KAAX,EAAkB;AAChB,uBAAI,CAACnH,eAAL,CAAqBqlB,oBAArB,CAA0CngB,EAA1C,EAA8CH,SAA9C,CAAwD,UAACuC,GAAD,EAAS;AAC7D,qEAAKiD,IAAL,CAAU;AACRC,yBAAK,EAAE,sBADC;AAERC,qCAAiB,EAAE,KAFX;AAGRC,yBAAK,EAAE;AAHC,mBAAV;AAKArF,yBAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BgC,GAA3B;;AACA,yBAAI,CAAC8d,iBAAL;AACD,iBARH;AASD;AACF,aApBD;AAsBD;;;iBACD,6BAAiB;AAAA;;AAEf,iBAAKplB,eAAL,CAAqBslB,oBAArB,GAA4CvgB,SAA5C,CAAsD,UAACuC,GAAD,EAAW;AAE/DjC,qBAAO,CAACC,GAAR,CAAY,KAAZ,EAAkBgC,GAAG,CAACC,IAAtB;AAEA,qBAAI,CAAC2K,SAAL,GAAgB5K,GAAG,CAACC,IAAJ,CAAS8b,GAAT,CAAa,UAAAvP,CAAC,EAAI;AAChCzO,uBAAO,CAACC,GAAR,CAAYwO,CAAC,CAACsC,WAAd;AACJ,uBAAO,MAAP,OAAO,CAAP,kBACKtC,CAAC,CAACsC,WAAF,CAAc,CAAd,CADL,CAAO,EACc;AACnBnP,qBAAG,EAAC6M,CAAC,CAAC7M;AADa,iBADd,CAAP;AAKC,eAPiB,CAAhB;AAQF5B,qBAAO,CAACC,GAAR,CAAY,KAAZ,EAAmB,OAAI,CAAC4M,SAAxB;;AACA,qBAAI,CAACA,SAAL,CAAehL,OAAf,CAAuB,UAACiL,OAAD,EAASxL,CAAT,EAAe;AACpC,uBAAO,OAAI,CAACuL,SAAL,CAAevL,CAAf,EAAkBK,KAAlB,GAAyBL,CAAhC;AACD,eAFD;;AAIE,qBAAI,CAACiS,SAAL,GAAiB,IAAI,0EAAJ,CAA4B,OAAI,CAAC1G,SAAjC,CAAjB;AACA,qBAAI,CAAC0G,SAAL,CAAevG,SAAf,GAA2B,OAAI,CAACA,SAAhC;AACA,qBAAI,CAACuG,SAAL,CAAetG,IAAf,GAAsB,OAAI,CAACA,IAA3B;AACAjN,qBAAO,CAACC,GAAR,CAAY,SAAZ,EAAsB,OAAI,CAAC4M,SAA3B;AACD,aArBD;AAsBD;;;iBACD,cAAKhN,EAAL,EAAO;AAEL,iBAAK9E,MAAL,CAAYuK,QAAZ,CAAqB,CAAC,8BAA4BzF,EAA7B,CAArB;AACD;;;;;;;yBAnEUigB,4B,EAA4B,wK,EAAA,uH;AAAA,O;;;cAA5BA,4B;AAA4B,kD;AAAA;AAAA;sEAI5B,wE,EAAY,I;;sEACZ,8D,EAAO,I;;;;;;;;;;;;;;;AClBpB;;AAAqE;;AAAmD;;AACxH;;AACI;;AAAK;;AAAoB;;AACzB;;AACA;;AACE;;AAGE;;AACE;;AACA;;AACF;;AAKJ;;AACE;;AACA;;AACF;;AACA;;AACE;;AACA;;AACF;;AACA;;AACE;;AACA;;AACF;;AACA;;AACI;;AACA;;AACF;;AACD;;AACC;;AACA;;AAmBF;;AACI;;AACA;;AACF;;AAEA;;AAIF;;;;AA9DiC;;AAKd;;AAAA;;AAiDK;;AAAA;;AACa;;AAAA;;AAGpB;;AAAA;;;;;;;;;wED7CRA,4B,EAA4B;gBALxC,uDAKwC;iBAL9B;AACTxZ,oBAAQ,EAAE,2BADD;AAETC,uBAAW,EAAE,wCAFJ;AAGTC,qBAAS,EAAE,CAAC,wCAAD;AAHF,W;AAK8B,U;;;;;;;AAIdwG,mBAAS,EAAE,CAAF;kBAAjC,uDAAiC;mBAAvB,wE;AAAuB,WAAE,C;AAChBC,cAAI,EAAE,CAAF;kBAAvB,uDAAuB;mBAAb,8D;AAAa,WAAE","file":"views-forms-forms-module-es5.js","sourcesContent":["<div class=\"btn btn-outline-primary\" *ngIf=\"id ==='Form'\" [routerLink]=\"['/admin/forms']\"><i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i></div>\r\n<div class=\"btn btn-outline-primary\" *ngIf=\"id!=='Form'\" [routerLink]=\"['/admin/forms/incidentsTable']\"><i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i></div>\r\n  \r\n\r\n<div class=\"container card px-4 py-4\" [formGroup]=\"IncidentReport\">\r\n  <h2 class=\"text-center pt-3\">\r\n    <p>Incident Report Form</p>\r\n  </h2>\r\n  <hr />\r\n\r\n  <p class=\"title\">Site Information</p>\r\n\r\n  <div class=\"box\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6\">\r\n        <label class=\"form-label mb-3\">Project Number</label>\r\n        <select\r\n          class=\"form-select form-control\"\r\n          aria-label=\"Default select example\"\r\n          formControlName=\"jobNumber\"\r\n          (change)=\"jobNoSel()\"\r\n          [class.is-invalid]=\"\r\n            IncidentReport.get('jobNumber')?.hasError('required') &&\r\n            (IncidentReport.get('jobNumber').dirty ||\r\n              IncidentReport.get('jobNumber').touched)\r\n          \"\r\n        >\r\n          <option selected hidden>Select</option>\r\n          <option [value]=\"jobNo._id\" *ngFor=\"let jobNo of allJobNumbers\">\r\n            {{ jobNo.jobNumber }}\r\n          </option>\r\n        </select>\r\n        <span\r\n          *ngIf=\"\r\n            IncidentReport.get('jobNumber')?.hasError('required') &&\r\n            (IncidentReport.get('jobNumber').dirty ||\r\n              IncidentReport.get('jobNumber').touched)\r\n          \"\r\n          class=\"invalid-feedback\"\r\n        >\r\n          Project Number is Required</span\r\n        >\r\n      </div>\r\n      <!-- <div class=\"col-md-6\">\r\n        <div>\r\n          <label\r\n            class=\"cols\"\r\n            class=\"form-Label\"\r\n            >Project Number</label\r\n          >\r\n          <input\r\n            type=\"number\"\r\n            class=\"form-control\"\r\n            formControlName=\"projectNumber\"\r\n            (change)=\"jobNoSel()\"\r\n          />\r\n        </div>\r\n      </div> -->\r\n      <div class=\"col-md-6\">\r\n        <div>\r\n          <label class=\"cols\" class=\"form-Label\">Project Name</label>\r\n          <input\r\n            type=\"text\"\r\n            formControlName=\"projectName\"\r\n            class=\"form-control\"\r\n            [class.is-invalid]=\"\r\n              IncidentReport.get('projectName')?.hasError('required') &&\r\n              (IncidentReport.get('projectName').dirty ||\r\n                IncidentReport.get('projectName').touched)\r\n            \"\r\n          />\r\n          <span\r\n            *ngIf=\"\r\n              IncidentReport.get('projectName')?.hasError('required') &&\r\n              (IncidentReport.get('projectName').dirty ||\r\n                IncidentReport.get('projectName').touched)\r\n            \"\r\n            class=\"invalid-feedback\"\r\n          >\r\n            Project Name is Required</span\r\n          >\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-sm-6\">\r\n        <div>\r\n          <label class=\"cols\" class=\"form-Label\">Site Name</label>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            formControlName=\"siteName\"\r\n            [class.is-invalid]=\"\r\n              IncidentReport.get('siteName')?.hasError('required') &&\r\n              (IncidentReport.get('siteName').dirty ||\r\n                IncidentReport.get('siteName').touched)\r\n            \"\r\n          />\r\n          <span\r\n            *ngIf=\"\r\n              IncidentReport.get('siteName')?.hasError('required') &&\r\n              (IncidentReport.get('siteName').dirty ||\r\n                IncidentReport.get('siteName').touched)\r\n            \"\r\n            class=\"invalid-feedback\"\r\n          >\r\n            Site Name is Required</span\r\n          >\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <div>\r\n          <label class=\"cols\" class=\"form-Label\">Customer Name</label>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            formControlName=\"customerName\"\r\n            [class.is-invalid]=\"\r\n              IncidentReport.get('customerName')?.hasError('required') &&\r\n              (IncidentReport.get('customerName').dirty ||\r\n                IncidentReport.get('customerName').touched)\r\n            \"\r\n          />\r\n          <span\r\n            *ngIf=\"\r\n              IncidentReport.get('customerName')?.hasError('required') &&\r\n              (IncidentReport.get('customerName').dirty ||\r\n                IncidentReport.get('customerName').touched)\r\n            \"\r\n            class=\"invalid-feedback\"\r\n          >\r\n            Customer Name is Required</span\r\n          >\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6\">\r\n        <div>\r\n          <label class=\"cols\" class=\"form-Label\">Site Address</label>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            formControlName=\"streetAddress\"\r\n            [class.is-invalid]=\"\r\n              IncidentReport.get('streetAddress')?.hasError('required') &&\r\n              (IncidentReport.get('streetAddress').dirty ||\r\n                IncidentReport.get('streetAddress').touched)\r\n            \"\r\n          />\r\n          <span\r\n            *ngIf=\"\r\n              IncidentReport.get('streetAddress')?.hasError('required') &&\r\n              (IncidentReport.get('streetAddress').dirty ||\r\n                IncidentReport.get('streetAddress').touched)\r\n            \"\r\n            class=\"invalid-feedback\"\r\n          >\r\n            Site Address is Required</span\r\n          >\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <div>\r\n          <label class=\"cols\" class=\"form-Label\">Customer Contact</label>\r\n          <input\r\n            placeholder=\"\"\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            formControlName=\"customerContact\"\r\n            [class.is-invalid]=\"\r\n              IncidentReport.get('customerContact')?.hasError('required') &&\r\n              (IncidentReport.get('customerContact').dirty ||\r\n                IncidentReport.get('customerContact').touched)\r\n            \"\r\n          />\r\n          <span\r\n            *ngIf=\"\r\n              IncidentReport.get('customerContact')?.hasError('required') &&\r\n              (IncidentReport.get('customerContact').dirty ||\r\n                IncidentReport.get('customerContact').touched)\r\n            \"\r\n            class=\"invalid-feedback\"\r\n          >\r\n            Customer Contact is Required</span\r\n          >\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6\">\r\n        <!-- <p for=\"exampleFormControlInput1\" class=\"form-Label\">Project Manager</p> -->\r\n        <label class=\"form-label mb-3\">Project Manager</label>\r\n        <select\r\n          class=\"form-select form-control col\"\r\n          aria-label=\"Default select example\"\r\n          formControlName=\"projectManager\"\r\n          [class.is-invalid]=\"\r\n            IncidentReport.get('projectManager')?.hasError('required') &&\r\n            (IncidentReport.get('projectManager').dirty ||\r\n              IncidentReport.get('projectManager').touched)\r\n          \"\r\n        >\r\n          <option selected hidden>Select</option>\r\n          <option [value]=\"mang._id\" *ngFor=\"let mang of projectMang\">\r\n            {{ mang.title }}\r\n          </option>\r\n        </select>\r\n        <span\r\n          *ngIf=\"\r\n            IncidentReport.get('projectManager')?.hasError('required') &&\r\n            (IncidentReport.get('projectManager').dirty ||\r\n              IncidentReport.get('projectManager').touched)\r\n          \"\r\n          class=\"invalid-feedback\"\r\n        >\r\n          Project Manager is Required</span\r\n        >\r\n      </div>\r\n      <!-- <div class=\"col-md-6\">\r\n        <div>\r\n          <label\r\n            class=\"cols\"\r\n            class=\"form-Label\"\r\n            >Project Manager</label\r\n          >\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            formControlName=\"projectManager\"\r\n          />\r\n        </div>\r\n      </div> -->\r\n\r\n      <div class=\"col-md-6\">\r\n        <div>\r\n          <label class=\"cols\" class=\"form-Label\">Person Completing Form </label>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            formControlName=\"personCompletingForm\"\r\n            [class.is-invalid]=\"\r\n              IncidentReport.get('personCompletingForm')?.hasError(\r\n                'required'\r\n              ) &&\r\n              (IncidentReport.get('personCompletingForm').dirty ||\r\n                IncidentReport.get('personCompletingForm').touched)\r\n            \"\r\n          />\r\n          <span\r\n            *ngIf=\"\r\n              IncidentReport.get('personCompletingForm')?.hasError(\r\n                'required'\r\n              ) &&\r\n              (IncidentReport.get('personCompletingForm').dirty ||\r\n                IncidentReport.get('personCompletingForm').touched)\r\n            \"\r\n            class=\"invalid-feedback\"\r\n          >\r\n            This Field is Required</span\r\n          >\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6\">\r\n        <div>\r\n          <label class=\"cols\" class=\"form-Label\">Customer Contact Phone</label>\r\n          <input\r\n            placeholder=\"(000) 000-0000\"\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            formControlName=\"customerContactPhone\"\r\n            [class.is-invalid]=\"\r\n              IncidentReport.get('customerContactPhone')?.hasError(\r\n                'required'\r\n              ) &&\r\n              (IncidentReport.get('customerContactPhone').dirty ||\r\n                IncidentReport.get('customerContactPhone').touched)\r\n            \"\r\n          />\r\n          <span\r\n            *ngIf=\"\r\n              IncidentReport.get('customerContactPhone')?.hasError(\r\n                'required'\r\n              ) &&\r\n              (IncidentReport.get('customerContactPhone').dirty ||\r\n                IncidentReport.get('customerContactPhone').touched)\r\n            \"\r\n            class=\"invalid-feedback\"\r\n          >\r\n            Phone Number is Required</span\r\n          >\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"col-md-6\">\r\n        <div>\r\n          <label class=\"cols\" class=\"form-Label\">Customer Contact Email</label>\r\n          <input\r\n            placeholder=\"ex: email@yahoo.com\"\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            formControlName=\"customerEmail\"\r\n            [class.is-invalid]=\"\r\n              IncidentReport.get('customerEmail')?.hasError('required') &&\r\n              (IncidentReport.get('customerEmail').dirty ||\r\n                IncidentReport.get('customerEmail').touched)\r\n            \"\r\n          />\r\n          <span\r\n            *ngIf=\"\r\n              IncidentReport.get('customerEmail')?.hasError('required') &&\r\n              (IncidentReport.get('customerEmail').dirty ||\r\n                IncidentReport.get('customerEmail').touched)\r\n            \"\r\n            class=\"invalid-feedback\"\r\n          >\r\n            Email is Required</span\r\n          >\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6\">\r\n        <label class=\"cols\" class=\"form-Label\">Date of Form Completion</label>\r\n        <!-- <input type=\"date\" class=\"form-control\" formControlName=\"dateOfFormCompletion\" [class.is-invalid]=\"IncidentReport.get('dateOfFormCompletion')?.hasError('required') && (IncidentReport.get('dateOfFormCompletion').dirty || IncidentReport.get('dateOfFormCompletion').touched) \"/> -->\r\n       <input  matInput  [matDatepicker]=\"datepicker\" [max]=\"maxDate\" [min]=\"minDate\"\r\n       class=\"form-control\"\r\n       formControlName=\"dateOfFormCompletion\" \r\n       [class.is-invalid]=\"IncidentReport.get('dateOfFormCompletion')?.hasError('required') && (IncidentReport.get('dateOfFormCompletion').dirty || IncidentReport.get('dateOfFormCompletion').touched) \"\r\n       placeholder=\"dd-mm-yyyy\">\r\n       <mat-datepicker-toggle matSuffix [for]=\"datepicker\"></mat-datepicker-toggle>\r\n       <mat-datepicker #datepicker ></mat-datepicker>\r\n        <!--  -->\r\n        <span *ngIf=\" IncidentReport.get('dateOfFormCompletion')?.hasError('required') && (IncidentReport.get('dateOfFormCompletion').dirty  || IncidentReport.get('dateOfFormCompletion').touched) \"\r\n         class=\"invalid-feedback date-valid\" >\r\n        Date is Required</span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <hr />\r\n  <div class=\"col-12\" class=\"mt-3\">\r\n    <p class=\"title\">Type of Incident</p>\r\n  </div>\r\n  <div class=\"row\">\r\n    <ng-container formArrayName=\"incidents\">\r\n      <ng-container\r\n        *ngFor=\"let control of incidentsAdd().controls; let i = index\"\r\n        [formGroupName]=\"i\"\r\n      >\r\n        <div class=\"mt-2 col-4\">\r\n          <div class=\"checkrdobtn\">\r\n            <input\r\n              class=\"rdovstchk\"\r\n              [id]=\"i + 'typeOf'\"\r\n              class=\"mr-1\"\r\n              type=\"checkbox\"\r\n              [value]=\"incidents[i]._id\"\r\n              (change)=\"typeOfIncidentsSelected($event)\"\r\n              formControlName=\"{{ incidents[i]._id }}\"\r\n            />\r\n            <label\r\n              class=\"txtdefault fs-16 weight500 text-center label_2\"\r\n              [for]=\"i + 'typeOf'\"\r\n              >{{ incidents[i].title }}</label\r\n            >\r\n          </div>\r\n        </div>\r\n      </ng-container>\r\n    </ng-container>\r\n  </div>\r\n\r\n  <hr />\r\n  <div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n      <p class=\"title\">Instructions</p>\r\n\r\n      <div class=\"mt-3 text-center\">\r\n        <textarea\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          formControlName=\"instructions\"\r\n        >\r\n        Complete this form as soon as possible after an incident that results in serious inquiry or illness or death. Use to investigate a minor injury\r\n        or near-miss that could have resulted in a serious injury or illness.\r\n      </textarea\r\n        >\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <br />\r\n  <hr />\r\n  <div class=\"col-12\">\r\n    <p class=\"title\">Injured or Affected Person</p>\r\n  </div>\r\n  <div class=\"box\" class=\"row\">\r\n    <div class=\"col-md-6\">\r\n      <div>\r\n        <label class=\"cols\" class=\"form-Label\">Name</label>\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          formControlName=\"name\"\r\n          id\r\n          [class.is-invalid]=\"\r\n            IncidentReport.get('name')?.hasError('required') &&\r\n            (IncidentReport.get('name').dirty ||\r\n              IncidentReport.get('name').touched)\r\n          \"\r\n        />\r\n        <span\r\n          *ngIf=\"\r\n            IncidentReport.get('name')?.hasError('required') &&\r\n            (IncidentReport.get('name').dirty ||\r\n              IncidentReport.get('name').touched)\r\n          \"\r\n          class=\"invalid-feedback\"\r\n        >\r\n          Name is Required</span\r\n        >\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-6\">\r\n      <div>\r\n        <label class=\"cols\" class=\"form-Label\">Department</label>\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          formControlName=\"department\"\r\n          [class.is-invalid]=\"\r\n            IncidentReport.get('department')?.hasError('required') &&\r\n            (IncidentReport.get('department').dirty ||\r\n              IncidentReport.get('department').touched)\r\n          \"\r\n        />\r\n        <span\r\n          *ngIf=\"\r\n            IncidentReport.get('department')?.hasError('required') &&\r\n            (IncidentReport.get('department').dirty ||\r\n              IncidentReport.get('department').touched)\r\n          \"\r\n          class=\"invalid-feedback\"\r\n        >\r\n          This Field is Required</span\r\n        >\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"box\" class=\"row\">\r\n    <div class=\"col-md-6\">\r\n      <div>\r\n        <label class=\"cols\" class=\"form-Label\">position</label>\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          formControlName=\"position\"\r\n          [class.is-invalid]=\"\r\n            IncidentReport.get('position')?.hasError('required') &&\r\n            (IncidentReport.get('position').dirty ||\r\n              IncidentReport.get('position').touched)\r\n          \"\r\n        />\r\n        <span\r\n          *ngIf=\"\r\n            IncidentReport.get('position')?.hasError('required') &&\r\n            (IncidentReport.get('position').dirty ||\r\n              IncidentReport.get('position').touched)\r\n          \"\r\n          class=\"invalid-feedback\"\r\n        >\r\n          This Field is Required</span\r\n        >\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <hr />\r\n  <div class=\"col-12\">\r\n    <p class=\"title\">Nature of Incident</p>\r\n  </div>\r\n  <div class=\"box\" class=\"row\">\r\n    <ng-container formArrayName=\"natureOFIncidents\">\r\n      <ng-container\r\n        *ngFor=\"let control of natureAdd().controls; let i = index\"\r\n        [formGroupName]=\"i\"\r\n      >\r\n        <div class=\"mt-3 col-4\">\r\n          <div class=\"checkrdobtn\">\r\n            <input\r\n              class=\"rdovstchk\"\r\n              [id]=\"i + 'natureOfInc'\"\r\n              type=\"checkbox\"\r\n              class=\"mr-1\"\r\n              [value]=\"natureOFIncidents[i]._id\"\r\n              (change)=\"natureOfIncSelected($event)\"\r\n              formControlName=\"{{ natureOFIncidents[i]._id }}\"\r\n            />\r\n            <label\r\n              class=\"txtdefault fs-16 weight500 text-center label_2\"\r\n              [for]=\"i + 'natureOfInc'\"\r\n              >{{ natureOFIncidents[i].title }}</label\r\n            >\r\n          </div>\r\n        </div>\r\n      </ng-container>\r\n    </ng-container>\r\n  </div>\r\n  <hr />\r\n  <div class=\"box\" class=\"row\">\r\n    <div class=\"col-md-6\">\r\n      <div>\r\n        <label class=\"form-Label\">Location of the incident</label>\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          formControlName=\"locationOfTheIncident\"\r\n          [class.is-invalid]=\"\r\n            IncidentReport.get('locationOfTheIncident')?.hasError('required') &&\r\n            (IncidentReport.get('locationOfTheIncident').dirty ||\r\n              IncidentReport.get('locationOfTheIncident').touched)\r\n          \"\r\n        />\r\n        <span\r\n          *ngIf=\"\r\n            IncidentReport.get('locationOfTheIncident')?.hasError('required') &&\r\n            (IncidentReport.get('locationOfTheIncident').dirty ||\r\n              IncidentReport.get('locationOfTheIncident').touched)\r\n          \"\r\n          class=\"invalid-feedback\"\r\n        >\r\n          Locationis Required</span\r\n        >\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-3\">\r\n      <div>\r\n        <label class=\"form-Label mt-2\">Date of the incident</label>\r\n        <!-- <mat-form-field>\r\n          <input matInput [ngxMatDatetimePicker]=\"picker\" placeholder=\"Choose a date\" [formControl]=\"dateControl\"\r\n             [min]=\"minDate\" [max]=\"maxDate\" [disabled]=\"disabled\">\r\n          <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n          <ngx-mat-datetime-picker #picker [showSpinners]=\"showSpinners\" [showSeconds]=\"showSeconds\"\r\n             [stepHour]=\"stepHour\" [stepMinute]=\"stepMinute\" [stepSecond]=\"stepSecond\"\r\n             [touchUi]=\"touchUi\" [color]=\"color\" [enableMeridian]=\"enableMeridian\" \r\n             [disableMinute]=\"disableMinute\" [hideTime]=\"hideTime\">\r\n          </ngx-mat-datetime-picker>\r\n       </mat-form-field> -->\r\n   \r\n       <!-- <input type=\"date\" class=\"form-control\" [max]=\"maxDate\" formControlName=\"dateOfTheIncident\" [class.is-invalid]=\"IncidentReport.get('dateOfTheIncident')?.hasError('required') && (IncidentReport.get('dateOfTheIncident').dirty || IncidentReport.get('dateOfTheIncident').touched) \"/> -->\r\n        <!--  -->\r\n        <input  matInput  [matDatepicker]=\"picker\" [max]=\"maxDate\" \r\n        class=\"form-control\"  \r\n        placeholder=\"dd-mm-yyyy\"\r\n        formControlName=\"dateOfTheIncident\" \r\n        [class.is-invalid]=\"IncidentReport.get('dateOfTheIncident')?.hasError('required') \r\n        && (IncidentReport.get('dateOfTheIncident').dirty \r\n        || IncidentReport.get('dateOfTheIncident').touched) \">\r\n        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n        <mat-datepicker #picker ></mat-datepicker>\r\n<!--  -->\r\n        <span *ngIf=\" IncidentReport.get('dateOfTheIncident')?.hasError('required') && (IncidentReport.get('dateOfTheIncident').dirty  || IncidentReport.get('dateOfTheIncident').touched) \" class=\"invalid-feedback date-valid\" >\r\n          Date is Required</span>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-3\">\r\n      <div>\r\n        <label class=\"cols\" class=\"form-Label\">Time of the incident</label>\r\n        <!-- <input\r\n          [ngxMatTimepicker]=\"picker\"\r\n          class=\"form-control\"\r\n          formControlName=\"timeOfTheIncident\"\r\n          [class.is-invalid]=\"\r\n            IncidentReport.get('timeOfTheIncident')?.hasError('required') &&\r\n            (IncidentReport.get('timeOfTheIncident').dirty ||\r\n              IncidentReport.get('timeOfTheIncident').touched)\r\n          \"\r\n        />\r\n\r\n        <ngx-mat-timepicker #picker></ngx-mat-timepicker>\r\n        <span\r\n          *ngIf=\"\r\n            IncidentReport.get('timeOfTheIncident')?.hasError('required') &&\r\n            (IncidentReport.get('timeOfTheIncident').dirty ||\r\n              IncidentReport.get('timeOfTheIncident').touched)\r\n          \"\r\n          class=\"invalid-feedback\"\r\n        >\r\n          Select Time is Required</span\r\n        > -->\r\n        <input [ngxMatTimepicker]=\"timepicker\"  class=\"form-control\" formControlName=\"timeOfTheIncident\" [class.is-invalid]=\"IncidentReport.get('timeOfTheIncident')?.hasError('required') && (IncidentReport.get('timeOfTheIncident').dirty || IncidentReport.get('timeOfTheIncident').touched) \"/>\r\n        \r\n          <ngx-mat-timepicker #timepicker></ngx-mat-timepicker>\r\n          <span *ngIf=\" IncidentReport.get('timeOfTheIncident')?.hasError('required') && (IncidentReport.get('timeOfTheIncident').dirty  || IncidentReport.get('timeOfTheIncident').touched) \" class=\"invalid-feedback\" >\r\n            Select Time is Required</span>\r\n        <!-- <input\r\n          type=\"number\"\r\n          class=\"form-control\"\r\n          formControlName=\"timeOfTheIncident\"\r\n        /> -->\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <br />\r\n  <div class=\"col-12\">\r\n    <p class=\"title\">Incident Information</p>\r\n  </div>\r\n  <div class=\"box\" class=\"row\">\r\n    <div class=\"col-md-6\">\r\n      <div>\r\n        <label class=\"cols\" class=\"form-Label\"> Name of Witness</label>\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          formControlName=\"nameOfWitness\"\r\n          [class.is-invalid]=\"\r\n            IncidentReport.get('nameOfWitness')?.hasError('required') &&\r\n            (IncidentReport.get('nameOfWitness').dirty ||\r\n              IncidentReport.get('nameOfWitness').touched)\r\n          \"\r\n        />\r\n        <span\r\n          *ngIf=\"\r\n            IncidentReport.get('nameOfWitness')?.hasError('required') &&\r\n            (IncidentReport.get('nameOfWitness').dirty ||\r\n              IncidentReport.get('nameOfWitness').touched)\r\n          \"\r\n          class=\"invalid-feedback\"\r\n        >\r\n          Name is Required</span\r\n        >\r\n        <!-- <select class=\"form-select form-control col form-dropdown\" aria-label=\"Default select example\">\r\n          <option selected hidden>Select</option>\r\n          <option value=\"1\">Option1</option>\r\n          <option value=\"2\">Option2</option>\r\n          <option value=\"3\">Option3</option>\r\n        </select> -->\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-md-6\">\r\n      <div>\r\n        <label class=\"cols\" class=\"form-Label\">Witness Statement</label>\r\n        <textarea\r\n          type=\"text\"\r\n          class=\"form-control txt-auto\"\r\n          cdkTextareaAutosize\r\n          #autosize=\"cdkTextareaAutosize\"\r\n          cdkAutosizeMinRows=\"1.5\"\r\n          cdkAutosizeMaxRows=\"5\"\r\n          formControlName=\"witnessStatement\"\r\n          [class.is-invalid]=\"\r\n            IncidentReport.get('witnessStatement')?.hasError('required') &&\r\n            (IncidentReport.get('witnessStatement').dirty ||\r\n              IncidentReport.get('witnessStatement').touched)\r\n          \"\r\n        >\r\n        </textarea>\r\n        <span\r\n          *ngIf=\"\r\n            IncidentReport.get('witnessStatement')?.hasError('required') &&\r\n            (IncidentReport.get('witnessStatement').dirty ||\r\n              IncidentReport.get('witnessStatement').touched)\r\n          \"\r\n          class=\"invalid-feedback\"\r\n        >\r\n          This Field is Required</span\r\n        >\r\n        <!-- <select class=\"form-select form-control col form-dropdown\" aria-label=\"Default select example\">\r\n          <option selected hidden>Select</option>\r\n          <option value=\"1\">Option1</option>\r\n          <option value=\"2\">Option2</option>\r\n          <option value=\"3\">Option3</option>\r\n        </select> -->\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"box\" class=\"row\">\r\n    <div class=\"col-md-12\">\r\n      <div>\r\n        <label class=\"form-Label\">Attachments </label>\r\n        <input class=\"form-control\" type=\"file\" (change)=\"browser($event)\" />\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <br />\r\n\r\n  <div class=\"col-12\">\r\n    <p class=\"title\">What PPE was in Use ?</p>\r\n  </div>\r\n  <div class=\"box\" class=\"row\">\r\n    <ng-container formArrayName=\"PPE\">\r\n      <ng-container\r\n        *ngFor=\"let control of ppeAdd().controls; let i = index\"\r\n        [formGroupName]=\"i\"\r\n      >\r\n        <div class=\"mt-2 col-4\">\r\n          <div class=\"checkrdobtn\">\r\n            <input\r\n              class=\"rdovstchk\"\r\n              [id]=\"i + 'whatPPE'\"\r\n              type=\"checkbox\"\r\n              class=\"mr-1\"\r\n              [value]=\"PPE[i]._id\"\r\n              (change)=\"ppeSelected($event)\"\r\n              formControlName=\"{{ PPE[i]._id }}\"\r\n            />\r\n            <label\r\n              class=\"txtdefault fs-16 weight500 text-center label_2\"\r\n              [for]=\"i + 'whatPPE'\"\r\n              >{{ PPE[i].title }}</label\r\n            >\r\n          </div>\r\n        </div>\r\n      </ng-container>\r\n    </ng-container>\r\n  </div>\r\n  <br />\r\n  <hr />\r\n  <div class=\"col-12\">\r\n    <p class=\"title\">What was the rootcause of incident happen?</p>\r\n  </div>\r\n  <div class=\"box\" class=\"row\">\r\n    <ng-container formArrayName=\"rootCauseIncident\">\r\n      <ng-container\r\n        *ngFor=\"let control of rootCauseIncidentAdd().controls; let i = index\"\r\n        [formGroupName]=\"i\"\r\n      >\r\n        <div class=\"mt-2 col-4\">\r\n          <div class=\"checkrdobtn\">\r\n            <input\r\n              class=\"rdovstchk\"\r\n              [id]=\"i + 'rootCauseIncident'\"\r\n              type=\"checkbox\"\r\n              class=\"mr-1\"\r\n              [value]=\"rootCauseIncident[i]._id\"\r\n              (change)=\"rootSelected($event)\"\r\n              formControlName=\"{{ rootCauseIncident[i]._id }}\"\r\n            />\r\n            <label\r\n              class=\"txtdefault fs-16 weight500 text-center label_2\"\r\n              [for]=\"i + 'rootCauseIncident'\"\r\n              >{{ rootCauseIncident[i].title }}</label\r\n            >\r\n          </div>\r\n        </div>\r\n      </ng-container>\r\n    </ng-container>\r\n  </div>\r\n  <br />\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n      <div>\r\n        <label class=\"cols\" class=\"form-Label\"\r\n          >Why did the unsafe condition exist</label\r\n        >\r\n\r\n        <textarea\r\n          type=\"text\"\r\n          formControlName=\"whyDidtheUnsafeConditonExist\"\r\n          class=\"form-control\"\r\n        >\r\n        </textarea>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-md-6\">\r\n      <label class=\"cols\" for=\"exampleFormControlInput1\" class=\"form-Label\"\r\n        >Was the unsafe act or hazard reported prior to the incident?</label\r\n      >\r\n\r\n      <select\r\n        class=\"form-select form-control col form-dropdown\"\r\n        formControlName=\"priorIncident\"\r\n        aria-label=\"Default select example\"\r\n      >\r\n        <option selected hidden>Select</option>\r\n        <option value=\"yes\">Yes</option>\r\n        <option value=\"no\">No</option>\r\n      </select>\r\n      <div *ngIf=\"IncidentReport.get('priorIncident').value == 'yes'\">\r\n        <label class=\"mb-2\"> Please Describe </label>\r\n        <textarea\r\n          name=\"\"\r\n          class=\"col form-control\"\r\n          id=\"\"\r\n          formControlName=\"priorIncidentText\"\r\n        ></textarea>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-md-6\">\r\n      <label class=\"cols\" for=\"exampleFormControlInput1\" class=\"form-Label\"\r\n        >Has a similar incident Occured</label\r\n      >\r\n\r\n      <select\r\n        class=\"form-select form-control col form-dropdown\"\r\n        formControlName=\"similarIncident\"\r\n        aria-label=\"Default select example\"\r\n      >\r\n        <option selected hidden>Select</option>\r\n        <option value=\"yes\">Yes</option>\r\n        <option value=\"no\">No</option>\r\n      </select>\r\n      <div *ngIf=\"IncidentReport.get('similarIncident').value == 'yes'\">\r\n        <label class=\"mb-2\"> Please Describe </label>\r\n        <textarea\r\n          name=\"\"\r\n          class=\"col form-control\"\r\n          id=\"\"\r\n          formControlName=\"similarIncidentText\"\r\n        ></textarea>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <hr />\r\n  <br />\r\n  <div class=\"col-12\">\r\n    <p class=\"title\">What changes can be made ?</p>\r\n  </div>\r\n  <div class=\"row\">\r\n    <ng-container formArrayName=\"changes\">\r\n      <ng-container\r\n        *ngFor=\"\r\n          let control of changeAdd().controls;\r\n          let i = index;\r\n        \r\n        \"\r\n        [formGroupName]=\"i\"\r\n      >\r\n        <div class=\"mt-2 col-4 mb-0\">\r\n          <div class=\"checkrdobtn\">\r\n            <ng-container >\r\n              <input\r\n                class=\"rdovstchk\"\r\n                [id]=\"i + 'changes'\"\r\n                type=\"checkbox\"\r\n                class=\"mr-1\"\r\n                (change)=\"changesSelected($event,i)\"\r\n                formControlName=\"{{ changes[i]._id }}\"\r\n              />\r\n\r\n              <label\r\n                class=\"txtdefault fs-16 weight500 text-center label_2\"\r\n                [for]=\"i + 'changes'\"\r\n                >{{ changes[i].title }}\r\n              </label>\r\n            </ng-container>\r\n           \r\n          </div>\r\n        </div>\r\n        <ng-container>\r\n        </ng-container>\r\n        \r\n      </ng-container>\r\n\r\n     \r\n    </ng-container>\r\n    <ng-container class=\"mt-2 col-4 mb-0\">\r\n      <div class=\"checkrdobtn\">\r\n      <input\r\n        class=\"rdovstchk\"\r\n        id=\"other\"\r\n        type=\"checkbox\"\r\n        class=\"mr-1\"\r\n        (change)=\"changesSelected($event,'')\"\r\n        formControlName=\"changesMadeOther\"\r\n      />\r\n\r\n      <label\r\n        class=\"txtdefault fs-16 weight500 text-center label_2\"\r\n        for=\"other\"\r\n      >\r\n        Other\r\n      </label>\r\n      <textarea\r\n      *ngIf=\"IncidentReport.get('changesMadeOther').value\"\r\n      type=\"text\"\r\n      class=\"form-control txt-auto\"\r\n      cdkTextareaAutosize\r\n      #autosize=\"cdkTextareaAutosize\"\r\n      cdkAutosizeMinRows=\"1.5\"\r\n      cdkAutosizeMaxRows=\"5\"\r\n      formControlName=\"changesMadeOtherText\"\r\n    >\r\n    </textarea>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n  <hr />\r\n  <div class=\"box\" class=\"row\">\r\n    <ng-container formArrayName=\"arrObj\">\r\n      <ng-container\r\n        *ngFor=\"let control of add().controls; let i = index\"\r\n        [formGroupName]=\"i\"\r\n      >\r\n        <div class=\"col-md-3\">\r\n          <div>\r\n            <label class=\"cols\" class=\"form-Label\">Corrective Action</label>\r\n\r\n            <input\r\n              type=\"text\"\r\n              formControlName=\"correctAction\"\r\n              class=\"form-control\"\r\n              [class.is-invalid]=\"\r\n                add().controls[i].get('correctAction')?.hasError('required') &&\r\n                (add().controls[i].get('correctAction').dirty ||\r\n                  add().controls[i].get('correctAction').touched)\r\n              \"\r\n            />\r\n            <span\r\n              *ngIf=\"\r\n                add().controls[i].get('correctAction')?.hasError('required') &&\r\n                (add().controls[i].get('correctAction').dirty ||\r\n                  add().controls[i].get('correctAction').touched)\r\n              \"\r\n              class=\"invalid-feedback\"\r\n            >\r\n              This Field is Required</span\r\n            >\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-3\">\r\n          <div>\r\n            <label class=\"cols\" class=\"form-Label\">Person Responsible</label>\r\n\r\n            <select\r\n              class=\"form-select form-control col form-dropdown\"\r\n              aria-label=\"Default select example\"\r\n              formControlName=\"personRes\"\r\n              [class.is-invalid]=\"\r\n                add().controls[i].get('personRes')?.hasError('required') &&\r\n                (add().controls[i].get('personRes').dirty ||\r\n                  add().controls[i].get('personRes').touched)\r\n              \"\r\n            >\r\n              <option selected hidden>Select...</option>\r\n              <option *ngFor=\"let j of staff\" [value]=\"j?._id\">\r\n                {{ j?.title }}\r\n              </option>\r\n            </select>\r\n            <span\r\n              *ngIf=\"\r\n                add().controls[i].get('personRes')?.hasError('required') &&\r\n                (add().controls[i].get('personRes').dirty ||\r\n                  add().controls[i].get('personRes').touched)\r\n              \"\r\n              class=\"invalid-feedback\"\r\n            >\r\n              This Field is Required</span\r\n            >\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-2\">\r\n          <div>\r\n            <label class=\"cols\" class=\"form-Label\">Complete</label>\r\n\r\n            <select\r\n              class=\"form-select form-control col form-dropdown\"\r\n              aria-label=\"Default select example\"\r\n              [class.is-invalid]=\"\r\n                add().controls[i].get('complete')?.hasError('required') &&\r\n                (add().controls[i].get('complete').dirty ||\r\n                  add().controls[i].get('complete').touched)\r\n              \"\r\n              formControlName=\"complete\"\r\n            >\r\n              <option selected hidden>Select</option>\r\n              <option value=\"yes\">yes</option>\r\n              <option value=\"no\">No</option>\r\n            </select>\r\n            <span\r\n              *ngIf=\"\r\n                add().controls[i].get('complete')?.hasError('required') &&\r\n                (add().controls[i].get('complete').dirty ||\r\n                  add().controls[i].get('complete').touched)\r\n              \"\r\n              class=\"invalid-feedback\"\r\n            >\r\n              This Field is Required</span\r\n            >\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-2\">\r\n          <label class=\"cols\" class=\"form-Label\">Date </label>\r\n          <!-- <input type=\"date\" class=\"form-control\" formControlName=\"date\" [class.is-invalid]=\" add().controls[i].get('date')?.hasError('required') && (add().controls[i].get('date').dirty || add().controls[i].get('date').touched) \"/> -->\r\n          <input  matInput  [matDatepicker]=\"pickerd4\" [min]=\"minDate\"\r\n          class=\"form-control\"\r\n          formControlName=\"date\"\r\n          placeholder=\"dd-mm-yyyy\"\r\n          [class.is-invalid]=\" add().controls[i].get('date')?.hasError('required') && (add().controls[i].get('date').dirty || add().controls[i].get('date').touched) \">\r\n          <mat-datepicker-toggle matSuffix [for]=\"pickerd4\"></mat-datepicker-toggle>\r\n          <mat-datepicker #pickerd4 ></mat-datepicker>\r\n          <span *ngIf=\" add().controls[i].get('date')?.hasError('required') && (add().controls[i].get('date').dirty  || add().controls[i].get('date').touched) \" class=\"invalid-feedback\" >\r\n            Date is Required</span>\r\n        </div>\r\n        <div class=\"col-1 mt-5\">\r\n          <span class=\"material-icons\" (click)=\"addAction()\"\r\n            >add_circle_outline\r\n          </span>\r\n        </div>\r\n        <div class=\"col-1 mt-5\">\r\n          <span class=\"material-icons\" (click)=\"removeIncident(i)\">\r\n            remove_circle_outline\r\n          </span>\r\n        </div>\r\n      </ng-container>\r\n    </ng-container>\r\n  </div>\r\n  <hr />\r\n  <div class=\"col-12\">\r\n    <p class=\"title\">The Form was Completed by:</p>\r\n  </div>\r\n  <div>\r\n    <div class=\"box\" class=\"row\">\r\n      <div class=\"col-md-6\">\r\n        <div>\r\n          <label class=\"cols\" class=\"form-Label\">Name</label>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            formControlName=\"completedName\"\r\n            [class.is-invalid]=\"\r\n              IncidentReport.get('completedName')?.hasError('required') &&\r\n              (IncidentReport.get('completedName').dirty ||\r\n                IncidentReport.get('completedName').touched)\r\n            \"\r\n          />\r\n          <span\r\n            *ngIf=\"\r\n              IncidentReport.get('completedName')?.hasError('required') &&\r\n              (IncidentReport.get('completedName').dirty ||\r\n                IncidentReport.get('completedName').touched)\r\n            \"\r\n            class=\"invalid-feedback\"\r\n          >\r\n            Name is Required</span\r\n          >\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"col-md-6\">\r\n        <div>\r\n          <label class=\"cols\" class=\"form-Label\">Position </label>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            formControlName=\"completedPosition\"\r\n            [class.is-invalid]=\"\r\n              IncidentReport.get('completedPosition')?.hasError('required') &&\r\n              (IncidentReport.get('completedPosition').dirty ||\r\n                IncidentReport.get('completedPosition').touched)\r\n            \"\r\n          />\r\n          <span\r\n            *ngIf=\"\r\n              IncidentReport.get('completedPosition')?.hasError('required') &&\r\n              (IncidentReport.get('completedPosition').dirty ||\r\n                IncidentReport.get('completedPosition').touched)\r\n            \"\r\n            class=\"invalid-feedback\"\r\n          >\r\n            This Field is Required</span\r\n          >\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"box\" class=\"row\">\r\n      <div class=\"col-md-6\">\r\n        <div>\r\n          <label class=\"cols\" class=\"form-Label\">Department</label>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            formControlName=\"completedDepartment\"\r\n            [class.is-invalid]=\"\r\n              IncidentReport.get('completedDepartment')?.hasError('required') &&\r\n              (IncidentReport.get('completedDepartment').dirty ||\r\n                IncidentReport.get('completedDepartment').touched)\r\n            \"\r\n          />\r\n          <span\r\n            *ngIf=\"\r\n              IncidentReport.get('completedDepartment')?.hasError('required') &&\r\n              (IncidentReport.get('completedDepartment').dirty ||\r\n                IncidentReport.get('completedDepartment').touched)\r\n            \"\r\n            class=\"invalid-feedback\"\r\n          >\r\n            This Field is Required</span\r\n          >\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"col-md-6\">\r\n        <div>\r\n          <label class=\"cols\" class=\"form-Label\">Date </label>\r\n          <!-- <input type=\"date\" class=\"form-control\" formControlName=\"completedDate\" [class.is-invalid]=\"IncidentReport.get('completedDate')?.hasError('required') && (IncidentReport.get('completedDate').dirty || IncidentReport.get('completedDate').touched) \"/> -->\r\n          <input  matInput  [matDatepicker]=\"pickerd5\" [max]=\"maxDate\"\r\n          class=\"form-control\"\r\n          formControlName=\"completedDate\"\r\n          [class.is-invalid]=\"IncidentReport.get('completedDate')?.hasError('required') && (IncidentReport.get('completedDate').dirty || IncidentReport.get('completedDate').touched) \"\r\n          placeholder=\"dd-mm-yyyy\">\r\n          <mat-datepicker-toggle matSuffix [for]=\"pickerd5\"></mat-datepicker-toggle>\r\n          <mat-datepicker #pickerd5 ></mat-datepicker>\r\n          <span *ngIf=\" IncidentReport.get('completedDate')?.hasError('required') && (IncidentReport.get('completedDate').dirty  || IncidentReport.get('completedDate').touched) \" class=\"invalid-feedback\" >\r\n          Date is Required</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6\">\r\n        <div>\r\n          <label class=\"cols\" class=\"form-Label\">Signature</label>\r\n          <div class=\"sign\">\r\n            <signature-pad\r\n              [options]=\"signaturePadOptions\"\r\n              (onBeginEvent)=\"drawStart()\"\r\n              (onEndEvent)=\"drawComplete()\"\r\n              #signature\r\n              [class.is-invalid]=\"singRequired\"\r\n            >\r\n            </signature-pad>\r\n            <span *ngIf=\"singRequired\" class=\"invalid-feedback\">\r\n              This Field is Required</span\r\n            >\r\n          </div>\r\n          <button class=\"btn btn-outline-primary mt-1\" (click)=\"clear()\">\r\n            Clear\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <br />\r\n  <p class=\"title\">The Form was Reviewed by:</p>\r\n  <div>\r\n    <div class=\"box\" class=\"row\">\r\n      <div class=\"col-md-6\">\r\n        <div>\r\n          <label class=\"cols\" class=\"form-Label\">Name</label>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            formControlName=\"reviewedName\"\r\n            [class.is-invalid]=\"\r\n              IncidentReport.get('reviewedName')?.hasError('required') &&\r\n              (IncidentReport.get('reviewedName').dirty ||\r\n                IncidentReport.get('reviewedName').touched)\r\n            \"\r\n          />\r\n          <span\r\n            *ngIf=\"\r\n              IncidentReport.get('reviewedName')?.hasError('required') &&\r\n              (IncidentReport.get('reviewedName').dirty ||\r\n                IncidentReport.get('reviewedName').touched)\r\n            \"\r\n            class=\"invalid-feedback\"\r\n          >\r\n            Name is Required</span\r\n          >\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"col-md-6\">\r\n        <div>\r\n          <label class=\"cols\" class=\"form-Label\">Position </label>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            formControlName=\"reviewedPosition\"\r\n            [class.is-invalid]=\"\r\n              IncidentReport.get('reviewedPosition')?.hasError('required') &&\r\n              (IncidentReport.get('reviewedPosition').dirty ||\r\n                IncidentReport.get('reviewedPosition').touched)\r\n            \"\r\n          />\r\n          <span\r\n            *ngIf=\"\r\n              IncidentReport.get('reviewedPosition')?.hasError('required') &&\r\n              (IncidentReport.get('reviewedPosition').dirty ||\r\n                IncidentReport.get('reviewedPosition').touched)\r\n            \"\r\n            class=\"invalid-feedback\"\r\n          >\r\n            This Field is Required</span\r\n          >\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"box\" class=\"row\">\r\n      <div class=\"col-md-6\">\r\n        <div>\r\n          <label class=\"cols\" class=\"form-Label\">Department</label>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            formControlName=\"reviewedDepartment\"\r\n            [class.is-invalid]=\"\r\n              IncidentReport.get('reviewedDepartment')?.hasError('required') &&\r\n              (IncidentReport.get('reviewedDepartment').dirty ||\r\n                IncidentReport.get('reviewedDepartment').touched)\r\n            \"\r\n          />\r\n          <span\r\n            *ngIf=\"\r\n              IncidentReport.get('reviewedDepartment')?.hasError('required') &&\r\n              (IncidentReport.get('reviewedDepartment').dirty ||\r\n                IncidentReport.get('reviewedDepartment').touched)\r\n            \"\r\n            class=\"invalid-feedback\"\r\n          >\r\n            This Field is Required</span\r\n          >\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"col-md-6\">\r\n        <div>\r\n          <label class=\"cols\" class=\"form-Label\">Date </label>\r\n          <!-- <input type=\"date\" class=\"form-control\" formControlName=\"reviewedDate\" [class.is-invalid]=\"IncidentReport.get('reviewedDate')?.hasError('required') && (IncidentReport.get('reviewedDate').dirty || IncidentReport.get('reviewedDate').touched) \"/> -->\r\n          <input  matInput  [matDatepicker]=\"pickerd6\" [max]=\"maxDate\"\r\n          class=\"form-control\"\r\n          formControlName=\"reviewedDate\"\r\n          [class.is-invalid]=\"IncidentReport.get('reviewedDate')?.hasError('required') && (IncidentReport.get('reviewedDate').dirty || IncidentReport.get('reviewedDate').touched) \"\r\n          placeholder=\"dd-mm-yyyy\">\r\n          <mat-datepicker-toggle matSuffix [for]=\"pickerd6\"></mat-datepicker-toggle>\r\n          <mat-datepicker #pickerd6 ></mat-datepicker>\r\n          <span *ngIf=\" IncidentReport.get('reviewedDate')?.hasError('required') && (IncidentReport.get('reviewedDate').dirty  || IncidentReport.get('reviewedDate').touched) \" class=\"invalid-feedback\" >\r\n         Date is Required</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"box\" class=\"row\">\r\n      <div class=\"col-md-6\">\r\n        <div>\r\n          <label class=\"cols\" class=\"form-Label\">Signature</label>\r\n          <div class=\"sign\">\r\n            <signature-pad\r\n              [options]=\"signaturePadOptions1\"\r\n              (onBeginEvent)=\"drawStart1()\"\r\n              (onEndEvent)=\"drawComplete1()\"\r\n              #signature1\r\n              [class.is-invalid]=\"singRequired1\"\r\n            ></signature-pad>\r\n            <span *ngIf=\"singRequired1\" class=\"invalid-feedback\">\r\n              This Field is Required</span\r\n            >\r\n          </div>\r\n          <button class=\"btn btn-outline-primary mt-1\" (click)=\"clear1()\">\r\n            Clear\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <hr />\r\n\r\n  <br />\r\n\r\n  <div class=\"col-md-2\">\r\n    <button\r\n      type=\"submit\"\r\n      class=\"btn btn-primary btn-block\"\r\n      [disabled]=\"!IncidentReport.valid || singRequired || singRequired1\"\r\n      (click)=\"onSubmit()\"\r\n    >\r\n      Submit\r\n    </button>\r\n  </div>\r\n</div>\r\n","import { Component, NgZone, OnInit } from '@angular/core';\r\nimport { ViewChild } from '@angular/core';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  FormArray,\r\n  FormControl,\r\n} from '@angular/forms';\r\nimport { SignaturePad } from 'angular2-signaturepad';\r\nimport { DynamicFormsService } from 'src/app/utils/services/dynamic-forms.service';\r\nimport { SetTitleService } from 'src/app/utils/services/set-title.service';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { UploadFileServiceService } from 'src/app/utils/services/upload-file-service.service';\r\nimport Swal from 'sweetalert2';\r\nimport { CdkTextareaAutosize } from '@angular/cdk/text-field';\r\nimport { take } from 'rxjs/operators';\r\nimport moment from 'moment';\r\n\r\n\r\n@Component({\r\n  selector: 'app-incident-report',\r\n  templateUrl: './incident-report.component.html',\r\n  styleUrls: ['./incident-report.component.scss'],\r\n})\r\nexport class IncidentReportComponent implements OnInit {\r\n  IncidentReport: FormGroup;\r\n  fileData: any;\r\n  data:any;\r\n  staff:any;\r\n  fileArr = [];\r\n  imgArr = [];\r\n  fileObj = [];\r\n  PPEselection = [];\r\n  ppeArr = [];\r\n  changesArr = [];\r\n  natureOfIncArr = [];\r\n  incidentsArr = [];\r\n  rootArr = [];\r\n  allJobNumbers = [];\r\n  @ViewChild('signature') signaturePad: SignaturePad;\r\n  @ViewChild('signature1') signaturePad1: SignaturePad;\r\n  maxDate = new Date();\r\n  minDate = new Date();\r\n  @ViewChild('autosize') autosize: CdkTextareaAutosize;\r\n  projMan: any;\r\n  projectMang: any;\r\n  typeOfInc: [];\r\n  root: any;\r\n  PPE= [];\r\n  changes = [];\r\n  rootCauseIncident = [];\r\n  natureOFIncidents= [];\r\n  incidents = [];\r\n  ppeSelectedArr=[];\r\n  changesSelectedArr=[];\r\n  natureOfIncSelectedArr=[];\r\n  typeOfIncidentsSelectedArr=[];\r\n  rootSelectedArr=[];\r\n  id: string;\r\n  dataUrl: any;\r\n  selectedImage: string;\r\n  singRequired: any;\r\n  singRequired1: any;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private dynamicFormsService: DynamicFormsService,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private setTitle:SetTitleService,\r\n    public upload: UploadFileServiceService,\r\n    private router: Router,\r\n    private ngZone: NgZone,\r\n  ) {\r\n    this.IncidentReport = this.fb.group({\r\n      incidents: this.fb.array([]),\r\n      natureOFIncidents: this.fb.array([]),\r\n      PPE: this.fb.array([]),\r\n      rootCauseIncident: this.fb.array([]),\r\n      changes: this.fb.array([]),\r\n      arrObj: this.fb.array([]),\r\n      //correctAction: ['', Validators.required],\r\n     // complete: ['', Validators.required],\r\n     // date: ['', Validators.required],\r\n      jobNumber: ['', Validators.required],\r\n      projectName: ['', Validators.required],\r\n      siteName: ['', Validators.required],\r\n      customerName: ['', Validators.required],\r\n      streetAddress: ['', Validators.required],\r\n      customerContact: ['', Validators.required],\r\n      projectManager: ['', Validators.required],\r\n      personCompletingForm: ['', Validators.required],\r\n      customerContactPhone: ['', Validators.required],\r\n      customerEmail: ['', Validators.required],\r\n      dateOfFormCompletion: ['', Validators.required],\r\n      name: ['', Validators.required],\r\n      department: ['', Validators.required],\r\n      position: ['', Validators.required],\r\n      locationOfTheIncident: ['', Validators.required],\r\n      dateOfTheIncident: ['', Validators.required],\r\n      timeOfTheIncident: ['', Validators.required],\r\n      whyDidtheUnsafeConditonExist: ['',],\r\n      completedName: ['', Validators.required],\r\n      completedPosition: ['', Validators.required],\r\n      completedDepartment: ['', Validators.required],\r\n      completedDate: ['', Validators.required],\r\n      reviewedName: ['', Validators.required],\r\n      reviewedPosition: ['', Validators.required],\r\n      reviewedDepartment: ['', Validators.required],\r\n      reviewedDate: ['', Validators.required],\r\n     // typeofIncident: ['', Validators.required],\r\n      priorIncident: [''],\r\n      similarIncident:[''],\r\n      witnessStatement:['', Validators.required],\r\n      nameOfWitness:['', Validators.required],\r\n      file: [''],\r\n      similarIncidentText:[''],\r\n      priorIncidentText:[''],\r\n      instructions:['Complete this form as soon as possible after an incident that results in serious inquiry or illness or death. Use to investigate a minor injuryor near-miss that could have resulted in a serious injury or illness.'],\r\n      signaturePad:['',Validators.required],\r\n      signaturePad1:['',Validators.required],\r\n      changesMadeOther: [false],\r\n      changesMadeOtherText: [''],\r\n    });\r\n    // this.IncidentReport = this.data;\r\n    // this.IncidentReport.patchValue({\r\n    //   incidents:this.data.incidents,\r\n    //   PPE:this.data.PPE,\r\n    //   natureOFIncidents:this.data.natureOFIncidents,\r\n    //   rootCauseIncident:this.data.rootCauseIncident,\r\n    //   changes:this.data.changes,\r\n    //   arrObj:this.data.arrObj,\r\n    //   correctAction:this.data.correctAction,\r\n    // })\r\n  }\r\n  triggerResize() {\r\n    // Wait for changes to be applied, then trigger textarea resize.\r\n    this.ngZone.onStable.pipe(take(1))\r\n        .subscribe(() => this.autosize.resizeToFitContent(true));\r\n  }\r\n  ngOnInit(): void {\r\n    this.id=this.activatedRoute.snapshot.params.id;\r\n    console.log(\"IncidentReport\",this.IncidentReport);\r\n    \r\n    this.dynamicFormsService.homebarTitle.next('Incident Report Form');\r\n    this.setTitle.setTitle('WHS-Incident Report Form');\r\n    this.getAllJobNumber();\r\n    this.getAllProjectMang();\r\n    this.getAllChanges();\r\n    this.getAllPPE();\r\n    this.getAllTypeOfInc();\r\n    this.getAllRoot();\r\n    this.getAllNatureOfInc();\r\n    this.getAllStaff();\r\n    if(this.id!=='Form')\r\n    {\r\n      console.log(\"id\",this.id);\r\n      this.getIncidentsByid(this.id);\r\n    }\r\n    else\r\n    {\r\n      this.addAction();\r\n     \r\n    }\r\n  }\r\n\r\n  addAction() {\r\n    {\r\n      this.add().push(this.newAction());\r\n    }\r\n  }\r\n \r\n  add(): FormArray {\r\n    return this.IncidentReport.get('arrObj') as FormArray;\r\n  }\r\n  newAction(): FormGroup {\r\n    return this.fb.group({\r\n      correctAction: [\"\",Validators.required],\r\n      personRes: ['', Validators.required],\r\n      complete: [\"\",Validators.required],\r\n      date: [\"\",Validators.required],\r\n    });\r\n  }\r\n  removeIncident(i) {\r\n    const item = <FormArray>this.IncidentReport.controls['arrObj'];\r\n    if (item.length > 1) {\r\n      item.removeAt(i);\r\n    \r\n    }\r\n  }\r\n  changeAdd(): FormArray {\r\n    return this.IncidentReport.get('changes') as FormArray;\r\n  }\r\n  changeAction(index): FormGroup {\r\n    return this.fb.group({\r\n      [this.changes[index]._id]: ['',],\r\n    });\r\n  }\r\n  \r\n\r\n  incidentsAdd(): FormArray {\r\n    return this.IncidentReport.get('incidents') as FormArray;\r\n  }\r\n  incidentsAction(index): FormGroup {\r\n    return this.fb.group({\r\n      [this.incidents[index]._id]: ['',],\r\n    });\r\n  }\r\n  natureAdd(): FormArray {\r\n    return this.IncidentReport.get('natureOFIncidents') as FormArray;\r\n  }\r\n  natureAction(index): FormGroup {\r\n    return this.fb.group({\r\n      [this.natureOFIncidents[index]._id]: ['',],\r\n    });\r\n  }\r\n  ppeAdd(): FormArray {\r\n    return this.IncidentReport.get('PPE') as FormArray;\r\n  }\r\n  ppeAction(index): FormGroup {\r\n    return this.fb.group({\r\n      [this.PPE[index]._id]: ['',],\r\n    });\r\n  }\r\n  rootCauseIncidentAdd(): FormArray {\r\n    return this.IncidentReport.get('rootCauseIncident') as FormArray;\r\n  }\r\n  rootCauseIncidentAction(index): FormGroup {\r\n    return this.fb.group({\r\n      [this.rootCauseIncident[index]._id]: ['',],\r\n    });\r\n  }\r\n  \r\n \r\n  jobNoSel() {\r\n    this.allJobNumbers.forEach((item) => {\r\n      if (this.IncidentReport.get('jobNumber').value === item._id) {\r\n        console.log('Id found', item);\r\n        this.IncidentReport.patchValue({\r\n          jobNumber: this.IncidentReport.get('jobNumber').value,\r\n          projectName: item.projectName,\r\n          siteName: item.siteName,\r\n          customerName: item.customerName,\r\n          streetAddress: item.streetAddress,\r\n          projectManager: item.projectManager,\r\n          customerContact: item.customerContact,\r\n          personCompletingForm: item.personCompletingForm,\r\n          customerContactPhone: item.customerContactPhone,\r\n          customerEmail: item.customerEmail,\r\n        });\r\n      }\r\n    });\r\n    this.IncidentReport.get('jobNumber').updateValueAndValidity();\r\n  }\r\n  getAllJobNumber() {\r\n    this.logicalFormInfo.getAllJobNumber().subscribe((res: any) => {\r\n      this.allJobNumbers = res.data;\r\n      console.log(\"this.allJobNumbers\",this.allJobNumbers);\r\n      \r\n    });\r\n  }\r\n  getAllProjectMang() {\r\n    this.logicalFormInfo.getAllProjectMang().subscribe((res: any) => {\r\n      this.projectMang = res.data;\r\n      console.log('this.projectMang=>', this.projectMang);\r\n\r\n    });\r\n  }\r\n  getAllPPE() {\r\n    this.logicalFormInfo.getAllPPE().subscribe((res: any) => {\r\n      console.log('PPE=>', res);\r\n      this.PPE = res.data;\r\n      for (let i = 0; i < this.PPE.length; i++) {\r\n        this.ppeArr[i] = 0;\r\n        this.ppeAdd().push(this.ppeAction(i))\r\n      }\r\n    });\r\n  }\r\n  getAllTypeOfInc() {\r\n    this.logicalFormInfo.getAllTypeOfIncident().subscribe((res:any) => {\r\n      console.log('typeOfIncident=>', res);\r\n      this.incidents = res.data;\r\n      for (let i = 0; i < this.incidents.length; i++) {\r\n        this.incidentsArr[i] = 0;\r\n        this.incidentsAdd().push(this.incidentsAction(i))\r\n      }\r\n    });\r\n  }\r\n  getAllRoot() {\r\n    this.logicalFormInfo.getAllRootCause().subscribe((res:any) => {\r\n      console.log('root=>', res);\r\n      this.rootCauseIncident = res.data;\r\n      for (let i = 0; i < this.rootCauseIncident.length; i++) {\r\n        this.rootArr[i] = 0;\r\n        this.rootCauseIncidentAdd().push(this.rootCauseIncidentAction(i))\r\n      }\r\n     \r\n    });\r\n  }\r\n  getAllNatureOfInc() {\r\n    this.logicalFormInfo.getAllNatOfInc().subscribe((res:any) => {\r\n      console.log('NatOfIncAll=>', res);\r\n      this.natureOFIncidents = res.data;\r\n      for (let i = 0; i < this.natureOFIncidents.length; i++) {\r\n        this.natureOfIncArr[i] = 0;\r\n        this.natureAdd().push(this.natureAction(i))\r\n       \r\n      }\r\n    });\r\n  }\r\n  getAllChanges() {\r\n    this.logicalFormInfo.getAllChangesMade().subscribe((res:any) => {\r\n      console.log('Changes=>', res);\r\n      this.changes = res.data;\r\n      this.changesArr = [];\r\n      for (let i = 0; i < this.changes.length; i++) {\r\n        this.changesArr[i] = 0;\r\n        this.changeAdd().push(this.changeAction(i))\r\n      }\r\n\r\n    });\r\n  }\r\n \r\n  selectFile(event: any) {\r\n    this.fileData = event.target.files[0];\r\n\r\n    if (\r\n      this.fileData.type == 'image/jpeg' ||\r\n      this.fileData.type == 'application/pdf'\r\n    ) {\r\n    } else {\r\n      alert('file type should be image of pdf');\r\n      return;\r\n    }\r\n  }\r\n\r\n  submit() {\r\n    console.log(this.IncidentReport.value);\r\n  }\r\n\r\n  public signaturePadOptions: Object = {\r\n    // passed through to szimek/signature_pad constructor\r\n    minWidth: 1,\r\n    canvasWidth: 480,\r\n    canvasHeight: 100,\r\n  };\r\n  public signaturePadOptions1: Object = {\r\n    // passed through to szimek/signature_pad constructor\r\n    minWidth: 1,\r\n    canvasWidth: 480,\r\n    canvasHeight: 100,\r\n  };\r\n\r\n  ngAfterViewInit() {\r\n    // this.signaturePad is now available\r\n    this.signaturePad.set('minWidth', 1); // set szimek/signature_pad options at runtime\r\n    this.signaturePad.set('dotSize', 1); // set szimek/signature_pad options at runtime\r\n    this.signaturePad.clear(); // invoke functions from szimek/signature_pad API\r\n    this.signaturePad1.clear(); // invoke functions from szimek/signature_pad API\r\n  }\r\n\r\n  drawComplete() {\r\n    // will be notified of szimek/signature_pad's onEnd event\r\n    console.log(this.signaturePad.toDataURL());\r\n    console.log(\"signnn\",this.signaturePad);\r\n    \r\n    this.IncidentReport.controls['signaturePad'].setValue(this.signaturePad.toDataURL());\r\n    this.singRequired = this.IncidentReport.controls['signaturePad'].invalid\r\n    \r\n\r\n  }\r\n  drawComplete1() {\r\n    // will be notified of szimek/signature_pad's onEnd event\r\n    console.log(this.signaturePad1.toDataURL());\r\n    console.log(\"signnn\",this.signaturePad1);\r\n    this.IncidentReport.controls['signaturePad1'].setValue(this.signaturePad1.toDataURL());\r\n    console.log(\"signaturePad1 control\",this.IncidentReport.controls['signaturePad1'].value);\r\n    this.singRequired1 = this.IncidentReport.controls['signaturePad1'].invalid\r\n\r\n  }\r\n  clear() {\r\n    this.signaturePad.clear();\r\n    this.singRequired = this.IncidentReport.controls['signaturePad1'].untouched\r\n  }\r\n  clear1() {\r\n    console.log('cl1');\r\n\r\n    this.signaturePad1.clear();\r\n    this.singRequired1 = this.IncidentReport.controls['signaturePad1'].untouched\r\n    \r\n  }\r\n  drawStart() {\r\n    // will be notified of szimek/signature_pad's onBegin event\r\n    console.log('begin drawing');\r\n    console.log(\"signaturePad control\",this.IncidentReport.controls['signaturePad'].touched);\r\n    //this.singRequired = this.IncidentReport.controls['signaturePad'].invalid\r\n  }\r\n  drawStart1() {\r\n    // will be notified of szimek/signature_pad's onBegin event\r\n    console.log('begin drawing');\r\n    //this.singRequired1 = this.IncidentReport.controls['signaturePad1'].invalid\r\n    console.log('begin drawing',this.singRequired1);\r\n  }\r\n \r\n\r\n  // onChangeIncident(e: any) {\r\n  //   const checkArray: FormArray = this.IncidentReport.get(\r\n  //     'incidents'\r\n  //   ) as FormArray;\r\n  //   let item = e.target.value;\r\n  //   if (e.target.checked) {\r\n  //     checkArray.push(new FormControl(item));\r\n  //     console.log(item);\r\n  //   } else {\r\n  //     let i: number = 0;\r\n  //     checkArray.controls.forEach((item) => {\r\n  //       if (item.value == e.target.value) {\r\n  //         checkArray.removeAt(i);\r\n  //       }\r\n  //     });\r\n  //   }\r\n  // }\r\n \r\n  // onNatureOFIncidents(e: any) {\r\n  //   const NatureArray: FormArray = this.IncidentReport.get(\r\n  //     'natureOFIncidents'\r\n  //   ) as FormArray;\r\n  //   let item = e.target.value;\r\n  //   if (e.target.checked) {\r\n  //     NatureArray.push(new FormControl(item));\r\n  //     console.log(item);\r\n  //   } else {\r\n  //     let i: number = 0;\r\n  //     NatureArray.controls.forEach((item) => {\r\n  //       if (item.value == e.target.value) {\r\n  //         NatureArray.removeAt(i);\r\n  //       }\r\n  //     });\r\n  //   }\r\n  // }\r\n\r\n  \r\n  // onPPE(e: any) {\r\n    \r\n  //   let item = e.target.value;\r\n  //   if (e.target.checked) {\r\n  //     this.ppeArr.push(item);\r\n  //     console.log(item);\r\n  //   } else {\r\n  //     this.ppeArr.forEach((item,i) => {\r\n  //       if (item.value == e.target.value) {\r\n  //         this.ppeArr.splice(i,1);\r\n  //       }\r\n  //     });\r\n  //   }\r\n  // }\r\n \r\n  // onRootCauseIncident(e: any) {\r\n  //   const IncidentArray: FormArray = this.IncidentReport.get(\r\n  //     'rootCauseIncident'\r\n  //   ) as FormArray;\r\n  //   let item = e.target.value;\r\n  //   if (e.target.checked) {\r\n  //     IncidentArray.push(new FormControl(item));\r\n  //     console.log(item);\r\n  //   } else {\r\n  //     let i: number = 0;\r\n  //     IncidentArray.controls.forEach((item) => {\r\n  //       if (item.value == e.target.value) {\r\n  //         IncidentArray.removeAt(i);\r\n  //       }\r\n  //     });\r\n  //   }\r\n  // }\r\n\r\n \r\n  // onChanges(e: any) {\r\n  //   const ChangeArray: FormArray = this.IncidentReport.get(\r\n  //     'changes'\r\n  //   ) as FormArray;\r\n  //   let item = e.target.value;\r\n  //   if (e.target.checked) {\r\n  //     ChangeArray.push(new FormControl(item));\r\n  //     console.log(item);\r\n  //   } else {\r\n  //     let i: number = 0;\r\n  //     ChangeArray.controls.forEach((item) => {\r\n  //       if (item.value == e.target.value) {\r\n  //         ChangeArray.removeAt(i);\r\n  //       }\r\n  //     });\r\n  //   }\r\n  // }\r\n  ppeSelected(e){\r\n    let item = e.target.value;\r\n    if (e.target.checked) {\r\n      this.ppeSelectedArr.push(item);\r\n    } else {\r\n      this.ppeSelectedArr.forEach((item, j) => {\r\n        if (item == e.target.value) {\r\n          this.ppeSelectedArr.splice(j, 1);\r\n          return;\r\n        }\r\n      });\r\n    }\r\n    console.log(\"ppeSelectedArr\",this.ppeSelectedArr);\r\n    \r\n  }\r\n  changesSelected(e,i){\r\n    let item = e.target.value;\r\n    if (e.target.checked) {\r\n      this.changesSelectedArr.push(item);\r\n    } else {\r\n      this.changesSelectedArr.forEach((item, j) => {\r\n        if (item == e.target.value) {\r\n          this.changesSelectedArr.splice(j, 1);\r\n          return;\r\n        }\r\n      });\r\n    }\r\n    if(!this.IncidentReport.get(\"changesMadeOther\").value){\r\n      this.IncidentReport.get(\"changesMadeOtherText\").setValue(\"\")\r\n    }\r\n    console.log(\"changesSelected\",this.changesSelectedArr);\r\n \r\n    \r\n    \r\n  }\r\n\r\n  natureOfIncSelected(e){\r\n    let item = e.target.value;\r\n    if (e.target.checked) {\r\n      this.natureOfIncSelectedArr.push(item);\r\n    } else {\r\n      this.natureOfIncSelectedArr.forEach((item, j) => {\r\n        if (item == e.target.value) {\r\n          this.natureOfIncSelectedArr.splice(j, 1);\r\n          return;\r\n        }\r\n      });\r\n    }\r\n    console.log(\"natureOfIncSelectedArr\",this.natureOfIncSelectedArr);\r\n    \r\n  }\r\n\r\n  typeOfIncidentsSelected(e){\r\n    let item = e.target.value;\r\n    if (e.target.checked) {\r\n      this.typeOfIncidentsSelectedArr.push(item);\r\n    } else {\r\n      this.typeOfIncidentsSelectedArr.forEach((item, j) => {\r\n        if (item == e.target.value) {\r\n          this.typeOfIncidentsSelectedArr.splice(j, 1);\r\n          return;\r\n        }\r\n      });\r\n    }\r\n    console.log(\"natureOfIncSelectedArr\",this.typeOfIncidentsSelectedArr);\r\n    \r\n  }\r\n\r\n  rootSelected(e){\r\n    let item = e.target.value;\r\n    if (e.target.checked) {\r\n      this.rootSelectedArr.push(item);\r\n    } else {\r\n      this.rootSelectedArr.forEach((item, j) => {\r\n        if (item == e.target.value) {\r\n          this.rootSelectedArr.splice(j, 1);\r\n          return;\r\n        }\r\n      });\r\n    }\r\n    console.log(\"natureOfIncSelectedArr\",this.rootSelectedArr);\r\n    \r\n  }\r\n  getAllStaff(){\r\n    this.logicalFormInfo.getAllStaff().subscribe((res:any)=> {\r\n      this.staff=res.data;\r\n      console.log(\"res\",this.staff);\r\n   })\r\n  }\r\n\r\n  getIncidentsByid(id)\r\n  {\r\n    this.logicalFormInfo.getIncidentReportById(id).subscribe((res:any)=>{\r\n      console.log(\"getById\",res);\r\n     \r\n      this.IncidentReport.patchValue({\r\n        projectName:res.data.projectName,\r\n        siteName:res.data.siteName,\r\n        customerName: res.data.customerName,\r\n        streetAddress:res.data.streetAddress,\r\n        customerContact: res.data.customerContact,\r\n        projectManager: res.data.projectManager,\r\n        personCompletingForm: res.data.personCompletingForm,\r\n        customerContactPhone: res.data.customerContactPhone,\r\n        customerEmail: res.data.customerEmail,\r\n        jobNumber: res.data.jobNumber,\r\n        dateOfFormCompletion:res.data.dateOfFormCompletion,\r\n        name:res.data.name,\r\n        department:res.data.department,\r\n        position:res.data.position,\r\n        locationOfTheIncident:res.data.locationOfTheIncident,\r\n        dateOfTheIncident:res.data.dateOfTheIncident,\r\n        timeOfTheIncident:res.data.timeOfTheIncident,\r\n        nameOfWitness:res.data.nameOfWitness,\r\n        witnessStatement:res.data.witnessStatement,\r\n        //file:res.data.file,\r\n        whyDidtheUnsafeConditonExist:res.data.whyDidtheUnsafeConditonExist,\r\n        priorIncident:res.data.priorIncident,\r\n        similarIncident:res.data.similarIncident,\r\n        completedName:res.data.completedName,\r\n        completedPosition:res.data.completedPosition,\r\n        completedDepartment:res.data.completedDepartment,\r\n        completedDate:res.data.completedDate,\r\n        reviewedName:res.data.reviewedName,\r\n        reviewedPosition:res.data.reviewedPosition,\r\n        reviewedDepartment:res.data.reviewedDepartment,\r\n        reviewedDate:res.data.reviewedDate,\r\n        similarIncidentText:res.data.similarIncidentText,\r\n        priorIncidentText:res.data.priorIncidentText,\r\n        changesMadeOther:res.data.changesMadeOther,\r\n      changesMadeOtherText:res.data.changesMadeOtherText\r\n\r\n      })\r\n     this.selectedImage=res.data.file\r\n     for (let index = 0; index < res.data.arrObj.length; index++) {\r\nconsole.log(\"res.data.arrObj.length\",res.data.arrObj.length);\r\n\r\n      let key\r\n      key=Object.keys( res.data.arrObj[index]);\r\n      \r\n      let changeIndex = this.changeAdd().length\r\n      this.addAction();\r\n     this.add().controls[index].get(\"complete\").setValue(res.data.arrObj[index].complete)\r\n     this.add().controls[index].get(\"correctAction\").setValue(res.data.arrObj[index].correctAction)\r\n     this.add().controls[index].get(\"date\").setValue(res.data.arrObj[index].date)\r\n     this.add().controls[index].get(\"personRes\").setValue(res.data.arrObj[index].personRes)\r\n    }\r\n      for (let index = 0; index < res.data.changes.length; index++) {\r\n\r\n        let key\r\n        key=Object.keys( res.data.changes[index]);\r\n        \r\n        let changeIndex = this.changeAdd().length\r\n\r\n       this.changeAdd().controls[index].get(key).setValue(res.data.changes[index][key])\r\n      }\r\n      for (let index = 0; index < res.data.PPE.length; index++) {\r\n\r\n        let key\r\n        key=Object.keys( res.data.PPE[index]);\r\n        \r\n        let changeIndex = this.changeAdd().length\r\n\r\n       this.ppeAdd().controls[index].get(key).setValue(res.data.PPE[index][key])\r\n      }\r\n      for (let index = 0; index < res.data.incidents.length; index++) {\r\n\r\n        let key\r\n        key=Object.keys( res.data.incidents[index]);\r\n        \r\n        let changeIndex = this.changeAdd().length\r\n;\r\n       this.incidentsAdd().controls[index].get(key).setValue(res.data.incidents[index][key])\r\n      }\r\n      \r\n      for (let index = 0; index < res.data.natureOFIncidents.length; index++) {\r\n\r\n        let key\r\n        key=Object.keys( res.data.natureOFIncidents[index]);\r\n        \r\n        let changeIndex = this.changeAdd().length\r\n\r\n       this.natureAdd().controls[index].get(key).setValue(res.data.natureOFIncidents[index][key])\r\n      }\r\n      for (let index = 0; index < res.data.rootCauseIncident.length; index++) {\r\n      \r\n        let key\r\n        key=Object.keys( res.data.rootCauseIncident[index]);\r\n        \r\n        let changeIndex = this.changeAdd().length\r\n\r\n       this.rootCauseIncidentAdd().controls[index].get(key).setValue(res.data.rootCauseIncident[index][key])\r\n      }\r\n\r\n      // for (let index = 0; index < this.typeOfIncidentsSelectedArr.length; index++) {\r\n      //   console.log(\"this.typeOfIncidentsSelectedArr.length\",this.typeOfIncidentsSelectedArr.length);\r\n        \r\n      //   let typeOfIncidentsIndex = this.incidentsAdd().length\r\n      //   console.log(\"typeOfIncidentsIndex\",typeOfIncidentsIndex);\r\n        \r\n      //   this.incidentsAdd().push(this.incidentsAction());\r\n      //   this.incidentsAdd().at(typeOfIncidentsIndex).get(\"id\").setValue(this.typeOfIncidentsSelectedArr[index])\r\n      // }\r\n      // for (let index = 0; index < this.natureOfIncSelectedArr.length; index++) {\r\n      //   console.log(\"this.natureOfIncSelectedArr.length\",this.natureOfIncSelectedArr.length);\r\n        \r\n      //   let natureOfIncIndex = this.natureAdd().length\r\n      //   console.log(\"typeOfIncidentsIndex\",natureOfIncIndex);\r\n        \r\n      //   this.natureAdd().push(this.incidentsAction());\r\n      //   this.natureAdd().at(natureOfIncIndex).get(\"id\").setValue(this.natureOfIncSelectedArr[index])\r\n      // }\r\n      // for (let index = 0; index < this.ppeSelectedArr.length; index++) {\r\n      //   console.log(\"this.ppeSelectedArr.length\",this.ppeSelectedArr.length);\r\n        \r\n      //   let ppeIndex = this.ppeAdd().length\r\n      //   console.log(\"ppeIndex\",ppeIndex);\r\n        \r\n      //   this.ppeAdd().push(this.ppeAction());\r\n      //   this.ppeAdd().at(ppeIndex).get(\"id\").setValue(this.ppeSelectedArr[index])\r\n      // }\r\n      // for (let index = 0; index < this.rootSelectedArr.length; index++) {\r\n      //   console.log(\"this.rootSelectedArr.length\",this.rootSelectedArr.length);\r\n        \r\n      //   let rootIndex = this.rootCauseIncidentAdd().length\r\n      //   console.log(\"rootIndex\",rootIndex);\r\n        \r\n      //   this.rootCauseIncidentAdd().push(this.rootCauseIncidentAction());\r\n      //   this.rootCauseIncidentAdd().at(rootIndex).get(\"id\").setValue(this.rootSelectedArr[index])\r\n      // }\r\n      // this.add(res.data.arrObj);\r\n      // this.changeAdd(res.data.changes);\r\n      // this.incidentsAdd(res.data.attendees);\r\n      // this.natureAdd(res.data.attendees);\r\n      // this.ppeAdd(res.data.attendees);\r\n      // this.rootCauseIncidentAdd(res.data.attendees);\r\n      this.dataUrl = res.data.signaturePad1;\r\n      let check =async () => { this.signaturePad1 != null }\r\n      check().then(() => {\r\n\r\n        this.signaturePad1.fromDataURL(res.data.signaturePad1)\r\n      })\r\n      let check2 =async () => { this.signaturePad != null }\r\n      check2().then(() => {\r\n        console.log( this.signaturePad);\r\n        this.signaturePad.fromDataURL(res.data.signaturePad)\r\n        // setTimeout(() => {\r\n        //   let signaturePadArr=this.signaturePad2.toArray()\r\n        //   res.data.attendees.forEach((x,i) => {\r\n        //     signaturePadArr[i].fromDataURL(x.signature)\r\n        //   });\r\n        // }, 2000); \r\n      })\r\n      this.IncidentReport.patchValue({\r\n        signaturePad:res.data.signaturePad,\r\n        signaturePad1:res.data.signaturePad1\r\n\r\n      })\r\n    })\r\n  }\r\n  onSubmit() {\r\n    console.log(this.IncidentReport.value);\r\n    this.IncidentReport.get(\"file\")?.patchValue(this.selectedImage)\r\n    console.log(this.IncidentReport.value);\r\n    if(this.id!=='Form')\r\n    {\r\n      console.log(\"update\");\r\n      \r\n      const data={\r\n        ...this.IncidentReport.value\r\n      }\r\n       console.log(\"data\",data);\r\n       \r\n       this.logicalFormInfo.updateIncidentReport(this.id,data).subscribe((res)=>\r\n       {\r\n         console.log(\"res\",res);\r\n          Swal.fire({\r\n            title: 'Update successfully',\r\n            showConfirmButton: false,\r\n            timer: 1200,\r\n          });\r\n         this.router.navigate([\"/admin/forms/incidentsTable\"]);\r\n       },(err) => {\r\n        console.error(err);\r\n      });\r\n    }\r\n    else\r\n    {\r\n      const data={\r\n        ...this.IncidentReport.value\r\n      }\r\n      console.log(\"data\",data);\r\n      \r\n      this.logicalFormInfo.addIncidentReport(data).subscribe(res => {\r\n        console.log(\"addCustomerForm=>\", res)\r\n       // this.IncidentReport.reset();\r\n        Swal.fire({\r\n          title: 'Submit successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });\r\n        this.router.navigate([\"/admin/forms\"]);\r\n      }, (err) => {\r\n        console.error(err);\r\n      });\r\n       \r\n    }\r\n  \r\n    // // for (let index = 0; index < this.changesSelectedArr.length; index++) {\r\n    // //   console.log(\"this.changesSelectedArr.length\",this.changesSelectedArr.length);\r\n      \r\n    // //   let changeIndex = this.changeAdd().length\r\n    // //   console.log(\"changeIndex\",changeIndex);\r\n      \r\n    // //  // this.changeAdd().push(this.changeAction(index));\r\n    // //  this.changeAdd().get(\"61a9ba8bdee47f7c86631bf5\").setValue(\"ssssssss\")\r\n    // // }\r\n    \r\n    // for (let index = 0; index < this.typeOfIncidentsSelectedArr.length; index++) {\r\n    //   console.log(\"this.typeOfIncidentsSelectedArr.length\",this.typeOfIncidentsSelectedArr.length);\r\n      \r\n    //   let typeOfIncidentsIndex = this.incidentsAdd().length\r\n    //   console.log(\"typeOfIncidentsIndex\",typeOfIncidentsIndex);\r\n      \r\n    //   this.incidentsAdd().push(this.incidentsAction());\r\n    //   this.incidentsAdd().at(typeOfIncidentsIndex).get(\"id\").setValue(this.typeOfIncidentsSelectedArr[index])\r\n    // }\r\n    // for (let index = 0; index < this.natureOfIncSelectedArr.length; index++) {\r\n    //   console.log(\"this.natureOfIncSelectedArr.length\",this.natureOfIncSelectedArr.length);\r\n      \r\n    //   let natureOfIncIndex = this.natureAdd().length\r\n    //   console.log(\"typeOfIncidentsIndex\",natureOfIncIndex);\r\n      \r\n    //   this.natureAdd().push(this.incidentsAction());\r\n    //   this.natureAdd().at(natureOfIncIndex).get(\"id\").setValue(this.natureOfIncSelectedArr[index])\r\n    // }\r\n    // for (let index = 0; index < this.ppeSelectedArr.length; index++) {\r\n    //   console.log(\"this.ppeSelectedArr.length\",this.ppeSelectedArr.length);\r\n      \r\n    //   let ppeIndex = this.ppeAdd().length\r\n    //   console.log(\"ppeIndex\",ppeIndex);\r\n      \r\n    //   this.ppeAdd().push(this.ppeAction());\r\n    //   this.ppeAdd().at(ppeIndex).get(\"id\").setValue(this.ppeSelectedArr[index])\r\n    // }\r\n    // for (let index = 0; index < this.rootSelectedArr.length; index++) {\r\n    //   console.log(\"this.rootSelectedArr.length\",this.rootSelectedArr.length);\r\n      \r\n    //   let rootIndex = this.rootCauseIncidentAdd().length\r\n    //   console.log(\"rootIndex\",rootIndex);\r\n      \r\n    //   this.rootCauseIncidentAdd().push(this.rootCauseIncidentAction());\r\n    //   this.rootCauseIncidentAdd().at(rootIndex).get(\"id\").setValue(this.rootSelectedArr[index])\r\n    // }\r\n\r\n   \r\n   \r\n  }\r\n  // upload(e) {\r\n  //   const fileListAsArray = Array.from(e);\r\n  //   fileListAsArray.forEach((item, i) => {\r\n  //     const file = (e as HTMLInputElement);\r\n  //     const url = URL.createObjectURL(file[i]);\r\n  //     this.imgArr.push(url);\r\n  //     this.fileArr.push({ item, url: url });\r\n  //   })\r\n\r\n  //   this.fileArr.forEach((item) => {\r\n  //     this.fileObj.push(item.item)\r\n  //   })\r\n\r\n  //   // Set files form control\r\n  //   this.IncidentReport.patchValue({\r\n  //     avatar: this.fileObj\r\n  //   })\r\n\r\n  //   this.IncidentReport.get('avatar').updateValueAndValidity()\r\n  // }\r\n  \r\n  browser(event) {\r\n    const files = event.target.files[0];\r\n    const formdata = new FormData();\r\n    formdata.append('', files);\r\n    console.log(files);\r\n\r\n    this.upload.upload(formdata).subscribe((res) => {\r\n      console.log('AddProductComponent -> browser -> res', res);\r\n    \r\n     this.selectedImage=res.files[0];\r\n\r\n      console.log(\r\n        'AddProductComponent -> browse -> this.selectedImage',\r\n         this.selectedImage\r\n      );\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"btn btn-outline-primary\" *ngIf=\"id ==='form'\" [routerLink]=\"['/admin/forms']\"><i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i></div>\r\n<div class=\"btn btn-outline-primary\" *ngIf=\"id!=='form'\" [routerLink]=\"['/admin/forms/hazardTable']\"><i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i></div>\r\n \r\n<div class=\"container card px-4 py-4 content-center\">\r\n  <form class=\"px-4 py-4\" [formGroup]=\"hazardReport\">\r\n    <div class=\"mb-3\">\r\n      <p class=\"text-center title\">Hazard Report Form </p>\r\n    </div>\r\n    <hr class=\"mt-5\" />\r\n\r\n    <div class=\"row py-4\">\r\n      <div class=\"col-md-12\">\r\n        <div style=\"padding: 0px\" class=\"col-md-6\">\r\n          <h3 class=\"mb-3 text_1\">Part A - Form Details</h3>\r\n          <h4 class=\"text_2\">Position Reporting The Hazard</h4>\r\n        </div>\r\n        <div style=\"padding: 0px\" class=\"col-md-12\">\r\n          <div class=\"form-check form-check-inline\">\r\n            <input\r\n              class=\"form-check-input\"\r\n              type=\"radio\"\r\n              \r\n              formControlName=\"employeeParttime\"\r\n              id=\"inlineCheckbox5\"\r\n              value=\"option4\"\r\n            />\r\n            <label class=\"form-check-label ml-1\" for=\"inlineCheckbox5\"\r\n              >Fulltime Employee</label\r\n            >\r\n          </div>\r\n          <div class=\"form-check form-check-inline ml-4\">\r\n            <input\r\n              class=\"form-check-input checkbox-lg\"\r\n              type=\"radio\"\r\n             \r\n              formControlName=\"employeeParttime\"\r\n              id=\"inlineCheckbox6\"\r\n              value=\"option5\"\r\n            />\r\n            <label class=\"form-check-label ml-1\" for=\"inlineCheckbox6\"\r\n              >Part-time Employee</label\r\n            >\r\n          </div>\r\n          <div class=\"form-check form-check-inline ml-4\">\r\n            <input\r\n              class=\"form-check-input\"\r\n              type=\"radio\"\r\n             \r\n              formControlName=\"employeeParttime\"\r\n              id=\"inlineCheckbox7\"\r\n              value=\"option6\"\r\n            />\r\n            <label class=\"form-check-label ml-1\" for=\"inlineCheckbox7\"\r\n              >Casual</label\r\n            >\r\n          </div>\r\n          <div class=\"form-check form-check-inline ml-4\">\r\n            <input\r\n              class=\"form-check-input\"\r\n              type=\"radio\"\r\n \r\n              formControlName=\"employeeParttime\"\r\n              id=\"inlineCheckbox8\"\r\n              value=\"option7\"\r\n            />\r\n            <label class=\"form-check-label ml-1\" for=\"inlineCheckbox8\"\r\n              >Contractor</label\r\n            >\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"mb-3\">\r\n          <label for=\"exampleInputFullname\" class=\"form-label\">Full Name</label>\r\n          <input\r\n            type=\"fullname\"\r\n            class=\"form-control\"\r\n            formControlName=\"fullName\"\r\n            id=\"exampleInputFullname\"\r\n            aria-describedby=\"emailHelp\"\r\n            [class.is-invalid]=\"hazardReport.get('fullName')?.hasError('required') \r\n            && (hazardReport.get('fullName').dirty || hazardReport.get('fullName').touched) \"\r\n            />\r\n          <span\r\n            *ngIf=\"\r\n            hazardReport.get('fullName')?.hasError('required') && (hazardReport.get('fullName').dirty \r\n            || hazardReport.get('fullName').touched) \"\r\n            class=\"invalid-feedback\"\r\n          >\r\n          Full Name is Required</span\r\n          >\r\n        </div>\r\n      </div>\r\n      </div>\r\n      <!-- <div class=\"col-md-6\">\r\n        <div class=\"mb-3\">\r\n          <label for=\"exampleInputSurname\" class=\"form-label\">Surname</label>\r\n          <input\r\n            type=\"surname\"\r\n            class=\"form-control\"\r\n            formControlName=\"surname\"\r\n            id=\"exampleInputSurname\"\r\n            aria-describedby=\"emailHelp\"\r\n          />\r\n        </div>\r\n      </div> -->\r\n      <div class=\"row\">\r\n      <div class=\"col-md-6\">\r\n        <div class=\"mb-3\">\r\n          <label for=\"exampleInputEmail1\" class=\"form-label\"\r\n            >Email address</label\r\n          >\r\n          <input\r\n            type=\"email\"\r\n            class=\"form-control\"\r\n            formControlName=\"email\"\r\n            id=\"exampleInputEmail1\"\r\n            aria-describedby=\"emailHelp\"\r\n            [class.is-invalid]=\"hazardReport.get('email')?.hasError('required') \r\n            && (hazardReport.get('email').dirty || hazardReport.get('email').touched) \"\r\n            />\r\n            <span\r\n            *ngIf=\"\r\n            hazardReport.get('email')?.hasError('required') && (hazardReport.get('email').dirty \r\n            || hazardReport.get('email').touched) \"\r\n            class=\"invalid-feedback\"\r\n          >\r\n          Email is Required</span\r\n          >\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <div class=\"mb-3\">\r\n          <label for=\"exampleInputPhone\" class=\"form-label\">Phone</label>\r\n          <input\r\n            maxlength=\"10\"\r\n            class=\"form-control\"\r\n            formControlName=\"phone\"\r\n            id=\"exampleInputPhone\"\r\n            aria-describedby=\"emailHelp\"\r\n            [class.is-invalid]=\"hazardReport.get('phone')?.hasError('required') \r\n            && (hazardReport.get('phone').dirty || hazardReport.get('phone').touched) || hazardReport.get('phone')?.hasError('pattern') \"\r\n            />\r\n            <span\r\n            *ngIf=\"\r\n            hazardReport.get('phone')?.hasError('required') && (hazardReport.get('phone').dirty \r\n            || hazardReport.get('phone').touched) \"\r\n            class=\"invalid-feedback\"\r\n          >\r\n          Phone Number is Required</span\r\n          >\r\n          <span\r\n          *ngIf=\"hazardReport.get('phone')?.hasError('pattern')\"\r\n          class=\"invalid-feedback\"\r\n        >\r\n        Phone Number Should be 10 digits</span\r\n        >\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <div class=\"mb-3\">\r\n          <label for=\"exampleInputDepartment\" class=\"form-label\"\r\n            >Department</label\r\n          >\r\n          <input\r\n            type=\"department\"\r\n            class=\"form-control\"\r\n            formControlName=\"department\"\r\n            id=\"exampleInputDepartment\"\r\n            aria-describedby=\"emailHelp\"\r\n            [class.is-invalid]=\"hazardReport.get('department')?.hasError('required') \r\n            && (hazardReport.get('department').dirty || hazardReport.get('department').touched) \"\r\n            />\r\n            <span\r\n            *ngIf=\"\r\n            hazardReport.get('department')?.hasError('required') && (hazardReport.get('department').dirty \r\n            || hazardReport.get('department').touched) \"\r\n            class=\"invalid-feedback\"\r\n          >\r\n          Department is Required</span\r\n          >\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <div class=\"mb-3\">\r\n          <label for=\"exampleInputPosition\" class=\"form-label\">Position</label>\r\n          <input\r\n            type=\"position\"\r\n            class=\"form-control\"\r\n            formControlName=\"position\"\r\n            id=\"exampleInputPosition\"\r\n            aria-describedby=\"emailHelp\"\r\n            [class.is-invalid]=\"hazardReport.get('position')?.hasError('required') \r\n            && (hazardReport.get('position').dirty || hazardReport.get('position').touched) \"\r\n            />\r\n            <span\r\n            *ngIf=\"\r\n            hazardReport.get('position')?.hasError('required') && (hazardReport.get('position').dirty \r\n            || hazardReport.get('position').touched) \"\r\n            class=\"invalid-feedback\"\r\n          >\r\n          Position is Required</span\r\n          >\r\n        </div>\r\n      </div>\r\n      <!-- <div class=\"col-md-6\">\r\n        <div class=\"mb-3\">\r\n          <label for=\"exampleInputProjectNumber\" class=\"form-label\"\r\n            >Project Number</label\r\n          >\r\n          <input\r\n            type=\"Projectnumber\"\r\n            class=\"form-control\"\r\n            formControlName=\"projectName\"\r\n            id=\"exampleInputProjectNumber\"\r\n            aria-describedby=\"emailHelp\"\r\n            \r\n            [class.is-invalid]=\"hazardReport.get('projectName')?.hasError('required') \r\n            && (hazardReport.get('projectName').dirty || hazardReport.get('projectName').touched) \"\r\n            />\r\n            <span\r\n            *ngIf=\"\r\n            hazardReport.get('projectName')?.hasError('required') && (hazardReport.get('projectName').dirty \r\n            || hazardReport.get('projectName').touched) \"\r\n            class=\"invalid-feedback\"\r\n          >\r\n          Project Number is Required</span\r\n          >\r\n        </div>\r\n      </div> -->\r\n    </div>\r\n\r\n    <hr />\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12 report_1\">\r\n        <h3 style=\"margin-top: 1.5%\">Report to be sent to the following</h3>\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <div class=\"mb-3\">\r\n          <label class=\"form-label\">Manager/Supervisor</label>\r\n          <select\r\n          formControlName=\"managerSupervisor\"\r\n            class=\"form-select form-control col form-dropdown\"\r\n            aria-label=\"Default select example\"\r\n      \r\n          >\r\n            <option selected hidden>Select</option>\r\n            <option *ngFor=\"let manager of whsData\"  [value]=\"manager._id\" >{{manager.name}}</option>\r\n          \r\n          </select>\r\n           <!-- <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            formControlName=\"managerSupervisor\"\r\n            aria-describedby=\"emailHelp\"\r\n          /> -->\r\n          <!-- <input \r\n          class=\"form-control\"\r\n                  type=\"text\" \r\n               \r\n                  placeholder=\"Enter Name\" \r\n                  formControlName=\"myControlManager\"\r\n                  matInput\r\n     \r\n                  [matAutocomplete]=\"auto2\">\r\n           <mat-autocomplete #auto2=\"matAutocomplete\" (optionSelected)=\"changeName($event)\" >\r\n               <mat-option           \r\n                   *ngFor=\"let manager of filteredManager | async\" \r\n                   [value]=\"manager\">\r\n                 {{manager.name}}\r\n              </mat-option>\r\n          </mat-autocomplete> -->\r\n         \r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <div class=\"mb-3\">\r\n          <label for=\"email\" class=\"form-label\">Email Address</label>\r\n          <select\r\n          formControlName=\"managerSupervisorEmail\"\r\n            class=\"form-select form-control col form-dropdown\"\r\n            aria-label=\"Default select example\"\r\n           \r\n          >\r\n            <option selected hidden>Select</option>\r\n            <option *ngFor=\"let manager of whsData\"  [value]=\"manager.email\" >{{manager.email}}</option>\r\n          \r\n          </select>\r\n          <!-- <input\r\n            type=\"email\"\r\n            class=\"form-control\"\r\n            formControlName=\"managerSupervisorEmail\"\r\n            id=\"exampleInputProjectNumber\"\r\n            aria-describedby=\"emailHelp\"\r\n          />  -->\r\n        \r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <div class=\"mb-3\">\r\n          <label for=\"exampleInputProjectNumber\" class=\"form-label\"\r\n            >WHS Manager</label\r\n          >\r\n    \r\n            <input \r\n            class=\"form-control\"\r\n                    type=\"text\" \r\n                 \r\n                    placeholder=\"Enter Name\" \r\n                    formControlName=\"myControl\"\r\n                    matInput\r\n       \r\n                    [matAutocomplete]=\"auto\">\r\n             <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"change($event)\" >\r\n                 <mat-option           \r\n                     *ngFor=\"let option of filteredOptions | async\" \r\n                     [value]=\"option\">\r\n                   {{option.name}}\r\n                </mat-option>\r\n            </mat-autocomplete>\r\n      \r\n     \r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <div class=\"mb-3\">\r\n          <label for=\"email\" class=\"form-label\">Email Address</label>\r\n           <input\r\n            type=\"email\"\r\n            class=\"form-control\"\r\n            formControlName=\"whsManagerEmail\"\r\n            id=\"exampleInputProjectNumber\"\r\n            aria-describedby=\"emailHelp\"\r\n           \r\n          />\r\n          \r\n         \r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <h2 class=\"text_3\">Hazard Details</h2>\r\n      </div>\r\n      <div class=\"col-md-12 py-4\">\r\n        <div class=\"form-floating\">\r\n          <h3>Describe the Hazard</h3>\r\n          <textarea\r\n            class=\"form-control\"\r\n            formControlName=\"describeHazard\"\r\n            placeholder=\"Leave a comment here\"\r\n            id=\"floatingTextarea2\"\r\n            style=\"height: 120px\"\r\n            aria-describedby=\"emailHelp\"\r\n            [class.is-invalid]=\"hazardReport.get('describeHazard')?.hasError('required') \r\n            && (hazardReport.get('describeHazard').dirty || hazardReport.get('describeHazard').touched) \"\r\n          ></textarea>\r\n          <span\r\n          *ngIf=\"\r\n          hazardReport.get('describeHazard')?.hasError('required') && (hazardReport.get('describeHazard').dirty \r\n          || hazardReport.get('describeHazard').touched) \"\r\n          class=\"invalid-feedback\"\r\n        >\r\n        Description is Required</span\r\n        >\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-3\">\r\n        <div class=\"mb-3\">\r\n          <label for=\"email\" class=\"form-label\">Date Hazard Reported</label>\r\n          <input  matInput  [matDatepicker]=\"datepicker\" [max]=\"maxDate\"\r\n            class=\"form-control\"\r\n            formControlName=\"dateHazardReport\"\r\n            id=\"exampleInputProjectNumber\"\r\n            [class.is-invalid]=\"hazardReport.get('dateHazardReport')?.hasError('required') \r\n            && (hazardReport.get('dateHazardReport').dirty || hazardReport.get('dateHazardReport').touched) \"\r\n            placeholder=\"dd-mm-yyyy\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"datepicker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #datepicker ></mat-datepicker>\r\n            <!--  -->\r\n            <span\r\n            *ngIf=\"\r\n            hazardReport.get('dateHazardReport')?.hasError('required') && (hazardReport.get('dateHazardReport').dirty \r\n            || hazardReport.get('dateHazardReport').touched) \"\r\n            class=\"invalid-feedback\"\r\n          >\r\n          Date is Required</span\r\n          >\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-3\">\r\n        <div class=\"mb-3\">\r\n          <label for=\"email\" class=\"form-label\">Location of Hazard</label>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            formControlName=\"locationHazard\"\r\n            id=\"exampleInputProjectNumber\"\r\n            aria-describedby=\"emailHelp\"\r\n            [class.is-invalid]=\"hazardReport.get('locationHazard')?.hasError('required') \r\n            && (hazardReport.get('locationHazard').dirty || hazardReport.get('locationHazard').touched) \"\r\n            />\r\n            <span\r\n            *ngIf=\"\r\n            hazardReport.get('locationHazard')?.hasError('required') && (hazardReport.get('locationHazard').dirty \r\n            || hazardReport.get('locationHazard').touched) \"\r\n            class=\"invalid-feedback\"\r\n          >\r\n          Location is Required</span\r\n          >\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-3\">\r\n        <div class=\"mb-3\">\r\n          <label for=\"email\" class=\"form-label\">Date Hazard Identified</label>\r\n          <input  matInput  [matDatepicker]=\"datepicker1\" [max]=\"maxDate\" \r\n            class=\"form-control\"\r\n            formControlName=\"dateHazardIdentify\"\r\n            id=\"exampleInputProjectNumber\"\r\n            [class.is-invalid]=\"hazardReport.get('dateHazardIdentify')?.hasError('required') \r\n            && (hazardReport.get('dateHazardIdentify').dirty || hazardReport.get('dateHazardIdentify').touched) \"\r\n            placeholder=\"dd-mm-yyyy\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"datepicker1\"></mat-datepicker-toggle>\r\n            <mat-datepicker #datepicker1 ></mat-datepicker>\r\n            \r\n            <span\r\n            *ngIf=\"\r\n            hazardReport.get('dateHazardIdentify')?.hasError('required') && (hazardReport.get('dateHazardIdentify').dirty \r\n            || hazardReport.get('dateHazardIdentify').touched) \"\r\n            class=\"invalid-feedback\"\r\n          >\r\n          Date is Required</span\r\n          >\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-3\">\r\n        <div class=\"mb-3\">\r\n          <label class=\"form-label\">Job Number</label>\r\n          <select\r\n            class=\"form-control form-select\"\r\n            formControlName=\"jobNumber\"\r\n            [class.is-invalid]=\"hazardReport.get('jobNumber')?.hasError('required') \r\n            && (hazardReport.get('jobNumber').dirty || hazardReport.get('jobNumber').touched) \"\r\n            >\r\n            <option selected hidden>Select</option>\r\n          <option [value]=\"jobNo._id\" *ngFor=\"let jobNo of allJobNumbers\">{{jobNo.jobNumber}}</option>\r\n\r\n          </select>\r\n            <span\r\n            *ngIf=\"\r\n            hazardReport.get('jobNumber')?.hasError('required') && (hazardReport.get('jobNumber').dirty \r\n            || hazardReport.get('jobNumber').touched) \"\r\n            class=\"invalid-feedback\"\r\n          >\r\n          Job Number is Required</span\r\n          >\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row py-4\">\r\n      <div class=\"col-md-12\">\r\n        <h2>Hazard Treatment</h2>\r\n      </div>\r\n      <div class=\"col-md-12\">\r\n        <table class=\"table table-bordered text-center\">\r\n          <thead>\r\n            <tr>\r\n              <th colspan=\"7\" class=\"L_1\">Risk Level Matrix</th>\r\n              <th colspan=\"8\" class=\"L_1\">Risk Analysis</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <th colspan=\"2\" rowspan=\"2\"></th>\r\n              <td colspan=\"5\">Consequence</td>\r\n              <td colspan=\"4\" rowspan=\"2\">\r\n                <div class=\"like_2\">Likelihood</div>\r\n              </td>\r\n              <td colspan=\"4\" rowspan=\"2\">\r\n                <div class=\"like_2\">Consequence</div>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th>1</th>\r\n              <td>2</td>\r\n              <td>3</td>\r\n              <td>4</td>\r\n              <td>5</td>\r\n            </tr>\r\n            <tr>\r\n              <th rowspan=\"5\"><div class=\"like_1\">Likelihood</div></th>\r\n              <td>5</td>\r\n              <td class=\"M_1\">M</td>\r\n              <td class=\"H_1\">H</td>\r\n              <td class=\"H_1\">H</td>\r\n              <td class=\"H_1\">H</td>\r\n              <td class=\"H_1\">H</td>\r\n              <td colspan=\"2\"><div class=\"space_1\">1</div></td>\r\n              <td colspan=\"2\">Rare</td>\r\n              <td colspan=\"2\"><div class=\"space_1\">1</div></td>\r\n              <td colspan=\"2\">Insignificant</td>\r\n            </tr>\r\n            <tr>\r\n              <th>4</th>\r\n              <td class=\"M_1\">M</td>\r\n              <td class=\"M_1\">M</td>\r\n              <td class=\"M_1\">M</td>\r\n              <td class=\"H_1\">H</td>\r\n              <td class=\"H_1\">H</td>\r\n              <td colspan=\"2\">2</td>\r\n              <td colspan=\"2\">Unlikely</td>\r\n              <td colspan=\"2\">2</td>\r\n              <td colspan=\"2\">Minor</td>\r\n            </tr>\r\n            <tr>\r\n              <th>3</th>\r\n              <td class=\"L_1\">L</td>\r\n              <td class=\"M_1\">M</td>\r\n              <td class=\"M_1\">M</td>\r\n              <td class=\"H_1\">H</td>\r\n              <td class=\"H_1\">H</td>\r\n              <td colspan=\"2\">3</td>\r\n              <td colspan=\"2\">Moderate</td>\r\n              <td colspan=\"2\">3</td>\r\n              <td colspan=\"2\">Moderate</td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"col\">2</th>\r\n              <td class=\"L_1\">L</td>\r\n              <td class=\"L_1\">L</td>\r\n              <td class=\"M_1\">M</td>\r\n              <td class=\"M_1\">M</td>\r\n              <td class=\"H_1\">H</td>\r\n              <td colspan=\"2\">4</td>\r\n              <td colspan=\"2\">Likely</td>\r\n              <td colspan=\"2\">4</td>\r\n              <td colspan=\"2\">Major</td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"col\">1</th>\r\n              <td class=\"L_1\">L</td>\r\n              <td class=\"L_1\">L</td>\r\n              <td class=\"L_1\">L</td>\r\n              <td class=\"M_1\">M</td>\r\n              <td class=\"M_1\">M</td>\r\n              <td colspan=\"2\" class=\"mr-2 ml-2\">5</td>\r\n              <td colspan=\"2\">Almost Certain</td>\r\n              <td colspan=\"2\">5</td>\r\n              <td colspan=\"2\">Catastrophic</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"mb-3 col\">\r\n        <label for=\"exampleFormControlInput1\" class=\"form-label\"\r\n          >Consequence</label\r\n        >\r\n\r\n        <select\r\n        formControlName=\"consequence\"\r\n          class=\"form-select form-control col form-dropdown\"\r\n          aria-label=\"Default select example\"\r\n           (change)=\"getHazardNo()\"\r\n        >\r\n          <option selected hidden>Select</option>\r\n          <option *ngFor=\"let consequence of Consequences\"  [value]=\"consequence.value\" >{{consequence.name}}</option>\r\n          <!-- <option value=\"1\">1-Insignificant</option>\r\n          <option value=\"2\">2-Minor</option>\r\n          <option value=\"3\">3-Moderate</option>\r\n          <option value=\"4\">4-Major</option>\r\n          <option value=\"5\">5-Catastrophic</option> -->\r\n        </select>\r\n      </div>\r\n      <div class=\"mb-3 col\">\r\n        <label for=\"exampleFormControlInput1\" class=\"form-label\"\r\n          >Likelihood</label\r\n        >\r\n        <select\r\n        formControlName=\"likelihood\"\r\n          class=\"form-select form-control col form-dropdown\"\r\n          aria-label=\"Default select example\"\r\n          (change)=\"getHazardNo()\"\r\n        >\r\n          <option selected hidden>Select</option>\r\n          <option *ngFor=\"let likelihood of Likelihood\" [value]=\"likelihood.value\" >{{likelihood.name}}</option>\r\n\r\n          <!-- <option value=\"1\">1-Insignificant</option>\r\n          <option value=\"2\">2-Minor</option>\r\n          <option value=\"3\">3-Moderate</option>\r\n          <option value=\"4\">4-Major</option>\r\n          <option value=\"5\">5-Catastrophic</option> -->\r\n        </select>\r\n      </div>\r\n      <div class=\"mb-3 col\">\r\n        <label for=\"exampleFormControlInput1\" class=\"form-label\"\r\n          >Risk Rating</label\r\n        >\r\n        <select\r\n        formControlName=\"riskRating\"\r\n          class=\"form-select form-control col form-dropdown\"\r\n          aria-label=\"Default select example\"\r\n        >\r\n          <option selected hidden>Select</option>\r\n          <option *ngFor=\"let rating of RiskRating\" [value]=\"rating.value\">{{rating.name}}</option>\r\n          <!-- <option value=\"1\">Low</option>\r\n          <option value=\"2\">Medium</option>\r\n          <option value=\"3\">High</option> -->\r\n        </select>\r\n      </div>\r\n     \r\n     \r\n    </div>\r\n   <div class=\"row py-4\">\r\n      <div class=\"col-md\">\r\n        <h2>Action Required</h2>\r\n        <div class=\"form-check form-check-inline\">\r\n          <input\r\n            class=\"form-check-input\"\r\n            type=\"radio\"\r\n            formControlName=\"actionRequired\"\r\n            id=\"inlineCheckbox1\"\r\n            value=\"immediately\"\r\n          />\r\n          <label class=\"form-check-label ml-1\" for=\"inlineCheckbox1\"\r\n            >Immediately</label\r\n          >\r\n        </div>\r\n        <div class=\"form-check form-check-inline ml-4\">\r\n          <input\r\n            class=\"form-check-input\"\r\n            type=\"radio\"\r\n            formControlName=\"actionRequired\"\r\n            id=\"inlineCheckbox2\"\r\n            value=\"today\"\r\n          />\r\n          <label class=\"form-check-label ml-1\" for=\"inlineCheckbox2\"\r\n            >Today</label\r\n          >\r\n        </div>\r\n        <div class=\"form-check form-check-inline ml-4\">\r\n          <input\r\n            class=\"form-check-input\"\r\n            type=\"radio\"\r\n            formControlName=\"actionRequired\"\r\n            id=\"inlineCheckbox3\"\r\n            value=\"thisWeek\"\r\n          />\r\n          <label class=\"form-check-label ml-1\" for=\"inlineCheckbox3\"\r\n            >This week</label\r\n          >\r\n        </div>\r\n        <div class=\"form-check form-check-inline ml-4\">\r\n          <input\r\n            class=\"form-check-input\"\r\n            type=\"radio\"\r\n            \r\n            formControlName=\"actionRequired\"\r\n            id=\"inlineCheckbox4\"\r\n            value=\"thisMonth\"\r\n          />\r\n          <label class=\"form-check-label ml-1\" for=\"inlineCheckbox4\"\r\n            >This Month</label\r\n          >\r\n        </div> \r\n      </div>\r\n    </div>  \r\n    <h2 class=\"mt-3\">Corrective Action</h2>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-md-4\">\r\n        <div class=\"mb-3\">\r\n          <label class=\"form-label\"\r\n            >Can you eliminate the hazard</label\r\n          >\r\n          <select\r\n          class=\"form-select form-control col outline form-dropdown\"\r\n          aria-label=\"Default select example\"\r\n          formControlName=\"eliminateHazard\"\r\n        >\r\n          <option selected hidden>Select</option>\r\n          <option class=\"mr-1\" value=\"yes\">Yes</option>\r\n          <option class=\"mr-1\" value=\"no\">No</option>\r\n        </select>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-4\"  >\r\n        <div class=\"mb-3\" [class.disableDiv]=\"hazardReport.get('eliminateHazard').value  == 'no'\">\r\n          <label class=\"form-label\"\r\n            >Corrective Action</label\r\n          >\r\n          <textarea\r\n            type=\"surname\"\r\n            class=\"form-control\"\r\n            formControlName=\"eliminateCorrect\"\r\n            cdkTextareaAutosize\r\n            #autosize=\"cdkTextareaAutosize\"\r\n            cdkAutosizeMinRows=\"1.6\"\r\n            cdkAutosizeMaxRows=\"5\"\r\n            aria-describedby=\"emailHelp\"\r\n          ></textarea>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-2\" >\r\n        <div class=\"mb-3\" [class.disableDiv]=\"hazardReport.get('eliminateHazard').value  == 'no'\" >\r\n          <label class=\"form-label label_1\"\r\n            >Actioned by</label\r\n          >\r\n          <input\r\n            type=\"email\"\r\n            class=\"form-control\"\r\n            formControlName=\"elliminateAction\"\r\n       \r\n            aria-describedby=\"emailHelp\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-2\">\r\n        <div class=\"mb-3\"  [class.disableDiv]=\"hazardReport.get('eliminateHazard').value  == 'no'\">\r\n          <label class=\"form-label label_1\"\r\n            >By when</label\r\n          >\r\n          <!-- <input\r\n            type=\"date\"\r\n            class=\"form-control\"\r\n            formControlName=\"eliminateWhen\"\r\n   \r\n            aria-describedby=\"emailHelp\"\r\n          /> -->\r\n          <input  matInput  [matDatepicker]=\"pickerd1\"\r\n          class=\"form-control\"\r\n          formControlName=\"eliminateWhen\"\r\n          placeholder=\"dd-mm-yyyy\">\r\n          <mat-datepicker-toggle matSuffix [for]=\"pickerd1\"></mat-datepicker-toggle>\r\n          <mat-datepicker #pickerd1 ></mat-datepicker>\r\n        </div>\r\n      </div>\r\n      </div>\r\n      <div class=\"row\">\r\n      <div class=\"col-md-4\">\r\n        <div class=\"mb-3\">\r\n          <label class=\"form-label\"\r\n            >Can you substitute a safe process</label\r\n          >\r\n          <select\r\n          class=\"form-select form-control col outline form-dropdown\"\r\n          aria-label=\"Default select example\"\r\n          formControlName=\"process\"\r\n        >\r\n          <option selected hidden>Select</option>\r\n          <option class=\"mr-1\" value=\"yes\">Yes</option>\r\n          <option class=\"mr-1\" value=\"no\">No</option>\r\n        </select>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-4\">\r\n        <div class=\"mb-3\"  [class.disableDiv]=\"hazardReport.get('process').value  == 'no'\">\r\n          <label class=\"form-label\"\r\n            >Corrective Action</label\r\n          >\r\n          <textarea\r\n            type=\"surname\"\r\n            class=\"form-control textarea-autosize\"\r\n            formControlName=\"substituteCorrect\"\r\n\r\n            cdkTextareaAutosize\r\n            #autosize=\"cdkTextareaAutosize\"\r\n            cdkAutosizeMinRows=\"1.6\"\r\n            cdkAutosizeMaxRows=\"5\"\r\n            aria-describedby=\"emailHelp\"\r\n          ></textarea>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-2\">\r\n        <div class=\"mb-3\"  [class.disableDiv]=\"hazardReport.get('process').value  == 'no'\">\r\n          <label class=\"form-label label_1\"\r\n            >Actioned by</label\r\n          >\r\n          <input\r\n            type=\"email\"\r\n            class=\"form-control\"\r\n            formControlName=\"substituteAction\"\r\n            \r\n            aria-describedby=\"emailHelp\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-2\">\r\n        <div class=\"mb-3\"  [class.disableDiv]=\"hazardReport.get('process').value  == 'no'\">\r\n          <label  class=\"form-label label_1\"\r\n            >By when</label\r\n          >\r\n          <!-- <input\r\n            type=\"date\"\r\n            class=\"form-control\"\r\n            formControlName=\"substituteWhen\"\r\n      \r\n            aria-describedby=\"emailHelp\"\r\n          /> -->\r\n          <input  matInput  [matDatepicker]=\"pickerd2\"\r\n          class=\"form-control\"\r\n          formControlName=\"substituteWhen\"\r\n          placeholder=\"dd-mm-yyyy\">\r\n          <mat-datepicker-toggle matSuffix [for]=\"pickerd2\"></mat-datepicker-toggle>\r\n          <mat-datepicker #pickerd2 ></mat-datepicker>\r\n        </div>\r\n      </div>\r\n      </div>\r\n      <div class=\"row\">\r\n      <div class=\"col-md-4\">\r\n        <div class=\"mb-3\" >\r\n          <label  class=\"form-label\"\r\n            >Can the hazard be isolated</label\r\n          >\r\n          <select\r\n          class=\"form-select form-control col outline form-dropdown\"\r\n          aria-label=\"Default select example\"\r\n          formControlName=\"isolatedHazard\"\r\n        >\r\n          <option selected hidden>Select</option>\r\n          <option class=\"mr-1\" value=\"yes\">Yes</option>\r\n          <option class=\"mr-1\" value=\"no\">No</option>\r\n        </select>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-4\">\r\n        <div class=\"mb-3\"  [class.disableDiv]=\"hazardReport.get('isolatedHazard').value  == 'no'\">\r\n          <label class=\"form-label\"\r\n            >Corrective Action</label\r\n          >\r\n          <textarea\r\n            type=\"surname\"\r\n            class=\"form-control\"\r\n            formControlName=\"isolatedCorrect\"\r\n          \r\n            cdkTextareaAutosize\r\n            #autosize=\"cdkTextareaAutosize\"\r\n            cdkAutosizeMinRows=\"1.6\"\r\n            cdkAutosizeMaxRows=\"5\"\r\n            aria-describedby=\"emailHelp\"\r\n          ></textarea>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-2\">\r\n        <div class=\"mb-3\"  [class.disableDiv]=\"hazardReport.get('isolatedHazard').value  == 'no'\">\r\n          <label class=\"form-label label_1\"\r\n            >Actioned by</label\r\n          >\r\n          <input\r\n            type=\"email\"\r\n            class=\"form-control\"\r\n            formControlName=\"isolatedAction\"\r\n      \r\n            aria-describedby=\"emailHelp\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-2\">\r\n        <div class=\"mb-3\"  [class.disableDiv]=\"hazardReport.get('isolatedHazard').value  == 'no'\">\r\n          <label class=\"form-label label_1\"\r\n            >By when</label\r\n          >\r\n          <!-- <input\r\n            type=\"date\"\r\n            class=\"form-control\"\r\n            formControlName=\"isolatedWhen\"\r\n          \r\n            aria-describedby=\"emailHelp\"\r\n          /> -->\r\n          <input  matInput  [matDatepicker]=\"pickerd3\"\r\n          class=\"form-control\"\r\n          formControlName=\"isolatedWhen\"\r\n          placeholder=\"dd-mm-yyyy\">\r\n          <mat-datepicker-toggle matSuffix [for]=\"pickerd3\"></mat-datepicker-toggle>\r\n          <mat-datepicker #pickerd3 ></mat-datepicker>\r\n        </div>\r\n      </div>\r\n      </div>\r\n      <div class=\"row\">\r\n      <div class=\"col-md-4\">\r\n        <div class=\"mb-3\" >\r\n          <label class=\"form-label\"\r\n            >Can a solution be engreed</label\r\n          >\r\n          <select\r\n          class=\"form-select form-control col outline form-dropdown\"\r\n          aria-label=\"Default select example\"\r\n          formControlName=\"complete\"\r\n        >\r\n          <option selected hidden>Select</option>\r\n          <option class=\"mr-1\" value=\"yes\">Yes</option>\r\n          <option class=\"mr-1\" value=\"no\">No</option>\r\n        </select>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-4\">\r\n        <div class=\"mb-3\"  [class.disableDiv]=\"hazardReport.get('complete').value  == 'no'\" >\r\n          <label class=\"form-label\"\r\n            >Corrective Action</label\r\n          >\r\n          <textarea\r\n            type=\"surname\"\r\n            class=\"form-control\"\r\n            formControlName=\"solutionCorrect\"\r\n            cdkTextareaAutosize\r\n            #autosize=\"cdkTextareaAutosize\"\r\n            cdkAutosizeMinRows=\"1.6\"\r\n            cdkAutosizeMaxRows=\"5\"\r\n            aria-describedby=\"emailHelp\"\r\n          ></textarea>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-2\">\r\n        <div class=\"mb-3\"  [class.disableDiv]=\"hazardReport.get('complete').value  == 'no'\">\r\n          <label class=\"form-label label_1\"\r\n            >Actioned by</label\r\n          >\r\n          <input\r\n            type=\"email\"\r\n            class=\"form-control\"\r\n            formControlName=\"solutionAction\"\r\n   \r\n            aria-describedby=\"emailHelp\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-2\">\r\n        <div class=\"mb-3\"  [class.disableDiv]=\"hazardReport.get('complete').value  == 'no'\">\r\n          <label class=\"form-label label_1\"\r\n            >By when</label\r\n          >\r\n          <!-- <input\r\n            type=\"date\"\r\n            class=\"form-control\"\r\n            formControlName=\"solutionWhen\"\r\n         \r\n            aria-describedby=\"emailHelp\"\r\n          /> -->\r\n          <input  matInput  [matDatepicker]=\"pickerd4\"\r\n          class=\"form-control\"\r\n          formControlName=\"solutionWhen\"\r\n          placeholder=\"dd-mm-yyyy\">\r\n          <mat-datepicker-toggle matSuffix [for]=\"pickerd4\"></mat-datepicker-toggle>\r\n          <mat-datepicker #pickerd4 ></mat-datepicker>\r\n        </div>\r\n      </div>\r\n      </div>\r\n      <div class=\"row\">\r\n      <div class=\"col-md-4\">\r\n        <div class=\"mb-3\">\r\n          <label class=\"form-label\"\r\n            >Can procedures remove or reduce the risk</label\r\n          >\r\n          <select\r\n                  class=\"form-select form-control col outline form-dropdown\"\r\n                  aria-label=\"Default select example\"\r\n                  formControlName=\"procedures\"\r\n                >\r\n                  <option selected hidden>Select</option>\r\n                  <option class=\"mr-1\" value=\"yes\">Yes</option>\r\n                  <option class=\"mr-1\" value=\"no\">No</option>\r\n                </select>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-4\">\r\n        <div class=\"mb-3\"  [class.disableDiv]=\"hazardReport.get('procedures').value  == 'no'\">\r\n          <label class=\"form-label\"\r\n            >Corrective Action</label\r\n          >\r\n          <textarea\r\n            type=\"surname\"\r\n            class=\"form-control\"\r\n            formControlName=\"procedureRemoveCorrect\"\r\n            cdkTextareaAutosize\r\n            #autosize=\"cdkTextareaAutosize\"\r\n            cdkAutosizeMinRows=\"1.6\"\r\n            cdkAutosizeMaxRows=\"5\"\r\n            aria-describedby=\"emailHelp\"\r\n          ></textarea>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-2\">\r\n        <div class=\"mb-3\" [class.disableDiv]=\"hazardReport.get('procedures').value  == 'no'\" >\r\n          <label  class=\"form-label label_1\"\r\n            >Actioned by</label\r\n          >\r\n          <input\r\n            type=\"email\"\r\n            class=\"form-control\"\r\n            formControlName=\"procedureRemoveAction\"\r\n           \r\n            aria-describedby=\"emailHelp\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-2\">\r\n        <div class=\"mb-3\"  [class.disableDiv]=\"hazardReport.get('procedures').value  == 'no'\">\r\n          <label class=\"form-label label_1\"\r\n            >By when</label\r\n          >\r\n          <!-- <input\r\n            type=\"date\"\r\n            class=\"form-control\"\r\n            formControlName=\"procedureRemove\"\r\n           \r\n            aria-describedby=\"emailHelp\" \r\n          /> -->\r\n          <input  matInput  [matDatepicker]=\"pickerd5\"\r\n          class=\"form-control\"\r\n          formControlName=\"procedureRemove\"\r\n          placeholder=\"dd-mm-yyyy\">\r\n          <mat-datepicker-toggle matSuffix [for]=\"pickerd5\"></mat-datepicker-toggle>\r\n          <mat-datepicker #pickerd5 ></mat-datepicker>\r\n        </div>\r\n      </div>\r\n      </div>\r\n      <div class=\"row\">\r\n      <div class=\"col-md-4\">\r\n        <div class=\"mb-3\">\r\n          <label class=\"form-label\"\r\n            >Can the use PPE reduce the risk</label\r\n          >\r\n          <select\r\n          class=\"form-select form-control col outline form-dropdown\"\r\n          aria-label=\"Default select example\"\r\n          formControlName=\"reduceRisk\"\r\n        >\r\n          <option selected hidden>Select</option>\r\n          <option class=\"mr-1\" value=\"yes\">Yes</option>\r\n          <option class=\"mr-1\" value=\"no\">No</option>\r\n        </select>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-4\">\r\n        <div class=\"mb-3\"  [class.disableDiv]=\"hazardReport.get('reduceRisk').value  == 'no'\">\r\n          <label  class=\"form-label\"\r\n            >Corrective Action</label\r\n          >\r\n          <textarea\r\n            type=\"surname\"\r\n            class=\"form-control\"\r\n            formControlName=\"PPECorrect\"\r\n            cdkTextareaAutosize\r\n            #autosize=\"cdkTextareaAutosize\"\r\n            cdkAutosizeMinRows=\"1.6\"\r\n            cdkAutosizeMaxRows=\"5\"\r\n            aria-describedby=\"emailHelp\"\r\n          ></textarea>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-2\">\r\n        <div class=\"mb-3\" [class.disableDiv]=\"hazardReport.get('reduceRisk').value  == 'no'\" >\r\n          <label class=\"form-label label_1\"\r\n            >Actioned by</label\r\n          >\r\n\r\n          <input\r\n            type=\"email\"\r\n            class=\"form-control\"\r\n            formControlName=\"PPEAction\"\r\n            \r\n            aria-describedby=\"emailHelp\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-2\">\r\n        <div class=\"mb-3\" [class.disableDiv]=\"hazardReport.get('reduceRisk').value  == 'no'\" >\r\n          <label class=\"form-label label_1\"\r\n            >By when</label\r\n          >\r\n          <!-- <input\r\n            type=\"date\"\r\n            class=\"form-control\"\r\n            formControlName=\"PPEWhen\"\r\n        \r\n            aria-describedby=\"emailHelp\"\r\n          /> -->\r\n          <input  matInput  [matDatepicker]=\"pickerd6\"\r\n          class=\"form-control\"\r\n          formControlName=\"PPEWhen\"\r\n          placeholder=\"dd-mm-yyyy\">\r\n          <mat-datepicker-toggle matSuffix [for]=\"pickerd6\"></mat-datepicker-toggle>\r\n          <mat-datepicker #pickerd6 ></mat-datepicker>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <h2>The form was compiled by:</h2>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6\">\r\n        <div class=\"mb-3\">\r\n          <label class=\"form-label\">Name</label>\r\n          <input\r\n            type=\"fullname\"\r\n            class=\"form-control\"\r\n            formControlName=\"name\"\r\n          \r\n            aria-describedby=\"emailHelp\"\r\n            [class.is-invalid]=\"hazardReport.get('name')?.hasError('required') \r\n            && (hazardReport.get('name').dirty || hazardReport.get('name').touched) \"\r\n            />\r\n            <span\r\n            *ngIf=\"\r\n            hazardReport.get('name')?.hasError('required') && (hazardReport.get('name').dirty \r\n            || hazardReport.get('name').touched) \"\r\n            class=\"invalid-feedback\"\r\n          >\r\n          Name is Required</span\r\n          >\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <div class=\"mb-3\">\r\n          <label class=\"form-label\">Position</label>\r\n          <input\r\n            type=\"surname\"\r\n            class=\"form-control\"\r\n            formControlName=\"compilePosition\"\r\n    \r\n            aria-describedby=\"emailHelp\"\r\n            [class.is-invalid]=\"hazardReport.get('compilePosition')?.hasError('required') \r\n            && (hazardReport.get('compilePosition').dirty || hazardReport.get('compilePosition').touched) \"\r\n            />\r\n            <span\r\n            *ngIf=\"\r\n            hazardReport.get('compilePosition')?.hasError('required') && (hazardReport.get('compilePosition').dirty \r\n            || hazardReport.get('compilePosition').touched) \"\r\n            class=\"invalid-feedback\"\r\n          >\r\n          Position is Required</span\r\n          >\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <div class=\"mb-3\">\r\n          <label  class=\"form-label\">Department</label>\r\n          <input\r\n            type=\"surname\"\r\n            class=\"form-control\"\r\n            formControlName=\"compileDepartment\"\r\n           \r\n            aria-describedby=\"emailHelp\"\r\n            [class.is-invalid]=\"hazardReport.get('compileDepartment')?.hasError('required') \r\n            && (hazardReport.get('compileDepartment').dirty || hazardReport.get('compileDepartment').touched) \"\r\n            />\r\n            <span\r\n            *ngIf=\"\r\n            hazardReport.get('compileDepartment')?.hasError('required') && (hazardReport.get('compileDepartment').dirty \r\n            || hazardReport.get('compileDepartment').touched) \"\r\n            class=\"invalid-feedback\"\r\n          >\r\n          Department is Required</span\r\n          >\r\n        </div>\r\n      </div>\r\n      <div class=\"mb-3 col-md-6\">\r\n        <label class=\"form-label\">File Upload</label>\r\n      \r\n        <!-- <img\r\n        [src]=\"selectedImage\"\r\n        onerror=\"this.src='../../../assets/img/uploadImg.png'\"\r\n        class=\"imageStud\"\r\n        alt=\"\"\r\n        width=\"100\"\r\n        height=\"100\"\r\n      />\r\n      <input\r\n        type=\"file\"\r\n        #contactImage\r\n        class=\"custom-file-input img1 form-control\"\r\n        (change)=\"browser($event)\"\r\n        id=\"inputGroupFile01\"\r\n        name=\"avatar\"\r\n        style=\"display: none\"\r\n      />\r\n      <span\r\n      class=\"material-icons material-file\"\r\n      (click)=\"contactImage.click()\"\r\n      class=\"btn border bg-white\"\r\n      style=\"\r\n        position: absolute;\r\n        top: 95px;\r\n        font-size: 1rem !important;\r\n      \"\r\n    >\r\n      <i\r\n        class=\"fa fa-upload\"\r\n        aria-hidden=\"true\"\r\n        style=\"margin: 0px\"\r\n      ></i>\r\n    </span> -->\r\n        <!-- <input\r\n          class=\"form-control\"\r\n          formControlName=\"fileUpload\"\r\n          type=\"file\"\r\n          id=\"formFile\"\r\n        /> -->\r\n\r\n      <input\r\n        type=\"file\"\r\n      \r\n        class=\"form-control\"\r\n        (change)=\"browser($event)\"\r\n       #file\r\n        id=\"file\"\r\n       \r\n      />\r\n      <!-- <img   [src]=\"selectedImage\"alt=\"Site Logo\" width=\"50\" height=\"50\"> -->\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <!-- <mat-form-field appearance=\"outline\">\r\n          <input formControlName=\"date\" class=\"date_1\" matInput [matDatepicker]=\"picker\">\r\n          <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n          <mat-datepicker #picker></mat-datepicker>\r\n        </mat-form-field>  -->\r\n        <div class=\"mb-3\">\r\n          <label for=\"exampleInputSurname\" class=\"form-label\">Date</label>\r\n          <!-- <input type=\"date\"value=\"\"class=\"form-control\" formControlName=\"date\"   aria-describedby=\"emailHelp\"\r\n            [class.is-invalid]=\"hazardReport.get('date')?.hasError('required') \r\n            && (hazardReport.get('date').dirty || hazardReport.get('date').touched) \"/> -->\r\n            <input  matInput  [matDatepicker]=\"datepicker2\" [max]=\"maxDate\" [min]=\"minDate\"\r\n            class=\"form-control\"\r\n            formControlName=\"date\"\r\n            [class.is-invalid]=\"hazardReport.get('date')?.hasError('required') \r\n            && (hazardReport.get('date').dirty || hazardReport.get('date').touched) \"\r\n            placeholder=\"dd-mm-yyyy\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"datepicker2\"></mat-datepicker-toggle>\r\n            <mat-datepicker #datepicker2 ></mat-datepicker>\r\n            <span\r\n            *ngIf=\"\r\n            hazardReport.get('date')?.hasError('required') && (hazardReport.get('date').dirty \r\n            || hazardReport.get('date').touched) \"\r\n            class=\"invalid-feedback\"\r\n          >\r\n          Date is Required</span\r\n          >\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-12\">\r\n        <label>Signature</label>\r\n        <div class=\"sign\">\r\n          <signature-pad\r\n            [options]=\"signaturePadOptions\"\r\n            (onBeginEvent)=\"drawStart()\"\r\n            (onEndEvent)=\"drawComplete()\"\r\n            #Signature1\r\n            [class.is-invalid]=\"singRequired\"\r\n          ></signature-pad>\r\n          <span\r\n          *ngIf=\"singRequired\"\r\n          class=\"invalid-feedback\"\r\n        >\r\n        This Field is Required</span\r\n        \r\n        >\r\n        </div>\r\n        <!--mat-raised-button <a href=\"\" (click)=\"clear()\">Clear</a> -->\r\n        <button class=\"btn btn-outline-primary my-3\" (click)=\"clear()\">\r\n          Clear\r\n        </button>\r\n      </div>\r\n    </div>\r\n \r\n  <hr />\r\n\r\n  <br />\r\n  <div class=\"col-md-2\">\r\n    <button type=\"submit\" class=\"btn btn-primary btn-block\"  [disabled]=\"!hazardReport.valid\" (click)=\"onFormSubmit()\">Submit</button>\r\n  </div>\r\n</form>\r\n</div>\r\n","import { Component, NgZone, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { SignaturePad } from 'angular2-signaturepad';\r\nimport { ViewChild } from '@angular/core';\r\nimport { DynamicFormsService } from 'src/app/utils/services/dynamic-forms.service';\r\nimport { SetTitleService } from 'src/app/utils/services/set-title.service';\r\nimport { Observable } from 'rxjs';\r\nimport { startWith, debounceTime, distinctUntilChanged, switchMap, map, filter, take } from 'rxjs/operators';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport Swal from 'sweetalert2';\r\nimport { UploadFileServiceService } from 'src/app/utils/services/upload-file-service.service'; \r\nimport { CdkTextareaAutosize } from '@angular/cdk/text-field';\r\n@Component({\r\n  selector: 'app-hazard-report',\r\n  templateUrl: './hazard-report.component.html',\r\n  styleUrls: ['./hazard-report.component.scss'],\r\n})\r\nexport class HazardReportComponent implements OnInit {\r\n  title = 'hazardReport';\r\n  hazardReport: FormGroup;\r\n  myControl = new FormControl();\r\n  options: string[] = [''];\r\n  filteredOptions: Observable<any>;\r\n  filteredManager: Observable<any>;\r\n  id: any;\r\n  singRequired: any;\r\n  selectedImage:any;\r\n\r\n  allJobNumbers = [];\r\n  whsData: any = [''];\r\n  hazardData:any=['']\r\n  myControlEmail = new FormControl();\r\n  myControlManagerEmail = new FormControl();\r\n  myControlManager = new FormControl();\r\n  signature:SignaturePad;\r\n  @ViewChild('Signature1') signaturePad1: SignaturePad;\r\n  dataUrl: any;\r\n  @ViewChild('autosize') autosize: CdkTextareaAutosize;\r\n  maxDate = new Date();\r\n  minDate = new Date();\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private dynamicFormsService: DynamicFormsService,\r\n    private setTitle: SetTitleService,\r\n    private url: LogicalFormInfoService,\r\n    public router: Router,\r\n    public upload: UploadFileServiceService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private ngZone: NgZone,\r\n  ) {\r\n\r\n\r\n\r\n    this.hazardReport = this.fb.group({\r\n    \r\n      fullName: ['', Validators.required],\r\n      email: ['', Validators.required],\r\n      phone: ['', [Validators.required, Validators.pattern(\"^((\\\\+91-?)|0)?[0-9]{10}$\")]],\r\n      department: ['', Validators.required],\r\n      position: ['', Validators.required],\r\n     // projectName: ['', Validators.required],\r\n      date: ['', Validators.required],\r\n      signaturePad1: ['', Validators.required],\r\n      describeHazard: ['', Validators.required],\r\n      dateHazardReport: ['', Validators.required],\r\n      locationHazard: ['', Validators.required],\r\n      dateHazardIdentify: ['', Validators.required],\r\n      jobNumber: ['', Validators.required],\r\n      name: ['', Validators.required],\r\n      compilePosition: ['', Validators.required],\r\n      compileDepartment: ['', Validators.required],\r\n      myControl : [''],\r\n      myControlManager:[''],\r\n      employeeParttime: [''],\r\n      managerSupervisor: [''],\r\n      managerSupervisorEmail: [''],\r\n      whsManagerEmail: [''],\r\n      action: [''],\r\n      eliminateHazard: [''],\r\n      eliminateCorrect: [''],\r\n      elliminateAction: [''],\r\n      eliminateWhen: [''],\r\n      substituteCorrect: [''],\r\n      substituteAction: [''],\r\n      substituteWhen: [''],\r\n      isolatedCorrect: [''],\r\n      isolatedAction: [''],\r\n      isolatedWhen: [''],\r\n      solutionCorrect: [''],\r\n      solutionAction: [''],\r\n      solutionWhen: [''],\r\n      procedureRemove: [''],\r\n      procedureRemoveCorrect: [''],\r\n      procedureRemoveAction: [''],\r\n      procedureRemoveWhen: [''],\r\n       PPECorrect: [''],\r\n      PPEAction: [''],\r\n      PPEWhen: [''],\r\n     fileUpload: [''],\r\n      complete: [''],\r\n      consequence: [],\r\n      riskRating: [''],\r\n      actionRequired:[''],\r\n      likelihood: [],\r\n      reduceRisk:[''],\r\n      procedures:[''],\r\n      process:[''],\r\n      isolatedHazard:[''],\r\n      eliminateHazardAction:['']\r\n\r\n      \r\n    });\r\n  }\r\n  triggerResize() {\r\n    // Wait for changes to be applied, then trigger textarea resize.\r\n    this.ngZone.onStable.pipe(take(1))\r\n        .subscribe(() => this.autosize.resizeToFitContent(true));\r\n  }\r\n  ngOnInit() {\r\n    this.filteredOptions = this.myControl.valueChanges.pipe(\r\n      startWith(''),\r\n      debounceTime(400),\r\n      distinctUntilChanged(),\r\n      switchMap(val => {\r\n        console.log(\"myControl\",val)\r\n        return this.filter(val || '')\r\n      })\r\n     )\r\n     \r\n     this.filteredManager= this.myControlManager.valueChanges.pipe(\r\n      startWith(''),\r\n      debounceTime(400),\r\n      distinctUntilChanged(),\r\n      switchMap(val => {\r\n       console.log(\"myControlManager\",val)\r\n        return this.filter(val || '')\r\n      })\r\n     )\r\n  this.getAllHazardTreatmentRelation();\r\n  this.getAllJobNumber();\r\n   this.getall();\r\n    this.dynamicFormsService.homebarTitle.next('Hazard Report Form');\r\n    this.setTitle.setTitle('WHS-Hazard Report Form');\r\n    this.hazardReport.get('managerSupervisor').valueChanges.subscribe((res) => {\r\n      if (res) {\r\n        console.log(res);\r\n        \r\n      for(let i=0;i<this.whsData.length;i++){\r\n        if(res===this.whsData[i]._id){\r\n          console.log(\"id found\");        \r\n          \r\n          this.hazardReport.get('managerSupervisorEmail').setValue(this.whsData[i].email);\r\n        \r\n          break;\r\n        }\r\n      }\r\n\r\n        \r\n      }\r\n    });\r\n    this.id=this.activatedRoute.snapshot.params.id;\r\n    if(this.id != 'form')\r\n    console.log(this.id,\"nnnn\")\r\n    {\r\n    \r\n      console.log(\"id\",this.id);\r\n      this.getHazardByid(this.id);\r\n    \r\n    }\r\n    \r\n    // this.hazardReport.get('Consequence').valueChanges.subscribe((res) => {\r\n    //   if (res) {\r\n    //     console.log(res);\r\n\r\n    //     if (res == '1-Insignificant') {\r\n    //       this.hazardReport.get('riskRating').setValue('Low');\r\n    //       this.hazardReport.get('action').setValue('option4');\r\n    //     }\r\n    //     if (res == '2-Moderate') {\r\n    //       this.hazardReport.get('riskRating').setValue('Medium');\r\n    //       this.hazardReport.get('action').setValue('option3');\r\n    //     }\r\n    //     if (res == '4-Minor') {\r\n    //       this.hazardReport.get('riskRating').setValue('Low');\r\n    //       this.hazardReport.get('action').setValue('option4');\r\n    //     }\r\n    //     if (res == '3-Major') {\r\n    //       this.hazardReport.get('riskRating').setValue('High');\r\n    //       this.hazardReport.get('action').setValue('option1');\r\n    //     }\r\n    //     if (res == '5-Catastrophic') {\r\n    //       this.hazardReport.get('riskRating').setValue('High');\r\n    //       this.hazardReport.get('action').setValue('option1');\r\n    //     }\r\n    //   }\r\n    // });\r\n    // this.hazardReport.get('likelihood').valueChanges.subscribe((res) => {\r\n    //   if (res) {\r\n    //     console.log(res);\r\n    //     if (res == '1-Insignificant') {\r\n    //       this.hazardReport.get('riskRating').setValue('Low');\r\n\r\n    //     }\r\n    //     if (res == '3-Moderate') {\r\n    //       this.hazardReport.get('riskRating').setValue('Medium');\r\n\r\n    //     }\r\n    //     if (res == '2-Minor') {\r\n    //       this.hazardReport.get('riskRating').setValue('Low');\r\n\r\n    //     }\r\n    //     if (res == '4-Major') {\r\n    //       this.hazardReport.get('riskRating').setValue('High');\r\n\r\n    //     }\r\n    //     if (res == '5-Catastrophic') {\r\n    //       this.hazardReport.get('riskRating').setValue('High');\r\n\r\n    //     }\r\n    //   }\r\n    // });\r\n\r\n  }\r\n\r\n  getHazardByid(id)\r\n  {\r\n    this.url.getHazardFormDataById(id).subscribe((res:any)=>{\r\n      console.log(res);\r\n      \r\n      this.hazardReport.patchValue({\r\n        myControl:res.data.myControl,\r\n        myControlManager: res.data.myControlManager,\r\n        employeeParttime:res.data.employeeParttime,\r\n        fullName: res.data.fullName,\r\n        email: res.data.email,\r\n        phone: res.data.phone,\r\n        department: res.data.department,\r\n        position:res.data.position,\r\n        projectName:res.data.projectName,\r\n        managerSupervisor:res.data.managerSupervisor,\r\n        managerSupervisorEmail: res.data.managerSupervisorEmail,\r\n        whsManagerEmail:res.data.whsManagerEmail,\r\n        describeHazard: res.data.describeHazard,\r\n        dateHazardReport: res.data.dateHazardReport,\r\n        jobNumber: res.data.jobNumber,\r\n        action: res.data.action,\r\n        eliminateHazard:res.data.eliminateHazard,\r\n        eliminateCorrect:res.data.eliminateCorrect,\r\n        elliminateAction:res.data.elliminateAction,\r\n        eliminateWhen: res.data.eliminateWhen,\r\n        substituteCorrect:res.data.substituteCorrect,\r\n        substituteAction: res.data.substituteAction,\r\n        substituteWhen: res.data.substituteWhen,\r\n        isolatedCorrect: res.data.isolatedCorrect,\r\n        isolatedAction: res.data.isolatedAction,\r\n        isolatedWhen:res.data.isolatedWhen,\r\n        solutionCorrect:res.data.solutionCorrect,\r\n        solutionAction:res.data.solutionAction,\r\n        customerName: res.data.customerName,\r\n        solutionWhen:res.data.solutionWhen,\r\n        procedureRemove: res.data.procedureRemove,\r\n        procedureRemoveCorrect: res.data.procedureRemoveCorrect,\r\n        procedureRemoveAction: res.data.procedureRemoveAction,\r\n        procedureRemoveWhen: res.data.procedureRemoveWhen,\r\n        PPECorrect:res.data.PPECorrect,\r\n        PPEAction:res.data.PPEAction,\r\n        PPEWhen:res.data.PPEWhen,\r\n        name: res.data.name,\r\n        locationHazard:res.data.locationHazard,\r\n        compilePosition: res.data.compilePosition,\r\n       compileDepartment:  res.data.compileDepartment,\r\n       date:  res.data.date,\r\n      complete:  res.data.complete,\r\n      consequence: res.data.consequence,\r\n      riskRating:  res.data.riskRating,\r\n      actionRequired: res.data.actionRequired,\r\n      likelihood:  res.data.likelihood,\r\n      reduceRisk: res.data.reduceRisk,\r\n      procedures: res.data.procedures,\r\n      process: res.data.process,\r\n      isolatedHazard: res.data.isolatedHazard,\r\n      dateHazardIdentify:res.data.dateHazardIdentify,\r\n      eliminateHazardAction: res.data.eliminateHazardAction,\r\n      })\r\n      this.selectedImage=res.data.fileUpload\r\n      console.log(this.selectedImage,\"selectedImage\")\r\n      this.dataUrl = res.data.signaturePad1;\r\n      let check =async () => { this.signaturePad1 != null }\r\n      check().then(() => {\r\n\r\n        this.signaturePad1.fromDataURL(res.data.signaturePad1)\r\n      })\r\n      \r\n    })\r\n  }\r\n\r\n  public signaturePadOptions: Object = {\r\n    // passed through to szimek/signature_pad constructor\r\n    minWidth: 1,\r\n    canvasWidth: 500,\r\n    canvasHeight: 100,\r\n  };\r\n\r\n  ngAfterViewInit() {\r\n    // this.signaturePad is now available\r\n    console.log(this.signaturePad1,this.dataUrl)\r\n    this.signaturePad1.set('minWidth', 1); // set szimek/signature_pad options at runtime\r\n    this.signaturePad1.clear();\r\n    this.signaturePad1.fromDataURL(this.dataUrl);\r\n    // this.signaturePad1.set('minWidth', 1); // set szimek/signature_pad options at runtime\r\n    // this.signaturePad1.set('dotSize', 1); // set szimek/signature_pad options at runtime\r\n // invoke functions from szimek/signature_pad API\r\n  }\r\n\r\n\r\n\r\n  drawComplete() {\r\n    console.log(\"signnn\",this.signaturePad1);\r\n    this.hazardReport.controls['signaturePad1'].setValue(this.signaturePad1.toDataURL());\r\n    console.log(\"signaturePad1 control\",this.hazardReport.controls['signaturePad1'].value);\r\n    this.singRequired = this.hazardReport.controls['signaturePad1'].invalid\r\n    // will be notified of szimek/signature_pad's onEnd event\r\n    console.log(this.signaturePad1.toDataURL());\r\n  }\r\n  clear() {\r\n    this.signaturePad1.clear();\r\n    this.hazardReport.controls['signaturePad1'].setValue(\"\");\r\n    this.singRequired = this.hazardReport.controls['signaturePad1'].untouched\r\n  }\r\n  drawStart() {\r\n    // will be notified of szimek/signature_pad's onBegin event\r\n    console.log('begin drawing');\r\n    //this.singRequired = this.hazardReport.controls['signaturePad1'].invalid\r\n  }\r\n  Consequences: Array<any> = [\r\n    { name: '1-Insignificant',value:1 },\r\n    { name: '2-Moderate',value:2 },\r\n    { name: '4-Minor',value:4},\r\n    { name: '3-Major',value:3 },\r\n    { name: '5-Catastrophic',value:5 },\r\n  ];\r\n\r\n\r\n  Likelihood: Array<any> = [\r\n    { name: '1-Rare',value:1 },\r\n    { name: '3-Moderate',value:3},\r\n    { name: '2-Unlikely',value:2 },\r\n    { name: '4-Likely',value:4 },\r\n    { name: '5-Almost Certain',value:5 }\r\n  ];\r\n  // RiskRating: Array<any> = [\r\n\r\n  //   { name: 'Low' },\r\n  //   { name: 'Medium' },\r\n  //   { name: 'High' },\r\n  \r\n\r\n  // ];\r\n\r\n\r\n  filter(val: string): Observable<any> {\r\n     return this.url.getAllWHSManager()\r\n      .pipe(\r\n        map((response: any) => {\r\n          response.data = response.data.filter(option => {\r\n            return option.name.toLowerCase().indexOf(val.toLowerCase()) === 0\r\n           })\r\n          return response.data;\r\n        })\r\n      )\r\n      }\r\n  \r\n  \r\n      filterEvent(val: string): Observable<any> {\r\n        return this.url.getAllManager()\r\n         .pipe(\r\n           map((response: any) => {\r\n             response.data = response.data.filter(manager => {\r\n               return manager.name.toLowerCase().indexOf(val.toLowerCase()) === 0\r\n              })\r\n             return response.data;\r\n           })\r\n         )\r\n         }\r\n    \r\n  change(event) {\r\n    console.log(\"evebt\",event)\r\n   this.hazardReport.get('myControl').setValue(event.option.value.name || '')\r\n    this.hazardReport.get('whsManagerEmail').setValue(event.option.value.email || '')\r\n\r\n\r\n\r\n  }\r\n  changeName() {\r\n    console.log(\"changeName\")\r\n    \r\n   }\r\n\r\n   jobNoSel() {\r\n    this.allJobNumbers.forEach((item) => {\r\n      if (this.hazardReport.get('jobNumber').value === item._id) {\r\n        console.log('Id found', item);\r\n        this.hazardReport.patchValue({\r\n          jobNumber: this.hazardReport.get('jobNumber').value,\r\n          projectName: item.projectName,\r\n          siteName: item.siteName,\r\n          customerName: item.customerName,\r\n          streetAddress: item.streetAddress,\r\n          projectManager: item.projectManager,\r\n          customerContact: item.customerContact,\r\n          personCompletingForm: item.personCompletingForm,\r\n          customerContactPhone: item.customerContactPhone,\r\n          customerEmail: item.customerEmail,\r\n        });\r\n      }\r\n    });\r\n    this.hazardReport.get('jobNumber').updateValueAndValidity();\r\n  }\r\n  getAllJobNumber() {\r\n    this.url.getAllJobNumber().subscribe((res: any) => {\r\n      this.allJobNumbers = res.data;\r\n      console.log(\"this.allJobNumbers\",this.allJobNumbers);\r\n      \r\n    });\r\n  }\r\n  \r\n  getall(){\r\n    this.url.getAllManager().subscribe((res:any)=> {\r\n      console.log(res)\r\n      this.whsData=res.data;\r\n    })\r\n  }\r\n  getHazardNo() {\r\n\r\n   if(this.hazardReport.get('consequence').value && this.hazardReport.get('likelihood').value ){\r\n     let addition = parseInt( this.hazardReport.get('consequence').value) + parseInt(this.hazardReport.get('likelihood').value )\r\n     console.log(addition)\r\n     this.hazardData.forEach((item) => {\r\n\r\n      if (addition === item.title) {\r\n        console.log('Id found', item.title);\r\n        this.hazardReport.patchValue({\r\n          riskRating: item.riskRating,\r\n          actionRequired: item.actionRequired,\r\n         \r\n         \r\n        });\r\n      }\r\n    });\r\n   }\r\n  \r\n    \r\n  }\r\n  getAllHazardTreatmentRelation() {\r\n    this.url.getAllHazardTreatmentRelation().subscribe((res: any) => {\r\n      console.log('getAllHazardTreatmentRelation=>', res);\r\n      this.hazardData = res.data;\r\n      \r\n     \r\n      });\r\n    }\r\n    RiskRating: Array<any> = [\r\n  \r\n      { name: 'Low',value:'low'  },\r\n      { name: 'Medium',value: 'medium'},\r\n      { name: 'High',value:'high' },\r\n    \r\n  \r\n    ];\r\n    ActionRequired: Array<any> = [\r\n  \r\n      { name: 'Immediately',value:'immediately'  },\r\n      { name: 'Today',value:'today'  },\r\n      { name: 'This week',value:'thisWeek' },\r\n      { name: 'This Month',value:'thisMonth'  },\r\n  \r\n    ];\r\n    onFormSubmit(){\r\n      \r\n      this.hazardReport.get('fileUpload')?.setValue(\r\n        this.selectedImage\r\n      );\r\n      \r\n        console.log('form data', this.hazardReport.value);\r\n        this.singRequired = this.hazardReport.controls['signaturePad1'].invalid\r\n        console.log(this.id) \r\n\r\n        if (this.id != 'form')\r\n       {\r\n          const data = {\r\n               ...this.hazardReport.value,\r\n                };\r\n          console.log(this.hazardReport.value,\"mmmmmmm\")\r\n          this.url\r\n            .updateHazardFormData(this.id, data)\r\n            .subscribe((res) => {\r\n              console.log('res', res);\r\n              this.router.navigate(['/admin/forms']);\r\n             \r\n              Swal.fire({\r\n                title: 'Update successfully',\r\n                showConfirmButton: false,\r\n                timer: 1200,\r\n              });\r\n              this.router.navigate(['/admin/forms']);\r\n            });\r\n        } else {\r\n          const data = {\r\n           \r\n                ...this.hazardReport.value,\r\n               };\r\n          this.url.addHazardFormData(data).subscribe((res) => {\r\n            console.log('res', res);\r\n            Swal.fire({\r\n              title: 'Submit successfully',\r\n              showConfirmButton: false,\r\n              timer: 1200,\r\n            });\r\n            // this.router.navigate([\"/admin/forms/tableData\"]);\r\n            this.router.navigate(['/admin/forms']);\r\n          });\r\n          console.log('data', data);\r\n        }\r\n        this.hazardReport.reset();\r\n     }\r\n    \r\n      browser(event) {\r\n        const files = event.target.files[0];\r\n        const formdata = new FormData();\r\n        formdata.append('', files);\r\n        console.log(files);\r\n    \r\n        this.upload.upload(formdata).subscribe((res) => {\r\n          console.log('AddProductComponent -> browser -> res', res);\r\n        \r\n          this.selectedImage=res.files[0];\r\n \r\n          console.log(\r\n            'AddProductComponent -> browse -> this.selectedImage',\r\n            this.selectedImage\r\n          );\r\n        });\r\n      }\r\n\r\n\r\n    }\r\n","import { Component, OnInit,Inject } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport Swal from 'sweetalert2';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\n@Component({\r\n  selector: 'app-add-item',\r\n  templateUrl: './add-item.component.html',\r\n  styleUrls: ['./add-item.component.scss']\r\n})\r\nexport class AddItemComponent implements OnInit {\r\n\r\n  addItem!: FormGroup;\r\n  dataRec: any;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    public dialogRef: MatDialogRef<AddItemComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.dataRec = data;\r\n  }\r\n  ngOnInit(): void {\r\n    console.log(this.dataRec);\r\n    \r\n    this.addItem = this.fb.group({\r\n      title: ['', Validators.required],\r\n    });\r\n\r\n    if(this.dataRec.type==='editIdentifyHazards'||this.dataRec.type==='editCtrlActreq'){\r\n      this.addItem.get('title').setValue(this.dataRec.title);\r\n    }\r\n  }\r\n  closeDialog(){\r\n    this.dialogRef.close('false');\r\n\r\n  }\r\nonSubmit(){\r\n  this.dialogRef.close(this.addItem.get('title').value);\r\n  if(this.dataRec.type==='editIdentifyHazards'||this.dataRec.type==='editCtrlActreq'){\r\n    Swal.fire({\r\n      title: 'Item  updated successfully',\r\n      showConfirmButton: false,\r\n      timer: 1200,\r\n    }); \r\n    }else{\r\n      Swal.fire({\r\n        title: 'Item  Added successfully',\r\n        showConfirmButton: false,\r\n        timer: 1200,\r\n      }); \r\n    }\r\n\r\n}\r\n}\r\n","<form [formGroup]=\"addItem\" >\r\n    <h2 *ngIf=\"dataRec.type==='identifyHazards'\"> Add Identify Hazards </h2>\r\n    <h2 *ngIf=\"dataRec.type==='editIdentifyHazards'\">Update Identify Hazards </h2>\r\n    <h2 *ngIf=\"dataRec.type==='ctrlActreq'\"> Add Control Action Required</h2>\r\n    <h2 *ngIf=\"dataRec.type==='editCtrlActreq'\"> Update Control Action Required</h2>\r\n    <h2 *ngIf=\"dataRec.type==='chemical'\"> Add Chemical</h2>\r\n  \r\n    <mat-form-field appearance=\"legacy\"\r\n    class=\"example-full-width\" style=\"width: 498px;\">\r\n    <textarea matInput  formControlName=\"title\" rows=\"\"></textarea>\r\n    </mat-form-field>\r\n    <br>\r\n    \r\n    <div class=\"row\">\r\n        <div class=\"col-sm-2 offset-8 \">\r\n            <button mat-raised-button (click)=\"closeDialog()\">Close</button>\r\n        </div>\r\n        <div class=\"col-sm-2  \">\r\n            <button mat-raised-button *ngIf=\"dataRec.type==='identifyHazards'||dataRec.type==='ctrlActreq'||dataRec.type==='chemical'\" [disabled]=\"!addItem.valid\"(click)=\"onSubmit()\">Add</button>\r\n            <button mat-raised-button *ngIf=\"dataRec.type==='editIdentifyHazards'||dataRec.type==='editCtrlActreq'\"  [disabled]=\"!addItem.valid\"(click)=\"onSubmit()\">Update</button>\r\n        </div>\r\n    </div>\r\n</form>   \r\n\r\n","import Swal from 'sweetalert2';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Router } from '@angular/router';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\n\r\n@Component({\r\n  selector: 'app-hazard-form-table-details',\r\n  templateUrl: './hazard-form-table-details.component.html',\r\n  styleUrls: ['./hazard-form-table-details.component.scss']\r\n})\r\nexport class HazardFormTableDetailsComponent implements OnInit {\r\n  displayedColumns: string[] = ['position','Name',\"Phone\",\"Email\",\"Site\",'Action'];\r\n  showDatas: any;\r\n  dataSource: MatTableDataSource <any>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor(private logicalFormInfo: LogicalFormInfoService,public router: Router) { }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.getAllHazardFormData();\r\n  }\r\n  delete(id)\r\n  {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: `Do you want to delete `,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#00B96F',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Delete!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.logicalFormInfo.deleteHazardFormData(id).subscribe((res) => {\r\n            Swal.fire({\r\n              title: 'Deleted successfully',\r\n              showConfirmButton: false,\r\n              timer: 1200,\r\n            });\r\n            console.log('deleted res', res);\r\n            this.getAllHazardFormData();\r\n          });\r\n      }\r\n    });\r\n   \r\n  }\r\n  getAllHazardFormData()\r\n  {\r\n    this.logicalFormInfo.getAllHazardFormData().subscribe((res:any)=>\r\n    {\r\n      console.log(\"res\",res.data);\r\n      \r\n      this.showDatas= res.data\r\n      this.showDatas.forEach((element,i) => {\r\n    return this.showDatas[i].index= i\r\n  });\r\n  console.log(\"this.showDatas\",this.showDatas);\r\n  \r\n      this.dataSource = new MatTableDataSource<any>(this.showDatas);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort; \r\n      console.log(\"get res\",this.showDatas);\r\n    })\r\n  }\r\n  edit(id)\r\n  {\r\n    this.router.navigate([\"/admin/forms/hazardRep/\"+id]);\r\n  }\r\n}\r\n","<div class=\"btn btn-outline-primary\" [routerLink]=\"['/admin/forms']\"><i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i></div>\r\n<div class=\"col ml-2 pt-3\">\r\n    <h1> Hazard Form List</h1>\r\n    </div>\r\n    <div class=\" \">\r\n      <table mat-table [dataSource]=\"dataSource\" matSort>\r\n    \r\n        <!-- Position Column -->\r\n        <ng-container matColumnDef=\"position\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> No. </th>\r\n          <td mat-cell *matCellDef=\"let element;let i=index\">{{element.index+1}}</td>\r\n        </ng-container>\r\n    \r\n        <!-- Name Column -->\r\n       \r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"Name\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\r\n      <td mat-cell *matCellDef=\"let element;let i=index\">{{element.fullName}}</td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"Phone\">\r\n      <th mat-header-cell *matHeaderCellDef> Phone</th>\r\n      <td mat-cell *matCellDef=\"let element\">{{element.phone}}</td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"Email\">\r\n      <th mat-header-cell *matHeaderCellDef>Email</th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.email}} </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"Site\">\r\n        <th mat-header-cell *matHeaderCellDef>Position</th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\r\n      </ng-container>\r\n     <ng-container matColumnDef=\"Action\">\r\n      <th mat-header-cell *matHeaderCellDef> Action </th>\r\n      <td mat-cell *matCellDef=\"let element\" > \r\n        \r\n      <div style=\"display: flex; justify-content: space-around;\">\r\n        <span class=\"material-icons\" matTooltip=\"Edit\" (click)=\"edit(element._id)\" >\r\n            edit\r\n        </span>\r\n        <span class=\"material-icons\" matTooltip=\"Delete\" (click)=\"delete(element._id)\"  >\r\n            delete\r\n        </span>\r\n        </div>\r\n      </td>\r\n    </ng-container>\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n      </table>\r\n    \r\n      <mat-paginator [pageSizeOptions]=\"[20]\"\r\n                     showFirstLastButtons \r\n                     aria-label=\"Select page of periodic elements\">\r\n      </mat-paginator>\r\n    </div>\r\n    \r\n","<div class=\"btn btn-outline-primary\" *ngIf=\"id ==='form'\" [routerLink]=\"['/admin/forms']\"><i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i></div>\r\n<div class=\"btn btn-outline-primary\" *ngIf=\"id!=='form'\" [routerLink]=\"['/admin/forms/tableData']\"><i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i></div>\r\n<form [formGroup]=\"toolBox\">\r\n<div class=\"container px-4 py-4 card\" >\r\n  <h1 class=\"text-center pt-3\">\r\n    <p>Toolbox Talk </p>\r\n  </h1>\r\n  <hr />\r\n  <div>\r\n    <p class=\"title\">Site Information</p>\r\n    <div>\r\n      <div class=\"row\">\r\n        <div class=\"my-3 col\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">Site Name</p>\r\n          <input type=\"text\" class=\"form-control\" id=\"siteName\"  formControlName=\"siteName\"\r\n          [class.is-invalid]=\"toolBox.get('siteName')?.hasError('required') \r\n          && (toolBox.get('siteName').dirty || toolBox.get('siteName').touched) \"\r\n          />\r\n        <span\r\n          *ngIf=\"\r\n          toolBox.get('siteName')?.hasError('required') && (toolBox.get('siteName').dirty \r\n          || toolBox.get('siteName').touched) \"\r\n          class=\"invalid-feedback\"\r\n        >\r\n        Site Name is Required</span\r\n        >\r\n        </div>\r\n        <div class=\"my-3 col\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">Customer Name</p>\r\n          <input type=\"text\" class=\"form-control\"  formControlName=\"customerName\" \r\n          [class.is-invalid]=\"toolBox.get('customerName')?.hasError('required') \r\n          && (toolBox.get('customerName').dirty || toolBox.get('customerName').touched) \"\r\n          />\r\n          <span\r\n          *ngIf=\"\r\n          toolBox.get('customerName')?.hasError('required') && (toolBox.get('customerName').dirty \r\n          || toolBox.get('customerName').touched) \"\r\n          class=\"invalid-feedback\"\r\n        >\r\n        Customer Name is Required</span\r\n        >\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"my-3 col\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">Site Address</p>\r\n          <input type=\"text\" class=\"form-control\"  formControlName=\"streetAddr\" \r\n          [class.is-invalid]=\"toolBox.get('streetAddr')?.hasError('required') \r\n          && (toolBox.get('streetAddr').dirty || toolBox.get('streetAddr').touched) \"\r\n          />\r\n          <span\r\n          *ngIf=\"\r\n          toolBox.get('streetAddr')?.hasError('required') && (toolBox.get('streetAddr').dirty \r\n          || toolBox.get('streetAddr').touched) \"\r\n          class=\"invalid-feedback\"\r\n        >\r\n        Site Address is Required</span\r\n        >\r\n        </div>\r\n        <div class=\"my-3 col\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n            Customer Contact\r\n          </p>\r\n          <input type=\"text\" class=\"form-control\"  formControlName=\"custConct\" \r\n          [class.is-invalid]=\"toolBox.get('custConct')?.hasError('required') \r\n          && (toolBox.get('custConct').dirty || toolBox.get('custConct').touched) \"\r\n          />\r\n          <span\r\n          *ngIf=\"\r\n          toolBox.get('custConct')?.hasError('required') && (toolBox.get('custConct').dirty \r\n          || toolBox.get('custConct').touched) \"\r\n          class=\"invalid-feedback\"\r\n        >\r\n        Customer Contact is Required</span\r\n        >\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"my-3 col\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n            Customer Contact Phone\r\n          </p>\r\n          <input type=\"text\" class=\"form-control\"  formControlName=\"custConctPh\" \r\n          [class.is-invalid]=\"toolBox.get('custConctPh')?.hasError('required') \r\n          && (toolBox.get('custConctPh').dirty || toolBox.get('custConctPh').touched) \"\r\n          />\r\n          <span\r\n          *ngIf=\"\r\n          toolBox.get('custConctPh')?.hasError('required') && (toolBox.get('custConctPh').dirty \r\n          || toolBox.get('custConctPh').touched) \"\r\n          class=\"invalid-feedback\"\r\n        >\r\n         Phone Number is Required</span\r\n        >\r\n        </div>\r\n        <div class=\"my-3 col\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n            Customer Contact Email\r\n          </p>\r\n          <input type=\"text\" class=\"form-control\"  formControlName=\"custEmail\"\r\n          [class.is-invalid]=\"toolBox.get('custEmail')?.hasError('required') \r\n          && (toolBox.get('custEmail').dirty || toolBox.get('custEmail').touched) \"\r\n          />\r\n          <span\r\n          *ngIf=\"\r\n          toolBox.get('custEmail')?.hasError('required') && (toolBox.get('custEmail').dirty \r\n          || toolBox.get('custEmail').touched) \"\r\n          class=\"invalid-feedback\"\r\n        >\r\n        Email is Required</span\r\n        >\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"my-3 col\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">Job Number</p>\r\n\r\n          <select\r\n            class=\"form-select form-control col form-dropdown\"\r\n            aria-label=\"Default select example\"\r\n            formControlName=\"jobNumberId\"\r\n            (change)=\"jobNoSel()\"\r\n            [class.is-invalid]=\"toolBox.get('jobNumberId')?.hasError('required') \r\n            && (toolBox.get('jobNumberId').dirty || toolBox.get('jobNumberId').touched) \"\r\n          >\r\n          \r\n            <option selected hidden>Select</option>\r\n            <option [value]=\"jobNo._id\" *ngFor=\"let jobNo of allJobNumbers\">{{jobNo.jobNumber}}</option>\r\n            <!-- <option value=\"1\">1000</option>\r\n            <option value=\"2\">1001</option>\r\n            <option value=\"3\">1002</option> -->\r\n          </select>\r\n          <span\r\n          *ngIf=\"\r\n          toolBox.get('jobNumberId')?.hasError('required') && (toolBox.get('jobNumberId').dirty \r\n          || toolBox.get('jobNumberId').touched) \"\r\n          class=\"invalid-feedback\"\r\n        >\r\n        Job Number is Required</span\r\n        >\r\n        </div>\r\n\r\n        <div class=\"my-3 col\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">Date</p>\r\n           <input  matInput  [matDatepicker]=\"datepicker2\" [max]=\"maxDate\" [min]=\"minDate\"\r\n           class=\"form-control\"\r\n           formControlName=\"date\"\r\n           [class.is-invalid]=\"toolBox.get('date')?.hasError('required') \r\n           && (toolBox.get('date').dirty || toolBox.get('date').touched) \"\r\n           placeholder=\"dd-mm-yyyy\">\r\n           <mat-datepicker-toggle matSuffix [for]=\"datepicker2\"></mat-datepicker-toggle>\r\n           <mat-datepicker #datepicker2 ></mat-datepicker>\r\n           <span\r\n          *ngIf=\" toolBox.get('date')?.hasError('required') && (toolBox.get('date').dirty \r\n          || toolBox.get('date').touched) \"\r\n          class=\"invalid-feedback\"\r\n        >\r\n        Date is Required</span\r\n        >\r\n          \r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"my-3 col\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n            Meeting Conducted By\r\n          </p>\r\n          <select\r\n          formControlName=\"meetingBy\"\r\n            class=\"form-select form-control col form-dropdown\"\r\n            aria-label=\"Default select example\" \r\n            [class.is-invalid]=\"toolBox.get('meetingBy')?.hasError('required') \r\n            && (toolBox.get('meetingBy').dirty || toolBox.get('meetingBy').touched) \">\r\n            <option *ngFor=\"let p of staff\" [value]=\"p?._id\">{{p.title}}</option>\r\n          </select>\r\n          <span\r\n          *ngIf=\" toolBox.get('meetingBy')?.hasError('required') && (toolBox.get('meetingBy').dirty \r\n          || toolBox.get('meetingBy').touched) \"\r\n          class=\"invalid-feedback\"\r\n        >\r\n        This Field is Required</span\r\n        >\r\n        </div>\r\n        <div class=\"my-3 col\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">Signature*</p>\r\n          <div class=\"sign\" style=\"border: 1px solid rgb(149 162 173)\">\r\n            <signature-pad\r\n              [options]=\"signaturePadOptions1\"\r\n              (onBeginEvent)=\"drawStart1()\"\r\n              (onEndEvent)=\"drawComplete1()\"\r\n              #Signature1\r\n              [class.is-invalid]=\"singRequired\"\r\n            ></signature-pad>\r\n            <span\r\n            *ngIf=\"singRequired\"\r\n            class=\"invalid-feedback\"\r\n          >\r\n          This Field is Required</span\r\n          >\r\n          </div>\r\n          <button class=\"btn btn-outline-primary mt-1\" (click)=\"clear1()\">\r\n            Clear\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div>\r\n      <p class=\"title\">Issues/Topics to be covered:</p>\r\n    </div>\r\n    <ng-container formArrayName=\"issues\">\r\n      <ng-container\r\n        *ngFor=\"let control of issues().controls; let i = index\"\r\n        [formGroupName]=\"i\"\r\n      >\r\n        <div>\r\n          <div class=\"row\">\r\n            <div class=\"my-3 col-2\">\r\n              <p for=\"exampleFormControlInput1\" class=\"form-Label\">Issue</p>\r\n              <input type=\"text\" class=\"form-control\" formControlName=\"index\" \r\n              [class.is-invalid]=\" issues().at(i).get('index')?.hasError('required') \r\n            && ( issues().at(i).get('index').dirty ||  issues().at(i).get('index').touched) \"\r\n              />\r\n              <span\r\n              *ngIf=\"\r\n               issues().at(i).get('index')?.hasError('required') && ( issues().at(i).get('index').dirty \r\n              || issues().at(i).get('index').touched) \"\r\n              class=\"invalid-feedback\"\r\n            >\r\n            This Field is Required</span\r\n            >\r\n            </div>\r\n            <div class=\"my-3 col-6\">\r\n              <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n                Topic of discussion\r\n              </p>\r\n              <textarea\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                formControlName=\"topicDisc\"\r\n                [class.is-invalid]=\"  issues().at(i).get('topicDisc')?.hasError('required') \r\n            && (  issues().at(i).get('topicDisc').dirty ||   issues().at(i).get('topicDisc').touched) \"\r\n              ></textarea>\r\n              <span\r\n              *ngIf=\"\r\n                issues().at(i).get('topicDisc')?.hasError('required') && (  issues().at(i).get('topicDisc').dirty \r\n              ||  issues().at(i).get('topicDisc').touched) \"\r\n              class=\"invalid-feedback\"\r\n            >\r\n            This Field is Required</span\r\n            >\r\n            </div>\r\n            <div class=\"my-3 col-2\">\r\n              <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n                Topic Resolution\r\n              </p>\r\n              <select\r\n                class=\"form-select form-control col form-dropdown\"\r\n                aria-label=\"Default select example\"\r\n                formControlName=\"topicRes\"\r\n                [class.is-invalid]=\" issues().at(i).get('topicRes')?.hasError('required') \r\n                && ( issues().at(i).get('topicRes').dirty ||  issues().at(i).get('topicRes').touched) \"\r\n              >\r\n                <option selected hidden>Select</option>\r\n                <option value=\"Yes\">Yes</option>\r\n                <option value=\"No\">No</option>\r\n              </select>\r\n              <span\r\n              *ngIf=\"\r\n               issues().at(i).get('topicRes')?.hasError('required') && ( issues().at(i).get('topicRes').dirty \r\n              || issues().at(i).get('topicRes').touched) \"\r\n              class=\"invalid-feedback\"\r\n            >\r\n            This Field is Required</span\r\n            >\r\n            </div>\r\n            <div class=\"my-3 col-1 my-auto\">\r\n              <span\r\n                class=\"material-icons\"\r\n                style=\"margin-top: 35%\"\r\n                (click)=\"addIssues()\"\r\n                >add_circle_outline\r\n              </span>\r\n            </div>\r\n            <div class=\"my-3 col-1 my-auto\">\r\n              <span\r\n                class=\"material-icons\"\r\n                style=\"margin-top: 35%\"\r\n                (click)=\"removeIssues(i)\"\r\n              >\r\n                remove_circle_outline\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </ng-container>\r\n    </ng-container>\r\n\r\n    <p class=\"title\">Corrective Action</p>\r\n    <div formArrayName=\"corrAction\">\r\n      <ng-container\r\n        *ngFor=\"let control of correctAct().controls; let i = index\"\r\n        [formGroupName]=\"i\"\r\n      >\r\n        <div class=\"row\">\r\n          <div class=\"my-3 col-6\">\r\n            <p for=\"exampleFormControlInput1\" class=\"form-Label\">Action</p>\r\n            <select\r\n              class=\"form-select form-control col form-dropdown\"\r\n              aria-label=\"Default select example\"\r\n              formControlName=\"action\"\r\n              [class.is-invalid]=\" correctAct().at(i).get('action')?.hasError('required') \r\n                && ( correctAct().at(i).get('action').dirty ||  correctAct().at(i).get('action').touched) \"\r\n            >\r\n              <option selected hidden>Select</option>\r\n              <option value=\"Yes\">Yes</option>\r\n              <option value=\"No\">No</option>\r\n            </select>\r\n            <span\r\n              *ngIf=\"\r\n               correctAct().at(i).get('action')?.hasError('required') && ( correctAct().at(i).get('action').dirty \r\n              || correctAct().at(i).get('action').touched) \"\r\n              class=\"invalid-feedback\"\r\n            >\r\n            This Field is Required</span\r\n            >\r\n          </div>\r\n          <div class=\"my-3 col-2\">\r\n            <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n              Person Responsible\r\n            </p>\r\n            <select\r\n              class=\"form-select form-control col form-dropdown\"\r\n              aria-label=\"Default select example\"\r\n              formControlName=\"personRes\"\r\n              [class.is-invalid]=\" correctAct().at(i).get('personRes')?.hasError('required') \r\n                && ( correctAct().at(i).get('personRes').dirty ||  correctAct().at(i).get('personRes').touched) \"\r\n            >\r\n              <option selected hidden>Select</option>\r\n              <option *ngFor=\"let j of staff\" [value]=\"j?._id\">{{j?.title}}</option>\r\n            </select>\r\n            <span\r\n              *ngIf=\"\r\n               correctAct().at(i).get('personRes')?.hasError('required') && ( correctAct().at(i).get('personRes').dirty \r\n              || correctAct().at(i).get('personRes').touched) \"\r\n              class=\"invalid-feedback\"\r\n            >\r\n            This Field is Required</span\r\n            >\r\n          </div>\r\n          <div class=\"my-3 col-2\">\r\n            <p for=\"exampleFormControlInput1\" class=\"form-Label\">Complete</p>\r\n            <select\r\n              class=\"form-select form-control col form-dropdown\"\r\n              aria-label=\"Default select example\"\r\n              formControlName=\"complete\"\r\n              [class.is-invalid]=\" correctAct().at(i).get('complete')?.hasError('required') \r\n              && ( correctAct().at(i).get('complete').dirty ||  correctAct().at(i).get('complete').touched) \"\r\n            >\r\n              <option selected hidden>Select</option>\r\n              <option value=\"Yes\">Yes</option>\r\n              <option value=\"No\">No</option>\r\n            </select>\r\n            <span\r\n              *ngIf=\"\r\n               correctAct().at(i).get('complete')?.hasError('required') && ( correctAct().at(i).get('complete').dirty \r\n              || correctAct().at(i).get('complete').touched) \"\r\n              class=\"invalid-feedback\"\r\n            >\r\n            This Field is Required</span\r\n            >\r\n          </div>\r\n          <div class=\"my-3 col-1 my-auto\">\r\n            <span\r\n              class=\"material-icons\"\r\n              style=\"margin-top: 35%\"\r\n              (click)=\"addCorrectAct()\"\r\n              >add_circle_outline\r\n            </span>\r\n          </div>\r\n          <div class=\"my-3 col-1 my-auto\">\r\n            <span\r\n              class=\"material-icons\"\r\n              style=\"margin-top: 35%\"\r\n              (click)=\"removeCorrectAct(i)\"\r\n            >\r\n              remove_circle_outline\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </ng-container>\r\n    </div>\r\n    <p class=\"title\">Attendee (Print and Sign)</p>\r\n    <div formArrayName=\"attendees\">\r\n      <ng-container\r\n        *ngFor=\"let control of attendee().controls; let i = index\"\r\n        [formGroupName]=\"i\"\r\n      >\r\n        <div class=\"row\">\r\n          <div class=\"my-3 col-5\">\r\n            <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n              Employee {{ i + 1 }}\r\n            </p>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              formControlName=\"employee\"\r\n              [class.is-invalid]=\"attendee().controls[i].get('employee')?.hasError('required') \r\n              && (attendee().controls[i].get('employee').dirty || attendee().controls[i].get('employee').touched) \"\r\n            />\r\n            <span\r\n              *ngIf=\"\r\n              attendee().controls[i].get('employee')?.hasError('required') && (attendee().controls[i].get('employee').dirty \r\n              ||attendee().controls[i].get('employee').touched) \"\r\n              class=\"invalid-feedback\"\r\n            >\r\n            This Field is Required</span\r\n            >\r\n          </div>\r\n          <div class=\"my-3 col-5\">\r\n            <p for=\"exampleFormControlInput1\" class=\"form-Label\">Signature</p>\r\n\r\n            <div class=\"sign\" style=\"border: 1px solid rgb(149 162 173)\">\r\n              <signature-pad\r\n                [options]=\"signaturePadOptions2\"\r\n                (onBeginEvent)=\"drawStart2(i)\"\r\n                (onEndEvent)=\"drawComplete2(i,sign)\"\r\n                #Signature2\r\n                [class.is-invalid]=\"sing2Required[i]\"\r\n                sing2Required\r\n                #sign\r\n              ></signature-pad>\r\n              <span\r\n            *ngIf=\"sing2Required[i]\"\r\n            class=\"invalid-feedback\"\r\n          >\r\n          This Field is Required</span\r\n          >\r\n\r\n            </div>\r\n            <button class=\"btn btn-outline-primary mt-1\" (click)=\"sign.clear(); clear2(i)\">\r\n              Clear\r\n            </button>\r\n          </div>\r\n\r\n          <div class=\"my-3 col-1 my-auto\">\r\n            <span class=\"material-icons\" (click)=\"addAttendee()\"\r\n              >add_circle_outline\r\n            </span>\r\n          </div>\r\n          <div class=\"my-3 col-1 my-auto\">\r\n            <span class=\"material-icons\" (click)=\"removeAttendee(i)\">\r\n              remove_circle_outline\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </ng-container>\r\n    </div>\r\n  </div>\r\n  <button class=\"btn btn-outline-primary mt-1\" type=\"submit\" [disabled]=\"!toolBox.valid || singRequired \" (click)=\"onSave()\" style=\"width: 10rem;\r\n  align-self: center;\">\r\n    Submit\r\n  </button>\r\n</div></form>\r\n","import { Component, OnInit, AfterViewInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, Validators, } from '@angular/forms';\r\nimport { SignaturePad } from 'angular2-signaturepad';\r\nimport { ViewChild } from '@angular/core';\r\nimport { DynamicFormsService } from 'src/app/utils/services/dynamic-forms.service';\r\nimport { SetTitleService } from 'src/app/utils/services/set-title.service';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-toolbox-talk',\r\n  templateUrl: './toolbox-talk.component.html',\r\n  styleUrls: ['./toolbox-talk.component.scss'],\r\n})\r\nexport class ToolboxTalkComponent implements OnInit,AfterViewInit {\r\n  toolBox: FormGroup;\r\n  allJobNumbers = [];\r\n  sign=[];\r\n  staff:any;\r\n  id:any;\r\n  maxDate = new Date();\r\n  minDate = new Date();\r\n  signature:SignaturePad;\r\n  @ViewChild('Signature1') signaturePad1: SignaturePad;\r\n  dataUrl: any;\r\n  singRequired: any;\r\n  sing2Required=[]\r\n @ViewChildren('Signature2') signaturePad2: QueryList<SignaturePad>;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private dynamicFormsService: DynamicFormsService,\r\n    private setTitle:SetTitleService,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    private activatedRoute: ActivatedRoute,\r\n    public router: Router\r\n  ) {\r\n    this.toolBox = this.fb.group({\r\n      siteName: ['',Validators.required],\r\n      customerName: ['',Validators.required],\r\n      streetAddr:['',Validators.required],\r\n      custConct: ['',Validators.required],\r\n      custConctPh: ['',Validators.required],\r\n      custEmail: ['',Validators.required],\r\n      jobNumberId: ['',Validators.required],\r\n      meetingBy:['',Validators.required],\r\n      date:['',Validators.required],\r\n      signaturePad1:['',Validators.required],\r\n      issues: this.fb.array([]),\r\n      corrAction: this.fb.array([]),\r\n      attendees: this.fb.array([])\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.id=this.activatedRoute.snapshot.params.id;\r\n    this.getAllJobNumber();\r\n    this.getAllStaff();\r\n    this.dynamicFormsService.homebarTitle.next('ToolBox Talk Form');\r\n    this.setTitle.setTitle('WHS-ToolBox Talk Form');\r\n    if(this.id!=='form')\r\n    {\r\n      console.log(\"id\",this.id);\r\n      this.getToolboxByid(this.id);\r\n    }\r\n    else\r\n    {\r\n      this.addIssues();\r\n      this.addCorrectAct();\r\n      this.addAttendee();\r\n    }\r\n    \r\n    \r\n  }\r\n \r\n  getToolboxByid(id)\r\n  {\r\n    this.logicalFormInfo.getToolboxById(id).subscribe((res:any)=>{\r\n      console.log(res);\r\n      //this.pushissues(res.data.issues);\r\n     // this.pushCorrective(res.data.corrAction);\r\n     // this.pushattendee(res.data.attendees);\r\n      this.toolBox.patchValue({\r\n        siteName:res.data.siteName,\r\n        customerName: res.data.customerName,\r\n        streetAddr:res.data.streetAddr,\r\n        custConct: res.data.custConct,\r\n        custConctPh: res.data.custConctPh,\r\n        custEmail: res.data.custEmail,\r\n        jobNumberId: res.data.jobNumberId,\r\n        meetingBy:res.data.meetingBy,\r\n        date:res.data.date\r\n      })\r\n      this.dataUrl = res.data.signaturePad1;\r\n      let check =async () => { this.signaturePad1 != null }\r\n      check().then(() => {\r\n\r\n        this.signaturePad1.fromDataURL(res.data.signaturePad1)\r\n      })\r\n      console.log(\"this.signaturePad1\",this.signaturePad1);\r\n      \r\n      let check2 =async () => { this.signaturePad2 != null }\r\n      check2().then(() => {\r\n        console.log( this.signaturePad2);\r\n        setTimeout(() => {\r\n          let signaturePadArr=this.signaturePad2.toArray()\r\n          res.data.attendees.forEach((x,i) => {\r\n            signaturePadArr[i].fromDataURL(x.signature)\r\n          });\r\n        }, 2000); \r\n      })\r\n      this.toolBox.patchValue({\r\n        signaturePad1: res.data.signaturePad1\r\n      })\r\n      for (let i = 0; i <  res.data.attendees.length; i++) {\r\n        this.addAttendee()\r\n        this.attendee().controls[i].get(\"employee\").patchValue(res.data.attendees[i].employee)\r\n         this.attendee().controls[i].get(\"signature\").patchValue(res.data.attendees[i].signature)\r\n        \r\n      }for (let x = 0; x < res.data.corrAction.length; x++) {\r\n       this. addCorrectAct()\r\n      this.correctAct().controls[x].get(\"action\").patchValue( res.data.corrAction[x].action)\r\n      this.correctAct().controls[x].get(\"complete\").patchValue( res.data.corrAction[x].complete)\r\n      this.correctAct().controls[x].get(\"personRes\").patchValue( res.data.corrAction[x].personRes)\r\n      }\r\n      for (let i = 0; i < res.data.issues.length; i++) {\r\n        this.addIssues()\r\n        this.issues().controls[i].get(\"index\").patchValue( res.data.issues[i].index)\r\n        this.issues().controls[i].get(\"topicDisc\").patchValue( res.data.issues[i].topicDisc)\r\n        this.issues().controls[i].get(\"topicRes\").patchValue( res.data.issues[i].topicRes)\r\n      }\r\n    })\r\n  }\r\n  getAllJobNumber() {\r\n    this.logicalFormInfo.getAllJobNumber().subscribe((res: any) => {\r\n    \r\n      this.allJobNumbers = res.data;\r\n    });\r\n  }\r\n  jobNoSel(){\r\n    this.allJobNumbers.forEach((item) => {\r\n      if (this.toolBox.get('jobNumberId').value === item._id) {\r\n        console.log('Id found', item);\r\n        this.toolBox.patchValue({\r\n          siteName: item.siteName,\r\n          customerName: item.customerName,\r\n          streetAddr: item.streetAddress,\r\n           custConct: item.customerContact,\r\n          custConctPh: item.customerContactPhone,\r\n          custEmail: item.customerEmail,\r\n          jobNumber: this.toolBox.get('jobNumberId').value,\r\n        });\r\n      }\r\n    });\r\n         this.toolBox.get('jobNumberId').updateValueAndValidity();\r\n\r\n  }\r\n  addIssues() {\r\n    this.issues().push(this.issuesForm());\r\n  }\r\n  // getissues(D): FormGroup {\r\n  //   return this.fb.group({\r\n  //     index: D.index,\r\n  //     topicDisc: D.topicDisc,\r\n  //     topicRes: D.topicRes,\r\n  //   });\r\n  // }\r\n  // pushissues(D) {\r\n  //   console.log(\"D\",D);\r\n  //   D.forEach((element) => {\r\n  //    this.issues().push(this.getissues(element));\r\n  //   });\r\n  // }\r\n  // getCorrective(D): FormGroup {\r\n  //   return this.fb.group({\r\n  //     action: D.action,\r\n  //     personRes: D.personRes,\r\n  //     complete: D.complete,\r\n  //   });\r\n  // }\r\n  // pushCorrective(D) {\r\n  //   console.log(\"D\",D);\r\n  //   D.forEach((element) => {\r\n  //    this.correctAct().push(this.getCorrective(element));\r\n  //   });\r\n  // }\r\n  // getattendee(D): FormGroup {\r\n  //   return this.fb.group({\r\n  //     employee: D.employee,\r\n  //     signature:D.signature,\r\n  //   });\r\n  // }\r\n  // pushattendee(D) {\r\n  //   console.log(\"D\",D);\r\n  //   D.forEach((element) => {\r\n  //    this.attendee().push(this.getattendee(element));\r\n  //   });\r\n  // }\r\n  issues(): FormArray {\r\n    return this.toolBox.get('issues') as FormArray;\r\n  }\r\n  issuesForm(): FormGroup {\r\n    return this.fb.group({\r\n      index: ['',Validators.required],\r\n      topicDisc: ['',Validators.required],\r\n      topicRes: ['',Validators.required],\r\n    });\r\n  }\r\n  removeIssues(i) {\r\n    const item = <FormArray>this.toolBox.controls['issues'];\r\n    if (item.length > 1) item.removeAt(i);\r\n  }\r\n  addCorrectAct() {\r\n    this.correctAct().push(this.correctActForm());\r\n  }\r\n  correctAct(): FormArray {\r\n    return this.toolBox.get('corrAction') as FormArray;\r\n  }\r\n  correctActForm(): FormGroup {\r\n    return this.fb.group({\r\n      action: ['',Validators.required],\r\n      personRes: ['',Validators.required],\r\n      complete: ['',Validators.required],\r\n    });\r\n  }\r\n  removeCorrectAct(i) {\r\n    const item = <FormArray>this.toolBox.controls['corrAction'];\r\n    if (item.length > 1) item.removeAt(i);\r\n  }\r\n  addAttendee() {\r\n    this.attendee().push(this.attendeeForm());\r\n  }\r\n  attendee(): FormArray {\r\n    return this.toolBox.get('attendees') as FormArray;\r\n  }\r\n  attendeeForm(): FormGroup {\r\n    return this.fb.group({\r\n      employee: ['',Validators.required],\r\n      signature: ['',Validators.required],\r\n    });\r\n  }\r\n  removeAttendee(i) {\r\n    const item = <FormArray>this.toolBox.controls['attendees'];\r\n    if (item.length > 1) item.removeAt(i);\r\n  }\r\n  public signaturePadOptions1: Object = {\r\n    // passed through to szimek/signature_pad constructor\r\n    minWidth: 1,\r\n    canvasWidth: 550,\r\n    canvasHeight: 100,\r\n  };\r\n  public signaturePadOptions2: Object = {\r\n    // passed through to szimek/signature_pad constructor\r\n    minWidth: 1,\r\n    canvasWidth: 450,\r\n    canvasHeight: 100,\r\n  };\r\n\r\n  ngAfterViewInit() {\r\n    // this.signaturePad is now available\r\n    console.log(this.signaturePad1,this.dataUrl)\r\n    this.signaturePad1.set('minWidth', 1); // set szimek/signature_pad options at runtime\r\n    \r\n    this.signaturePad1.fromDataURL(this.dataUrl);\r\n    // this.signaturePad2.set('minWidth', 1); // set szimek/signature_pad options at runtime\r\n    // this.signaturePad1.clear(); // invoke functions from szimek/signature_pad API\r\n    // this.signaturePad2.clear(); // invoke functions from szimek/signature_pad API\r\n  }\r\n\r\n  drawComplete1() {\r\n    // will be notified of szimek/signature_pad's onEnd event\r\n    console.log(\"signnn\",this.signaturePad1);\r\n    this.toolBox.controls['signaturePad1'].setValue(this.signaturePad1.toDataURL());\r\n    console.log(\"signaturePad1 control\",this.toolBox.controls['signaturePad1'].value);\r\n    this.singRequired = this.toolBox.controls['signaturePad1'].invalid\r\n\r\n  }\r\n  clear1() {\r\n    this.signaturePad1.clear();\r\n    this.toolBox.controls['signaturePad1'].setValue(\"\");\r\n    this.singRequired = this.toolBox.controls['signaturePad1'].untouched\r\n  }\r\n  drawStart1() {\r\n    // will be notified of szimek/signature_pad's onBegin event\r\n    // this.signaturePad2=null;\r\n    console.log('begin drawing');\r\n    //this.singRequired = this.toolBox.controls['signaturePad1'].invalid\r\n  }\r\n  drawComplete2(index,sign) {\r\n    console.log(\"sign\",sign);\r\n    \r\n    //this.sing2Required[index]=this.attendee().controls[index].get('signature').invalid\r\n  this.attendee().controls[index].get('signature').setValue(sign.toDataURL());\r\n    // will be notified of szimek/signature_pad's onEnd event\r\n  }\r\n  clear2(i) {\r\n    this.attendee().controls[i].get('signature').setValue(\"\");\r\n    this.sing2Required[i]=this.attendee().controls[i].get('signature').untouched\r\n\r\n   \r\n    // this.signaturePad2.clear();\r\n  }\r\n  drawStart2(index) {\r\n    // will be notified of szimek/signature_pad's onBegin event\r\n    console.log('begin drawing');\r\n    this.sing2Required[index]=this.attendee().controls[index].get('signature').invalid\r\n    console.log(\" this.sing2Required\", this.sing2Required[index]);\r\n    \r\n  }\r\n  onSave()\r\n  {\r\n    for (let index = 0; index <  this.attendee().length; index++) {\r\n      this.sing2Required[index]=this.attendee().controls[index].get('signature').invalid\r\n      \r\n    }\r\n   \r\n    this.singRequired = this.toolBox.controls['signaturePad1'].invalid\r\n\r\n    console.log(\"form data\",this.toolBox.value);\r\n    if(this.id!=='form')\r\n    {\r\n      const data={\r\n        ...this.toolBox.value\r\n      }\r\n       this.logicalFormInfo.editToolBox(this.id,data).subscribe((res)=>\r\n       {\r\n         console.log(\"res\",res);\r\n         this.router.navigate([\"/admin/forms/tableData\"]);\r\n       })\r\n    }\r\n    else\r\n    {\r\n      const data={\r\n        ...this.toolBox.value\r\n      }\r\n       this.logicalFormInfo.addtoolBox(data).subscribe((res)=>\r\n       {\r\n         console.log(\"res\",res);\r\n         this.router.navigate([\"/admin/forms/tableData\"]);\r\n       })\r\n    }\r\n    this.toolBox.reset();\r\n  }\r\n  getAllStaff(){\r\n    this.logicalFormInfo.getAllStaff().subscribe((res:any)=> {\r\n      this.staff=res.data;\r\n      console.log(\"res\",this.staff);\r\n   })\r\n  }\r\n}\r\n","import { TextareaAutoresizeDirective } from './../../Directives/textarea-autoresize.directive';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\n\r\n\r\nimport { FormsRoutingModule } from './forms-routing.module';\r\nimport { FormsComponent } from './forms.component';\r\nimport { SiteInspectionComponent } from './site-inspection/site-inspection.component';\r\nimport { ToolboxTalkComponent } from './toolbox-talk/toolbox-talk.component';\r\nimport { HazardReportComponent } from './hazard-report/hazard-report.component';\r\nimport { IncidentReportComponent } from './incident-report/incident-report.component';\r\nimport { RiskAssessmentSWMSComponent } from './risk-assessment-swms/risk-assessment-swms.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { SignaturePadModule } from 'angular2-signaturepad';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { AddItemComponent } from './risk-assessment-swms/add-item/add-item.component';\r\nimport { DisplayTableComponent } from './display-table/display-table.component';\r\nimport { CKEditorModule } from '@ckeditor/ckeditor5-angular';\r\nimport { SiteInspectionTableComponent } from './site-inspection-table/site-inspection-table.component';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { SpinnerInterceptor } from 'src/app/interceptor/spinner.interceptor';\r\nimport {NgxMatTimepickerModule} from 'ngx-mat-timepicker';\r\nimport {AutosizeModule} from 'ngx-autosize';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { HazardFormTableDetailsComponent } from './hazard-form-table-details/hazard-form-table-details.component';\r\nimport { IncidentsTableComponent } from './incidents-table/incidents-table.component';\r\nimport { RiskAssesmentTableComponent } from './risk-assesment-table/risk-assesment-table.component';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\n@NgModule({\r\n  declarations: [\r\n    FormsComponent,\r\n    SiteInspectionComponent,\r\n    ToolboxTalkComponent,\r\n    HazardReportComponent,\r\n    IncidentReportComponent,\r\n    RiskAssessmentSWMSComponent,\r\n    AddItemComponent,\r\n    DisplayTableComponent,\r\n    SiteInspectionTableComponent,\r\n    HazardFormTableDetailsComponent,\r\n    IncidentsTableComponent,\r\n    RiskAssesmentTableComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsRoutingModule,\r\n    ReactiveFormsModule,\r\n    SignaturePadModule,\r\n    SharedModule,\r\n    FormsModule,\r\n    CKEditorModule,\r\n    NgxMatTimepickerModule,\r\n    AutosizeModule,\r\n    MatAutocompleteModule ,\r\n    MatInputModule,\r\n    MatDatepickerModule,\r\n    \r\n  ],\r\n  providers:[\r\n    TextareaAutoresizeDirective,\r\n    {\r\n      provide:HTTP_INTERCEPTORS,\r\n      useClass:SpinnerInterceptor,\r\n      multi:true\r\n    }\r\n  ]\r\n})\r\nexport class FormsModule1 {}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { DisplayTableComponent } from './display-table/display-table.component';\r\n\r\nimport { FormsComponent } from './forms.component';\r\nimport { HazardReportComponent } from './hazard-report/hazard-report.component';\r\nimport { IncidentReportComponent } from './incident-report/incident-report.component';\r\nimport { RiskAssessmentSWMSComponent } from './risk-assessment-swms/risk-assessment-swms.component';\r\nimport { SiteInspectionComponent } from './site-inspection/site-inspection.component';\r\nimport { ToolboxTalkComponent } from './toolbox-talk/toolbox-talk.component';\r\nimport {SiteInspectionTableComponent} from './site-inspection-table/site-inspection-table.component'\r\nimport { HazardFormTableDetailsComponent } from './hazard-form-table-details/hazard-form-table-details.component';\r\nimport { IncidentsTableComponent } from './incidents-table/incidents-table.component';\r\nimport { RiskAssesmentTableComponent } from './risk-assesment-table/risk-assesment-table.component';\r\nconst routes: Routes = [\r\n  { path: '', component: FormsComponent },\r\n  { path: 'forms', component: FormsComponent },\r\n  { path: 'siteInspect/:id', component: SiteInspectionComponent },\r\n  { path: 'toolboxTalk/:id', component: ToolboxTalkComponent },\r\n  { path: 'hazardRep/:id', component: HazardReportComponent },\r\n  { path: 'incidentRep/:id', component: IncidentReportComponent },\r\n  { path: 'riskAssessSWMS/:id', component: RiskAssessmentSWMSComponent },\r\n  { path: 'riskAssessTable', component: RiskAssesmentTableComponent },\r\n  { path: 'tableData', component: DisplayTableComponent},\r\n  { path:'siteinspectiontable', component:SiteInspectionTableComponent},\r\n  {path:'hazardTable',component:HazardFormTableDetailsComponent},\r\n  { path: 'incidentsTable', component:IncidentsTableComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class FormsRoutingModule { }\r\n","import { DatePipe } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport Swal from 'sweetalert2';\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n  FormArray,\r\n  FormControl,\r\n} from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { DynamicFormsService } from 'src/app/utils/services/dynamic-forms.service';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { SetTitleService } from 'src/app/utils/services/set-title.service';\r\n\r\n@Component({\r\n  selector: 'app-site-inspection',\r\n  templateUrl: './site-inspection.component.html',\r\n  styleUrls: ['./site-inspection.component.scss'],\r\n})\r\nexport class SiteInspectionComponent implements OnInit {\r\n  sidePreview!: FormGroup;\r\n  SiteControl!: FormArray;\r\n  siteshow = true;\r\n  siteAction = false;\r\n  itemvalue: any;\r\n  \r\n  maxDate = new Date();\r\n  minDate = new Date();\r\n  item_values: any = ['In Progress', 'Completed', 'Closed'];\r\n  jobTaskData: any;\r\n  allJobNumbers = [];\r\n  projectMang = [];\r\n  keyArr = [\r\n    'jobNumber',\r\n    'siteName',\r\n    'customerName',\r\n    'streetNo',\r\n    'streetAddr',\r\n    'subUrb',\r\n    'custConct',\r\n    'custConctPh',\r\n    'custEmail',\r\n    'datetooboxtalk',\r\n    'date',\r\n    'projectManager',\r\n  ];\r\n  id: any;\r\n  allcategory: any;\r\n  allTopic: any;\r\n  showDatas: any;\r\n  staff: any;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private dynamicFormsService: DynamicFormsService,\r\n    private setTitle: SetTitleService,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    public router: Router,\r\n    private activatedRoute: ActivatedRoute,\r\n    private datePipe: DatePipe\r\n  ) {\r\n    this.sidePreview = this.fb.group({\r\n      jobNumber: ['', Validators.required],\r\n      siteName: ['', Validators.required],\r\n      customerName: ['', Validators.required],\r\n      //streetNo: [''],\r\n      streetAddr: ['', Validators.required],\r\n      // subUrb: [''],\r\n      custConct: ['', Validators.required],\r\n      custConctPh: ['', Validators.required],\r\n      custEmail: ['', Validators.required],\r\n      date: ['', Validators.required],\r\n      projectManager: ['', Validators.required],\r\n      // datetooboxtalk: [''],\r\n      // Hazard: ['', Validators.required],\r\n      // documentation: ['', Validators.required],\r\n      // workeronsite: ['', Validators.required],\r\n      // SWMS: ['', Validators.required],\r\n      // tooboxtalk: ['', Validators.required],\r\n      // WHSManual: ['', Validators.required],\r\n      // IncidentReport: ['', Validators.required],\r\n      // HazardReport: ['', Validators.required],\r\n      // emergrncyEvacuation: ['', Validators.required],\r\n      // TrainingRecords: ['', Validators.required],\r\n      // WHSPolicy: ['', Validators.required],\r\n      // ReturnToWork: ['', Validators.required],\r\n      // displayHazardReport: ['', Validators.required],\r\n      // displayEmergrncyEvacuation: ['', Validators.required],\r\n      // NoSmoking: ['', Validators.required],\r\n      // PPESignage: ['', Validators.required],\r\n      // ReportHazardsigns: ['', Validators.required],\r\n      // ManualHandlingSigns: ['', Validators.required],\r\n      // NoticeBoard: ['', Validators.required],\r\n      // accessEgrassHazards: ['', Validators.required],\r\n      // Walkways: ['', Validators.required],\r\n      // Walkwaysfree: ['', Validators.required],\r\n      // StairsConditionGood: ['', Validators.required],\r\n      // HoardingsFenceGates: ['', Validators.required],\r\n      // LosseMatrialSecure: ['', Validators.required],\r\n      // binsSkipsLocated: ['', Validators.required],\r\n      // binsSkipsOverflowing: ['', Validators.required],\r\n      // electricalMainboardLock: ['', Validators.required],\r\n      // PowerleadsTested: ['', Validators.required],\r\n      // EquipmentGiards: ['', Validators.required],\r\n      // EquipmentCondition: ['', Validators.required],\r\n      // LeadsSafety: ['', Validators.required],\r\n      // SDSavailable: ['', Validators.required],\r\n      // chemicalsStoredSDS: ['', Validators.required],\r\n      // SDSRegisterAvailables: ['', Validators.required],\r\n      // correctPPHand: ['', Validators.required],\r\n      // FirstAidavailable: ['', Validators.required],\r\n      // FirstKitContentsList: ['', Validators.required],\r\n      // KitAccessableWorkers: ['', Validators.required],\r\n      // awarefirstKitLocation: ['', Validators.required],\r\n      // Extinguishers: ['', Validators.required],\r\n      // ExtinguishersClearlyMaked: ['', Validators.required],\r\n      // ExtinguishersSevicedUpdate: ['', Validators.required],\r\n      // ExitSingsCondition: ['', Validators.required],\r\n      // ExitDoorsBlocked: ['', Validators.required],\r\n      // ExitDoorsOpened: ['', Validators.required],\r\n      // FireAlarmTested: ['', Validators.required],\r\n      // EvacuationPlans: ['', Validators.required],\r\n      // emergencyDrillConduct: ['', Validators.required],\r\n      // RiskAssessmentSWMS: ['', Validators.required],\r\n      // PlantValidService: ['', Validators.required],\r\n      // OpertionProceduresSOPs: ['', Validators.required],\r\n      // PPEAvailable: ['', Validators.required],\r\n      // emergencyPlan: ['', Validators.required],\r\n      // PlantGoodCondition: ['', Validators.required],\r\n      // appropriateGuards: ['', Validators.required],\r\n      siteAction: this.fb.array([]),\r\n      siteCategorytTopic: this.fb.array([]),\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.id = this.activatedRoute.snapshot.params.id;\r\n\r\n    this.dynamicFormsService.homebarTitle.next('Site Inspection Form');\r\n    this.setTitle.setTitle('WHS-Site Inspection Form');\r\n    this.getAllJobNumber();\r\n    this.getAllProjectMang();\r\n    this.getAllCategory();\r\n    this.getAllTopic();\r\n    this.getAllStaff();\r\n    if (this.id != 'form') {\r\n      this.logicalFormInfo.getSiteInspection(this.id).subscribe((res: any) => {\r\n        console.log('res', res.data);\r\n\r\n        this.showDatas = res.data;\r\n        setTimeout(() => {\r\n          let formatDate;\r\n          if (this.showDatas.sitePreview[0].date) {\r\n            var date = new Date(this.showDatas.sitePreview[0].date);\r\n            formatDate = this.datePipe.transform(date, 'yyyy-MM-dd');\r\n            this.sidePreview.patchValue({ date: formatDate });\r\n          } else {\r\n            formatDate = '';\r\n          }\r\n\r\n          this.sidePreview.patchValue({\r\n            siteName: this.showDatas.sitePreview[0].siteName,\r\n            customerName: this.showDatas.sitePreview[0].customerName,\r\n            streetAddr: this.showDatas.sitePreview[0].streetAddr,\r\n            custConct: this.showDatas.sitePreview[0].custConct,\r\n            custConctPh: this.showDatas.sitePreview[0].custConctPh,\r\n            custEmail: this.showDatas.sitePreview[0].custEmail,\r\n            jobNumber: this.showDatas.sitePreview[0].jobNumber,\r\n            projectManager: this.showDatas.sitePreview[0].projectManager,\r\n          });\r\n\r\n          if (this.add2().controls) {\r\n            let key;\r\n            for ( let i = 0;i < this.allTopic.length;i++) {\r\n            \r\n                for (let index = 0; index <this.showDatas.sitePreview[0].siteCategorytTopic.length; index++) {\r\n                  key = Object.keys(\r\n                    this.showDatas.sitePreview[0].siteCategorytTopic[index]\r\n                  );\r\n                  this.add2()\r\n                .controls[i].get(key)\r\n                ?.setValue(\r\n                  this.showDatas.sitePreview[0].siteCategorytTopic[index][key]\r\n                );\r\n                }\r\n              \r\n            }\r\n          }\r\n        }, 500);\r\n      });\r\n    }\r\n  }\r\n  ngAfterViewInit(): void {\r\n    //Called after ngAfterContentInit when the component's view has been initialized. Applies to components only.\r\n    //Add 'implements AfterViewInit' to the class.\r\n  }\r\n  jobNoSel() {\r\n    this.allJobNumbers.forEach((item) => {\r\n      if (this.sidePreview.get('jobNumber').value === item._id) {\r\n        console.log('Id found', item);\r\n        this.sidePreview.patchValue({\r\n          siteName: item.siteName,\r\n          customerName: item.customerName,\r\n          streetAddr: item.streetAddress,\r\n          custConct: item.customerContact,\r\n          custConctPh: item.customerContactPhone,\r\n          custEmail: item.customerEmail,\r\n          jobNumber: this.sidePreview.get('jobNumber').value,\r\n        });\r\n      }\r\n    });\r\n    this.sidePreview.get('jobNumber').updateValueAndValidity();\r\n  }\r\n  addAction() {\r\n    {\r\n      this.add().push(this.newAction());\r\n    }\r\n  }\r\n  add(): FormArray {\r\n    return this.sidePreview.get('siteAction') as FormArray;\r\n  }\r\n  newAction(): FormGroup {\r\n    return this.fb.group({\r\n      item: ['',Validators.required],\r\n      action: ['',Validators.required],\r\n      PersonResponsible: ['',Validators.required],\r\n      complete: ['',Validators.required],\r\n      topicId: ['',Validators.required],\r\n    });\r\n  }\r\n  showsite() {\r\n    this.siteshow = true;\r\n    this.siteAction = false;\r\n    console.log(this.sidePreview);\r\n  }\r\n  showAction() {\r\n    this.siteAction = true;\r\n    this.siteshow = false;\r\n    this.add().clear();\r\n    if (this.id != 'form') {\r\n      for (\r\n        let index = 0;\r\n        index < this.showDatas.sitePreview[0].siteAction.length;\r\n        index++\r\n      ) {\r\n        console.log(this.showDatas.sitePreview[0].siteAction[index].item);\r\n\r\n        this.addAction();\r\n        this.add()\r\n          .controls[index].get('item')\r\n          .setValue(this.showDatas.sitePreview[0].siteAction[index].item);\r\n        this.add()\r\n          .controls[index].get('action')\r\n          .setValue(this.showDatas.sitePreview[0].siteAction[index].action);\r\n        this.add()\r\n          .controls[index].get('topicId')\r\n          .setValue(this.showDatas.sitePreview[0].siteAction[index].topicId);\r\n        this.add()\r\n          .controls[index].get('PersonResponsible')\r\n          .setValue(\r\n            this.showDatas.sitePreview[0].siteAction[index].PersonResponsible\r\n          );\r\n        this.add()\r\n          .controls[index].get('complete')\r\n          .setValue(this.showDatas.sitePreview[0].siteAction[index].complete);\r\n      }\r\n    } else {\r\n      let key = [];\r\n      for (let y = 0; y < this.allTopic.length; y++) {\r\n        key.push(Object.keys(this.add2().at(y).value));\r\n      }\r\n\r\n      console.log('this.keyArr.find((ele) => key.includes(ele))', key);\r\n      for (let i = 0; i < key.length - 1; i++) {\r\n        if (!this.keyArr.find((ele) => key[i].includes(ele))) {\r\n          let tempValue = this.add2().at(i).get(key[i]).value;\r\n          console.log('tempValue', tempValue);\r\n          let data = this.allTopic.find((obj) => {\r\n            if (obj._id == tempValue) {\r\n              console.log('obj', obj);\r\n\r\n              return obj;\r\n            }\r\n          });\r\n          if (tempValue != '') {\r\n            if (tempValue != 'yes') {\r\n              let index = this.add().length;\r\n              this.addAction();\r\n              console.log('data', data);\r\n\r\n              this.add().controls[index].get('item').setValue(data.item);\r\n              this.add().controls[index].get('action').setValue(data.action);\r\n              this.add().controls[index].get('topicId').setValue(data._id);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  removeAction() {\r\n    let index = this.add().length;\r\n    this.add().removeAt(index - 1);\r\n  }\r\n  addAcionTab(event) {\r\n    let b = Object.keys(this.sidePreview.value);\r\n    console.log('event', event);\r\n    //   let index =this.add().length\r\n    //   this.addAction()\r\n    // this.add().controls[index].get(\"item\").setValue(event.target.value)\r\n\r\n    //  console.log(this.sidePreview.controls[b[0]].value);\r\n  }\r\n\r\n  getAllJobTask() {\r\n    this.logicalFormInfo.getAllJobtask().subscribe((res: any) => {\r\n      this.jobTaskData = res.data;\r\n      console.log('jobTaskDetails=>', this.jobTaskData);\r\n    });\r\n  }\r\n  getAllProjectMang() {\r\n    this.logicalFormInfo.getAllProjectMang().subscribe((res: any) => {\r\n      this.projectMang = res.data;\r\n    });\r\n  }\r\n  getAllJobNumber() {\r\n    this.logicalFormInfo.getAllJobNumber().subscribe((res: any) => {\r\n      this.allJobNumbers = res.data;\r\n    });\r\n  }\r\n  tabClick(eve) {\r\n    console.log('tab changed', eve);\r\n    if (eve.index == 0) {\r\n      this.showsite();\r\n    }\r\n    if (eve.index == 1) {\r\n      this.sidePreview.updateValueAndValidity();\r\n      this.showAction();\r\n    }\r\n  }\r\n  onSave() {\r\n    console.log('form data', this.sidePreview.value);\r\n    if (this.id != 'form') {\r\n      const data = {\r\n        sitePreview: [\r\n          {\r\n            ...this.sidePreview.value,\r\n          },\r\n        ],\r\n      };\r\n      this.logicalFormInfo\r\n        .updateSiteInspection(this.id, data)\r\n        .subscribe((res) => {\r\n          console.log('res', res);\r\n          this.router.navigate(['/admin/forms']);\r\n          // this.router.navigate([\"/admin/forms/tableData\"]);\r\n          Swal.fire({\r\n            title: 'Update successfully',\r\n            showConfirmButton: false,\r\n            timer: 1200,\r\n          });\r\n          this.router.navigate(['/admin/forms']);\r\n        });\r\n    } else {\r\n      const data = {\r\n        sitePreview: [\r\n          {\r\n            ...this.sidePreview.value,\r\n          },\r\n        ],\r\n      };\r\n      this.logicalFormInfo.addSiteInspection(data).subscribe((res) => {\r\n        console.log('res', res);\r\n        Swal.fire({\r\n          title: 'Submit successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });\r\n        // this.router.navigate([\"/admin/forms/tableData\"]);\r\n        this.router.navigate(['/admin/forms']);\r\n      });\r\n      console.log('data', data);\r\n    }\r\n    this.sidePreview.reset();\r\n  }\r\n  getAllCategory() {\r\n    this.logicalFormInfo\r\n      .getAllSiteInspectionCategory()\r\n      .subscribe((res: any) => {\r\n        this.allcategory = res.data;\r\n        console.log('Allcategory', res);\r\n        // for (let index = 0; index < this.allcategory.length; index++) {\r\n        //   //this.sidePreview.addControl( this.allcategory[index].category ,new FormArray([]))\r\n\r\n        // }\r\n        // for (let x = 0; x < this.allcategory.length; x++) {\r\n        //   let y=this.allcategory[x].category\r\n\r\n        //  this.add2().push(this.newAction2())\r\n        // }\r\n      });\r\n  }\r\n  add2(): FormArray {\r\n    return this.sidePreview.get('siteCategorytTopic') as FormArray;\r\n  }\r\n  newAction2(index): FormGroup {\r\n    return this.fb.group({\r\n      [this.allTopic[index]._id]: ['',],\r\n    });\r\n  }\r\n  getAllTopic() {\r\n    this.logicalFormInfo.getAllSiteInspectionTopic().subscribe((res: any) => {\r\n      this.allTopic = res.data;\r\n      console.log('alltopic', this.allTopic);\r\n\r\n      // this.add2().push(this.newAction2(index))\r\n\r\n      for (let index = 0; index < this.allTopic.length; index++) {\r\n        //this.sidePreview.addControl( this.allcategory[index].category ,new FormArray([]))\r\n\r\n        this.add2().push(this.newAction2(index));\r\n        // console.log(\"index\",index);\r\n      }\r\n      console.log(this.sidePreview.value);\r\n    });\r\n  }\r\n  categorychecked(index) {\r\n    let value;\r\n    value = this.allTopic?.find((ele) => {\r\n      return ele?.categoryId == this.allcategory[index]?._id;\r\n    });\r\n    return value != null;\r\n  }\r\n  getAllStaff() {\r\n    this.logicalFormInfo.getAllStaff().subscribe((res: any) => {\r\n      this.staff = res.data;\r\n      console.log('res', this.staff);\r\n    });\r\n  }\r\n}\r\n","<div class=\"btn btn-outline-primary\" *ngIf=\"id ==='form'\" [routerLink]=\"['/admin/forms']\"><i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i></div>\r\n<div class=\"btn btn-outline-primary\" *ngIf=\"id!=='form'\" [routerLink]=\"['/admin/forms/siteinspectiontable']\"><i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i></div>\r\n\r\n<div class=\"container card px-4 py-4\" [formGroup]=\"sidePreview\">\r\n  <h2 class=\"text-center pt-3\">\r\n    <p class=\"title\">Site Inspection </p>\r\n  </h2>\r\n\r\n  <!-- <ul class=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\r\n    <li class=\"nav-item\" role=\"presentation\">\r\n      <button\r\n        [ngClass]=\"siteshow === true ? 'nav-link active' : 'nav-link outline'\"\r\n        id=\"siteInspection-tab\"\r\n        data-bs-toggle=\"tab\"\r\n        data-bs-target=\"#siteInspection\"\r\n        type=\"button\"\r\n        role=\"tab\"\r\n        aria-controls=\"siteInspection\"\r\n        (click)=\"showsite()\"\r\n        aria-selected=\"true\"\r\n      >\r\n        Site Inspection\r\n      </button>\r\n    </li>\r\n    <li class=\"nav-item\" role=\"presentation\">\r\n      <button\r\n        [ngClass]=\"siteAction === true ? 'nav-link active' : 'nav-link outline'\"\r\n        id=\"siteAction-tab\"\r\n        data-bs-toggle=\"tab\"\r\n        data-bs-target=\"#siteAction\"\r\n        type=\"button\"\r\n        role=\"tab\"\r\n        aria-controls=\"siteAction\"\r\n        (click)=\"showAction()\"\r\n        aria-selected=\"false\"\r\n      >\r\n        Site Inspection Corrective Action\r\n      </button>\r\n    </li>\r\n  </ul> -->\r\n  <mat-tab-group (selectedTabChange)=\"tabClick($event)\"  >\r\n    <mat-tab label=\"Site Inspection\"> \r\n      <div\r\n      class=\"tab-pane fade show active\"\r\n      id=\"siteInspection\"\r\n      role=\"tabpanel\"\r\n      *ngIf=\"siteshow\"\r\n      aria-labelledby=\"siteInspection-tab\"\r\n    >\r\n      <div class=\"pt-3\">\r\n        <p class=\"subtitel\">Site Information</p>\r\n      </div>\r\n      <div>\r\n        <div class=\"row\">\r\n          <div class=\"mb-3 col\">\r\n            <p for=\"exampleFormControlInput1\" class=\"form-Label\">Site Name</p>\r\n            <input type=\"text\" class=\"form-control outline\" id=\"siteName\" formControlName=\"siteName\" [class.is-invalid]=\"sidePreview.get('siteName')?.hasError('required') && (sidePreview.get('siteName').dirty || sidePreview.get('siteName').touched) \" />\r\n            <span *ngIf=\" sidePreview.get('siteName')?.hasError('required') && (sidePreview.get('siteName').dirty  || sidePreview.get('siteName').touched) \" class=\"invalid-feedback\" >\r\n        This Field is Required</span>\r\n          </div>\r\n          <div class=\"mb-3 col\">\r\n            <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n              Customer Name\r\n            </p>\r\n            <input type=\"text\" class=\"form-control outline\" formControlName=\"customerName\" [class.is-invalid]=\"sidePreview.get('customerName')?.hasError('required') && (sidePreview.get('customerName').dirty || sidePreview.get('customerName').touched) \"/>\r\n            <span *ngIf=\" sidePreview.get('customerName')?.hasError('required') && (sidePreview.get('customerName').dirty  || sidePreview.get('customerName').touched) \" class=\"invalid-feedback\" >\r\n              This Field is Required</span>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"mb-3 col\">\r\n            <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n              Site Address\r\n            </p>\r\n            <input type=\"text\" class=\"form-control outline\"formControlName=\"streetAddr\"  [class.is-invalid]=\"sidePreview.get('streetAddr')?.hasError('required') && (sidePreview.get('streetAddr').dirty || sidePreview.get('streetAddr').touched) \" />\r\n            <span *ngIf=\" sidePreview.get('streetAddr')?.hasError('required') && (sidePreview.get('streetAddr').dirty  || sidePreview.get('streetAddr').touched) \" class=\"invalid-feedback\" >\r\n              This Field is Required</span>\r\n          </div>\r\n          <div class=\"mb-3 col\">\r\n            <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n              Customer Contact\r\n            </p>\r\n            <input type=\"text\" class=\"form-control outline\"   formControlName=\"custConct\" [class.is-invalid]=\"sidePreview.get('custConct')?.hasError('required') && (sidePreview.get('custConct').dirty || sidePreview.get('custConct').touched) \" />\r\n            <span *ngIf=\" sidePreview.get('custConct')?.hasError('required') && (sidePreview.get('custConct').dirty  || sidePreview.get('custConct').touched) \" class=\"invalid-feedback\" >\r\n              This Field is Required</span>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <div class=\"mb-3 col\">\r\n            <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n              Customer Contact Phone\r\n            </p>\r\n            <input type=\"text\" class=\"form-control outline\" formControlName=\"custConctPh\" [class.is-invalid]=\"sidePreview.get('custConctPh')?.hasError('required') && (sidePreview.get('custConctPh').dirty || sidePreview.get('custConctPh').touched) \"/>\r\n            <span *ngIf=\" sidePreview.get('custConctPh')?.hasError('required') && (sidePreview.get('custConctPh').dirty  || sidePreview.get('custConctPh').touched) \" class=\"invalid-feedback\" >\r\n              This Field is Required</span>\r\n          </div>\r\n          <div class=\"mb-3 col\">\r\n            <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n              Customer Contact Email\r\n            </p>\r\n            <input type=\"text\" class=\"form-control outline\"  formControlName=\"custEmail\"  [class.is-invalid]=\"sidePreview.get('custEmail')?.hasError('required') && (sidePreview.get('custEmail').dirty || sidePreview.get('custEmail').touched) \"/>\r\n            <span *ngIf=\" sidePreview.get('custEmail')?.hasError('required') && (sidePreview.get('custEmail').dirty  || sidePreview.get('custEmail').touched) \" class=\"invalid-feedback\" >\r\n              This Field is Required</span>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"mb-3 col\">\r\n            <p for=\"exampleFormControlInput1\" class=\"form-Label\">Job Number</p>\r\n\r\n            <select\r\n              class=\"form-select form-control col outline form-dropdown\"\r\n              aria-label=\"Default select example\"\r\n              formControlName=\"jobNumber\"\r\n              (change)=\"jobNoSel()\"\r\n              [class.is-invalid]=\"sidePreview.get('jobNumber')?.hasError('required') && (sidePreview.get('jobNumber').dirty || sidePreview.get('jobNumber').touched) \"\r\n            >\r\n              <option selected hidden>Select</option>\r\n              <option [value]=\"jobNo._id\" *ngFor=\"let jobNo of allJobNumbers\">{{jobNo.jobNumber}}</option>\r\n              <!-- <option value=\"1\">1000</option>\r\n              <option value=\"2\">1001</option>\r\n              <option value=\"3\">1002</option> -->\r\n            </select>\r\n            <span *ngIf=\" sidePreview.get('jobNumber')?.hasError('required') && (sidePreview.get('jobNumber').dirty  || sidePreview.get('jobNumber').touched) \" class=\"invalid-feedback\" >\r\n              This Field is Required</span>\r\n          </div>\r\n          <div class=\"mb-3 col\">\r\n            <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n              Project Manager\r\n            </p>\r\n            <select\r\n              class=\"form-select form-control col outline form-dropdown\"\r\n              aria-label=\"Default select example\"\r\n              formControlName=\"projectManager\"\r\n              [class.is-invalid]=\"sidePreview.get('projectManager')?.hasError('required') && (sidePreview.get('projectManager').dirty || sidePreview.get('projectManager').touched) \"\r\n            >\r\n              <option selected hidden>Select</option>\r\n              <option [value]=\"mang._id\" *ngFor=\"let mang of projectMang\">{{mang.title}}</option>\r\n              <!-- <option value=\"1\">John</option>\r\n              <option value=\"2\">Akash</option>\r\n              <option value=\"3\">Rahul</option> -->\r\n            </select>\r\n            <span *ngIf=\" sidePreview.get('projectManager')?.hasError('required') && (sidePreview.get('projectManager').dirty  || sidePreview.get('projectManager').touched) \" class=\"invalid-feedback\" >\r\n              This Field is Required</span>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"mb-3 col-6\">\r\n            <p for=\"exampleFormControlInput1\" class=\"form-Label\">Date</p>\r\n            <input  matInput  [matDatepicker]=\"datepicker2\" [max]=\"maxDate\" [min]=\"minDate\"\r\n            class=\"form-control outline\"\r\n            formControlName=\"date\"\r\n            [class.is-invalid]=\"sidePreview.get('date')?.hasError('required') && (sidePreview.get('date').dirty || sidePreview.get('date').touched) \"           \r\n            placeholder=\"dd-mm-yyyy\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"datepicker2\"></mat-datepicker-toggle>\r\n            <mat-datepicker #datepicker2 ></mat-datepicker>\r\n           \r\n            <span *ngIf=\" sidePreview.get('date')?.hasError('required') && (sidePreview.get('date').dirty  || sidePreview.get('date').touched) \" class=\"invalid-feedback\" >\r\n              Date is Required</span>\r\n          </div>\r\n\r\n          <!-- <div class=\"mb-3 col\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\"\r\n              >Signature*</p\r\n            >\r\n            <input type=\"text\" class=\"form-control\" />\r\n          </div> -->\r\n        </div>\r\n      </div>\r\n      <!-- /////////////////////////////////////////////////// -->\r\n      <div formArrayName=\"siteCategorytTopic\">\r\n        <div *ngFor=\"let category of allcategory; let index = index\">\r\n        <div class=\"mt-4\" *ngIf=\"categorychecked(index) \">\r\n          <p class=\"subtitel\">{{allcategory[index].category}}</p>\r\n        </div>\r\n        <div class=\"row\" >\r\n        <ng-container\r\n         *ngFor=\"let row of add2().controls; let filed = index\">\r\n          <ng-container [formGroupName]=\"filed\">\r\n            \r\n            \r\n              <div class=\"mt-2 col-4\" *ngIf=\" allTopic[filed].categoryId==allcategory[index]._id\">\r\n                <p  class=\"\" *ngIf=\" allTopic[filed].categoryId==allcategory[index]._id\">\r\n                 {{allTopic[filed].topic}}\r\n                </p>\r\n                <p *ngIf=\" allTopic[filed].categoryId==allcategory[index]._id\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    class=\"form-radio mr-1\"\r\n                    formControlName=\"{{allTopic[filed]._id}}\"\r\n                    value=\"yes\"\r\n                  />Yes\r\n                </p>\r\n                <p *ngIf=\" allTopic[filed].categoryId==allcategory[index]._id\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    class=\"mr-1\"\r\n                    (change)=\"addAcionTab($event)\"\r\n                    formControlName=\"{{allTopic[filed]._id}}\"\r\n                    [value]=\"allTopic[filed]._id\"\r\n                  />No\r\n                </p>\r\n              \r\n          </div>\r\n          </ng-container>\r\n        </ng-container>\r\n      </div>\r\n      </div>\r\n      </div>\r\n\r\n<!-- /////////////////////////////////////////////////////////////// -->\r\n      <div *ngIf=\"false\">\r\n      <div class=\"mt-4\">\r\n        <p class=\"subtitel\">Site Control</p>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"mt-2 col-4\">\r\n          <p for=\"exampleFormControlInput1\" class=\"\">\r\n            Is the Hazard Signage up to date\r\n          </p>\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"form-radio mr-1\"\r\n              formControlName=\"Hazard\"\r\n              value=\"yes\"\r\n            />Yes\r\n          </p>\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              (change)=\"addAcionTab($event)\"\r\n              formControlName=\"Hazard\"\r\n              value=\"Hazard Signage not up to date\"\r\n            />No\r\n          </p>\r\n        </div>\r\n        <div class=\"mt-2 col-4\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n            Is the documentation up to date\r\n          </p>\r\n\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"yes\"\r\n              formControlName=\"documentation\"\r\n            />Yes\r\n          </p>\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\" documentation not up to date\"\r\n              (change)=\"addAcionTab($event)\"\r\n              formControlName=\"documentation\"\r\n            />No\r\n          </p>\r\n        </div>\r\n        <div class=\"mt-2 col-4\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n            Have all workers been inducted onsite\r\n          </p>\r\n\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"yes\"\r\n              formControlName=\"workeronsite\"\r\n            />Yes\r\n          </p>\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\" workers not  inducted into onsite\"\r\n              (change)=\"addAcionTab($event)\"\r\n              formControlName=\"workeronsite\"\r\n            />No\r\n          </p>\r\n        </div>\r\n\r\n        <div class=\"mt-2 col-4\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n            Have all workers been inducted into the SWMS\r\n          </p>\r\n          <!-- <input type=\"text\" class=\"form-control\" formControlName=\"index\" /> -->\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"yes\"\r\n              formControlName=\"SWMS\"\r\n            />Yes\r\n          </p>\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              (change)=\"addAcionTab($event)\"\r\n              value=\"workers not inducted into  SWMS\"\r\n              formControlName=\"SWMS\"\r\n            />No\r\n          </p>\r\n        </div>\r\n        <div class=\"mt-2 col-4\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n            Are regular toobox talks taking place\r\n          </p>\r\n\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"yes\"\r\n              formControlName=\"tooboxtalk\"\r\n            />Yes\r\n          </p>\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              (change)=\"addAcionTab($event)\"\r\n              value=\"toobox talks not taking place\"\r\n              formControlName=\"tooboxtalk\"\r\n            />No\r\n          </p>\r\n        </div>\r\n        <div class=\"mt-2 col-4\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n            Date of last toolbox talk\r\n          </p>\r\n          <input type=\"date\" class=\"form-control outline\" formControlName=\"datetooboxtalk\"/>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"mt-4\">\r\n        <p class=\"subtitel\">WHS Documentation</p>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"mt-2 col-4\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n            WHS Manual is avaiable to all workers\r\n          </p>\r\n          <!-- <input type=\"text\" class=\"form-control\" formControlName=\"index\" /> -->\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"yes\"\r\n              formControlName=\"WHSManual\"\r\n            />Yes\r\n          </p>\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              (change)=\"addAcionTab($event)\"\r\n              value=\"WHS Manual is not avaiable all workers\"\r\n              formControlName=\"WHSManual\"\r\n            />No\r\n          </p>\r\n        </div>\r\n        <div class=\"mt-2 col-4\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n            Incident Report form available\r\n          </p>\r\n\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"yes\"\r\n              formControlName=\"IncidentReport\"\r\n            />Yes\r\n          </p>\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"Incident Report not available\"\r\n              (change)=\"addAcionTab($event)\"\r\n              formControlName=\"IncidentReport\"\r\n            />No\r\n          </p>\r\n        </div>\r\n        <div class=\"mt-2 col-4\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n            Hazard Report form available\r\n          </p>\r\n\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"yes\"\r\n              formControlName=\"HazardReport\"\r\n            />Yes\r\n          </p>\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"Hazard Report not available\"\r\n              (change)=\"addAcionTab($event)\"\r\n              formControlName=\"HazardReport\"\r\n            />No\r\n          </p>\r\n        </div>\r\n\r\n        <div class=\"mt-2 col-4\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n            Emergrncy Evacuation plan displayed\r\n          </p>\r\n          <!-- <input type=\"text\" class=\"form-control\" formControlName=\"index\" /> -->\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"yes\"\r\n              formControlName=\"emergrncyEvacuation\"\r\n            />Yes\r\n          </p>\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"Emergrncy Evacuation plan not displayed\"\r\n              (change)=\"addAcionTab($event)\"\r\n              formControlName=\"emergrncyEvacuation\"\r\n            />No\r\n          </p>\r\n        </div>\r\n        <div class=\"mt-2 col-4\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n            Training Records are up tp date\r\n          </p>\r\n\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"yes\"\r\n              formControlName=\"TrainingRecords\"\r\n            />Yes\r\n          </p>\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"Training Records not up tp date\"\r\n              (change)=\"addAcionTab($event)\"\r\n              formControlName=\"TrainingRecords\"\r\n            />No\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"mt-4\">\r\n        <p class=\"subtitel\">Display Material</p>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"mt-2 col-4\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n            WHS Policy Displayed on notice board\r\n          </p>\r\n          <!-- <input type=\"text\" class=\"form-control\" formControlName=\"index\" /> -->\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"yes\"\r\n              formControlName=\"WHSPolicy\"\r\n            />Yes\r\n          </p>\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"HS Policy not  Displayed on notice board\"\r\n              (change)=\"addAcionTab($event)\"\r\n              formControlName=\"WHSPolicy\"\r\n            />No\r\n          </p>\r\n        </div>\r\n        <div class=\"mt-2 col-4\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n            Return to Work Form avaliable\r\n          </p>\r\n\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"yes\"\r\n              formControlName=\"ReturnToWork\"\r\n            />Yes\r\n          </p>\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"Return to Work Form not avaliable\"\r\n              (change)=\"addAcionTab($event)\"\r\n              formControlName=\"ReturnToWork\"\r\n            />No\r\n          </p>\r\n        </div>\r\n        <div class=\"mt-2 col-4\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n            Hazard Report form avaliable\r\n          </p>\r\n\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"yes\"\r\n              formControlName=\"displayHazardReport\"\r\n            />Yes\r\n          </p>\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"Hazard Report form not avaliable\"\r\n              (change)=\"addAcionTab($event)\"\r\n              formControlName=\"displayHazardReport\"\r\n            />No\r\n          </p>\r\n        </div>\r\n\r\n        <div class=\"mt-2 col-4\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n            Emergrncy Evacuation plan displayed\r\n          </p>\r\n          <!-- <input type=\"text\" class=\"form-control\" formControlName=\"index\" /> -->\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"yes\"\r\n              formControlName=\"displayEmergrncyEvacuation\"\r\n            />Yes\r\n          </p>\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"Emergrncy Evacuation plan not displayed\"\r\n              (change)=\"addAcionTab($event)\"\r\n              formControlName=\"displayEmergrncyEvacuation\"\r\n            />No\r\n          </p>\r\n        </div>\r\n        <div class=\"mt-2 col-4\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n            No Smoking signs displayed\r\n          </p>\r\n\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"yes\"\r\n              formControlName=\"NoSmoking\"\r\n            />Yes\r\n          </p>\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"No Smoking signs not displayed\"\r\n              (change)=\"addAcionTab($event)\"\r\n              formControlName=\"NoSmoking\"\r\n            />No\r\n          </p>\r\n        </div>\r\n        <div class=\"mt-2 col-4\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n            PPE Signage displayed\r\n          </p>\r\n\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"yes\"\r\n              formControlName=\"PPESignage\"\r\n            />Yes\r\n          </p>\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"PPE Signage not displayed\"\r\n              (change)=\"addAcionTab($event)\"\r\n              formControlName=\"PPESignage\"\r\n            />No\r\n          </p>\r\n        </div>\r\n        <div class=\"mt-2 col-4\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n            Report the Hazard signs displayed\r\n          </p>\r\n\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"yes\"\r\n              formControlName=\"ReportHazardsigns\"\r\n            />Yes\r\n          </p>\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"Report the Hazard signs not displayed\"\r\n              (change)=\"addAcionTab($event)\"\r\n              formControlName=\"ReportHazardsigns\"\r\n            />No\r\n          </p>\r\n        </div>\r\n        <div class=\"mt-2 col-4\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n            Manual Handling Signs Displayed\r\n          </p>\r\n\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"yes\"\r\n              formControlName=\"ManualHandlingSigns\"\r\n            />Yes\r\n          </p>\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"Manual Handling Signs not Displayed\"\r\n              (change)=\"addAcionTab($event)\"\r\n              formControlName=\"ManualHandlingSigns\"\r\n            />No\r\n          </p>\r\n        </div>\r\n        <div class=\"mt-2 col-4\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n            Notice Board is up to date\r\n          </p>\r\n\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"yes\"\r\n              formControlName=\"NoticeBoard\"\r\n            />Yes\r\n          </p>\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"Notice Board not up to date\"\r\n              (change)=\"addAcionTab($event)\"\r\n              formControlName=\"NoticeBoard\"\r\n            />No\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"mt-4\">\r\n        <p class=\"subtitel\">Access And Egrass</p>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"mt-2 col-4\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n            No oil, grease or other slip hazard\r\n          </p>\r\n          <!-- <input type=\"text\" class=\"form-control\" formControlName=\"index\" /> -->\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"yes\"\r\n              formControlName=\"accessEgrassHazards\"\r\n            />Yes\r\n          </p>\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"oil, grease or other slip hazard\"\r\n              (change)=\"addAcionTab($event)\"\r\n              formControlName=\"accessEgrassHazards\"\r\n            />No\r\n          </p>\r\n        </div>\r\n        <div class=\"mt-2 col-4\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n            Walkways clearly marked\r\n          </p>\r\n\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"yes\"\r\n              formControlName=\"Walkways\"\r\n            />Yes\r\n          </p>\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"Walkways not clearly marked\"\r\n              (change)=\"addAcionTab($event)\"\r\n              formControlName=\"Walkways\"\r\n            />No\r\n          </p>\r\n        </div>\r\n        <div class=\"mt-2 col-4\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n            Walkways are free of clutter or obstructions\r\n          </p>\r\n\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"yes\"\r\n              formControlName=\"Walkwaysfree\"\r\n            />Yes\r\n          </p>\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"Walkways not free of clutter or obstructions\"\r\n              (change)=\"addAcionTab($event)\"\r\n              formControlName=\"Walkwaysfree\"\r\n            />No\r\n          </p>\r\n        </div>\r\n\r\n        <div class=\"mt-2 col-4\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n            Stairs are not blocked and good condition\r\n          </p>\r\n          <!-- <input type=\"text\" class=\"form-control\" formControlName=\"index\" /> -->\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"yes\"\r\n              formControlName=\"StairsConditionGood\"\r\n            />Yes\r\n          </p>\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"Stairs are  blocked and not  good condition\"\r\n              (change)=\"addAcionTab($event)\"\r\n              formControlName=\"StairsConditionGood\"\r\n            />No\r\n          </p>\r\n        </div>\r\n        <div class=\"mt-2 col-4\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n            Hoardings/fence and getes secure\r\n          </p>\r\n\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"yes\"\r\n              formControlName=\"HoardingsFenceGates\"\r\n            />Yes\r\n          </p>\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"Hoardings/fence and getes not secure\"\r\n              (change)=\"addAcionTab($event)\"\r\n              formControlName=\"HoardingsFenceGates\"\r\n            />No\r\n          </p>\r\n        </div>\r\n        <div class=\"mt-2 col-4\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n            Loose matrials secure from wind\r\n          </p>\r\n\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"yes\"\r\n              formControlName=\"LosseMatrialSecure\"\r\n            />Yes\r\n          </p>\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"Loose matrials not secure from wind\"\r\n              (change)=\"addAcionTab($event)\"\r\n              formControlName=\"LosseMatrialSecure\"\r\n            />No\r\n          </p>\r\n        </div>\r\n        <div class=\"mt-2 col-4\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n            Bins/Skips located suitable areas\r\n          </p>\r\n\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"yes\"\r\n              formControlName=\"binsSkipsLocated\"\r\n            />Yes\r\n          </p>\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"Bins/Skips not located suitable areas\"\r\n              (change)=\"addAcionTab($event)\"\r\n              formControlName=\"binsSkipsLocated\"\r\n            />No\r\n          </p>\r\n        </div>\r\n        <div class=\"mt-2 col-4\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n            Bins/Skips are not overflowing\r\n          </p>\r\n\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"yes\"\r\n              formControlName=\"binsSkipsOverflowing\"\r\n            />Yes\r\n          </p>\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"Bins/Skips are overflowing\"\r\n              (change)=\"addAcionTab($event)\"\r\n              formControlName=\"binsSkipsOverflowing\"\r\n            />No\r\n          </p>\r\n        </div>\r\n        <div class=\"mt-2 col-4\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n            Notice Board is up to date\r\n          </p>\r\n\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"yes\"\r\n              formControlName=\"NoticeBoard\"\r\n            />Yes\r\n          </p>\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"Notice Board not up to date\"\r\n              (change)=\"addAcionTab($event)\"\r\n              formControlName=\"NoticeBoard\"\r\n            />No\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"mt-4\">\r\n        <p class=\"subtitel\">Electrical Equipment</p>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"mt-2 col-4\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n            Mainboard lockable\r\n          </p>\r\n          <!-- <input type=\"text\" class=\"form-control\" formControlName=\"index\" /> -->\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"yes\"\r\n              formControlName=\"electricalMainboardLock\"\r\n            />Yes\r\n          </p>\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"Mainboard not lockable\"\r\n              (change)=\"addAcionTab($event)\"\r\n              formControlName=\"electricalMainboardLock\"\r\n            />No\r\n          </p>\r\n        </div>\r\n        <div class=\"mt-2 col-4\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n            Powerleads tested and tagged\r\n          </p>\r\n\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"yes\"\r\n              formControlName=\"PowerleadsTested\"\r\n            />Yes\r\n          </p>\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"Powerleads not tested and tagged\"\r\n              (change)=\"addAcionTab($event)\"\r\n              formControlName=\"PowerleadsTested\"\r\n            />No\r\n          </p>\r\n        </div>\r\n        <div class=\"mt-2 col-4\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n            Appropriate giards on equipment\r\n          </p>\r\n\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"yes\"\r\n              formControlName=\"EquipmentGiards\"\r\n            />Yes\r\n          </p>\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"Not Appropriate giards on equipment\"\r\n              (change)=\"addAcionTab($event)\"\r\n              formControlName=\"EquipmentGiards\"\r\n            />No\r\n          </p>\r\n        </div>\r\n\r\n        <div class=\"mt-2 col-4\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n            Equipment in good condition\r\n          </p>\r\n          <!-- <input type=\"text\" class=\"form-control\" formControlName=\"index\" /> -->\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"yes\"\r\n              formControlName=\"EquipmentCondition\"\r\n            />Yes\r\n          </p>\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"Equipment not good condition\"\r\n              (change)=\"addAcionTab($event)\"\r\n              formControlName=\"EquipmentCondition\"\r\n            />No\r\n          </p>\r\n        </div>\r\n        <div class=\"mt-2 col-4\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n            Leads safety placed\r\n          </p>\r\n\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"yes\"\r\n              formControlName=\"LeadsSafety\"\r\n            />Yes\r\n          </p>\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"Leads not safety placed\"\r\n              (change)=\"addAcionTab($event)\"\r\n              formControlName=\"LeadsSafety\"\r\n            />No\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"mt-4\">\r\n        <p class=\"subtitel\">Chemicals</p>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"mt-2 col-4\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n            Safey Data Sheet(SDS) available\r\n          </p>\r\n          <!-- <input type=\"text\" class=\"form-control\" formControlName=\"index\" /> -->\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"yes\"\r\n              formControlName=\"SDSavailable\"\r\n            />Yes\r\n          </p>\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"Safey Data Sheet(SDS) not available\"\r\n              (change)=\"addAcionTab($event)\"\r\n              formControlName=\"SDSavailable\"\r\n            />No\r\n          </p>\r\n        </div>\r\n        <div class=\"mt-2 col-4\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n            All Chemicals Are stored as per the SDS\r\n          </p>\r\n\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"yes\"\r\n              formControlName=\"chemicalsStoredSDS\"\r\n            />Yes\r\n          </p>\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"All Chemicals Are not stored as per the SDS\"\r\n              (change)=\"addAcionTab($event)\"\r\n              formControlName=\"chemicalsStoredSDS\"\r\n            />No\r\n          </p>\r\n        </div>\r\n        <div class=\"mt-2 col-4\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n            SDS Register is availables and up to date\r\n          </p>\r\n\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"yes\"\r\n              formControlName=\"SDSRegisterAvailables\"\r\n            />Yes\r\n          </p>\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"SDS Register not availables and not  up to date\"\r\n              (change)=\"addAcionTab($event)\"\r\n              formControlName=\"SDSRegisterAvailables\"\r\n            />No\r\n          </p>\r\n        </div>\r\n\r\n        <div class=\"mt-2 col-4\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n            Correct PPE on hand and in use\r\n          </p>\r\n          <!-- <input type=\"text\" class=\"form-control\" formControlName=\"index\" /> -->\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"yes\"\r\n              formControlName=\"correctPPHand\"\r\n            />Yes\r\n          </p>\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"Incorrect PPE on hand and in use\"\r\n              (change)=\"addAcionTab($event)\"\r\n              formControlName=\"correctPPHand\"\r\n            />No\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"mt-4\">\r\n        <p class=\"subtitel\">First Aid</p>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"mt-2 col-4\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n            First Aid Kit available\r\n          </p>\r\n          <!-- <input type=\"text\" class=\"form-control\" formControlName=\"index\" /> -->\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"yes\"\r\n              formControlName=\"FirstAidavailable\"\r\n            />Yes\r\n          </p>\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"First Aid Kit not available\"\r\n              (change)=\"addAcionTab($event)\"\r\n              formControlName=\"FirstAidavailable\"\r\n            />No\r\n          </p>\r\n        </div>\r\n        <div class=\"mt-2 col-4\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n            First Kit stocked as per contents list\r\n          </p>\r\n\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"yes\"\r\n              formControlName=\"FirstKitContentsList\"\r\n            />Yes\r\n          </p>\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"First Kit not  stocked as per contents list\"\r\n              (change)=\"addAcionTab($event)\"\r\n              formControlName=\"FirstKitContentsList\"\r\n            />No\r\n          </p>\r\n        </div>\r\n        <div class=\"mt-2 col-4\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n            First Aid Kit accessable to all workers\r\n          </p>\r\n\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"yes\"\r\n              formControlName=\"KitAccessableWorkers\"\r\n            />Yes\r\n          </p>\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"First Aid Kit not  accessable to all workers\"\r\n              (change)=\"addAcionTab($event)\"\r\n              formControlName=\"KitAccessableWorkers\"\r\n            />No\r\n          </p>\r\n        </div>\r\n\r\n        <div class=\"mt-2 col-4\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n            All workers aware of the first Aid kit location\r\n          </p>\r\n          <!-- <input type=\"text\" class=\"form-control\" formControlName=\"index\" /> -->\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"yes\"\r\n              formControlName=\"awarefirstKitLocation\"\r\n            />Yes\r\n          </p>\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"All workers not aware first Aid kit location\"\r\n              (change)=\"addAcionTab($event)\"\r\n              formControlName=\"awarefirstKitLocation\"\r\n            />No\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"mt-4\">\r\n        <p class=\"subtitel\">Fire and Evacuation</p>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"mt-2 col-4\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n            Extinguishers are in place\r\n          </p>\r\n          <!-- <input type=\"text\" class=\"form-control\" formControlName=\"index\" /> -->\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"yes\"\r\n              formControlName=\"Extinguishers\"\r\n            />Yes\r\n          </p>\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"Extinguishers not in place\"\r\n              (change)=\"addAcionTab($event)\"\r\n              formControlName=\"Extinguishers\"\r\n            />No\r\n          </p>\r\n        </div>\r\n        <div class=\"mt-2 col-4\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n            Extinguishers are clearly maked\r\n          </p>\r\n\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"yes\"\r\n              formControlName=\"ExtinguishersClearlyMaked\"\r\n            />Yes\r\n          </p>\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"Extinguishers not clearly maked\"\r\n              (change)=\"addAcionTab($event)\"\r\n              formControlName=\"ExtinguishersClearlyMaked\"\r\n            />No\r\n          </p>\r\n        </div>\r\n        <div class=\"mt-2 col-4\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n            Extinguishers seviced and up to date\r\n          </p>\r\n\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"yes\"\r\n              formControlName=\"ExtinguishersSevicedUpdate\"\r\n            />Yes\r\n          </p>\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"Extinguishers seviced not up to date\"\r\n              (change)=\"addAcionTab($event)\"\r\n              formControlName=\"ExtinguishersSevicedUpdate\"\r\n            />No\r\n          </p>\r\n        </div>\r\n\r\n        <div class=\"mt-2 col-4\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n            Exit Sings are in Working condition\r\n          </p>\r\n          <!-- <input type=\"text\" class=\"form-control\" formControlName=\"index\" /> -->\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"yes\"\r\n              formControlName=\"ExitSingsCondition\"\r\n            />Yes\r\n          </p>\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"Exit Sings not in a Working condition\"\r\n              (change)=\"addAcionTab($event)\"\r\n              formControlName=\"ExitSingsCondition\"\r\n            />No\r\n          </p>\r\n        </div>\r\n\r\n        <div class=\"mt-2 col-4\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n            Exit Doors not blocked\r\n          </p>\r\n          <!-- <input type=\"text\" class=\"form-control\" formControlName=\"index\" /> -->\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"yes\"\r\n              formControlName=\"ExitDoorsBlocked\"\r\n            />Yes\r\n          </p>\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"Exit Doors blocked \"\r\n              (change)=\"addAcionTab($event)\"\r\n              formControlName=\"ExitDoorsBlocked\"\r\n            />No\r\n          </p>\r\n        </div>\r\n\r\n        <div class=\"mt-2 col-4\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n            Exit Doors can be easily opened\r\n          </p>\r\n          <!-- <input type=\"text\" class=\"form-control\" formControlName=\"index\" /> -->\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"yes\"\r\n              formControlName=\"ExitDoorsOpened\"\r\n            />Yes\r\n          </p>\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"Exit Doors cannot be easily opened\"\r\n              (change)=\"addAcionTab($event)\"\r\n              formControlName=\"ExitDoorsOpened\"\r\n            />No\r\n          </p>\r\n        </div>\r\n\r\n        <div class=\"mt-2 col-4\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n            Fire Alarm tested and inspected up to date\r\n          </p>\r\n          <!-- <input type=\"text\" class=\"form-control\" formControlName=\"index\" /> -->\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"yes\"\r\n              formControlName=\"FireAlarmTested\"\r\n            />Yes\r\n          </p>\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"Fire Alarm not tested and inspected not  up to date\"\r\n              (change)=\"addAcionTab($event)\"\r\n              formControlName=\"FireAlarmTested\"\r\n            />No\r\n          </p>\r\n        </div>\r\n\r\n        <div class=\"mt-2 col-4\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n            Evacuation Plans displayed\r\n          </p>\r\n          <!-- <input type=\"text\" class=\"form-control\" formControlName=\"index\" /> -->\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"yes\"\r\n              formControlName=\"EvacuationPlans\"\r\n            />Yes\r\n          </p>\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"Evacuation Plans not displayed\"\r\n              (change)=\"addAcionTab($event)\"\r\n              formControlName=\"EvacuationPlans\"\r\n            />No\r\n          </p>\r\n        </div>\r\n\r\n        <div class=\"mt-2 col-4\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n            Emergency Drill conduct within the last year\r\n          </p>\r\n          <!-- <input type=\"text\" class=\"form-control\" formControlName=\"index\" /> -->\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"yes\"\r\n              formControlName=\"emergencyDrillConduct\"\r\n            />Yes\r\n          </p>\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"Emergency Drill not conduct within the last year\"\r\n              (change)=\"addAcionTab($event)\"\r\n              formControlName=\"emergencyDrillConduct\"\r\n            />No\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"mt-4\">\r\n        <p class=\"subtitel\">Plant Equipment</p>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"mt-2 col-4\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n            Risk Assessment and SWMS completed\r\n          </p>\r\n          <!-- <input type=\"text\" class=\"form-control\" formControlName=\"index\" /> -->\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"yes\"\r\n              formControlName=\"RiskAssessmentSWMS\"\r\n            />Yes\r\n          </p>\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"Risk Assessment and SWMS not completed\"\r\n              (change)=\"addAcionTab($event)\"\r\n              formControlName=\"RiskAssessmentSWMS\"\r\n            />No\r\n          </p>\r\n        </div>\r\n        <div class=\"mt-2 col-4\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n            Plant is within valid service/inspection period\r\n          </p>\r\n\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"yes\"\r\n              formControlName=\"PlantValidService\"\r\n            />Yes\r\n          </p>\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"Plant is within valid service/inspection not in  period\"\r\n              (change)=\"addAcionTab($event)\"\r\n              formControlName=\"PlantValidService\"\r\n            />No\r\n          </p>\r\n        </div>\r\n        <div class=\"mt-2 col-4\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n            Opertion procedures and SOP's in place\r\n          </p>\r\n\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"yes\"\r\n              formControlName=\"OpertionProceduresSOPs\"\r\n            />Yes\r\n          </p>\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"Opertion procedures and SOP's not in place\"\r\n              (change)=\"addAcionTab($event)\"\r\n              formControlName=\"OpertionProceduresSOPs\"\r\n            />No\r\n          </p>\r\n        </div>\r\n\r\n        <div class=\"mt-2 col-4\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">PPE available</p>\r\n          <!-- <input type=\"text\" class=\"form-control\" formControlName=\"index\" /> -->\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"yes\"\r\n              formControlName=\"PPEAvailable\"\r\n            />Yes\r\n          </p>\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"PPE not available\"\r\n              (change)=\"addAcionTab($event)\"\r\n              formControlName=\"PPEAvailable\"\r\n            />No\r\n          </p>\r\n        </div>\r\n\r\n        <div class=\"mt-2 col-4\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n            Emergency Plan in place\r\n          </p>\r\n          <!-- <input type=\"text\" class=\"form-control\" formControlName=\"index\" /> -->\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"yes\"\r\n              formControlName=\"emergencyPlan\"\r\n            />Yes\r\n          </p>\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"Emergency Plan not an in place\"\r\n              (change)=\"addAcionTab($event)\"\r\n              formControlName=\"emergencyPlan\"\r\n            />No\r\n          </p>\r\n        </div>\r\n\r\n        <div class=\"mt-2 col-4\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n            Plant is in good Condition\r\n          </p>\r\n          <!-- <input type=\"text\" class=\"form-control\" formControlName=\"index\" /> -->\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"yes\"\r\n              formControlName=\"PlantGoodCondition\"\r\n            />Yes\r\n          </p>\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"Plant is not  good Condition\"\r\n              (change)=\"addAcionTab($event)\"\r\n              formControlName=\"PlantGoodCondition\"\r\n            />No\r\n          </p>\r\n        </div>\r\n\r\n        <div class=\"mt-2 col-4\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n            Appropriate guards fitted\r\n          </p>\r\n          <!-- <input type=\"text\" class=\"form-control\" formControlName=\"index\" /> -->\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"yes\"\r\n              formControlName=\"appropriateGuards\"\r\n            />Yes\r\n          </p>\r\n          <p>\r\n            <input\r\n              type=\"radio\"\r\n              class=\"mr-1\"\r\n              value=\"Appropriate guards not fitted\"\r\n              (change)=\"addAcionTab($event)\"\r\n              formControlName=\"appropriateGuards\"\r\n            />No\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </div>\r\n    </mat-tab>\r\n    <mat-tab label=\"Site Inspection Corrective Action\"> \r\n      <div\r\n      class=\"tab-pane fade show active\"\r\n      id=\"siteAction\"\r\n      role=\"tabpanel\"\r\n      *ngIf=\"siteAction\"\r\n      aria-labelledby=\"siteAction-tab\"\r\n    >\r\n      <div formArrayName=\"siteAction\">\r\n        <div *ngFor=\"let row of add().controls; let filed = index\">\r\n          <div [formGroupName]=\"filed\">\r\n            <div class=\"row\" >\r\n              <div class=\"mb-3 col-3\" [class.disableDiv]=\"add().controls[filed].get('complete').value  == 'yes'\">\r\n                <p for=\"exampleFormControlInput1\" class=\"form-Label mt-2\">\r\n                  Item\r\n                </p>\r\n                <input type=\"text\" class=\"form-control outline\"  formControlName=\"item\" [class.is-invalid]=\" add().controls[filed].get('item')?.hasError('required') && (add().controls[filed].get('item').dirty || add().controls[filed].get('item').touched) \" />\r\n                <span *ngIf=\" add().controls[filed].get('item')?.hasError('required') && (add().controls[filed].get('item').dirty  || add().controls[filed].get('item').touched) \" class=\"invalid-feedback\" >\r\n                  This Field is Required</span>\r\n          \r\n                <!-- <select\r\n                  class=\"form-select form-control col outline form-dropdown\"\r\n                  aria-label=\"Default select example\"\r\n                  formControlName=\"item\"\r\n                >\r\n                  <option class=\"mr-1\" value=\"no\">\r\n                    {{ this.add().controls[filed].get('item').value }}\r\n                  </option>\r\n                  <option *ngFor=\"let item of item_values\">{{ item }}</option>\r\n                </select> -->\r\n                <!-- <input type=\"text\"  class=\"form-select form-control col\" aria-label=\"Default select example\" formControlName=\"item\"> -->\r\n              </div> \r\n\r\n              <div class=\"mb-3 col-3\" [class.disableDiv]=\"add().controls[filed].get('complete').value  == 'yes'\">\r\n                <p for=\"exampleFormControlInput1\" class=\"form-Label mt-2\">\r\n                  Action\r\n                </p>\r\n                <input type=\"text\" class=\"form-control outline\"  formControlName=\"action\" [class.is-invalid]=\" add().controls[filed].get('action')?.hasError('required') && (add().controls[filed].get('action').dirty || add().controls[filed].get('action').touched) \" />\r\n                <span *ngIf=\" add().controls[filed].get('action')?.hasError('required') && (add().controls[filed].get('action').dirty  || add().controls[filed].get('action').touched) \" class=\"invalid-feedback\" >\r\n                  This Field is Required</span>\r\n                <!-- <select\r\n                  class=\"form-select form-control col outline form-dropdown\"\r\n                  aria-label=\"Default select example\"\r\n                  formControlName=\"action\"\r\n                >\r\n                  <option  class=\"mr-1\" value=\"{{ this.add().controls[filed].get('action').value }}\"> {{ this.add().controls[filed].get('action').value }}</option>\r\n                </select> -->\r\n              </div>\r\n\r\n              <div class=\"my-3 col-2\"  [class.disableDiv]=\"add().controls[filed].get('complete').value  == 'yes'\">\r\n                <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n                  Person Responsible\r\n                </p>\r\n                <select\r\n                  class=\"form-select form-control col form-dropdown\"\r\n                  aria-label=\"Default select example\"\r\n                  formControlName=\"PersonResponsible\"\r\n                  [class.is-invalid]=\" add().controls[filed].get('PersonResponsible')?.hasError('required') && (add().controls[filed].get('PersonResponsible').dirty || add().controls[filed].get('PersonResponsible').touched) \"\r\n                >\r\n                  <option selected hidden>Select</option>\r\n                  <option *ngFor=\"let j of staff\" [value]=\"j?._id\">{{j?.title}}</option>\r\n                </select>\r\n                <span *ngIf=\" add().controls[filed].get('PersonResponsible')?.hasError('required') && (add().controls[filed].get('PersonResponsible').dirty  || add().controls[filed].get('PersonResponsible').touched) \" class=\"invalid-feedback\" >\r\n                  This Field is Required</span>\r\n              </div>\r\n              <!-- <div class=\"mb-3 col-3\" [class.disableDiv]=\"add().controls[filed].get('complete').value  == 'yes'\">\r\n                <p for=\"exampleFormControlInput1\" class=\"form-Label mt-2\">\r\n                  Person Responsible\r\n                </p>\r\n                <select\r\n                  class=\"form-select form-control col outline form-dropdown\"\r\n                  aria-label=\"Default select example\"\r\n                  formControlName=\"PersonResponsible\"\r\n                >\r\n                  <option selected hidden>Select</option>\r\n                  <option class=\"mr-1\" value=\"yes\">Yes</option>\r\n                  <option class=\"mr-1\" value=\"no\">No</option>\r\n                </select>\r\n              </div> -->\r\n              <div class=\"mb-3 col-2\">\r\n                <p for=\"exampleFormControlInput1\" class=\"form-Label mt-2\">\r\n                  Complete\r\n                </p>\r\n                <select\r\n                  class=\"form-select form-control col outline form-dropdown\"\r\n                  aria-label=\"Default select example\"\r\n                  formControlName=\"complete\"\r\n                  [class.is-invalid]=\" add().controls[filed].get('complete')?.hasError('required') && (add().controls[filed].get('complete').dirty || add().controls[filed].get('complete').touched) \"\r\n                >\r\n                  <option selected hidden>Select</option>\r\n                  <option class=\"mr-1\" value=\"yes\">Yes</option>\r\n                  <option class=\"mr-1\" value=\"no\">No</option>\r\n                </select>\r\n                <span *ngIf=\" add().controls[filed].get('complete')?.hasError('required') && (add().controls[filed].get('complete').dirty  || add().controls[filed].get('complete').touched) \" class=\"invalid-feedback\" >\r\n                  This Field is Required</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <span class=\"material-icons\" (click)=\"addAction()\"\r\n        >add_circle_outline\r\n      </span>\r\n\r\n      <span class=\"material-icons\" (click)=\"removeAction()\">\r\n        remove_circle_outline\r\n      </span>\r\n      <span class=\"material-icons\"> keyboard_arrow_up </span>\r\n      <span class=\"material-icons\"> keyboard_arrow_down </span>\r\n    </div>\r\n    </mat-tab>\r\n  </mat-tab-group>\r\n  <!-- <div class=\"tab-content\" id=\"myTabContent\"> \r\n  </div> -->\r\n  <button class=\"btn btn-outline-primary mt-1\"  type=\"submit\" [disabled]=\"!sidePreview.valid\" (click)=\"onSave()\"  style=\"width: 10rem;\r\n  align-self: center;\">\r\n    Submit\r\n  </button>\r\n</div>\r\n","import { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\n\r\nimport { Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { SetTitleService } from 'src/app/utils/services/set-title.service';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatSort } from '@angular/material/sort';\r\n\r\n@Component({\r\n  selector: 'app-forms',\r\n  templateUrl: './forms.component.html',\r\n  styleUrls: ['./forms.component.scss']\r\n})\r\nexport class FormsComponent implements OnInit {\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  closeResult: string;\r\n  page = 1;\r\n  pageSize = 10;\r\n  collectionSize = 10;\r\n  ELEMENT_DATA = [\r\n    { index: 1, title: 'Hazards Reported', link: ['/admin/forms/hazardRep/'+'form'] },\r\n   \r\n   \r\n    { index: 2, title: 'Notifiable Incidents', link: ['/admin/forms/incidentRep/'+'Form'] },\r\n    { index: 3, title: 'Toolbox Talk', link: ['/admin/forms/toolboxTalk/'+'form'] },\r\n    { index: 4, title: 'Site Inspection', link: ['/admin/forms/siteInspect/'+'form'] },\r\n    { index: 5, title: 'Risk Assessment', link: ['/admin/forms/riskAssessSWMS/'+'form'] }\r\n  ];\r\n  formName = '';\r\n  addForm: FormGroup;\r\n  // formName =[] ;\r\n  displayedColumns: string[] = ['index', 'formName', 'formFrequency', 'Disable/Enable', 'edit'];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort; \r\n  }\r\n\r\n  constructor(\r\n    public dialog: MatDialog,\r\n    private spinner: NgxSpinnerService,\r\n    public router: Router,\r\n    private setTitle: SetTitleService\r\n  ) { }\r\ngoTo(title)\r\n{\r\n  console.log(\"title\",title);\r\n  if(title===\"Toolbox Talk\")\r\n  {\r\n    this.router.navigate([\"/admin/forms/tableData\"]);\r\n  }\r\n  if(title===\"Site Inspection\")\r\n  {\r\n    this.router.navigate([\"/admin/forms/siteinspectiontable\"]);\r\n  }\r\n  if(title===\"Hazards Reported\")\r\n  {\r\n    this.router.navigate([\"/admin/forms/hazardTable\"]);\r\n  \r\n}\r\nif(title===\"Notifiable Incidents\")\r\n  {\r\n    this.router.navigate([\"/admin/forms/incidentsTable\"]);\r\n  }\r\n  if(title===\"Risk Assessment\")\r\n  {\r\n    this.router.navigate([\"/admin/forms/riskAssessTable\"]);\r\n  }\r\n}\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.setTitle.setTitle('WHS-All Form');\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n","<div class=\"col ml-2 pt-3\">\r\n<h1> Forms List</h1>\r\n</div>\r\n<div class=\" \">\r\n  <table mat-table [dataSource]=\"dataSource\" matSort>\r\n\r\n    <!-- Position Column -->\r\n    <ng-container matColumnDef=\"index\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> No. </th>\r\n      <td mat-cell *matCellDef=\"let element\">{{element.index}}</td>\r\n    </ng-container>\r\n\r\n    <!-- Name Column -->\r\n   \r\n<!-- Name Column -->\r\n<ng-container matColumnDef=\"formName\">\r\n  <th mat-header-cell *matHeaderCellDef mat-sort-header> Form Name </th>\r\n  <td mat-cell *matCellDef=\"let element\"> <span class=\"flex-start\">{{element.title}}</span> </td>\r\n</ng-container>\r\n<ng-container matColumnDef=\"formFrequency\">\r\n  <th mat-header-cell *matHeaderCellDef> Form Frequency </th>\r\n  <td mat-cell *matCellDef=\"let element\">   <select\r\n    class=\"form-select form-control \"\r\n    aria-label=\"Default select example\"\r\n  >\r\n    <option value=\"daily\">Daily</option>\r\n    <option value=\"weekly\">Weekly</option>\r\n    <option value=\"weekly\">Monthly</option>\r\n    <option value=\"quaterly\">Quaterly</option>\r\n    <option value=\"halfYearly\">Half yearly</option>\r\n    <option value=\"yearly\">Yearly</option>\r\n    <option value=\"onceOff\">Once Off</option>\r\n  </select></td>\r\n</ng-container>\r\n<ng-container matColumnDef=\"Disable/Enable\">\r\n  <th mat-header-cell *matHeaderCellDef> Disable/Enable </th>\r\n  <td mat-cell *matCellDef=\"let element\">   <mat-slide-toggle color=\"primary\" checked></mat-slide-toggle> </td>\r\n</ng-container>\r\n\r\n <ng-container matColumnDef=\"edit\">\r\n  <th mat-header-cell *matHeaderCellDef> Action </th>\r\n  <td mat-cell *matCellDef=\"let element\" > \r\n    <!-- <i class=\"fa fa-eye \"aria-hidden=\"true\" title=\"view\"></i> -->\r\n    <!-- <a [routerLink]=\"element.link\" mat-icon-button aria-label=\"Example icon button with a delete icon\">\r\n      <mat-icon>visibility</mat-icon>\r\n    </a>\r\n    <a (click)=\"goTo(element.title)\">\r\n      <span style=\"cursor: pointer !important;\">\r\n          <mat-icon >launch</mat-icon>\r\n      </span>\r\n  </a> -->\r\n  <div style=\"display: flex; justify-content: space-around;\">\r\n    <span class=\"material-icons\"  [routerLink]=\"element.link\" style=\"font-size: 26px ;cursor: pointer !important;\">\r\n      add_circle_outline\r\n    </span>\r\n    <span class=\"material-icons\" (click)=\"goTo(element.title)\"  style=\"cursor: pointer !important;\">\r\n      launch\r\n    </span>\r\n    </div>\r\n  </td>\r\n</ng-container>\r\n\r\n\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n  </table>\r\n\r\n  <mat-paginator [pageSizeOptions]=\"[20]\"\r\n                 showFirstLastButtons \r\n                 aria-label=\"Select page of periodic elements\">\r\n  </mat-paginator>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Router } from '@angular/router';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\n\r\n@Component({\r\n  selector: 'app-display-table',\r\n  templateUrl: './display-table.component.html',\r\n  styleUrls: ['./display-table.component.scss']\r\n})\r\nexport class DisplayTableComponent implements OnInit {\r\n  displayedColumns: string[] = ['position','Name',\"Phone\",\"Email\",\"Site\",'Action'];\r\n  showDatas: any;\r\n  tempArray: MatTableDataSource<any>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor(private logicalFormInfo: LogicalFormInfoService,public router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getToolBox();\r\n  }\r\n  ngAfterViewInit() {\r\n    // this.tempArray.paginator = this.paginator;\r\n    // this.tempArray.sort = this.sort; \r\n  }\r\n  delete(id)\r\n  {\r\n    this.logicalFormInfo.deleteToolBox(id).subscribe((res)=>{\r\n      console.log(\"deleted\",res);\r\n      this.getToolBox();\r\n    })\r\n  }\r\n  getToolBox()\r\n  {\r\n    this.logicalFormInfo.gettoolBox().subscribe((res:any)=>\r\n    {\r\n      this.showDatas= res.data;\r\n      this.showDatas.forEach((element,i) => {\r\n        return this.showDatas[i].index= i\r\n      });\r\n      this.tempArray = new MatTableDataSource<any>(this.showDatas);\r\n      this.tempArray.paginator = this.paginator;\r\n      this.tempArray.sort = this.sort; \r\n      console.log(\"get res\",this.showDatas);\r\n    })\r\n  }\r\n  edit(id)\r\n  {\r\n    this.router.navigate([\"/admin/forms/toolboxTalk/\"+id]);\r\n  }\r\n}\r\n","<div class=\"btn btn-outline-primary\" [routerLink]=\"['/admin/forms']\"><i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i></div>\r\n<div class=\"col ml-2 pt-3\">\r\n    <h1> ToolBox Talk List</h1>\r\n    </div>\r\n    <div class=\" \">\r\n      <table mat-table [dataSource]=\"tempArray\" matSort>\r\n    \r\n        <!-- Position Column -->\r\n        <ng-container matColumnDef=\"position\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> No. </th>\r\n          <td mat-cell *matCellDef=\"let element;let i=index\">{{element.index+1}}</td>\r\n        </ng-container>\r\n    \r\n        <!-- Name Column -->\r\n       \r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"Name\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\r\n      <td mat-cell *matCellDef=\"let element\">{{element.customerName}}</td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"Phone\">\r\n      <th mat-header-cell *matHeaderCellDef> Phone</th>\r\n      <td mat-cell *matCellDef=\"let element\">{{element.custConct}}</td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"Email\">\r\n      <th mat-header-cell *matHeaderCellDef>Email</th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.custEmail}} </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"Site\">\r\n        <th mat-header-cell *matHeaderCellDef>Site Name</th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.siteName}} </td>\r\n      </ng-container>\r\n     <ng-container matColumnDef=\"Action\">\r\n      <th mat-header-cell *matHeaderCellDef> Action </th>\r\n      <td mat-cell *matCellDef=\"let element\" > \r\n        <!-- <i class=\"fa fa-eye \"aria-hidden=\"true\" title=\"view\"></i> -->\r\n        <!-- <button [routerLink]=\"element.link\" mat-icon-button aria-label=\"Example icon button with a delete icon\">\r\n          <mat-icon>visibility</mat-icon>\r\n        </button>\r\n        <a (click)=\"goTo(element.title)\">\r\n          <span style=\"cursor: pointer !important;\">\r\n              <mat-icon >launch</mat-icon>\r\n          </span>\r\n      </a> -->\r\n      <div style=\"display: flex; justify-content: space-around;\">\r\n        <span class=\"material-icons\" matTooltip=\"Edit\" (click)=\"edit(element._id)\" >\r\n            edit\r\n        </span>\r\n        <span class=\"material-icons\" matTooltip=\"Delete\" (click)=\"delete(element._id)\"  >\r\n            delete\r\n        </span>\r\n        </div>\r\n      </td>\r\n    </ng-container>\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n      </table>\r\n    \r\n      <mat-paginator [pageSizeOptions]=\"[20]\"\r\n                     showFirstLastButtons \r\n                     aria-label=\"Select page of periodic elements\">\r\n      </mat-paginator>\r\n    </div>\r\n    ","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Router } from '@angular/router';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\n\r\n@Component({\r\n  selector: 'app-risk-assesment-table',\r\n  templateUrl: './risk-assesment-table.component.html',\r\n  styleUrls: ['./risk-assesment-table.component.scss']\r\n})\r\nexport class RiskAssesmentTableComponent implements OnInit {\r\n  displayedColumns: string[] = ['position','Name',\"Phone\",\"Email\",\"Site\",'Action'];\r\n  showDatas: any;\r\n  tempArray: MatTableDataSource <any>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor(private logicalFormInfo: LogicalFormInfoService,public router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getToolBox();\r\n  }\r\n  ngAfterViewInit() {\r\n    // this.tempArray.paginator = this.paginator;\r\n    // this.tempArray.sort = this.sort; \r\n  }\r\n  delete(id)\r\n  {\r\n    this.logicalFormInfo.deleteAssessment(id).subscribe((res)=>{\r\n      console.log(\"deleted\",res);\r\n      this.getToolBox();\r\n    })\r\n  }\r\n  printPage(id)\r\n  {\r\n    console.log(\"check\");\r\n    // this.logicalFormInfo.printing.next('print');\r\n    localStorage.setItem(\"key\",\"print\");\r\n    $(\"<iframe>\")                             // create a new iframe element\r\n        .hide()                               // make it invisible\r\n        .attr(\"src\", \"http://localhost:4200/#/admin/forms/riskAssessSWMS/\"+id) // point the iframe to the page you want to print\r\n        .appendTo(\"body\");                    // add iframe to the DOM to cause it to load the page\r\n\r\n  }\r\n  getToolBox()\r\n  {\r\n    this.logicalFormInfo.getAllassessmet().subscribe((res:any)=>\r\n    {\r\n      this.showDatas= res.data;\r\n      this.showDatas.forEach((element,i) => {\r\n        return this.showDatas[i].index= i\r\n      });\r\n  \r\n      this.tempArray = new MatTableDataSource<any>(this.showDatas);\r\n      this.tempArray.paginator = this.paginator;\r\n      this.tempArray.sort = this.sort; \r\n      console.log(\"get res\",this.showDatas);\r\n    })\r\n  }\r\n  edit(id)\r\n  {\r\n    localStorage.setItem('key',' ');\r\n    this.router.navigate([\"/admin/forms/riskAssessSWMS/\"+id]);\r\n  }\r\n}\r\n","<div class=\"btn btn-outline-primary\" [routerLink]=\"['/admin/forms']\"><i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i></div>\r\n<div class=\"col ml-2 pt-3\">\r\n    <h1> Risk Assessment Table</h1>\r\n    </div>\r\n    <div class=\" \">\r\n      <table mat-table [dataSource]=\"tempArray\" matSort>\r\n    \r\n        <!-- Position Column -->\r\n        <ng-container matColumnDef=\"position\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> No. </th>\r\n          <td mat-cell *matCellDef=\"let element;let i=index\">{{element.index+1}}</td>\r\n        </ng-container>\r\n    \r\n        <!-- Name Column -->\r\n       \r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"Name\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\r\n      <td mat-cell *matCellDef=\"let element\">{{element.customerName}}</td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"Phone\">\r\n      <th mat-header-cell *matHeaderCellDef> Phone</th>\r\n      <td mat-cell *matCellDef=\"let element\">{{element.custConct}}</td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"Email\">\r\n      <th mat-header-cell *matHeaderCellDef>Email</th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.custEmail}} </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"Site\">\r\n        <th mat-header-cell *matHeaderCellDef>Site Name</th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.siteName}} </td>\r\n      </ng-container>\r\n     <ng-container matColumnDef=\"Action\">\r\n      <th mat-header-cell *matHeaderCellDef> Action </th>\r\n      <td mat-cell *matCellDef=\"let element\" > \r\n        <!-- <i class=\"fa fa-eye \"aria-hidden=\"true\" title=\"view\"></i> -->\r\n        <!-- <button [routerLink]=\"element.link\" mat-icon-button aria-label=\"Example icon button with a delete icon\">\r\n          <mat-icon>visibility</mat-icon>\r\n        </button>\r\n        <a (click)=\"goTo(element.title)\">\r\n          <span style=\"cursor: pointer !important;\">\r\n              <mat-icon >launch</mat-icon>\r\n          </span>\r\n      </a> -->\r\n      <div style=\"display: flex; justify-content: space-around;\">\r\n        <span class=\"material-icons\" matTooltip=\"Edit\" (click)=\"edit(element._id)\" >\r\n            edit\r\n        </span>\r\n        <span class=\"material-icons\" matTooltip=\"print\" (click)=\"printPage(element._id)\" >\r\n          print\r\n      </span>\r\n        <span class=\"material-icons\" matTooltip=\"Delete\" (click)=\"delete(element._id)\" >\r\n            delete\r\n        </span>\r\n        </div>\r\n      </td>\r\n    </ng-container>\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n      </table>\r\n    \r\n      <mat-paginator [pageSizeOptions]=\"[20]\"\r\n                     showFirstLastButtons \r\n                     aria-label=\"Select page of periodic elements\">\r\n      </mat-paginator>\r\n    </div>\r\n    ","<div class=\"btn btn-outline-primary\" *ngIf=\"id ==='form'\" [routerLink]=\"['/admin/forms']\"><i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i></div>\r\n<div class=\"btn btn-outline-primary\" *ngIf=\"id!=='form'\" [routerLink]=\"['/admin/forms/riskAssessTable']\"><i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i></div>\r\n\r\n\r\n<div id='section-to-print' *ngIf=\"check=='print'\" class=\"page-header\" style=\"text-align: center\">\r\n  I'm The Header\r\n</div>\r\n<div *ngIf=\"check=='print'\" class=\"page-footer\">\r\n  I'm The Footer\r\n</div>\r\n<div id='section-to-print' class=\"container card px-4 py-4\" [formGroup]=\"riskAssessmentFb\">\r\n  <h2 class=\"text-center pt-3\">\r\n    <p class=\"title\">Risk Assessment </p>\r\n  </h2>\r\n\r\n  <!-- <ul class=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\r\n    <li class=\"nav-item\" role=\"presentation\">\r\n      <button\r\n        [ngClass]=\"\r\n          RiskAssessment === true ? 'nav-link active' : 'nav-link outline myBtn'\r\n        \"\r\n        id=\"RISKAssessment-tab\"\r\n        data-bs-toggle=\"tab\"\r\n        data-bs-target=\"#RISKAssessment\"\r\n        type=\"button\"\r\n        role=\"tab\"\r\n        aria-controls=\"RISKAssessment\"\r\n        (click)=\"showsite()\"\r\n        aria-selected=\"true\"\r\n      >\r\n        RISK Assessment\r\n      </button>\r\n    </li>\r\n    <li class=\"nav-item\" role=\"presentation\">\r\n      <button\r\n        [ngClass]=\"\r\n          SWMSShow === true ? 'nav-link active' : 'nav-link outline myBtn'\r\n        \"\r\n        id=\"SWSS-tab\"\r\n        data-bs-toggle=\"tab\"\r\n        data-bs-target=\"#SWSS\"\r\n        type=\"button\"\r\n        role=\"tab\"\r\n        aria-controls=\"siteAction\"\r\n        (click)=\"showAction()\"\r\n        aria-selected=\"false\"\r\n      >\r\n        SWMS\r\n      </button>\r\n    </li>\r\n  </ul> -->\r\n  <mat-tab-group *ngIf=\"check!='print'\">\r\n    <mat-tab label=\"Risk Assessment\"> \r\n      <div class=\"tab-content\" id=\"myTabContent\">\r\n        <div\r\n          class=\"tab-pane fade show active px-4 py-4\"\r\n          id=\"RISKAssessment\"\r\n          role=\"tabpanel\"\r\n          aria-labelledby=\"RISKAssessment-tab\"\r\n        >\r\n          <h2>Site Information</h2>\r\n          <div>\r\n            <div class=\"row\">\r\n              <div class=\"my-3 col\">\r\n                <label class=\"form-label\"\r\n                  >Site Name</label\r\n                >\r\n                <!-- <select\r\n                  class=\"form-select form-control col\"\r\n                  id=\"siteName\"\r\n                  aria-label=\"Default select example\"\r\n                >\r\n                  <option selected hidden>Select</option>\r\n                </select> -->\r\n                <input type=\"text\" class=\"form-control col\" formControlName=\"siteName\" [value]= \"siteControls.siteName.value\"\r\n                \r\n            [class.is-invalid]=\"riskAssessmentFb.get('siteName')?.hasError('required') \r\n            && (riskAssessmentFb.get('siteName').dirty || riskAssessmentFb.get('siteName').touched) \" >\r\n            <span\r\n            *ngIf=\"\r\n            riskAssessmentFb.get('siteName')?.hasError('required') && (riskAssessmentFb.get('siteName').dirty \r\n            || riskAssessmentFb.get('siteName').touched) \"  class=\"invalid-feedback\"\r\n            \r\n          >\r\n         Site  Name is Required</span\r\n          >    \r\n          </div>\r\n              <div class=\"my-3 col\">\r\n                <label class=\"form-label\"\r\n                  >Customer Name</label\r\n                >\r\n                <!-- <select\r\n                  class=\"form-select form-control col\"\r\n                  id=\"CustomerName\"\r\n                  aria-label=\"Default select example\"\r\n                >\r\n                  <option selected hidden>Select</option>\r\n                </select> -->\r\n                <input type=\"text\" class=\"form-control col\" formControlName=\"customerName\" [value]= \"siteControls.customerName.value\"\r\n                [class.is-invalid]=\"riskAssessmentFb.get('customerName')?.hasError('required') \r\n                && (riskAssessmentFb.get('customerName').dirty || riskAssessmentFb.get('customerName').touched) \" >\r\n                <span\r\n                *ngIf=\"\r\n                riskAssessmentFb.get('customerName')?.hasError('required') && (riskAssessmentFb.get('customerName').dirty \r\n                || riskAssessmentFb.get('customerName').touched) \"  class=\"invalid-feedback\">\r\n                customer Name is Required \r\n              </span> \r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"my-3 col-2\">\r\n                <label class=\"form-label\"\r\n                  >Street Number</label\r\n                >\r\n                <!-- <select\r\n                  class=\"form-select form-control col\"\r\n                  id=\"StreetNumber\"\r\n                  aria-label=\"Default select example\"\r\n                >\r\n                  <option selected hidden>Select</option>\r\n                </select> -->\r\n                <input type=\"text\" class=\"form-control col\" formControlName=\"streetNo\" [value]= \"siteControls.streetNo.value\"\r\n                [class.is-invalid]=\"riskAssessmentFb.get('streetNo')?.hasError('required') \r\n                && (riskAssessmentFb.get('streetNo').dirty || riskAssessmentFb.get('streetNo').touched) \" >\r\n                <span\r\n                *ngIf=\"\r\n                riskAssessmentFb.get('streetNo')?.hasError('required') && (riskAssessmentFb.get('streetNo').dirty \r\n                || riskAssessmentFb.get('streetNo').touched) \"  class=\"invalid-feedback\">\r\n                street Number is Required \r\n              </span> \r\n              </div>\r\n              <div class=\"my-3 col-4\">\r\n                <label class=\"form-label\"\r\n                  >Street Address</label\r\n                >\r\n                <!-- <select\r\n                  class=\"form-select form-control col\"\r\n                  id=\"StreetAddress\"\r\n                  aria-label=\"Default select example\"\r\n                >\r\n                  <option selected hidden>Select</option>\r\n                </select> -->\r\n                <input type=\"text\" class=\"form-control col\" formControlName=\"streetAddr\" [value]= \"siteControls.streetAddr.value\"\r\n                [class.is-invalid]=\"riskAssessmentFb.get('streetAddr')?.hasError('required') \r\n                && (riskAssessmentFb.get('streetAddr').dirty || riskAssessmentFb.get('streetAddr').touched) \" >\r\n                <span\r\n                *ngIf=\"\r\n                riskAssessmentFb.get('streetAddr')?.hasError('required') && (riskAssessmentFb.get('streetAddr').dirty \r\n                || riskAssessmentFb.get('streetAddr').touched) \"  class=\"invalid-feedback\">\r\n                Street Address is Required \r\n              </span> \r\n              </div>\r\n              <div class=\"my-3 col-4\">\r\n                <label class=\"form-label\"\r\n                  >Suburb</label\r\n                >\r\n                <!-- <select\r\n                  class=\"form-select form-control col\"\r\n                  id=\"Suburb\"\r\n                  aria-label=\"Default select example\"\r\n                >\r\n                  <option selected hidden>Select</option>\r\n                </select> -->\r\n                <input type=\"text\" class=\"form-control col\" formControlName=\"suburb\"\r\n                [class.is-invalid]=\"riskAssessmentFb.get('suburb')?.hasError('required') \r\n                && (riskAssessmentFb.get('suburb').dirty || riskAssessmentFb.get('suburb').touched) \" >\r\n                <span\r\n                *ngIf=\"\r\n                riskAssessmentFb.get('suburb')?.hasError('required') && (riskAssessmentFb.get('suburb').dirty \r\n                || riskAssessmentFb.get('suburb').touched) \"  class=\"invalid-feedback\">\r\n                Suburb  is Required \r\n              </span> \r\n              </div>\r\n              <div class=\"my-3 col-2\">\r\n                <label class=\"form-label\"\r\n                  >State</label\r\n                >\r\n                <select\r\n                class=\"form-select form-control col\"\r\n                aria-label=\"Default select example\"\r\n                formControlName=\"statesSWMS\"\r\n                [value]= \"siteControls.statesSWMS.value\"\r\n                [class.is-invalid]=\"riskAssessmentFb.get('statesSWMS')?.hasError('required') \r\n                && (riskAssessmentFb.get('statesSWMS').dirty || riskAssessmentFb.get('statesSWMS').touched) \" >\r\n               \r\n              <option selected hidden>Select</option>\r\n              <option [value]=\"state._id\" *ngFor=\"let state of states\">{{state.title}}</option>\r\n                <!-- <option selected hidden>Select</option>\r\n                <option value=\"NSW\">NSW</option>\r\n                <option value=\"ACT\">ACT</option>\r\n                <option value=\"QLD\">QLD</option>\r\n                <option value=\"NT\">NT</option>\r\n                <option value=\"SA\">SA</option>\r\n                <option value=\"NZ\">NZ</option>\r\n                <option value=\"TAS\">TAS</option>s\r\n                <option value=\"VIC\">VIC</option>\r\n                <option value=\"WA\">WA</option> -->\r\n              </select>\r\n              <span\r\n              *ngIf=\"\r\n              riskAssessmentFb.get('statesSWMS')?.hasError('required') && (riskAssessmentFb.get('statesSWMS').dirty \r\n              || riskAssessmentFb.get('statesSWMS').touched) \"  class=\"invalid-feedback\">\r\n              Suburb  is Required \r\n            </span> \r\n              </div>\r\n            </div>\r\n    \r\n            <div class=\"row\">\r\n              <div class=\"my-3 col\">\r\n                <label class=\"form-label\"\r\n                  >Customer Contact</label\r\n                >\r\n                <!-- <select\r\n                  class=\"form-select form-control col\"\r\n                  id=\"CustomerContact\"\r\n                  aria-label=\"Default select example\"\r\n                >\r\n                  <option selected hidden>Select</option>\r\n                </select> -->\r\n                <input type=\"text\" class=\"form-control col\" formControlName=\"custConct\" [value]= \"siteControls.custConct.value\"\r\n                [class.is-invalid]=\"riskAssessmentFb.get('custConct')?.hasError('required') \r\n                && (riskAssessmentFb.get('custConct').dirty || riskAssessmentFb.get('custConct').touched) \" >\r\n                <span\r\n                *ngIf=\"\r\n                riskAssessmentFb.get('custConct')?.hasError('required') && (riskAssessmentFb.get('custConct').dirty \r\n                || riskAssessmentFb.get('custConct').touched) \" class=\"invalid-feedback\">\r\n                Customer Contact Number is Required \r\n              </span> \r\n\r\n              </div>\r\n              <div class=\"my-3 col\">\r\n                <label class=\"form-label\"\r\n                  >Customer Contact Phone</label\r\n                >\r\n                <!-- <select\r\n                  class=\"form-select form-control col\"\r\n                  id=\"CustomerContactPhone\"\r\n                  aria-label=\"Default select example\"\r\n                >\r\n                  <option selected hidden>Select</option>\r\n                </select> -->\r\n                <input type=\"text\" class=\"form-control col\" formControlName=\"custConctPh\" [value]= \"siteControls.custConctPh.value\"\r\n                [class.is-invalid]=\"riskAssessmentFb.get('custConctPh')?.hasError('required') \r\n                && (riskAssessmentFb.get('custConctPh').dirty || riskAssessmentFb.get('custConctPh').touched) \" >\r\n                <span\r\n                *ngIf=\"\r\n                riskAssessmentFb.get('custConctPh')?.hasError('required') && (riskAssessmentFb.get('custConctPh').dirty \r\n                || riskAssessmentFb.get('custConctPh').touched) \"  class=\"invalid-feedback\">\r\n                Customer Contact Number is Required \r\n              </span> \r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"my-3 col-4\">\r\n                <label class=\"form-label\"\r\n                  >Customer Email</label\r\n                >\r\n                <!-- <select\r\n                  class=\"form-select form-control col\"\r\n                  id=\"CustomerEmail\"\r\n                  aria-label=\"Default select example\"\r\n                >\r\n                  <option selected hidden>Select</option>\r\n                </select> -->\r\n                <input type=\"text\" class=\"form-control col\" formControlName=\"custEmail\" [value]= \"siteControls.custEmail.value\"\r\n                [class.is-invalid]=\"riskAssessmentFb.get('custEmail')?.hasError('required') \r\n                && (riskAssessmentFb.get('custEmail').dirty || riskAssessmentFb.get('custEmail').touched) \" >\r\n                <span\r\n                *ngIf=\"\r\n                riskAssessmentFb.get('custEmail')?.hasError('required') && (riskAssessmentFb.get('custEmail').dirty \r\n                || riskAssessmentFb.get('custEmail').touched) \"  class=\"invalid-feedback\">\r\n                Email is Required \r\n              </span> \r\n\r\n              </div>\r\n              <div class=\"my-3 col-2\">\r\n                <label class=\"form-label\"\r\n                  >Job Number</label\r\n                >    \r\n                <select\r\n                class=\"form-select form-control col\"\r\n                aria-label=\"Default select example\"\r\n                formControlName=\"jobNumber\"\r\n                (change)=\"jobNoSel()\"\r\n                [class.is-invalid]=\"riskAssessmentFb.get('jobNumber')?.hasError('required') \r\n                && (riskAssessmentFb.get('jobNumber').dirty || riskAssessmentFb.get('jobNumber').touched) \" >\r\n               \r\n                <option selected hidden>Select</option>\r\n                <option [value]=\"jobNo._id\" *ngFor=\"let jobNo of allJobNumbers\">{{jobNo.jobNumber}}</option>\r\n              \r\n              </select>\r\n              <span\r\n              *ngIf=\"\r\n              riskAssessmentFb.get('jobNumber')?.hasError('required') && (riskAssessmentFb.get('jobNumber').dirty \r\n              || riskAssessmentFb.get('jobNumber').touched) \"  class=\"invalid-feedback\">\r\n              Job Number  is Required \r\n            </span> \r\n              </div>\r\n              <div class=\"my-3 col-6\">\r\n                <label class=\"form-label\"\r\n                  >Project Manager</label\r\n                >\r\n                <select\r\n                  class=\"form-select form-control col\"\r\n                  aria-label=\"Default select example\"\r\n                  formControlName=\"projectManager\"\r\n                  (change)=\"setProjectManager('projectManager',$event)\"\r\n                  [class.is-invalid]=\"riskAssessmentFb.get('projectManager')?.hasError('required') \r\n                  && (riskAssessmentFb.get('projectManager').dirty || riskAssessmentFb.get('projectManager').touched) \" >\r\n                 \r\n                  <option selected hidden>Select</option>\r\n                  <option [value]=\"mang._id\" *ngFor=\"let mang of projectMang\">{{mang.title}}</option>\r\n                \r\n                </select>\r\n                <span\r\n                *ngIf=\"\r\n                riskAssessmentFb.get('projectManager')?.hasError('required') && (riskAssessmentFb.get('projectManager').dirty \r\n                || riskAssessmentFb.get('projectManager').touched) \"  class=\"invalid-feedback\">\r\n                Project Manager  is Required \r\n              </span> \r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"my-3 col-4\">\r\n                <label class=\"form-label\"\r\n                  >Date</label\r\n                >\r\n                <!-- <input type=\"date\" class=\"form-control\" formControlName=\"date\" /> -->\r\n                <input  matInput  [matDatepicker]=\"datepicker2\"\r\n            class=\"form-control\"\r\n            formControlName=\"date\"\r\n            [value]=\"maxDate\"\r\n            placeholder=\"dd-mm-yyyy\" readonly>\r\n            <mat-datepicker-toggle matSuffix [for]=\"datepicker2\" [disabled]=\"true\"></mat-datepicker-toggle>\r\n            <mat-datepicker #datepicker2 ></mat-datepicker>\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <div class=\"mt-4\">\r\n              <h2>Job Tasks</h2>\r\n            </div>\r\n    \r\n            <div class=\"row\" formArrayName=\"jobTask\">\r\n              <ng-container  *ngFor=\"let control of jobtask().controls; let i = index\" [formGroupName]=\"i\">\r\n                <div\r\n                 \r\n                  class=\"mt-2 col-4\"\r\n                >\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    [id]=\"i+'jt'\"\r\n                    class=\"form-check-input\"\r\n                    [value]=\"jobTaskData[i]._id\"\r\n                    (change)=\"onJobtaskSelect($event, jobTaskData[i])\"\r\n                    formControlName=\"{{jobTaskData[i]._id}}\">\r\n                   \r\n                  <label [for]=\"i+'jt'\" class=\"form-check-label label_2\">{{\r\n                    jobTaskData[i].title\r\n                  }}</label>\r\n                 \r\n                </div>\r\n              </ng-container>\r\n            </div>\r\n    \r\n            <hr />\r\n            <div class=\"row mt-4\">\r\n              <table class=\"table table-bordered text-center\">\r\n                <thead>\r\n                  <tr>\r\n                    <th colspan=\"7\" class=\"L_1\">Risk Level Matrix</th>\r\n                    <th colspan=\"8\" class=\"L_1\">Risk Analysis</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr>\r\n                    <th colspan=\"2\" rowspan=\"2\"></th>\r\n                    <td colspan=\"5\">Consequence</td>\r\n                    <td colspan=\"4\" rowspan=\"2\">\r\n                      <div class=\"like_2\">Likelihood</div>\r\n                    </td>\r\n                    <td colspan=\"4\" rowspan=\"2\">\r\n                      <div class=\"like_2\">Consequence</div>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th>1</th>\r\n                    <td>2</td>\r\n                    <td>3</td>\r\n                    <td>4</td>\r\n                    <td>5</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th rowspan=\"5\">\r\n                      <div class=\"like_1\">Likelihood</div>\r\n                    </th>\r\n                    <td>5</td>\r\n                    <td class=\"M_1\">M</td>\r\n                    <td class=\"H_1\">H</td>\r\n                    <td class=\"H_1\">H</td>\r\n                    <td class=\"H_1\">H</td>\r\n                    <td class=\"H_1\">H</td>\r\n                    <td colspan=\"2\">\r\n                      <div class=\"space_1\">1</div>\r\n                    </td>\r\n                    <td colspan=\"2\">Rare</td>\r\n                    <td colspan=\"2\">\r\n                      <div class=\"space_1\">1</div>\r\n                    </td>\r\n                    <td colspan=\"2\">Insignificant</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th>4</th>\r\n                    <td class=\"M_1\">M</td>\r\n                    <td class=\"M_1\">M</td>\r\n                    <td class=\"M_1\">M</td>\r\n                    <td class=\"H_1\">H</td>\r\n                    <td class=\"H_1\">H</td>\r\n                    <td colspan=\"2\">2</td>\r\n                    <td colspan=\"2\">Unlikely</td>\r\n                    <td colspan=\"2\">2</td>\r\n                    <td colspan=\"2\">Minor</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th>3</th>\r\n                    <td class=\"L_1\">L</td>\r\n                    <td class=\"M_1\">M</td>\r\n                    <td class=\"M_1\">M</td>\r\n                    <td class=\"H_1\">H</td>\r\n                    <td class=\"H_1\">H</td>\r\n                    <td colspan=\"2\">3</td>\r\n                    <td colspan=\"2\">Moderate</td>\r\n                    <td colspan=\"2\">3</td>\r\n                    <td colspan=\"2\">Moderate</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th scope=\"col\">2</th>\r\n                    <td class=\"L_1\">L</td>\r\n                    <td class=\"L_1\">L</td>\r\n                    <td class=\"M_1\">M</td>\r\n                    <td class=\"M_1\">M</td>\r\n                    <td class=\"H_1\">H</td>\r\n                    <td colspan=\"2\">4</td>\r\n                    <td colspan=\"2\">Likely</td>\r\n                    <td colspan=\"2\">4</td>\r\n                    <td colspan=\"2\">Major</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th scope=\"col\">1</th>\r\n                    <td class=\"L_1\">L</td>\r\n                    <td class=\"L_1\">L</td>\r\n                    <td class=\"L_1\">L</td>\r\n                    <td class=\"M_1\">M</td>\r\n                    <td class=\"M_1\">M</td>\r\n                    <td colspan=\"2\" class=\"mr-2 ml-2\">5</td>\r\n                    <td colspan=\"2\">Almost Certain</td>\r\n                    <td colspan=\"2\">5</td>\r\n                    <td colspan=\"2\">Catastrophic</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <hr />\r\n    \r\n            <div class=\"mt-4 page\">\r\n              <h2>High Risk Construction</h2>\r\n            </div>\r\n    \r\n            <div class=\"row\" formArrayName=\"riskConstruction\">\r\n              <div\r\n                *ngFor=\"let control of riskConstruct().controls; let i = index\" [formGroupName]=\"i\"\r\n                class=\"mt-2 col-4\"\r\n              >\r\n                <input\r\n                  type=\"checkbox\" \r\n                  [id]=\"i+'hrc'\"\r\n                  class=\"form-check-input\"\r\n                  formControlName=\"{{highRiskConstruction[i]._id}}\"\r\n                  (change)=\"onRiskChange($event,highRiskConstruction[i]._id,i)\"\r\n                  value=\"Working in or near trenches or shafts deeper than 1.5metres\"\r\n                  [checked]=\"riskArr[i]\"\r\n                />\r\n                <label  [for]=\"i+'hrc'\" class=\"form-check-label label_2\">{{\r\n                  highRiskConstruction[i].title\r\n                }}</label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          <div class=\"mt-4\">\r\n            <h2>PPE Selection</h2>\r\n          </div>\r\n    \r\n          <div class=\"row\" formArrayName=\"PPEselection\">\r\n            <div\r\n            *ngFor=\"let control of ppe().controls; let i = index\" [formGroupName]=\"i\"\r\n              class=\"mt-2 col-4\"\r\n            >\r\n              <input\r\n                type=\"checkbox\"\r\n                [id]=\"i+'ppes'\"\r\n                class=\"form-check-input\"\r\n                value=\"Disposable dust mask\"\r\n                (change)=\"onPPEChange($event,PPEselection[i]._id,i)\"\r\n                formControlName=\"{{PPEselection[i]._id}}\"\r\n                [checked]=\"ppeArr[i]\"\r\n              />\r\n              <label class=\"form-check-label label_2\"  [for]=\"i+'ppes'\">{{\r\n                PPEselection[i].title\r\n              }}</label>\r\n            </div>\r\n          </div>\r\n    \r\n          <hr />\r\n    \r\n          <div class=\"mt-4\">\r\n            <h2>Licence and Qualifications</h2>\r\n          </div>\r\n    \r\n          <div class=\"row\" formArrayName=\"licence\">\r\n            <div\r\n            *ngFor=\"let control of Licence().controls; let i = index\" [formGroupName]=\"i\"\r\n              class=\"mt-2 col-4\"\r\n            >\r\n              <input\r\n                type=\"checkbox\"\r\n                [id]=\"i+'l&q'\"\r\n                class=\"form-check-input\"\r\n                value=\"Open Cable Licence\"\r\n                (change)=\"onLicenseChange($event,licenseAndQualification[i]._id,i)\"\r\n                formControlName=\"{{licenseAndQualification[i]._id}}\"\r\n                [checked]=\"licenceArr[i]\"\r\n              />\r\n              <label class=\"form-check-label label_2\"  [for]=\"i+'l&q'\">{{\r\n                licenseAndQualification[i].title\r\n              }}</label>\r\n            </div>\r\n          </div>\r\n    \r\n          <hr />\r\n          <h2>\r\n            Toolbox this document with all workers and contractors on sit & sign off\r\n          </h2>\r\n    \r\n          <div class=\"row\">\r\n            <div class=\"col-4\">\r\n              <label class=\"form-label\"\r\n                >Employee 1</label\r\n              >\r\n              <p>\r\n                <input\r\n                  type=\"input\"\r\n                  class=\"mr-1 form-control\"\r\n                  value=\"\"\r\n                  formControlName=\"employee1\"\r\n                  [class.is-invalid]=\"riskAssessmentFb.get('employee1')?.hasError('required') \r\n                  && (riskAssessmentFb.get('employee1').dirty || riskAssessmentFb.get('employee1').touched) \" >\r\n                  <span\r\n                  *ngIf=\"\r\n                  riskAssessmentFb.get('employee1')?.hasError('required') && (riskAssessmentFb.get('employee1').dirty \r\n                  || riskAssessmentFb.get('employee1').touched) \"  class=\"invalid-feedback\">\r\n                  Employee Name is Required \r\n                </span>\r\n              </p>\r\n            </div>\r\n            <div class=\"col-4\">\r\n              <label class=\"form-label\"\r\n                >Signature</label\r\n              >\r\n              <div class=\"sign\" #signaturePad1Div>\r\n                <signature-pad\r\n                  [options]=\"signaturePadOptions1\"\r\n                  (onBeginEvent)=\"drawStart1()\"\r\n                  (onEndEvent)=\"drawComplete1()\"\r\n                  #Signature1\r\n                  [class.is-invalid]=\"singRequired\"\r\n                ></signature-pad>\r\n                <span\r\n                *ngIf=\"singRequired\"\r\n                class=\"invalid-feedback\"\r\n              >\r\n              This Field is Required</span\r\n              >\r\n              </div>\r\n              <button class=\"btn btn-outline-primary mt-1\" (click)=\"clear1()\">\r\n                Clear\r\n              </button>\r\n            </div>\r\n            <div class=\"col-3\">\r\n              <label class=\"form-label\"\r\n                >Date</label\r\n              >\r\n              <p>\r\n                <!-- <input\r\n                  type=\"date\"\r\n                  class=\"mr-1 form-control\"\r\n                  value=\"\"\r\n                  formControlName=\"dateTime\"/> -->\r\n                  <input  matInput  [matDatepicker]=\"datepicker3\" [max]=\"maxDate\" \r\n                  class=\"mr-1 form-control\"\r\n                  formControlName=\"dateTime\"\r\n                  (dateChange)=\"getDate( $event)\"\r\n                  \r\n                  [class.is-invalid]=\"riskAssessmentFb.get('dateTime')?.hasError('required') \r\n                  && (riskAssessmentFb.get('dateTime').dirty || riskAssessmentFb.get('dateTime').touched) \"\r\n                  placeholder=\"dd-mm-yyyy\">\r\n                  <mat-datepicker-toggle matSuffix [for]=\"datepicker3\"></mat-datepicker-toggle>\r\n                  <mat-datepicker #datepicker3 ></mat-datepicker>\r\n                  <span\r\n                  *ngIf=\"\r\n                  riskAssessmentFb.get('dateTime')?.hasError('required') && (riskAssessmentFb.get('dateTime').dirty \r\n                  || riskAssessmentFb.get('dateTime').touched) \"\r\n                  class=\"invalid-feedback\"\r\n                >\r\n                Date is Required</span\r\n                >\r\n               \r\n                  <label class=\"form-label mt-1 mb-0\"\r\n                >Time</label>\r\n                <input [ngxMatTimepicker]=\"timepicker\" format=\"24\" [value]=\"setTime\" class=\"form-control\" />\r\n          <ngx-mat-timepicker  #timepicker (timeSet)=\"getTime($event,timepicker)\" ></ngx-mat-timepicker>\r\n          <!-- <span *ngIf=\" IncidentReport.get('timeOfTheIncident')?.hasError('required') && (IncidentReport.get('timeOfTheIncident').dirty  || IncidentReport.get('timeOfTheIncident').touched) \" class=\"invalid-feedback\" >\r\n            Select Time is Required</span> -->\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </mat-tab>\r\n    <mat-tab label=\"SWMS\">\r\n      <div\r\n    class=\"tab-pane fade show active\"\r\n    id=\"SWSS\"\r\n    role=\"tabpanel\"\r\n    aria-labelledby=\"SWSS-tab\"\r\n  >\r\n    <!--SWMS Forms-->\r\n    <div class=\"container content-center\">\r\n      <div class=\"px-4 py-4\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-6\">\r\n            <div class=\"my-3\">\r\n              <label class=\"form-label\"\r\n                >Site Name</label\r\n              >\r\n              <input\r\n                type=\"fullname\"\r\n                class=\"form-control\"\r\n                aria-describedby=\"emailHelp\"\r\n                formControlName=\"siteName\"  [value]= \"siteControls.siteName.value\"\r\n                [class.is-invalid]=\"riskAssessmentFb.get('siteName')?.hasError('required') \r\n                && (riskAssessmentFb.get('siteName').dirty || riskAssessmentFb.get('siteName').touched) \" />\r\n                <span\r\n                *ngIf=\"\r\n                riskAssessmentFb.get('siteName')?.hasError('required') && (riskAssessmentFb.get('siteName').dirty \r\n                || riskAssessmentFb.get('siteName').touched) \"  class=\"invalid-feedback\"\r\n                \r\n              >\r\n             Site  Name is Required</span\r\n              > \r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-6\">\r\n            <div class=\"my-3\">\r\n              <label class=\"form-label\"\r\n                >Customer Name</label\r\n              >\r\n              <input\r\n                type=\"surname\"\r\n                class=\"form-control\"\r\n                aria-describedby=\"emailHelp\"\r\n                formControlName=\"customerName\"\r\n                [value]= \"siteControls.customerName.value\"\r\n                [class.is-invalid]=\"riskAssessmentFb.get('customerName')?.hasError('required') \r\n                && (riskAssessmentFb.get('customerName').dirty || riskAssessmentFb.get('customerName').touched) \" >\r\n                <span\r\n                *ngIf=\"\r\n                riskAssessmentFb.get('customerName')?.hasError('required') && (riskAssessmentFb.get('customerName').dirty \r\n                || riskAssessmentFb.get('customerName').touched) \"  class=\"invalid-feedback\">\r\n                customer Name is Required \r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-2\">\r\n            <div class=\"my-3\">\r\n              <label class=\"form-label\"\r\n                >Street Number</label\r\n              >\r\n              <input\r\n                type=\"number\"\r\n                class=\"form-control\"\r\n                aria-describedby=\"emailHelp\"\r\n                formControlName=\"streetNo\"\r\n                [value]= \"siteControls.streetNo.value\"\r\n                [class.is-invalid]=\"riskAssessmentFb.get('streetNo')?.hasError('required') \r\n                && (riskAssessmentFb.get('streetNo').dirty || riskAssessmentFb.get('streetNo').touched) \" >\r\n                <span\r\n                *ngIf=\"\r\n                riskAssessmentFb.get('streetNo')?.hasError('required') && (riskAssessmentFb.get('streetNo').dirty \r\n                || riskAssessmentFb.get('streetNo').touched) \"  class=\"invalid-feedback\">\r\n                street Number is Required \r\n              </span> \r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-4\">\r\n            <div class=\"my-3\">\r\n              <label class=\"form-label\"\r\n                >Street Name</label\r\n              >\r\n              <input\r\n                type=\"email\"\r\n                class=\"form-control\"\r\n                aria-describedby=\"emailHelp\"\r\n                formControlName=\"streetAddr\"\r\n                [value]= \"siteControls.streetAddr.value\"\r\n                [class.is-invalid]=\"riskAssessmentFb.get('streetAddr')?.hasError('required') \r\n                && (riskAssessmentFb.get('streetAddr').dirty || riskAssessmentFb.get('streetAddr').touched) \" >\r\n                <span\r\n                *ngIf=\"\r\n                riskAssessmentFb.get('streetAddr')?.hasError('required') && (riskAssessmentFb.get('streetAddr').dirty \r\n                || riskAssessmentFb.get('streetAddr').touched) \"  class=\"invalid-feedback\">\r\n                Street Name is Required \r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-4\">\r\n            <div class=\"my-3\">\r\n              <label class=\"form-label\">Town/City</label>\r\n              <input\r\n                type=\"department\"\r\n                class=\"form-control\"\r\n                aria-describedby=\"emailHelp\"\r\n                formControlName=\"town\"\r\n                [class.is-invalid]=\"riskAssessmentFb.get('town')?.hasError('required') \r\n                && (riskAssessmentFb.get('town').dirty || riskAssessmentFb.get('town').touched) \" >\r\n                <span\r\n                *ngIf=\"\r\n                riskAssessmentFb.get('town')?.hasError('required') && (riskAssessmentFb.get('town').dirty \r\n                || riskAssessmentFb.get('town').touched) \"  class=\"invalid-feedback\">\r\n                Town/City is Required \r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-2\">\r\n            <div class=\"my-3\">\r\n              <label class=\"form-label\">State</label>\r\n              <select\r\n                class=\"form-select form-control col\"\r\n                aria-label=\"Default select example\"\r\n                formControlName=\"statesSWMS\"\r\n                [value]= \"siteControls.statesSWMS.value\"\r\n                [class.is-invalid]=\"riskAssessmentFb.get('statesSWMS')?.hasError('required') \r\n                && (riskAssessmentFb.get('statesSWMS').dirty || riskAssessmentFb.get('statesSWMS').touched) \" >\r\n               \r\n                <option selected hidden>Select</option>\r\n                <option [value]=\"state._id\" *ngFor=\"let state of states\">{{state.title}}</option>\r\n              </select>\r\n              <span\r\n              *ngIf=\"\r\n              riskAssessmentFb.get('statesSWMS')?.hasError('required') && (riskAssessmentFb.get('statesSWMS').dirty \r\n              || riskAssessmentFb.get('statesSWMS').touched) \"  class=\"invalid-feedback\">\r\n              State is Required \r\n            </span>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-6\">\r\n            <div class=\"my-3\">\r\n              <label class=\"form-label\"\r\n                >Customer Contact</label\r\n              >\r\n              <input\r\n                type=\"Projectnumber\"\r\n                class=\"form-control\"\r\n                aria-describedby=\"emailHelp\"\r\n                formControlName=\"custConct\"\r\n                [value]= \"siteControls.custConct.value\"\r\n                [class.is-invalid]=\"riskAssessmentFb.get('custConct')?.hasError('required') \r\n                && (riskAssessmentFb.get('custConct').dirty || riskAssessmentFb.get('custConct').touched) \" >\r\n                <span\r\n                *ngIf=\"\r\n                riskAssessmentFb.get('custConct')?.hasError('required') && (riskAssessmentFb.get('custConct').dirty \r\n                || riskAssessmentFb.get('custConct').touched) \"  class=\"invalid-feedback\">\r\n                Customer Contact is Required \r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-6\">\r\n            <div class=\"my-3\">\r\n              <label class=\"form-label\"\r\n                >Customer Contact Phone</label\r\n              >\r\n              <input\r\n                type=\"tel\"\r\n                class=\"form-control\"\r\n                aria-describedby=\"emailHelp\"\r\n                formControlName=\"custConctPh\"\r\n                [value]= \"siteControls.custConctPh.value\"\r\n                [class.is-invalid]=\"riskAssessmentFb.get('custConctPh')?.hasError('required') \r\n                && (riskAssessmentFb.get('custConctPh').dirty || riskAssessmentFb.get('custConctPh').touched) \" >\r\n                <span\r\n                *ngIf=\"\r\n                riskAssessmentFb.get('custConctPh')?.hasError('required') && (riskAssessmentFb.get('custConctPh').dirty \r\n                || riskAssessmentFb.get('custConctPh').touched) \" class=\"invalid-feedback\">\r\n                Customer Contact is Required \r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-6\">\r\n            <div class=\"my-3\">\r\n              <label class=\"form-label\"\r\n                >Customer Contact Email</label\r\n              >\r\n              <input\r\n                type=\"email\"\r\n                class=\"form-control\"\r\n                aria-describedby=\"emailHelp\"\r\n                formControlName=\"custEmail\"\r\n                [value]= \"siteControls.custEmail.value\"\r\n                [class.is-invalid]=\"riskAssessmentFb.get('custEmail')?.hasError('required') \r\n                && (riskAssessmentFb.get('custEmail').dirty || riskAssessmentFb.get('custEmail').touched) \" >\r\n                <span\r\n                *ngIf=\"\r\n                riskAssessmentFb.get('custEmail')?.hasError('required') && (riskAssessmentFb.get('custEmail').dirty \r\n                || riskAssessmentFb.get('custEmail').touched) \"  class=\"invalid-feedback\">\r\n                Customer Email is Required \r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-3\">\r\n            <div class=\"my-3\">\r\n              <label class=\"form-label\"\r\n                >Job Number</label\r\n              >\r\n              <select\r\n              class=\"form-select form-control col\"\r\n              aria-label=\"Default select example\"\r\n              formControlName=\"jobNumber\"\r\n              (change)=\"jobNoSel()\"\r\n              [class.is-invalid]=\"riskAssessmentFb.get('jobNumber')?.hasError('required') \r\n              && (riskAssessmentFb.get('jobNumber').dirty || riskAssessmentFb.get('jobNumber').touched) \" >\r\n \r\n              <option [value]=\"jobNo._id\" *ngFor=\"let jobNo of allJobNumbers\">{{jobNo.jobNumber}}</option>\r\n            \r\n            </select>\r\n            <span\r\n            *ngIf=\"\r\n            riskAssessmentFb.get('jobNumber')?.hasError('required') && (riskAssessmentFb.get('jobNumber').dirty \r\n            || riskAssessmentFb.get('jobNumber').touched) \"  class=\"invalid-feedback\">\r\n            Job Number  is Required \r\n          </span> \r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-3\">\r\n            <div class=\"my-3\">\r\n              <label class=\"form-label\"\r\n                >Project Manager</label\r\n              >\r\n              <select\r\n                  class=\"form-select form-control col\"\r\n                  aria-label=\"Default select example\"\r\n                  formControlName=\"projectManagerSWMS\"\r\n                  (change)=\"setProjectManager('projectManagerSWMS',$event)\"\r\n                  [class.is-invalid]=\"riskAssessmentFb.get('projectManagerSWMS')?.hasError('required') \r\n                  && (riskAssessmentFb.get('projectManagerSWMS').dirty || riskAssessmentFb.get('projectManagerSWMS').touched) \" >\r\n                \r\n                  <option selected hidden>Select</option>\r\n                  <option [value]=\"mang._id\" *ngFor=\"let mang of projectMang\">{{mang.title}}</option>\r\n                \r\n                </select>\r\n                <span\r\n            *ngIf=\"\r\n            riskAssessmentFb.get('projectManagerSWMS')?.hasError('required') && (riskAssessmentFb.get('projectManagerSWMS').dirty \r\n            || riskAssessmentFb.get('projectManagerSWMS').touched) \"  class=\"invalid-feedback\">\r\n            project ManagerSWMS  is Required \r\n          </span> \r\n            </div>\r\n          </div>\r\n        </div>\r\n        <hr />\r\n        <div class=\"row\">\r\n          <div class=\"col-md-2\">\r\n            <div class=\"my-3\">\r\n              <label for=\"exampleInputProjectNumber\" class=\"form-label\"\r\n                >Jurisdiction</label\r\n              >\r\n              <select\r\n                class=\"form-select form-control col\"\r\n                aria-label=\"Default select example\"\r\n                formControlName=\"jurisdiction\"\r\n                [class.is-invalid]=\"riskAssessmentFb.get('jurisdiction')?.hasError('required') \r\n                && (riskAssessmentFb.get('jurisdiction').dirty || riskAssessmentFb.get('jurisdiction').touched) \" >\r\n                \r\n                <option *ngIf=\"!hasJuridiction\" value=\"\" selected hidden>Select</option>\r\n                <option [value]=\"jurisdiction._id\" *ngFor=\"let jurisdiction of JurisdictionData\">{{jurisdiction.title}}</option>\r\n              \r\n              </select>\r\n              <span\r\n                *ngIf=\"\r\n                riskAssessmentFb.get('jurisdiction')?.hasError('required') && (riskAssessmentFb.get('jurisdiction').dirty \r\n                || riskAssessmentFb.get('jurisdiction').touched) \"  class=\"invalid-feedback\">\r\n               Jurisdiction is Required \r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-5\">\r\n            <div class=\"my-3\">\r\n              <label >Safety Legislation</label>\r\n              <select\r\n                class=\"form-control\"\r\n                name=\"sellist2\"\r\n                formControlName=\"safetyLeg\"\r\n                [class.is-invalid]=\"riskAssessmentFb.get('safetyLeg')?.hasError('required') \r\n                && (riskAssessmentFb.get('safetyLeg').dirty || riskAssessmentFb.get('safetyLeg').touched) \" >\r\n                \r\n                <option *ngIf=\"!hasLegist\" value=\"\" selected hidden>Select</option>\r\n                <option [value]=\"safetyLegislation._id\" *ngFor=\"let safetyLegislation of safety\">\r\n                \r\n                  Act:  {{safetyLegislation.act}}&nbsp; Regulation:{{safetyLegislation.regulation}}\r\n                </option>\r\n              </select>\r\n              <span\r\n                *ngIf=\"\r\n                riskAssessmentFb.get('safetyLeg')?.hasError('required') && (riskAssessmentFb.get('safetyLeg').dirty \r\n                || riskAssessmentFb.get('safetyLeg').touched) \"  class=\"invalid-feedback\">\r\n                safety Legislation is Required \r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-5\">\r\n            <div class=\"my-3\">\r\n              <label class=\"form-label\"\r\n                >Regulator & other Legislation</label\r\n              >\r\n              <select\r\n                class=\"form-select form-control col\"\r\n                id=\"siteName\"\r\n                aria-label=\"Default select example\"\r\n                formControlName=\"regulator\"\r\n                [class.is-invalid]=\"riskAssessmentFb.get('regulator')?.hasError('required') \r\n                && (riskAssessmentFb.get('regulator').dirty || riskAssessmentFb.get('regulator').touched) \" >\r\n              \r\n                <option *ngIf=\"!hasRegulation\" value=\"\" selected hidden>Select</option>\r\n                <option [value]=\"regulator._id\" *ngFor=\"let regulator of regulatorData\">{{regulator.title}}</option>\r\n              </select>\r\n              <span\r\n                *ngIf=\"\r\n                riskAssessmentFb.get('regulator')?.hasError('required') && (riskAssessmentFb.get('regulator').dirty \r\n                || riskAssessmentFb.get('regulator').touched) \"  class=\"invalid-feedback\">\r\n                safety Legislation is Required \r\n              </span>\r\n            </div>\r\n          </div>\r\n    </div>\r\n        <hr />\r\n        <h2 *ngIf=\"allCOPSelected.length\">Code Of Practices</h2>\r\n        <div class=\"row\">\r\n          <!--<div class=\"col-3\" *ngFor=\"let item of allCOPSelected;let i=index \">\r\n           <label for=\"\" class=\"d-flex\"><div><i class=\"fas fa-circle mr-1\"></i></div> <div>{{item.title}}</div></label>\r\n          </div> -->\r\n          <div\r\n            *ngFor=\"let item of allCOPSelected; let i = index\"\r\n            class=\"mt-2 col-4\"\r\n          >\r\n            <input\r\n              type=\"checkbox\"\r\n              [id]=\"i+'cop'\"\r\n              class=\"form-check-input\"\r\n              value=\"Working in or near trenches or shafts deeper than 1.5metres\"\r\n              [checked]=\"true\"\r\n              disabled\r\n            />\r\n            <label [for]=\"i+'cop'\" class=\"form-check-label label_2\">{{\r\n              item.title\r\n            }}</label>\r\n          </div>\r\n        </div>\r\n        <hr />\r\n        <h2>High Risk Construction</h2>\r\n        <div class=\"row\" formArrayName=\"riskConstruction2\">\r\n          <div\r\n            *ngFor=\"let control of riskConstruct2().controls; let i = index\" [formGroupName]=\"i\"\r\n            class=\"mt-2 col-4\"\r\n          >\r\n            <input\r\n              type=\"checkbox\" \r\n              [id]=\"i+'hrc'\"\r\n              class=\"form-check-input\"\r\n              formControlName=\"{{highRiskConstruction[i]._id}}\"\r\n              (change)=\"onRiskChange2($event,highRiskConstruction[i]._id,i)\"\r\n              value=\"Working in or near trenches or shafts deeper than 1.5metres\"\r\n              [checked]=\"riskArr[i]\"\r\n            />\r\n            <label  [for]=\"i+'hrc'\" class=\"form-check-label label_2\">{{\r\n              highRiskConstruction[i].title\r\n            }}</label>\r\n          </div>\r\n        </div>\r\n        <hr />\r\n        <div class=\"row\">\r\n          <table class=\"table table-bordered text-center\">\r\n            <thead>\r\n              <tr>\r\n                <th colspan=\"7\" class=\"L_1\">Risk Level Matrix</th>\r\n                <th colspan=\"8\" class=\"L_1\">Risk Analysis</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <th colspan=\"2\" rowspan=\"2\"></th>\r\n                <td colspan=\"5\">Consequence</td>\r\n                <td colspan=\"4\" rowspan=\"2\">\r\n                  <div class=\"like_2\">Likelihood</div>\r\n                </td>\r\n                <td colspan=\"4\" rowspan=\"2\">\r\n                  <div class=\"like_2\">Consequence</div>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <th>1</th>\r\n                <td>2</td>\r\n                <td>3</td>\r\n                <td>4</td>\r\n                <td>5</td>\r\n              </tr>\r\n              <tr>\r\n                <th rowspan=\"5\">\r\n                  <div class=\"like_1\">Likelihood</div>\r\n                </th>\r\n                <td>5</td>\r\n                <td class=\"M_1\">M</td>\r\n                <td class=\"H_1\">H</td>\r\n                <td class=\"H_1\">H</td>\r\n                <td class=\"H_1\">H</td>\r\n                <td class=\"H_1\">H</td>\r\n                <td colspan=\"2\">\r\n                  <div class=\"space_1\">1</div>\r\n                </td>\r\n                <td colspan=\"2\">Rare</td>\r\n                <td colspan=\"2\">\r\n                  <div class=\"space_1\">1</div>\r\n                </td>\r\n                <td colspan=\"2\">Insignificant</td>\r\n              </tr>\r\n              <tr>\r\n                <th>4</th>\r\n                <td class=\"M_1\">M</td>\r\n                <td class=\"M_1\">M</td>\r\n                <td class=\"M_1\">M</td>\r\n                <td class=\"H_1\">H</td>\r\n                <td class=\"H_1\">H</td>\r\n                <td colspan=\"2\">2</td>\r\n                <td colspan=\"2\">Unlikely</td>\r\n                <td colspan=\"2\">2</td>\r\n                <td colspan=\"2\">Minor</td>\r\n              </tr>\r\n              <tr>\r\n                <th>3</th>\r\n                <td class=\"L_1\">L</td>\r\n                <td class=\"M_1\">M</td>\r\n                <td class=\"M_1\">M</td>\r\n                <td class=\"H_1\">H</td>\r\n                <td class=\"H_1\">H</td>\r\n                <td colspan=\"2\">3</td>\r\n                <td colspan=\"2\">Moderate</td>\r\n                <td colspan=\"2\">3</td>\r\n                <td colspan=\"2\">Moderate</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"col\">2</th>\r\n                <td class=\"L_1\">L</td>\r\n                <td class=\"L_1\">L</td>\r\n                <td class=\"M_1\">M</td>\r\n                <td class=\"M_1\">M</td>\r\n                <td class=\"H_1\">H</td>\r\n                <td colspan=\"2\">4</td>\r\n                <td colspan=\"2\">Likely</td>\r\n                <td colspan=\"2\">4</td>\r\n                <td colspan=\"2\">Major</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"col\">1</th>\r\n                <td class=\"L_1\">L</td>\r\n                <td class=\"L_1\">L</td>\r\n                <td class=\"L_1\">L</td>\r\n                <td class=\"M_1\">M</td>\r\n                <td class=\"M_1\">M</td>\r\n                <td colspan=\"2\" class=\"mr-2 ml-2\">5</td>\r\n                <td colspan=\"2\">Almost Certain</td>\r\n                <td colspan=\"2\">5</td>\r\n                <td colspan=\"2\">Catastrophic</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <hr />\r\n        <h2>PPE Selection</h2>\r\n        <div class=\"row\" formArrayName=\"PPESelection2\">\r\n          <div\r\n          *ngFor=\"let control of ppe2().controls; let i = index\" [formGroupName]=\"i\"\r\n            class=\"mt-2 col-4\"\r\n          >\r\n            <input\r\n              type=\"checkbox\"\r\n              [id]=\"i+'ppes'\"\r\n              class=\"form-check-input\"\r\n              value=\"Disposable dust mask\"\r\n              formControlName=\"{{PPEselection[i]._id}}\"\r\n              (change)=\"onPPEChange2($event,PPEselection[i]._id,i)\"\r\n              [checked]=\"ppeArr[i]\"\r\n            />\r\n            <label class=\"form-check-label label_2\"  [for]=\"i+'ppes'\">{{\r\n              PPEselection[i].title\r\n            }}</label>\r\n          </div>\r\n        </div>\r\n        <hr />\r\n        <ng-container *ngIf=\"chemicalTask\">\r\n          <h2>SDS Registor</h2>\r\n          <ng-container formArrayName=\"SDSRegister\">\r\n            <div class=\"row\" *ngFor=\"let controls of sdsRegisterFA().controls;let i=index\" [formGroupName]=\"i\">\r\n              <div class=\"col-md-3\">\r\n                <div class=\"my-3\">\r\n                  <label for=\"sel2\" class=\"form-label\"\r\n                    >Name of Chemical<span  class=\"material-icons ml-3\"\r\n                    style=\"font-size: 19px;\"  (click)=\"addChemical()\" >add_circle_outline</span></label\r\n                  >\r\n                  <select                  \r\n                  class=\"form-control\"\r\n                  id=\"sel2\"\r\n                  name=\"sellist2\"\r\n                  formControlName=\"chemicalName\"\r\n                  [class.is-invalid]=\" sdsRegisterFA().controls[i].get('chemicalName')?.hasError('required') \r\n                  && (sdsRegisterFA().controls[i].get('chemicalName').dirty \r\n                  || sdsRegisterFA().controls[i].get('chemicalName').touched) \" >\r\n                <option *ngIf=\"!isSelected[i]\" value=\"\" hidden>Select</option>\r\n\r\n                  <option *ngFor=\"let item of allChemicals\">\r\n                    {{ item.title }}\r\n                  </option>\r\n                </select>\r\n                <span\r\n                *ngIf=\"sdsRegisterFA().controls[i].get('chemicalName')?.hasError('required') \r\n                && (sdsRegisterFA().controls[i].get('chemicalName').dirty \r\n                || sdsRegisterFA().controls[i].get('chemicalName').touched) \"  class=\"invalid-feedback\">\r\n                Chemical Name is Required \r\n              </span>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-3\">\r\n                <div class=\"my-3\">\r\n                  <label for=\"exampleInputProjectNumber\" class=\"form-label\"\r\n                    >Location</label\r\n                  >\r\n                  <input\r\n                    type=\"text\"\r\n                    class=\"form-control\"\r\n                    id=\"exampleInputProjectNumber\"\r\n                    aria-describedby=\"emailHelp\"\r\n                    formControlName=\"location\"\r\n                   \r\n                  [class.is-invalid]=\" sdsRegisterFA().controls[i].get('location')?.hasError('required') \r\n                  && (sdsRegisterFA().controls[i].get('location').dirty \r\n                  || sdsRegisterFA().controls[i].get('location').touched) \"  />\r\n                    <span\r\n                *ngIf=\"sdsRegisterFA().controls[i].get('location')?.hasError('required') \r\n                && (sdsRegisterFA().controls[i].get('location').dirty \r\n                || sdsRegisterFA().controls[i].get('location').touched) \"  class=\"invalid-feedback\">\r\n                Location is Required \r\n              </span>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-2\">\r\n                <div class=\"my-3\">\r\n                  <label for=\"exampleInputProjectNumber\" class=\"form-label\"\r\n                    >Hazardous</label\r\n                  >\r\n                  <select                  \r\n                  class=\"form-control\"\r\n                  id=\"sel2\"\r\n                  name=\"sellist2\"\r\n                  formControlName=\"hazardous\"\r\n                     \r\n                  [class.is-invalid]=\" sdsRegisterFA().controls[i].get('hazardous')?.hasError('required') \r\n                  && (sdsRegisterFA().controls[i].get('hazardous').dirty \r\n                  || sdsRegisterFA().controls[i].get('hazardous').touched) \" >\r\n                  <option *ngIf=\"!isHazardous[i]\" value=\"\" selected hidden>Select</option>\r\n                  <option value=\"YES\">Yes</option>\r\n                  <option value=\"NO\">No</option>\r\n                </select>\r\n                <span\r\n                *ngIf=\"sdsRegisterFA().controls[i].get('hazardous')?.hasError('required') \r\n                && (sdsRegisterFA().controls[i].get('hazardous').dirty \r\n                || sdsRegisterFA().controls[i].get('hazardous').touched) \"  class=\"invalid-feedback\">\r\n                Hazardous is Required \r\n              </span>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-2\">\r\n                <div class=\"my-3\">\r\n                  <label for=\"exampleInputProjectNumber\" class=\"form-label\"\r\n                    >Qty</label\r\n                  >\r\n                  <input\r\n                    type=\"number\"\r\n                    class=\"form-control\"\r\n                    id=\"exampleInputProjectNumber\"\r\n                    aria-describedby=\"emailHelp\"\r\n                    formControlName=\"quantity\"\r\n                    [class.is-invalid]=\"sdsRegisterFA().controls[i].get('quantity')?.hasError('required') \r\n                    && (sdsRegisterFA().controls[i].get('quantity').dirty \r\n                    || sdsRegisterFA().controls[i].get('quantity').touched)\" />\r\n                    <span\r\n                *ngIf=\"sdsRegisterFA().controls[i].get('quantity')?.hasError('required') \r\n                && (sdsRegisterFA().controls[i].get('quantity').dirty \r\n                || sdsRegisterFA().controls[i].get('quantity').touched) \" class=\"invalid-feedback\">\r\n                Quantity is Required \r\n              </span>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-2\">\r\n                <div class=\"my-3\">\r\n                  <label for=\"exampleInputProjectNumber\" class=\"form-label\"\r\n                    >Expiry Date</label\r\n                  >\r\n                  <input\r\n                    type=\"date\"\r\n                    class=\"form-control\"\r\n                    id=\"exampleInputProjectNumber\"\r\n                    aria-describedby=\"emailHelp\"\r\n                    formControlName=\"expDate\"\r\n                    [class.is-invalid]=\"sdsRegisterFA().controls[i].get('expDate')?.hasError('required') \r\n                    && (sdsRegisterFA().controls[i].get('expDate').dirty \r\n                    || sdsRegisterFA().controls[i].get('expDate').touched)\" >\r\n                <span\r\n                *ngIf=\"sdsRegisterFA().controls[i].get('expDate')?.hasError('required') \r\n                && (sdsRegisterFA().controls[i].get('expDate').dirty \r\n                || sdsRegisterFA().controls[i].get('expDate').touched) \" class=\"invalid-feedback\">\r\n                Expiry Date is Required \r\n              </span>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-10\">\r\n                <div class=\"my-3\">\r\n                  <label for=\"formFile\" class=\"form-label\">Attach SDS Sheet</label>\r\n                  <input class=\"form-control\" (change)=\"fileChangeEvent($event,i)\" type=\"file\" id=\"formFile\" />\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-2\">\r\n                <span class=\"material-icons\" style=\"margin-top: 30%\" (click)=\"addActionSDSRegister()\"\r\n                  >add_circle_outline\r\n                </span>\r\n                <span class=\"material-icons\" (click)=\"removeSDSRegister(i)\"> remove_circle_outline </span>\r\n              </div>\r\n            </div>\r\n          </ng-container>\r\n        </ng-container>\r\n  \r\n     \r\n        <hr />\r\n        <div\r\n          cdkDropList\r\n          class=\"example-list\"\r\n          (cdkDropListDropped)=\"drop($event)\"\r\n        >\r\n          <div\r\n            class=\"example-box setBoxMart\"\r\n            *ngFor=\"let item of jobTaskSelected; let i = index\"\r\n            cdkDrag\r\n          >\r\n            <div>\r\n              <h2>Step:{{i+1}} {{ item.title }}</h2>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n              <div class=\"col-10 col-sm-10-print\">\r\n                  <label for=\"sel2\">Identity Hazards<span  class=\"material-icons ml-3 my-auto p-0\" style=\"font-size: 19px;\"(click)=\"addItem('identifyHazards',i)\" >add_circle_outline</span></label>\r\n                  <ol class=\"identifyHaz\">\r\n                    <li *ngFor=\"let hazard of item.allHazardsTitle;let j=index\"  >\r\n                      <div class=\"d-flex\">\r\n                         <div class=\" stepItem p-1\" >{{ hazard.title }}</div>\r\n                         <div class=\"\" *ngIf=\"!hazard.id\"><mat-icon  class=\"mr-1\" style=\"font-size: 18px;\"(click)=\"editHazrds('editIdentifyHazards',hazard.title,i)\" >edit</mat-icon>  <mat-icon  style=\"font-size: 18px;\"(click)=\"deleteHazrds('identifyHazards',hazard.title, i,j)\" >delete</mat-icon>  </div>\r\n                  </div>   \r\n                    </li>  \r\n                  </ol>         \r\n              </div>\r\n              <ng-container  formArrayName=\"riskLevel\">\r\n                <div class=\"col-2\" [formGroupName]=\"i\">\r\n                  <label for=\"sel1\">Risk</label>\r\n                  <select\r\n                    class=\"form-control\"\r\n                    id=\"sel1\"\r\n                    name=\"sellist1\"\r\n                    formControlName=\"riskLevel\"\r\n                  >\r\n                    <option *ngFor=\"let item of riskLevel\" [value]=\"item._id\">{{item.title}}</option>           \r\n                  </select>\r\n                </div>\r\n              </ng-container>\r\n             \r\n              <div class=\"col-10 col-sm-10-print my-3\">\r\n                \r\n                  <label for=\"sel2\">Control and Action Required<span  class=\"material-icons ml-3 my-auto p-0\" style=\"font-size: 19px;\"(click)=\"addItem('ctrlActreq',i)\" >add_circle_outline</span></label>\r\n                  <ol class=\"identifyHaz\">\r\n                    <li *ngFor=\"let contrlActReq of item.allContrlActReqTitle;let j=index\"  > \r\n                      <div class=\"\">\r\n                        <div class=\" stepItem p-1\">{{contrlActReq.title }}</div>\r\n                    <div  class=\"col-3\"  *ngIf=\"!contrlActReq.id\"> <mat-icon  class=\"mr-1\" style=\"font-size: 18px;\"(click)=\"editHazrds('editCtrlActreq',contrlActReq.title,i)\">edit</mat-icon>  <mat-icon   style=\"font-size: 18px;\"(click)=\"deleteHazrds('ctrlActreq', contrlActReq.title,i,j)\">delete</mat-icon>                  </div>\r\n                  </div> \r\n                    </li>  \r\n                  </ol>  \r\n                 \r\n                \r\n              </div>\r\n\r\n             <div> \r\n               <ng-container formArrayName=\"residualRisk\">\r\n                <div class=\" my-3\" [formGroupName]=\"i\">\r\n                  <label for=\"sel1\">Residual Risk</label>\r\n                  <select\r\n                    class=\"form-control\"\r\n                    id=\"sel1\"\r\n                    name=\"sellist1\"\r\n                    formControlName=\"resiRiskLevel\"\r\n                  >\r\n                  <option *ngFor=\"let item of resiRiskLevel\" [value]=\"item._id\">{{item.title}}</option>           \r\n                \r\n                  </select>\r\n                  </div>\r\n                </ng-container>\r\n                 <ng-container formArrayName=\"persResp\"><label for=\"sel1\" class=\"pt-2\">Person Responsible</label>\r\n                  <div [formGroupName]=\"i\">\r\n                    <select\r\n                     multiple\r\n                     class=\"form-control\"\r\n                     formControlName=\"personRes\"\r\n                     id=\"sel2\" [size]=\"item.staffTitle.length\"\r\n                     name=\"sellist2\"\r\n                   >\r\n                     <option\r\n                       *ngFor=\"let item of item.staffTitle\"\r\n                     >\r\n                       {{ item.title }}\r\n                     </option>\r\n                   </select>\r\n                  </div> \r\n                   </ng-container>\r\n                   </div>\r\n            </div>\r\n            <hr />\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          \r\n          \r\n          <!-- <br /><br />\r\n          <h3 class=\"txt_1\">\r\n            Only persons who have completed the singoff are authorised to work\r\n            on the relevent tasks covered by this document. <br />\r\n            Note: Work must be performed in accordance with this SWMS, any Risk\r\n            Assessment prepared in relation to this work and any <br />\r\n            relevent Safe WorkProcedures.<br />\r\n            This SWMS must be accessible for inspection untill the energised\r\n            electrical work to which this SWMS relates is completed. If the\r\n            <br />\r\n            SWMS is revised, all version should be kept.<br />\r\n            If a Notifiable incident occurs in relation to the high-risk\r\n            construction work in this SWMS, the SWMS must be kept for at least 2\r\n            years<br />\r\n            from the date of the Notifiable incident.<br /><br />\r\n            If Changes are made to the work practice and the content of the SWMS\r\n            workers will need sign to confirm that they haverecieved an<br />\r\n            updated briefing, undestand the content and will comply with the\r\n            requirements.<br /><br />\r\n            Where there are other parties working adjascent to the contractor\r\n            and the work activity that could impact upon the safety and\r\n            welfare<br />\r\n            of others not directly employed, SWMS will make references to how\r\n            they will coordinate the work activity and where applicable<br />\r\n            communicate to the other parties.<br /><br />\r\n          </h3> -->\r\n        </div>\r\n        \r\n        <!-- <div  class=\"row mb-2\">\r\n          <ckeditor style=\"width: 100%;\" [editor]=\"Editor\" data=\"<h1 class='form-control' >\r\n            <strong>Worker consultation, instruction, training, toolbox talks, review,\r\n            acceptance record:</strong>\r\n          </h1>\"></ckeditor>   \r\n\r\n          \r\n        </div> -->\r\n\r\n\r\n        <div class=\"row\">\r\n          <ckeditor formControlName=\"editor\" style=\"width: 100%;\" [editor]=\"Editor\" [data]=\"secondEditor\"></ckeditor>  \r\n        </div>\r\n        <hr />\r\n        <h3>Name of worker (Print and Sign)</h3>\r\n        <div class=\"row\">\r\n          <div class=\"col-md-7\">\r\n            <div class=\"my-3\">\r\n              <label for=\"exampleInputProjectNumber\" class=\"form-label\"\r\n                >Employee 2</label\r\n              >\r\n              <input\r\n                formControlName=\"employee2\"\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"exampleInputProjectNumber\"\r\n                aria-describedby=\"emailHelp\"\r\n                [class.is-invalid]=\"riskAssessmentFb.get('employee2')?.hasError('required') \r\n                && (riskAssessmentFb.get('employee2').dirty || riskAssessmentFb.get('employee2').touched) \" >\r\n                <span\r\n                *ngIf=\"\r\n                riskAssessmentFb.get('employee2')?.hasError('required') && (riskAssessmentFb.get('employee2').dirty \r\n                || riskAssessmentFb.get('employee2').touched) \" class=\"invalid-feedback\">\r\n                Employee Name is Required \r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-5\">\r\n            <div class=\"form-floating\">\r\n              <label>Signature*</label>\r\n              <div class=\"sign\">\r\n                <signature-pad\r\n                  [options]=\"signaturePadOptions2\"\r\n                  (onBeginEvent)=\"drawStart2()\"\r\n                  (onEndEvent)=\"drawComplete2()\"\r\n                  #Signature2\r\n                  [class.is-invalid]=\"signRequired\"\r\n                  ></signature-pad>\r\n                  <span\r\n                  *ngIf=\"signRequired\"\r\n                  class=\"invalid-feedback\"\r\n                >\r\n                This Field is Required</span\r\n                >\r\n               \r\n              </div>\r\n            </div>\r\n            <button class=\"btn btn-outline-primary mt-1\" (click)=\"clear2()\">\r\n              Clear\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\" [disabled]=\"!riskAssessmentFb.valid\" class=\"btn btn-outline-primary\" (click)=\"onSubmit()\">Submit</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n  </div>\r\n \r\n    </mat-tab>\r\n  </mat-tab-group>\r\n  <div class=\"tab-content\" id=\"myTabContent\" *ngIf=\"check=='print'\">\r\n    <div\r\n      class=\"tab-pane fade show active px-4 py-4\"\r\n      id=\"RISKAssessment\"\r\n      role=\"tabpanel\"\r\n      aria-labelledby=\"RISKAssessment-tab\"\r\n    >\r\n      <h2>Site Information</h2>\r\n      <div>\r\n        <div class=\"row\">\r\n          <div class=\"my-3 col\">\r\n            <label class=\"form-label\"\r\n              >Site Name</label\r\n            >\r\n            <!-- <select\r\n              class=\"form-select form-control col\"\r\n              id=\"siteName\"\r\n              aria-label=\"Default select example\"\r\n            >\r\n              <option selected hidden>Select</option>\r\n            </select> -->\r\n            <input type=\"text\" class=\"form-control col\" formControlName=\"siteName\">\r\n          </div>\r\n          <div class=\"my-3 col\">\r\n            <label class=\"form-label\"\r\n              >Customer Name</label\r\n            >\r\n            <!-- <select\r\n              class=\"form-select form-control col\"\r\n              id=\"CustomerName\"\r\n              aria-label=\"Default select example\"\r\n            >\r\n              <option selected hidden>Select</option>\r\n            </select> -->\r\n            <input type=\"text\" class=\"form-control col\" formControlName=\"customerName\">\r\n\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"my-3 col-2\">\r\n            <label class=\"form-label\"\r\n              >Street Number</label\r\n            >\r\n            <!-- <select\r\n              class=\"form-select form-control col\"\r\n              id=\"StreetNumber\"\r\n              aria-label=\"Default select example\"\r\n            >\r\n              <option selected hidden>Select</option>\r\n            </select> -->\r\n            <input type=\"text\" class=\"form-control col\" formControlName=\"streetNo\">\r\n\r\n          </div>\r\n          <div class=\"my-3 col-4\">\r\n            <label class=\"form-label\"\r\n              >Street Address</label\r\n            >\r\n            <!-- <select\r\n              class=\"form-select form-control col\"\r\n              id=\"StreetAddress\"\r\n              aria-label=\"Default select example\"\r\n            >\r\n              <option selected hidden>Select</option>\r\n            </select> -->\r\n            <input type=\"text\" class=\"form-control col\" formControlName=\"streetAddr\">\r\n          </div>\r\n          <div class=\"my-3 col-4\">\r\n            <label class=\"form-label\"\r\n              >Suburb</label\r\n            >\r\n            <!-- <select\r\n              class=\"form-select form-control col\"\r\n              id=\"Suburb\"\r\n              aria-label=\"Default select example\"\r\n            >\r\n              <option selected hidden>Select</option>\r\n            </select> -->\r\n            <input type=\"text\" class=\"form-control col\" formControlName=\"suburb\">\r\n          </div>\r\n          <div class=\"my-3 col-2\">\r\n            <label class=\"form-label\"\r\n              >State</label\r\n            >\r\n            <select\r\n            class=\"form-select form-control col\"\r\n            aria-label=\"Default select example\"\r\n            formControlName=\"statesSWMS\"\r\n          >\r\n          <option selected hidden>Select</option>\r\n          <option [value]=\"state._id\" *ngFor=\"let state of states\">{{state.title}}</option>\r\n            <!-- <option selected hidden>Select</option>\r\n            <option value=\"NSW\">NSW</option>\r\n            <option value=\"ACT\">ACT</option>\r\n            <option value=\"QLD\">QLD</option>\r\n            <option value=\"NT\">NT</option>\r\n            <option value=\"SA\">SA</option>\r\n            <option value=\"NZ\">NZ</option>\r\n            <option value=\"TAS\">TAS</option>s\r\n            <option value=\"VIC\">VIC</option>\r\n            <option value=\"WA\">WA</option> -->\r\n          </select>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <div class=\"my-3 col\">\r\n            <label class=\"form-label\"\r\n              >Customer Contact</label\r\n            >\r\n            <!-- <select\r\n              class=\"form-select form-control col\"\r\n              id=\"CustomerContact\"\r\n              aria-label=\"Default select example\"\r\n            >\r\n              <option selected hidden>Select</option>\r\n            </select> -->\r\n            <input type=\"text\" class=\"form-control col\" formControlName=\"custConct\">\r\n\r\n          </div>\r\n          <div class=\"my-3 col\">\r\n            <label class=\"form-label\"\r\n              >Customer Contact Phone</label\r\n            >\r\n            <!-- <select\r\n              class=\"form-select form-control col\"\r\n              id=\"CustomerContactPhone\"\r\n              aria-label=\"Default select example\"\r\n            >\r\n              <option selected hidden>Select</option>\r\n            </select> -->\r\n            <input type=\"text\" class=\"form-control col\" formControlName=\"custConctPh\">\r\n\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"my-3 col-4\">\r\n            <label class=\"form-label\"\r\n              >Customer Email</label\r\n            >\r\n            <!-- <select\r\n              class=\"form-select form-control col\"\r\n              id=\"CustomerEmail\"\r\n              aria-label=\"Default select example\"\r\n            >\r\n              <option selected hidden>Select</option>\r\n            </select> -->\r\n            <input type=\"text\" class=\"form-control col\" formControlName=\"custEmail\">\r\n\r\n          </div>\r\n          <div class=\"my-3 col-2\">\r\n            <label class=\"form-label\"\r\n              >Job Number</label\r\n            >    \r\n            <select\r\n            class=\"form-select form-control col\"\r\n            aria-label=\"Default select example\"\r\n            formControlName=\"jobNumber\"\r\n            (change)=\"jobNoSel()\"\r\n          >\r\n            <option selected hidden>Select</option>\r\n            <option [value]=\"jobNo._id\" *ngFor=\"let jobNo of allJobNumbers\">{{jobNo.jobNumber}}</option>\r\n          \r\n          </select>\r\n          </div>\r\n          <div class=\"my-3 col-6\">\r\n            <label class=\"form-label\"\r\n              >Project Manager</label\r\n            >\r\n            <select\r\n              class=\"form-select form-control col\"\r\n              aria-label=\"Default select example\"\r\n              formControlName=\"projectManager\"\r\n              (change)=\"setProjectManager('projectManager',$event)\"\r\n            >\r\n              <option selected hidden>Select</option>\r\n              <option [value]=\"mang._id\" *ngFor=\"let mang of projectMang\">{{mang.title}}</option>\r\n            \r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"my-3 col-4\">\r\n            <label class=\"form-label\"\r\n              >Date</label\r\n            >\r\n            <!-- <input type=\"date\" class=\"form-control\" formControlName=\"date\" /> -->\r\n            <input  matInput  [matDatepicker]=\"datepicker2\"\r\n            class=\"form-control\"\r\n            formControlName=\"date\"\r\n            [value]=\"maxDate\"\r\n            placeholder=\"dd-mm-yyyy\" readonly>\r\n            <mat-datepicker-toggle matSuffix [for]=\"datepicker2\" [disabled]=\"true\"></mat-datepicker-toggle>\r\n            <mat-datepicker #datepicker2 ></mat-datepicker>\r\n          </div>\r\n        </div>\r\n        <hr />\r\n        <div class=\"mt-4\">\r\n          <h2>Job Tasks</h2>\r\n        </div>\r\n\r\n        <div class=\"row\" formArrayName=\"jobTask\">\r\n          <ng-container  *ngFor=\"let control of jobtask().controls; let i = index\" [formGroupName]=\"i\">\r\n            <div\r\n             \r\n              class=\"mt-2 col-4\"\r\n            >\r\n              <input\r\n                type=\"checkbox\"\r\n                [id]=\"i+'jt'\"\r\n                class=\"form-check-input\"\r\n                [value]=\"jobTaskData[i]._id\"\r\n                (change)=\"onJobtaskSelect($event, jobTaskData[i])\"\r\n                formControlName=\"{{jobTaskData[i]._id}}\"\r\n              />\r\n              <label [for]=\"i+'jt'\" class=\"form-check-label label_2\">{{\r\n                jobTaskData[i].title\r\n              }}</label>\r\n            </div>\r\n          </ng-container>\r\n        </div>\r\n\r\n        <hr />\r\n        <div class=\"row mt-4\">\r\n          <table class=\"table table-bordered text-center\">\r\n            <thead>\r\n              <tr>\r\n                <th colspan=\"7\" class=\"L_1\">Risk Level Matrix</th>\r\n                <th colspan=\"8\" class=\"L_1\">Risk Analysis</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <th colspan=\"2\" rowspan=\"2\"></th>\r\n                <td colspan=\"5\">Consequence</td>\r\n                <td colspan=\"4\" rowspan=\"2\">\r\n                  <div class=\"like_2\">Likelihood</div>\r\n                </td>\r\n                <td colspan=\"4\" rowspan=\"2\">\r\n                  <div class=\"like_2\">Consequence</div>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <th>1</th>\r\n                <td>2</td>\r\n                <td>3</td>\r\n                <td>4</td>\r\n                <td>5</td>\r\n              </tr>\r\n              <tr>\r\n                <th rowspan=\"5\">\r\n                  <div class=\"like_1\">Likelihood</div>\r\n                </th>\r\n                <td>5</td>\r\n                <td class=\"M_1\">M</td>\r\n                <td class=\"H_1\">H</td>\r\n                <td class=\"H_1\">H</td>\r\n                <td class=\"H_1\">H</td>\r\n                <td class=\"H_1\">H</td>\r\n                <td colspan=\"2\">\r\n                  <div class=\"space_1\">1</div>\r\n                </td>\r\n                <td colspan=\"2\">Rare</td>\r\n                <td colspan=\"2\">\r\n                  <div class=\"space_1\">1</div>\r\n                </td>\r\n                <td colspan=\"2\">Insignificant</td>\r\n              </tr>\r\n              <tr>\r\n                <th>4</th>\r\n                <td class=\"M_1\">M</td>\r\n                <td class=\"M_1\">M</td>\r\n                <td class=\"M_1\">M</td>\r\n                <td class=\"H_1\">H</td>\r\n                <td class=\"H_1\">H</td>\r\n                <td colspan=\"2\">2</td>\r\n                <td colspan=\"2\">Unlikely</td>\r\n                <td colspan=\"2\">2</td>\r\n                <td colspan=\"2\">Minor</td>\r\n              </tr>\r\n              <tr>\r\n                <th>3</th>\r\n                <td class=\"L_1\">L</td>\r\n                <td class=\"M_1\">M</td>\r\n                <td class=\"M_1\">M</td>\r\n                <td class=\"H_1\">H</td>\r\n                <td class=\"H_1\">H</td>\r\n                <td colspan=\"2\">3</td>\r\n                <td colspan=\"2\">Moderate</td>\r\n                <td colspan=\"2\">3</td>\r\n                <td colspan=\"2\">Moderate</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"col\">2</th>\r\n                <td class=\"L_1\">L</td>\r\n                <td class=\"L_1\">L</td>\r\n                <td class=\"M_1\">M</td>\r\n                <td class=\"M_1\">M</td>\r\n                <td class=\"H_1\">H</td>\r\n                <td colspan=\"2\">4</td>\r\n                <td colspan=\"2\">Likely</td>\r\n                <td colspan=\"2\">4</td>\r\n                <td colspan=\"2\">Major</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"col\">1</th>\r\n                <td class=\"L_1\">L</td>\r\n                <td class=\"L_1\">L</td>\r\n                <td class=\"L_1\">L</td>\r\n                <td class=\"M_1\">M</td>\r\n                <td class=\"M_1\">M</td>\r\n                <td colspan=\"2\" class=\"mr-2 ml-2\">5</td>\r\n                <td colspan=\"2\">Almost Certain</td>\r\n                <td colspan=\"2\">5</td>\r\n                <td colspan=\"2\">Catastrophic</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <hr />\r\n\r\n        <div class=\"mt-4\">\r\n          <h2>High Risk Construction</h2>\r\n        </div>\r\n\r\n        <div class=\"row\" formArrayName=\"riskConstruction\">\r\n          <div\r\n            *ngFor=\"let control of riskConstruct().controls; let i = index\" [formGroupName]=\"i\"\r\n            class=\"mt-2 col-4\"\r\n          >\r\n            <input\r\n              type=\"checkbox\" \r\n              [id]=\"i+'hrc'\"\r\n              class=\"form-check-input\"\r\n              formControlName=\"{{highRiskConstruction[i]._id}}\"\r\n              (change)=\"onRiskChange($event,highRiskConstruction[i]._id,i)\"\r\n              value=\"Working in or near trenches or shafts deeper than 1.5metres\"\r\n              [checked]=\"riskArr[i]\"\r\n            />\r\n            <label  [for]=\"i+'hrc'\" class=\"form-check-label label_2\">{{\r\n              highRiskConstruction[i].title\r\n            }}</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <hr />\r\n      <div class=\"mt-4\">\r\n        <h2>PPE Selection</h2>\r\n      </div>\r\n\r\n      <div class=\"row\" formArrayName=\"PPEselection\">\r\n        <div\r\n        *ngFor=\"let control of ppe().controls; let i = index\" [formGroupName]=\"i\"\r\n          class=\"mt-2 col-4\"\r\n        >\r\n          <input\r\n            type=\"checkbox\"\r\n            [id]=\"i+'ppes'\"\r\n            class=\"form-check-input\"\r\n            value=\"Disposable dust mask\"\r\n            (change)=\"onPPEChange($event,PPEselection[i]._id,i)\"\r\n            formControlName=\"{{PPEselection[i]._id}}\"\r\n            [checked]=\"ppeArr[i]\"\r\n          />\r\n          <label class=\"form-check-label label_2\"  [for]=\"i+'ppes'\">{{\r\n            PPEselection[i].title\r\n          }}</label>\r\n        </div>\r\n      </div>\r\n\r\n      <hr />\r\n\r\n      <div class=\"mt-4\">\r\n        <h2>Licence and Qualifications</h2>\r\n      </div>\r\n\r\n      <div class=\"row\" formArrayName=\"licence\">\r\n        <div\r\n        *ngFor=\"let control of Licence().controls; let i = index\" [formGroupName]=\"i\"\r\n          class=\"mt-2 col-4\"\r\n        >\r\n          <input\r\n            type=\"checkbox\"\r\n            [id]=\"i+'l&q'\"\r\n            class=\"form-check-input\"\r\n            value=\"Open Cable Licence\"\r\n            (change)=\"onLicenseChange($event,licenseAndQualification[i]._id,i)\"\r\n            formControlName=\"{{licenseAndQualification[i]._id}}\"\r\n            [checked]=\"licenceArr[i]\"\r\n          />\r\n          <label class=\"form-check-label label_2\"  [for]=\"i+'l&q'\">{{\r\n            licenseAndQualification[i].title\r\n          }}</label>\r\n        </div>\r\n      </div>\r\n\r\n      <hr />\r\n      <h2>\r\n        Toolbox this document with all workers and contractors on sit & sign off\r\n      </h2>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col-4\">\r\n          <label class=\"form-label\"\r\n            >Employee 1</label\r\n          >\r\n          <p>\r\n            <input\r\n              type=\"input\"\r\n              class=\"mr-1 form-control\"\r\n              value=\"\"\r\n              formControlName=\"employee1\"\r\n            />\r\n          </p>\r\n        </div>\r\n        <div class=\"col-4\">\r\n          <label class=\"form-label\"\r\n            >Signature</label\r\n          >\r\n          <div class=\"sign\" #signaturePad1Div>\r\n            <signature-pad\r\n              [options]=\"signaturePadOptions1\"\r\n              (onBeginEvent)=\"drawStart1()\"\r\n              (onEndEvent)=\"drawComplete1()\"\r\n              #Signature1\r\n            ></signature-pad>\r\n          </div>\r\n          <button class=\"btn btn-outline-primary mt-1\" (click)=\"clear1()\">\r\n            Clear\r\n          </button>\r\n        </div>\r\n        <div class=\"col-3\">\r\n          <label class=\"form-label\"\r\n            >Date</label\r\n          >\r\n          <p>\r\n            <input  matInput  [matDatepicker]=\"datepicker3\" [max]=\"maxDate\" \r\n                  class=\"mr-1 form-control\"\r\n                  formControlName=\"dateTime\"\r\n                  (dateChange)=\"getDate( $event)\"\r\n                  \r\n                  [class.is-invalid]=\"riskAssessmentFb.get('dateTime')?.hasError('required') \r\n                  && (riskAssessmentFb.get('dateTime').dirty || riskAssessmentFb.get('dateTime').touched) \"\r\n                  placeholder=\"dd-mm-yyyy\">\r\n                  <mat-datepicker-toggle matSuffix [for]=\"datepicker3\"></mat-datepicker-toggle>\r\n                  <mat-datepicker #datepicker3 ></mat-datepicker>\r\n                  <span\r\n                  *ngIf=\"\r\n                  riskAssessmentFb.get('dateTime')?.hasError('required') && (riskAssessmentFb.get('dateTime').dirty \r\n                  || riskAssessmentFb.get('dateTime').touched) \"\r\n                  class=\"invalid-feedback\"\r\n                >\r\n                Date is Required</span\r\n                >\r\n               \r\n                  <label class=\"form-label mt-1 mb-0\"\r\n                >Time</label>\r\n                <input [ngxMatTimepicker]=\"timepicker\" format=\"24\" [value]=\"setTime\" class=\"form-control\" />\r\n          <ngx-mat-timepicker  #timepicker (timeSet)=\"getTime($event,timepicker)\" ></ngx-mat-timepicker>\r\n            <!-- <input\r\n              type=\"date\"\r\n              class=\"mr-1 form-control\"\r\n              value=\"\"\r\n              formControlName=\"dateTime\"/> -->\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div\r\n  *ngIf=\"check=='print'\"\r\n  id=\"SWSS\"\r\n  role=\"tabpanel\"\r\n>\r\n  <!--SWMS Forms-->\r\n  <div class=\"container content-center\">\r\n    <div class=\"px-4 py-4\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-6 col-sm-6-print\">\r\n          <div class=\"my-3\">\r\n            <label class=\"form-label\"\r\n              >Site Name</label\r\n            >\r\n            <input\r\n              type=\"fullname\"\r\n              class=\"form-control\"\r\n              aria-describedby=\"emailHelp\"\r\n              formControlName=\"siteName\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-6 col-sm-6-print\">\r\n          <div class=\"my-3\">\r\n            <label class=\"form-label\"\r\n              >Customer Name</label\r\n            >\r\n            <input\r\n              type=\"surname\"\r\n              class=\"form-control\"\r\n              aria-describedby=\"emailHelp\"\r\n              formControlName=\"customerName\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-2 col-sm-2-print\">\r\n          <div class=\"my-3\">\r\n            <label class=\"form-label\"\r\n              >Street Number</label\r\n            >\r\n            <input\r\n              type=\"number\"\r\n              class=\"form-control\"\r\n              aria-describedby=\"emailHelp\"\r\n              formControlName=\"streetNo\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-4 col-sm-4-print\">\r\n          <div class=\"my-3\">\r\n            <label class=\"form-label\"\r\n              >Street Name</label\r\n            >\r\n            <input\r\n              type=\"email\"\r\n              class=\"form-control\"\r\n              aria-describedby=\"emailHelp\"\r\n              formControlName=\"streetAddr\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-4 col-sm-4-print \">\r\n          <div class=\"my-3\">\r\n            <label class=\"form-label\">Town/City</label>\r\n            <input\r\n              type=\"department\"\r\n              class=\"form-control\"\r\n              aria-describedby=\"emailHelp\"\r\n              formControlName=\"town\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-2 col-sm-2-print\">\r\n          <div class=\"my-3\">\r\n            <label class=\"form-label\">State</label>\r\n            <select\r\n              class=\"form-select form-control col\"\r\n              aria-label=\"Default select example\"\r\n              formControlName=\"statesSWMS\">\r\n              <option selected hidden>Select</option>\r\n              <option [value]=\"state._id\" *ngFor=\"let state of states\">{{state.title}}</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-6 col-sm-6-print\">\r\n          <div class=\"my-3\">\r\n            <label class=\"form-label\"\r\n              >Customer Contact</label\r\n            >\r\n            <input\r\n              type=\"Projectnumber\"\r\n              class=\"form-control\"\r\n              aria-describedby=\"emailHelp\"\r\n              formControlName=\"custConct\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-6 col-sm-6-print\">\r\n          <div class=\"my-3\">\r\n            <label class=\"form-label\"\r\n              >Customer Contact Phone</label\r\n            >\r\n            <input\r\n              type=\"tel\"\r\n              class=\"form-control\"\r\n              aria-describedby=\"emailHelp\"\r\n              formControlName=\"custConctPh\">\r\n            \r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-6 col-sm-6-print\">\r\n          <div class=\"my-3\">\r\n            <label class=\"form-label\"\r\n              >Customer Contact Email</label\r\n            >\r\n            <input\r\n              type=\"email\"\r\n              class=\"form-control\"\r\n              aria-describedby=\"emailHelp\"\r\n              formControlName=\"custEmail\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-3 col-md-3-print\">\r\n          <div class=\"my-3\">\r\n            <label class=\"form-label\"\r\n              >Job Number</label\r\n            >\r\n            <select\r\n            class=\"form-select form-control col\"\r\n            aria-label=\"Default select example\"\r\n            formControlName=\"jobNumber\"\r\n            (change)=\"jobNoSel()\"\r\n          >\r\n            <option [value]=\"jobNo._id\" *ngFor=\"let jobNo of allJobNumbers\">{{jobNo.jobNumber}}</option>\r\n          \r\n          </select>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-3 col-md-3-print\">\r\n          <div class=\"my-3\">\r\n            <label class=\"form-label\"\r\n              >Project Manager</label\r\n            >\r\n            <select\r\n                class=\"form-select form-control col\"\r\n                aria-label=\"Default select example\"\r\n                formControlName=\"projectManagerSWMS\"\r\n                (change)=\"setProjectManager('projectManagerSWMS',$event)\"\r\n              >\r\n                <option selected hidden>Select</option>\r\n                <option [value]=\"mang._id\" *ngFor=\"let mang of projectMang\">{{mang.title}}</option>\r\n              \r\n              </select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <hr />\r\n      <div class=\"row\">\r\n        <div class=\"col-md-2 col-sm-2-print\">\r\n          <div class=\"my-3\">\r\n            <label for=\"exampleInputProjectNumber\" class=\"form-label\"\r\n              >Jurisdiction</label\r\n            >\r\n            <select\r\n              class=\"form-select form-control col\"\r\n              aria-label=\"Default select example\"\r\n              formControlName=\"jurisdiction\"\r\n            >\r\n              <option *ngIf=\"!hasJuridiction\" value=\"\" selected hidden>Select</option>\r\n              <option [value]=\"jurisdiction._id\" *ngFor=\"let jurisdiction of JurisdictionData\">{{jurisdiction.title}}</option>\r\n            \r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-5 col-sm-5-print\">\r\n          <div class=\"my-3\">\r\n            <label >Safety Legislation</label>\r\n            <select\r\n              class=\"form-control\"\r\n              name=\"sellist2\"\r\n              formControlName=\"safetyLeg\"\r\n            >\r\n              <option *ngIf=\"!hasLegist\" value=\"\" selected hidden>Select</option>\r\n              <option [value]=\"safetyLegislation._id\" *ngFor=\"let safetyLegislation of safety\">\r\n              \r\n                Act:  {{safetyLegislation.act}}&nbsp; Regulation:{{safetyLegislation.regulation}}\r\n              </option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-5 col-sm-5-print\">\r\n          <div class=\"my-3\">\r\n            <label class=\"form-label\"\r\n              >Regulator & other Legislation</label\r\n            >\r\n            <select\r\n              class=\"form-select form-control col\"\r\n              id=\"siteName\"\r\n              aria-label=\"Default select example\"\r\n              formControlName=\"regulator\"\r\n            >\r\n              <option *ngIf=\"!hasRegulation\" value=\"\" selected hidden>Select</option>\r\n              <option [value]=\"regulator._id\" *ngFor=\"let regulator of regulatorData\">{{regulator.title}}</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n  </div>\r\n      <hr />\r\n      <h2 *ngIf=\"allCOPSelected.length\">Code Of Practices</h2>\r\n      <div class=\"row\">\r\n        <!--<div class=\"col-3\" *ngFor=\"let item of allCOPSelected;let i=index \">\r\n         <label for=\"\" class=\"d-flex\"><div><i class=\"fas fa-circle mr-1\"></i></div> <div>{{item.title}}</div></label>\r\n        </div> -->\r\n        <div\r\n          *ngFor=\"let item of allCOPSelected; let i = index\"\r\n          class=\"mt-2 col-4\"\r\n        >\r\n          <input\r\n            type=\"checkbox\"\r\n            [id]=\"i+'cop'\"\r\n            class=\"form-check-input\"\r\n            value=\"Working in or near trenches or shafts deeper than 1.5metres\"\r\n            [checked]=\"true\"\r\n            disabled\r\n          />\r\n          <label [for]=\"i+'cop'\" class=\"form-check-label label_2\">{{\r\n            item.title\r\n          }}</label>\r\n        </div>\r\n      </div>\r\n      <hr />\r\n      <h2>High Risk Construction</h2>\r\n      <div class=\"row\" formArrayName=\"riskConstruction2\">\r\n        <div\r\n          *ngFor=\"let control of riskConstruct2().controls; let i = index\" [formGroupName]=\"i\"\r\n          class=\"mt-2 col-4 col-sm-4-print\"\r\n        >\r\n          <input\r\n            type=\"checkbox\" \r\n            [id]=\"i+'hrc'\"\r\n            class=\"form-check-input\"\r\n            formControlName=\"{{highRiskConstruction[i]._id}}\"\r\n            (change)=\"onRiskChange2($event,highRiskConstruction[i]._id,i)\"\r\n            value=\"Working in or near trenches or shafts deeper than 1.5metres\"\r\n            [checked]=\"riskArr[i]\"\r\n          />\r\n          <label  [for]=\"i+'hrc'\" class=\"form-check-label label_2\">{{\r\n            highRiskConstruction[i].title\r\n          }}</label>\r\n        </div>\r\n      </div>\r\n      <hr />\r\n      <div class=\"row\">\r\n        <table class=\"table table-bordered text-center\">\r\n          <thead>\r\n            <tr>\r\n              <th colspan=\"7\" class=\"L_1\">Risk Level Matrix</th>\r\n              <th colspan=\"8\" class=\"L_1\">Risk Analysis</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <th colspan=\"2\" rowspan=\"2\"></th>\r\n              <td colspan=\"5\">Consequence</td>\r\n              <td colspan=\"4\" rowspan=\"2\">\r\n                <div class=\"like_2\">Likelihood</div>\r\n              </td>\r\n              <td colspan=\"4\" rowspan=\"2\">\r\n                <div class=\"like_2\">Consequence</div>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th>1</th>\r\n              <td>2</td>\r\n              <td>3</td>\r\n              <td>4</td>\r\n              <td>5</td>\r\n            </tr>\r\n            <tr>\r\n              <th rowspan=\"5\">\r\n                <div class=\"like_1\">Likelihood</div>\r\n              </th>\r\n              <td>5</td>\r\n              <td class=\"M_1\">M</td>\r\n              <td class=\"H_1\">H</td>\r\n              <td class=\"H_1\">H</td>\r\n              <td class=\"H_1\">H</td>\r\n              <td class=\"H_1\">H</td>\r\n              <td colspan=\"2\">\r\n                <div class=\"space_1\">1</div>\r\n              </td>\r\n              <td colspan=\"2\">Rare</td>\r\n              <td colspan=\"2\">\r\n                <div class=\"space_1\">1</div>\r\n              </td>\r\n              <td colspan=\"2\">Insignificant</td>\r\n            </tr>\r\n            <tr>\r\n              <th>4</th>\r\n              <td class=\"M_1\">M</td>\r\n              <td class=\"M_1\">M</td>\r\n              <td class=\"M_1\">M</td>\r\n              <td class=\"H_1\">H</td>\r\n              <td class=\"H_1\">H</td>\r\n              <td colspan=\"2\">2</td>\r\n              <td colspan=\"2\">Unlikely</td>\r\n              <td colspan=\"2\">2</td>\r\n              <td colspan=\"2\">Minor</td>\r\n            </tr>\r\n            <tr>\r\n              <th>3</th>\r\n              <td class=\"L_1\">L</td>\r\n              <td class=\"M_1\">M</td>\r\n              <td class=\"M_1\">M</td>\r\n              <td class=\"H_1\">H</td>\r\n              <td class=\"H_1\">H</td>\r\n              <td colspan=\"2\">3</td>\r\n              <td colspan=\"2\">Moderate</td>\r\n              <td colspan=\"2\">3</td>\r\n              <td colspan=\"2\">Moderate</td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"col\">2</th>\r\n              <td class=\"L_1\">L</td>\r\n              <td class=\"L_1\">L</td>\r\n              <td class=\"M_1\">M</td>\r\n              <td class=\"M_1\">M</td>\r\n              <td class=\"H_1\">H</td>\r\n              <td colspan=\"2\">4</td>\r\n              <td colspan=\"2\">Likely</td>\r\n              <td colspan=\"2\">4</td>\r\n              <td colspan=\"2\">Major</td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"col\">1</th>\r\n              <td class=\"L_1\">L</td>\r\n              <td class=\"L_1\">L</td>\r\n              <td class=\"L_1\">L</td>\r\n              <td class=\"M_1\">M</td>\r\n              <td class=\"M_1\">M</td>\r\n              <td colspan=\"2\" class=\"mr-2 ml-2\">5</td>\r\n              <td colspan=\"2\">Almost Certain</td>\r\n              <td colspan=\"2\">5</td>\r\n              <td colspan=\"2\">Catastrophic</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <hr />\r\n      <h2>PPE Selection</h2>\r\n      <div class=\"row\" formArrayName=\"PPESelection2\">\r\n        <div\r\n        *ngFor=\"let control of ppe2().controls; let i = index\" [formGroupName]=\"i\"\r\n          class=\"mt-2 col-4 col-sm-4-print\"\r\n        >\r\n          <input\r\n            type=\"checkbox\"\r\n            [id]=\"i+'ppes'\"\r\n            class=\"form-check-input\"\r\n            value=\"Disposable dust mask\"\r\n            formControlName=\"{{PPEselection[i]._id}}\"\r\n            (change)=\"onPPEChange2($event,PPEselection[i]._id,i)\"\r\n            [checked]=\"ppeArr[i]\"\r\n          />\r\n          <label class=\"form-check-label label_2\"  [for]=\"i+'ppes'\">{{\r\n            PPEselection[i].title\r\n          }}</label>\r\n        </div>\r\n      </div>\r\n      <hr />\r\n      <ng-container *ngIf=\"chemicalTask\">\r\n        <h2>SDS Registor</h2>\r\n        <ng-container formArrayName=\"SDSRegister\">\r\n          <div class=\"row\" *ngFor=\"let controls of sdsRegisterFA().controls;let i=index\" [formGroupName]=\"i\">\r\n            <div class=\"col-md-3 col-md-3-print\">\r\n              <div class=\"my-3\">\r\n                <label for=\"sel2\" class=\"form-label\"\r\n                  >Name of Chemical<span  class=\"material-icons ml-3\"\r\n                  style=\"font-size: 19px;\"  (click)=\"addChemical()\" >add_circle_outline</span></label\r\n                >\r\n                <select                  \r\n                class=\"form-control\"\r\n                id=\"sel2\"\r\n                name=\"sellist2\"\r\n                formControlName=\"chemicalName\"\r\n              >\r\n              <option *ngIf=\"!isSelected[i]\" value=\"\" hidden>Select</option>\r\n\r\n                <option *ngFor=\"let item of allChemicals\">\r\n                  {{ item.title }}\r\n                </option>\r\n              </select>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-3 col-md-3-print\">\r\n              <div class=\"my-3\">\r\n                <label for=\"exampleInputProjectNumber\" class=\"form-label\"\r\n                  >Location</label\r\n                >\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  id=\"exampleInputProjectNumber\"\r\n                  aria-describedby=\"emailHelp\"\r\n                  formControlName=\"location\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-2 col-sm-2-print\">\r\n              <div class=\"my-3\">\r\n                <label for=\"exampleInputProjectNumber\" class=\"form-label\"\r\n                  >Hazardous</label\r\n                >\r\n                <select                  \r\n                class=\"form-control\"\r\n                id=\"sel2\"\r\n                name=\"sellist2\"\r\n                formControlName=\"hazardous\"\r\n              >\r\n                <option *ngIf=\"!isHazardous[i]\" value=\"\" selected hidden>Select</option>\r\n                <option value=\"YES\">Yes</option>\r\n                <option value=\"NO\">No</option>\r\n              </select>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-2 col-sm-2-print\">\r\n              <div class=\"my-3\">\r\n                <label for=\"exampleInputProjectNumber\" class=\"form-label\"\r\n                  >Qty</label\r\n                >\r\n                <input\r\n                  type=\"number\"\r\n                  class=\"form-control\"\r\n                  id=\"exampleInputProjectNumber\"\r\n                  aria-describedby=\"emailHelp\"\r\n                  formControlName=\"quantity\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-2 col-sm-2-print\">\r\n              <div class=\"my-3\">\r\n                <label for=\"exampleInputProjectNumber\" class=\"form-label\"\r\n                  >Expiry Date</label\r\n                >\r\n                <input\r\n                  type=\"date\"\r\n                  class=\"form-control\"\r\n                  id=\"exampleInputProjectNumber\"\r\n                  aria-describedby=\"emailHelp\"\r\n                  formControlName=\"expDate\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-10 col-sm-10-print\">\r\n              <div class=\"my-3\">\r\n                <label for=\"formFile\" class=\"form-label\">Attach SDS Sheet</label>\r\n                <input class=\"form-control\" type=\"file\" id=\"formFile\" formControlName=\"file\"/>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-2 col-sm-2-print\">\r\n              <span class=\"material-icons\" style=\"margin-top: 30%\" (click)=\"addActionSDSRegister()\"\r\n                >add_circle_outline\r\n              </span>\r\n              <span class=\"material-icons\" (click)=\"removeSDSRegister(i)\"> remove_circle_outline </span>\r\n            </div>\r\n          </div>\r\n        </ng-container>\r\n      </ng-container>\r\n\r\n   \r\n      <hr />\r\n      <div\r\n        cdkDropList\r\n        class=\"example-list\"\r\n        (cdkDropListDropped)=\"drop($event)\"\r\n      >\r\n        <div\r\n          class=\"example-box setBoxMart\"\r\n          *ngFor=\"let item of jobTaskSelected; let i = index\"\r\n          cdkDrag\r\n        >\r\n          <div>\r\n            <h2>Step:{{i+1}} {{ item.title }}</h2>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <div class=\"col-10\">\r\n                <label for=\"sel2\">Identity Hazards<span  class=\"material-icons ml-3 my-auto p-0\" style=\"font-size: 19px;\"(click)=\"addItem('identifyHazards',i)\" >add_circle_outline</span></label>\r\n                <ol class=\"identifyHaz\">\r\n                  <li *ngFor=\"let hazard of item.allHazardsTitle;let j=index\"  >\r\n                    <div class=\"d-flex\">\r\n                       <div class=\" stepItem p-1\" >{{ hazard.title }}</div>\r\n                       <div class=\"\" *ngIf=\"!hazard.id\"><mat-icon  class=\"mr-1\" style=\"font-size: 18px;\"(click)=\"editHazrds('editIdentifyHazards',hazard.title,i)\" >edit</mat-icon>  <mat-icon  style=\"font-size: 18px;\"(click)=\"deleteHazrds('identifyHazards',hazard.title, i,j)\" >delete</mat-icon>  </div>\r\n                </div>   \r\n                  </li>  \r\n                </ol>         \r\n            </div>\r\n            <ng-container  formArrayName=\"riskLevel\">\r\n              <div class=\"col-2 col-sm-2-print\" [formGroupName]=\"i\">\r\n                <label for=\"sel1\">Risk</label>\r\n                <select\r\n                  class=\"form-control\"\r\n                  id=\"sel1\"\r\n                  name=\"sellist1\"\r\n                  formControlName=\"riskLevel\"\r\n                >\r\n                  <option *ngFor=\"let item of riskLevel\" [value]=\"item._id\">{{item.title}}</option>           \r\n                </select>\r\n              </div>\r\n            </ng-container>\r\n           \r\n            <div class=\"col-10 my-3\">\r\n              \r\n                <label for=\"sel2\">Control and Action Required<span  class=\"material-icons ml-3 my-auto p-0\" style=\"font-size: 19px;\"(click)=\"addItem('ctrlActreq',i)\" >add_circle_outline</span></label>\r\n                <ol class=\"identifyHaz\">\r\n                  <li *ngFor=\"let contrlActReq of item.allContrlActReqTitle;let j=index\"  > \r\n                    <div class=\"\">\r\n                      <div class=\" stepItem p-1\">{{contrlActReq.title }}</div>\r\n                  <div  class=\"col-3\"  *ngIf=\"!contrlActReq.id\"> <mat-icon  class=\"mr-1\" style=\"font-size: 18px;\"(click)=\"editHazrds('editCtrlActreq',contrlActReq.title,i)\">edit</mat-icon>  <mat-icon   style=\"font-size: 18px;\"(click)=\"deleteHazrds('ctrlActreq', contrlActReq.title,i,j)\">delete</mat-icon>                  </div>\r\n                </div> \r\n                  </li>  \r\n                </ol>  \r\n               \r\n              \r\n            </div>\r\n\r\n           <div> \r\n             <ng-container formArrayName=\"residualRisk\">\r\n              <div class=\" my-3\" [formGroupName]=\"i\">\r\n                <label for=\"sel1\">Residual Risk</label>\r\n                <select\r\n                  class=\"form-control\"\r\n                  id=\"sel1\"\r\n                  name=\"sellist1\"\r\n                  formControlName=\"resiRiskLevel\"\r\n                >\r\n                <option *ngFor=\"let item of resiRiskLevel\" [value]=\"item._id\">{{item.title}}</option>           \r\n              \r\n                </select>\r\n                </div>\r\n              </ng-container>\r\n               <ng-container formArrayName=\"persResp\"><label for=\"sel1\" class=\"pt-2\">Person Responsible</label>\r\n                <div [formGroupName]=\"i\">\r\n                  <select\r\n                   multiple\r\n                   class=\"form-control\"\r\n                   formControlName=\"personRes\"\r\n                   id=\"sel2\" [size]=\"item.staffTitle.length\"\r\n                   name=\"sellist2\"\r\n                 >\r\n                   <option\r\n                     *ngFor=\"let item of item.staffTitle\"\r\n                   >\r\n                     {{ item.title }}\r\n                   </option>\r\n                 </select>\r\n                </div> \r\n                 </ng-container>\r\n                 </div>\r\n          </div>\r\n          <hr />\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        \r\n        \r\n        <!-- <br /><br />\r\n        <h3 class=\"txt_1\">\r\n          Only persons who have completed the singoff are authorised to work\r\n          on the relevent tasks covered by this document. <br />\r\n          Note: Work must be performed in accordance with this SWMS, any Risk\r\n          Assessment prepared in relation to this work and any <br />\r\n          relevent Safe WorkProcedures.<br />\r\n          This SWMS must be accessible for inspection untill the energised\r\n          electrical work to which this SWMS relates is completed. If the\r\n          <br />\r\n          SWMS is revised, all version should be kept.<br />\r\n          If a Notifiable incident occurs in relation to the high-risk\r\n          construction work in this SWMS, the SWMS must be kept for at least 2\r\n          years<br />\r\n          from the date of the Notifiable incident.<br /><br />\r\n          If Changes are made to the work practice and the content of the SWMS\r\n          workers will need sign to confirm that they haverecieved an<br />\r\n          updated briefing, undestand the content and will comply with the\r\n          requirements.<br /><br />\r\n          Where there are other parties working adjascent to the contractor\r\n          and the work activity that could impact upon the safety and\r\n          welfare<br />\r\n          of others not directly employed, SWMS will make references to how\r\n          they will coordinate the work activity and where applicable<br />\r\n          communicate to the other parties.<br /><br />\r\n        </h3> -->\r\n      </div>\r\n      \r\n      <!-- <div  class=\"row mb-2\">\r\n        <ckeditor style=\"width: 100%;\" [editor]=\"Editor\" data=\"<h1 class='form-control' >\r\n          <strong>Worker consultation, instruction, training, toolbox talks, review,\r\n          acceptance record:</strong>\r\n        </h1>\"></ckeditor>   \r\n\r\n        \r\n      </div> -->\r\n\r\n\r\n      <div class=\"row\">\r\n        <ckeditor formControlName=\"editor\" style=\"width: 100%;\" [editor]=\"Editor\" [data]=\"secondEditor\"></ckeditor>  \r\n      </div>\r\n      <hr />\r\n      <h3>Name of worker (Print and Sign)</h3>\r\n      <div class=\"row\">\r\n        <div class=\"col-md-7 col-sm-7-print\">\r\n          <div class=\"my-3\">\r\n            <label for=\"exampleInputProjectNumber\" class=\"form-label\"\r\n              >Employee 2</label\r\n            >\r\n            <input\r\n              formControlName=\"employee2\"\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"exampleInputProjectNumber\"\r\n              aria-describedby=\"emailHelp\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-5 col-sm-5-print\">\r\n          <div class=\"form-floating\">\r\n            <label>Signature*</label>\r\n            <div class=\"sign\">\r\n              <signature-pad\r\n                [options]=\"signaturePadOptions2\"\r\n                (onBeginEvent)=\"drawStart2()\"\r\n                (onEndEvent)=\"drawComplete2()\"\r\n                #Signature2\r\n              ></signature-pad>\r\n            </div>\r\n          </div>\r\n          <button  class=\"btn btn-outline-primary mt-1\" (click)=\"clear2()\">\r\n            Clear\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <button *ngIf=\"check!='print'\" type=\"submit\" class=\"btn btn-outline-primary\"  (click)=\"onSubmit()\">Submit</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  \r\n</div>\r\n<br>\r\n<div *ngIf=\"check=='print' && selectedFile1\">\r\n  <span *ngFor=\"let img of selectedFile1\">\r\n    <div >\r\n      <img  height=\"400\" width=\"400\" [src]=\"img\">\r\n    </div>\r\n  </span>\r\n </div> \r\n</div>\r\n\r\n","\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { Component, ElementRef, OnInit, AfterViewInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormArray, Validators } from '@angular/forms';\r\nimport { SignaturePad } from 'angular2-signaturepad';\r\nimport { ViewChild } from '@angular/core';\r\nimport { DynamicFormsService } from 'src/app/utils/services/dynamic-forms.service';\r\nimport { SetTitleService } from 'src/app/utils/services/set-title.service';\r\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\r\nimport { AddItemComponent } from './add-item/add-item.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport Swal from 'sweetalert2';\r\nimport * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { data } from 'jquery';\r\nimport { ThrowStmt } from '@angular/compiler';\r\nimport { UploadFileServiceService } from 'src/app/utils/services/upload-file-service.service';\r\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\r\n\r\n\r\n@Component({\r\n  selector: 'app-risk-assessment-swms',\r\n  templateUrl: './risk-assessment-swms.component.html',\r\n  styleUrls: ['./risk-assessment-swms.component.scss'],\r\n})\r\nexport class RiskAssessmentSWMSComponent implements OnInit, AfterViewInit {\r\n  @ViewChild('projectManager') projectManager: ElementRef;\r\n  @ViewChild('signaturePad1Div') signaturePad1Div: ElementRef;\r\n  @ViewChild('Signature1') signaturePad1: SignaturePad;\r\n  @ViewChild('Signature2') signaturePad2: SignaturePad;\r\n  @ViewChild('timepicker') timepicker: ElementRef;\r\n  public Editor = ClassicEditor;\r\n\r\n  riskAssessmentFb!: FormGroup;\r\n  SWMSTab!: FormArray;\r\n  RiskAssessment = true;\r\n  SWMSShow = false;\r\n  chemicalTask = false;\r\n  //checkboxes array\r\n  jobTask = [];\r\n  staff = [];\r\n  resiRiskLevel = [];\r\n  riskLevel = [];\r\n  highRiskConstruction = [];\r\n  PPEselection = [];\r\n  licenseAndQualification = [];\r\n  checkArray = [];\r\n  allJobNumbers = [];\r\n  allHazards = [];\r\n  allContrlActReq = [];\r\n  id: any;\r\n  isSelected = [];\r\n  isHazardous = [];\r\n  hasJuridiction = false;\r\n  hasLegist = false;\r\n  hasRegulation = false;\r\n  minDate = new Date();\r\n  maxDate = new Date();\r\n  cardImageBase64: any;\r\n  highRiskConstruction2 = [\r\n    {\r\n      label: 'Working in or near trenches or shafts deeper than 1.5metres',\r\n      value: '',\r\n    },\r\n    { label: 'Work in or near a confined space', value: '' },\r\n    {\r\n      label:\r\n        'Work in an area that may have a contaminated or flammable atmosphere',\r\n      value: '',\r\n    },\r\n    { label: 'Working around or near mobile plant', value: '' },\r\n    { label: 'Work with near or near asbestos', value: '' },\r\n    { label: 'Working with hazardous substances', value: '' },\r\n    { label: 'Working with or near tilt-up/precast concrete', value: '' },\r\n    { label: 'Risk of falls higher than 2 metres', value: '' },\r\n    {\r\n      label: 'Working near on or adjacent to a road or rail corridor',\r\n      value: '',\r\n    },\r\n    { label: 'Working on or near telecommunication tower', value: '' },\r\n    { label: 'Working on or near telecommunication tower', value: '' },\r\n    { label: 'Work near explosives', value: '' },\r\n    {\r\n      label:\r\n        'Work in or near water or other liquid that involves a risk of drowning',\r\n      value: '',\r\n    },\r\n    { label: 'Demolition of load-bearing structure', value: '' },\r\n    { label: 'Diving work', value: '' },\r\n  ];\r\n\r\n  PPEselection2 = [\r\n    { label: 'Disposable dust mask', value: '' },\r\n    { label: 'Dust Mas', value: '' },\r\n    { label: 'Face shield', value: '' },\r\n    { label: 'Full face respirator', value: '' },\r\n    { label: 'Gttors', value: '' },\r\n    { label: 'Half face respirator', value: '' },\r\n    { label: 'Hard Hat', value: '' },\r\n    { label: 'Hearing protection', value: '' },\r\n    { label: 'High-Vis Clothing', value: '' },\r\n    { label: 'Lock Out Tags', value: '' },\r\n    { label: 'Long sleeve/Long pants', value: '' },\r\n    { label: 'Out of Service Tags', value: '' },\r\n    { label: 'Protective gloves', value: '' },\r\n    { label: 'Rescue kit', value: '' },\r\n    { label: 'Safety boots', value: '' },\r\n    { label: 'Safety glasses', value: '' },\r\n    { label: 'Sun Screen', value: '' },\r\n    { label: 'torch', value: '' },\r\n    { label: 'Wide Brim Hat', value: '' },\r\n  ];\r\n  secondEditor = `\r\n  <h1 class='form-control' >\r\n  <strong>Worker consultation, instruction, training, toolbox talks, review,\r\n  acceptance record:</strong>\r\n  </h1>\r\n  <br /><br />\r\n  \r\n  <h3 class='txt_1'>\r\n    Only persons who have completed the singoff are authorised to work\r\n    on the relevent tasks covered by this document. <br />\r\n    Note: Work must be performed in accordance with this SWMS, any Risk\r\n    Assessment prepared in relation to this work and any <br />\r\n    relevent Safe WorkProcedures.<br />\r\n    This SWMS must be accessible for inspection untill the energised\r\n    electrical work to which this SWMS relates is completed. If the\r\n    <br />\r\n    SWMS is revised, all version should be kept.<br />\r\n    If a Notifiable incident occurs in relation to the high-risk\r\n    construction work in this SWMS, the SWMS must be kept for at least 2\r\n    years<br />\r\n    from the date of the Notifiable incident.<br /><br />\r\n    If Changes are made to the work practice and the content of the SWMS\r\n    workers will need sign to confirm that they haverecieved an<br />\r\n    updated briefing, undestand the content and will comply with the\r\n    requirements.<br /><br />\r\n    Where there are other parties working adjascent to the contractor\r\n    and the work activity that could impact upon the safety and\r\n    welfare<br />\r\n    of others not directly employed, SWMS will make references to how\r\n    they will coordinate the work activity and where applicable<br />\r\n    communicate to the other parties.<br /><br />\r\n  </h3>`\r\n  riskArr = [];\r\n  COPArr = [];\r\n  ppeArr = [];\r\n  taskArr = [];\r\n  licenceArr = [];\r\n  jobTaskData = [];\r\n  jobTaskSelected = [];\r\n  hazard = [];\r\n  projectMang = [];\r\n  allChemicals = [];\r\n  allCOPSelected = [];\r\n  singRequired: any;\r\n  signRequired: any;\r\n\r\n\r\n  regulatorData: any = [];\r\n  safety: any = [];\r\n  JurisdictionData: any = [];\r\n  states: any = [];\r\n  check: any;\r\n  selectedFile1 = [];\r\n  dateGet: Date;\r\n  setTime:any\r\n  constructor(\r\n    public router: Router,\r\n    private dialog: MatDialog,\r\n    private fb: FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private setTitle: SetTitleService,\r\n    public upload: UploadFileServiceService\r\n  ) {\r\n    this.check = localStorage.getItem('key');\r\n    console.log(\"key check\", this.check);\r\n    this.id = this.activatedRoute.snapshot.params.id;\r\n    console.log(\"id\", this.id)\r\n    this.riskAssessmentFb = this.fb.group({\r\n      SWMSTab: this.fb.array([]),\r\n      jobNumber: ['', Validators.required],\r\n      siteName: ['', Validators.required],\r\n      customerName: ['', Validators.required],\r\n      streetNo: ['', Validators.required],\r\n      streetAddr: ['', Validators.required],\r\n      suburb: ['', Validators.required],\r\n      town: ['', Validators.required],\r\n      custConct: ['', Validators.required],\r\n      custConctPh: ['', Validators.required],\r\n      custEmail: ['', Validators.required],\r\n      employee1: ['', Validators.required],\r\n      employee2: ['', Validators.required],\r\n      dateTime: ['', Validators.required],\r\n      statesSWMS: ['', Validators.required],\r\n      projectManager: ['', Validators.required],\r\n      date: [new Date()],\r\n      projectManagerSWMS: ['', Validators.required],\r\n      jurisdiction: ['', Validators.required],\r\n      safetyLeg: ['', Validators.required],\r\n      regulator: ['', Validators.required],\r\n      location: [''],\r\n      qty: [],\r\n      //expiryDate: ['',Validators.required],\r\n      hazardous: this.fb.array([]),\r\n      ppeSelection: this.fb.array([]),\r\n      file: this.fb.array([]),\r\n      SDSRegister: this.fb.array([]),\r\n      riskLevel: this.fb.array([]),\r\n      residualRisk: this.fb.array([]),\r\n      persResp: this.fb.array([]),\r\n      jobTask: this.fb.array([]),\r\n      riskConstruction: this.fb.array([]),\r\n      riskConstruction2: this.fb.array([]),\r\n      PPEselection: this.fb.array([]),\r\n      PPESelection2: this.fb.array([]),\r\n      licence: this.fb.array([]),\r\n      editor: [\"\"],\r\n      signature1: [\"\"],\r\n      signature2: [\"\"]\r\n    });\r\n  }\r\n  get siteControls() {\r\n    return this.riskAssessmentFb.controls\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllJobTask();\r\n    this.getAllPPE();\r\n    this.getAllHighRisk();\r\n    this.getAllLicence();\r\n    this.getAllProjectMang();\r\n    this.addActionSDSRegister();\r\n    this.getAllJobNumber();\r\n    this.getAllResidualRiskLevel();\r\n    this.getAllStaff();\r\n    this.getAllRiskLevel();\r\n    this.getAllChemical();\r\n    this.getAllHazard();\r\n    this.getAllContrActReq();\r\n    this.getAllRegulator();\r\n    this.getAllSafe();\r\n    this.getAllState();\r\n    this.getAllJurisdiction();\r\n    if (this.id != \"form\") {\r\n      this.getAssessmentByid(this.id);\r\n    }\r\n    // this.logicalFormInfo.printing$.subscribe((res)=>{\r\n    //   console.log(res);\r\n    //   if(res=='print')\r\n    //   {\r\n    //     console.log(\"print\");\r\n    //     setTimeout( function() { window.print(); }, 3000);\r\n    //   }\r\n    // }) \r\n    this.setTitle.setTitle('WHS-Risk Assesment Form');\r\n    // this.riskAssessmentFb.get('jobNumber').valueChanges.subscribe((res) => {\r\n    //   if (res) {\r\n    //     console.log('jobNumberres', res);\r\n    //     this.allJobNumbers.forEach((item) => {\r\n    //       if (res === item._id) {\r\n    //         console.log('Id found', item);\r\n    //         this.riskAssessmentFb.patchValue({\r\n    //           siteName: item.siteName,\r\n    //           customerName: item.customerName,\r\n    //           streetNo: item.streetNumber,\r\n    //           streetAddr: item.streetAddress,\r\n    //           subUrb: item.suburb,\r\n    //           statesSWMS: item.state,\r\n    //           custConct: item.customerContact,\r\n    //           custConctPh: item.customerContactPhone,\r\n    //           custEmail: item.customerEmail,\r\n    //           jobNumberDupl: this.riskAssessmentFb.get('jobNumber').value,\r\n    //         });\r\n    //       }\r\n    //     });\r\n    //   }\r\n    //  // this.riskAssessmentFb.get('jobNumber').updateValueAndValidity();\r\n    // });\r\n\r\n    this.riskAssessmentFb.get('statesSWMS').valueChanges.subscribe((res) => {\r\n      if (res) {\r\n        console.log(res);\r\n\r\n        for (let i = 0; i < this.states.length; i++) {\r\n          if (res === this.states[i]._id) {\r\n            console.log(\"id found\");\r\n\r\n            this.riskAssessmentFb.get('jurisdiction').setValue(this.states[i].jurisdictionId._id);\r\n            this.riskAssessmentFb.get('safetyLeg').setValue(this.states[i].safetyLegislationId._id);\r\n            this.riskAssessmentFb.get('regulator').setValue(this.states[i].regulatorId._id);\r\n            break;\r\n          }\r\n        }\r\n\r\n\r\n      }\r\n    });\r\n  }\r\n  getAssessmentByid(id) {\r\n    console.log(\"iddd\", id);\r\n    this.logicalFormInfo.getAssessmentbyId(id).subscribe((res: any) => {\r\n      this.allCOPSelected = [];\r\n      console.log(\"assesment by id\", res.data);\r\n      let check = async () => { this.signaturePad1 != null }\r\n      check().then(() => {\r\n        this.signaturePad1.fromDataURL(res.data.signature1)\r\n      })\r\n      // let time=res.data.dateTime\r\n      //  let newTime=time.split(/[-,T]/)\r\n      //  newTime=newTime.splice(3).toString()\r\n      //  newTime=newTime.split(\"\")\r\n      //  newTime=newTime.splice(0,5).join('')\r\n      //  this.setTime=newTime.toString() \r\n      //  console.log(\"date=================>>>>>>>>>.\",res.data.dateTime);\r\n\r\n       let  dateTime=new  Date(res.data.dateTime) \r\n       \r\n       let time=dateTime.toTimeString()\r\n       console.log(\"date1=================>>>>>>>>>.\",time);\r\n       this.setTime=time.slice(0,5)\r\n       // console.log(\"date2=================>>>>>>>>>.\",newTime);\r\n        //this.setTime=newTime.splice(0,5).join('')\r\n        // newTime=newTime.split(\"\")\r\n       // let  newTime2=newTime.splice(5,3).join('')\r\n        // this.setTime=newTime.toString() \r\n        console.log(\"date=================>>>>>>>>>.\", this.setTime);\r\n\r\n       let date=res.data.dateTime\r\n     //let newDate=date.split(/[-,T]/)\r\n\r\n    //  newTime=newTime.splice(3).toString()\r\n      this.dateGet= new Date(date)\r\n    \r\n     \r\n      let check1 = async () => { this.signaturePad2 != null }\r\n      check1().then(() => {\r\n        this.signaturePad2.fromDataURL(res.data.signature2)\r\n      })\r\n      if (res?.data.jurisdiction != \"\") {\r\n        this.hasJuridiction = true;\r\n      }\r\n      if (res?.data.safetyLeg != \"\") {\r\n        this.hasLegist = true;\r\n      }\r\n      if (res?.data.regulator != \"\") {\r\n        this.hasRegulation = true;\r\n      }\r\n      this.riskAssessmentFb.patchValue({\r\n        ...res.data\r\n      })\r\n      const item = <FormArray>this.riskAssessmentFb.controls['SDSRegister'];\r\n      while (item.length > 0) {\r\n        item.removeAt(0);\r\n      }\r\n      res?.data?.SDSRegister.forEach((element, index) => {\r\n        this.chemicalTask = true;\r\n        console.log(\"file name\", element);\r\n\r\n        if (element?.chemicalName != \"\") {\r\n          this.isSelected[index] = true;\r\n        }\r\n        if (element?.hazardous != \"\") {\r\n          this.isHazardous[index] = true;\r\n        }\r\n        this.PushActionSDSRegister(element)\r\n        if(element.file){\r\n          this.selectedFile1.push(element.file);\r\n          console.log(\"selected\", this.selectedFile1);\r\n        }\r\n        \r\n      });\r\n      res.data.riskLevel.forEach(element => {\r\n        console.log(\"riskLevel\", element.riskLevel);\r\n        this.PushActionRiskLevel(element);\r\n      });\r\n      res.data.residualRisk.forEach(element => {\r\n        this.PushActionResiRiskLevel(element);\r\n      });\r\n      res.data.riskLevel.forEach(element => {\r\n        this.PushActionPersonRes(element);\r\n      });\r\n      res.data.codeOfPract.forEach(element => {\r\n        console.log(\"eleee\", element);\r\n        this.allCOPSelected.push(element);\r\n      });\r\n      res.data.identifyHazards.forEach((element, index) => {\r\n        console.log(\"eleeeme\", element);\r\n        this.checkHazards(element, index);\r\n        //  element.allHazardsTitle.forEach(ele => { \r\n        //   this.checkHazards(ele,index);\r\n        //  });\r\n      });\r\n      res.data.jobTask.forEach((element, index) => {\r\n        this.checkJobtask(element, index);\r\n        // this.checkCOP(element,index);\r\n      });\r\n      res.data.PPEselection.forEach((element, index) => {\r\n        this.checkPPE(element, index);\r\n      });\r\n      res.data.PPESelection2.forEach((element, index) => {\r\n        this.checkPPE(element, index);\r\n      });\r\n      res.data.riskConstruction.forEach((element, index) => {\r\n        this.checkRisk(element, index);\r\n      });\r\n      res.data.licence.forEach((element, index) => {\r\n        this.checkLicense(element, index);\r\n      });\r\n    })\r\n     \r\n     \r\n  }\r\n  checkHazards(data, i) {\r\n    for (let j = 0; j < this.jobTaskData.length; j++) {\r\n      if (this.jobTaskData[j]._id == data._id) {\r\n        this.jobTaskData[j].allHazardsTitle = [];\r\n        this.jobTaskData[j].allContrlActReqTitle = [];\r\n        this.jobTaskData[j].allHazardsTitle = data.allHazardsTitle;\r\n        this.jobTaskData[j].allContrlActReqTitle = data.allContrlActReqTitle;\r\n        console.log(\"allHazardsTitle\", this.jobTaskData[j].allHazardsTitle);\r\n        console.log(\"allHazardsTitle\", this.jobTaskData[j].allContrlActReqTitle);\r\n\r\n      }\r\n    }\r\n  }\r\n  checkJobtask(element, index) {\r\n    let z = this.jobTaskData[index]._id;\r\n    console.log(\"z\", z);\r\n    console.log(\"ele\", element[z]);\r\n    let c = this.riskAssessmentFb.controls['jobTask'] as FormArray\r\n    let d = c.controls[index] as FormGroup\r\n    if (element[z]) {\r\n      d.controls[z].setValue(element[z]);\r\n      this.jobTaskSelected.push(this.jobTaskData[index])\r\n      console.log(\"job selected\", this.jobTaskSelected);\r\n    }\r\n  }\r\n  checkRisk(element, index) {\r\n    let z = this.highRiskConstruction[index]._id;\r\n    console.log(\"ele\", element[z]);\r\n    let c = this.riskAssessmentFb.controls['riskConstruction'] as FormArray\r\n    let d = c.controls[index] as FormGroup\r\n    if (element[z]) {\r\n      d.controls[z].setValue(element[z]);\r\n    }\r\n  }\r\n  checkPPE(element, index) {\r\n    let z = this.PPEselection[index]._id;\r\n    console.log(\"ele\", element[z]);\r\n    let c = this.riskAssessmentFb.controls['PPEselection'] as FormArray\r\n    let d = c.controls[index] as FormGroup\r\n    if (element[z]) {\r\n      d.controls[z].setValue(element[z]);\r\n    }\r\n  }\r\n  checkLicense(element, index) {\r\n    let z = this.licenseAndQualification[index]._id;\r\n    console.log(\"ele\", element[z]);\r\n    let c = this.riskAssessmentFb.controls['licence'] as FormArray\r\n    let d = c.controls[index] as FormGroup\r\n    if (element[z]) {\r\n      d.controls[z].setValue(element[z]);\r\n    }\r\n\r\n  }\r\n  jobNoSel() {\r\n    this.allJobNumbers.forEach((item) => {\r\n      if (this.riskAssessmentFb.get('jobNumber').value === item._id) {\r\n        console.log('Id found', item);\r\n        this.riskAssessmentFb.patchValue({\r\n          siteName: item.siteName,\r\n          customerName: item.customerName,\r\n          streetNo: item.streetNumber,\r\n          streetAddr: item.streetAddress,\r\n          suburb: item.suburb,\r\n          statesSWMS: item.stateId._id,\r\n          custConct: item.customerContact,\r\n          custConctPh: item.customerContactPhone,\r\n          custEmail: item.customerEmail,\r\n          jobNumber: this.riskAssessmentFb.get('jobNumber').value,\r\n        });\r\n      }\r\n    });\r\n    this.riskAssessmentFb.get('jobNumber').updateValueAndValidity();\r\n  }\r\n\r\n  addActionRiskLevel() {\r\n    {\r\n      this.riskLevelFA().push(this.riskLevelFG());\r\n    }\r\n  }\r\n  PushActionRiskLevel(data) {\r\n    {\r\n      this.riskLevelFA().push(this.GetriskLevelFG(data));\r\n    }\r\n  }\r\n  addActionResiRiskLevel() {\r\n    {\r\n      this.residlRiskLevelFA().push(this.residlRiskLevelFG());\r\n    }\r\n  }\r\n  PushActionResiRiskLevel(data) {\r\n    {\r\n      this.residlRiskLevelFA().push(this.GetresidlRiskLevelFG(data));\r\n    }\r\n  }\r\n  addActionPersonRes() {\r\n    {\r\n      this.personResFA().push(this.personResFG());\r\n    }\r\n  }\r\n  PushActionPersonRes(data) {\r\n    {\r\n      this.personResFA().push(this.GetpersonResFG(data));\r\n    }\r\n  }\r\n  addActionSDSRegister() {\r\n    {\r\n      this.sdsRegisterFA().push(this.sdsRegisterFG());\r\n    }\r\n  }\r\n  PushActionSDSRegister(data) {\r\n    {\r\n      this.sdsRegisterFA().push(this.GetsdsRegisterFG(data));\r\n    }\r\n  }\r\n  jobtask(): FormArray {\r\n    return this.riskAssessmentFb.get('jobTask') as FormArray;\r\n  }\r\n  COP(): FormArray {\r\n    return this.riskAssessmentFb.get('CodeOfPract') as FormArray;\r\n  }\r\n  riskConstruct(): FormArray {\r\n    return this.riskAssessmentFb.get('riskConstruction') as FormArray;\r\n  }\r\n  riskConstruct2(): FormArray {\r\n    return this.riskAssessmentFb.get('riskConstruction2') as FormArray;\r\n  }\r\n  ppe(): FormArray {\r\n    return this.riskAssessmentFb.get('PPEselection') as FormArray;\r\n  }\r\n  ppe2(): FormArray {\r\n    return this.riskAssessmentFb.get('PPESelection2') as FormArray;\r\n  }\r\n  Licence(): FormArray {\r\n    return this.riskAssessmentFb.get('licence') as FormArray;\r\n  }\r\n  riskLevelFA(): FormArray {\r\n    return this.riskAssessmentFb.get('riskLevel') as FormArray;\r\n  }\r\n  residlRiskLevelFA(): FormArray {\r\n    return this.riskAssessmentFb.get('residualRisk') as FormArray;\r\n  }\r\n  sdsRegisterFA(): FormArray {\r\n    return this.riskAssessmentFb.get('SDSRegister') as FormArray;\r\n  }\r\n  personResFA(): FormArray {\r\n    return this.riskAssessmentFb.get('persResp') as FormArray;\r\n  }\r\n  riskLevelFG(): FormGroup {\r\n    return this.fb.group({\r\n      riskLevel: [''],\r\n    });\r\n  }\r\n  GetriskLevelFG(data): FormGroup {\r\n    return this.fb.group({\r\n      riskLevel: data.riskLevel\r\n    });\r\n  }\r\n  residlRiskLevelFG(): FormGroup {\r\n    return this.fb.group({\r\n      resiRiskLevel: [''],\r\n    });\r\n  }\r\n  GetresidlRiskLevelFG(data): FormGroup {\r\n    return this.fb.group({\r\n      resiRiskLevel: data.resiRiskLevel\r\n    });\r\n  }\r\n  personResFG(): FormGroup {\r\n    return this.fb.group({\r\n      personRes: [''],\r\n    });\r\n  }\r\n  GetpersonResFG(data): FormGroup {\r\n    return this.fb.group({\r\n      personRes: [''],\r\n    });\r\n  }\r\n  jobtaskk(index): FormGroup {\r\n    return this.fb.group({\r\n      [this.jobTaskData[index]._id]: ['']\r\n    });\r\n  }\r\n  codeOfPrac(index): FormGroup {\r\n    return this.fb.group({\r\n      cop: ['']\r\n    });\r\n  }\r\n  riskCons(index): FormGroup {\r\n    return this.fb.group({\r\n      [this.highRiskConstruction[index]._id]: ['']\r\n    });\r\n  }\r\n  ppeSelect(index): FormGroup {\r\n    return this.fb.group({\r\n      [this.PPEselection[index]._id]: ['']\r\n    });\r\n  }\r\n  license(index): FormGroup {\r\n    return this.fb.group({\r\n      [this.licenseAndQualification[index]._id]: ['']\r\n    });\r\n  }\r\n  // add(): FormArray {\r\n  //   return this.riskAssessmentFb.get('arrObj') as FormArray;\r\n  // }\r\n  sdsRegisterFG(): FormGroup {\r\n    return this.fb.group({\r\n      chemicalName: [''],\r\n      location: [''],\r\n      hazardous: [''],\r\n      quantity: [''],\r\n      expDate: [''],\r\n      file: ['']\r\n    });\r\n  }\r\n  GetsdsRegisterFG(data): FormGroup {\r\n    return this.fb.group({\r\n      chemicalName: data.chemicalName,\r\n      location: data.location,\r\n      hazardous: data.hazardous,\r\n      quantity: data.quantity,\r\n      expDate: data.expDate,\r\n      file: data.file\r\n\r\n\r\n      // this.add().controls[index].get(\"chemicalName\").setValue(res.data.arrObj[index].chemicalName)\r\n      // this.add().controls[index].get(\"location\").setValue(res.data.arrObj[index].location)\r\n      // this.add().controls[index].get(\"hazardous\").setValue(res.data.arrObj[index].hazardous)\r\n      // this.add().controls[index].get(\"quantity\").setValue(res.data.arrObj[index].quantity)\r\n\r\n    });\r\n  }\r\n  removeSDSRegister(i) {\r\n    const item = <FormArray>this.riskAssessmentFb.controls['SDSRegister'];\r\n    if (item.length > 1) {\r\n      item.removeAt(i);\r\n    }\r\n  }\r\n  showsite() {\r\n    this.RiskAssessment = true;\r\n    this.SWMSShow = false;\r\n  }\r\n  showAction() {\r\n    this.SWMSShow = true;\r\n    this.RiskAssessment = false;\r\n  }\r\n  public signaturePadOptions1: Object = {\r\n    // passed through to szimek/signature_pad constructor\r\n    minWidth: 1,\r\n    canvasWidth: 450,\r\n    canvasHeight: 100,\r\n  };\r\n  public signaturePadOptions2: Object = {\r\n    // passed through to szimek/signature_pad constructor\r\n    minWidth: 1,\r\n    canvasWidth: 430,\r\n    canvasHeight: 100,\r\n  };\r\n\r\n  ngAfterViewInit() {\r\n    if (this.check == 'print') {\r\n      setTimeout(function () { window.print(); }, 3000);\r\n      localStorage.setItem('key', ' ');\r\n    }\r\n    // this.signaturePad is now available\r\n    //this.signaturePad1.set('minWidth', 1); // set szimek/signature_pad options at runtime\r\n    // this.signaturePad2.set('minWidth', 1); // set szimek/signature_pad options at runtime\r\n    //this.signaturePad1.clear(); // invoke functions from szimek/signature_pad API\r\n    // this.signaturePad2.clear(); // invoke functions from szimek/signature_pad API\r\n    console.log('clear1 &2');\r\n    console.log(this.signaturePad1Div)\r\n  }\r\n\r\n  drawComplete1() {\r\n    // will be notified of szimek/signature_pad's onEnd event\r\n    console.log(this.signaturePad1.toDataURL());\r\n    this.riskAssessmentFb.controls[\"signature1\"].setValue(this.signaturePad1.toDataURL());\r\n    this.singRequired = this.riskAssessmentFb.controls['signature1'].invalid\r\n  }\r\n  clear1() {\r\n    console.log('clear1');\r\n    this.signaturePad1.clear();\r\n\r\n    this.singRequired = this.riskAssessmentFb.controls['signature1'].untouched\r\n  }\r\n  drawStart1() {\r\n    // will be notified of szimek/signature_pad's onBegin event\r\n    console.log('begin drawing');\r\n\r\n    //this.singRequired = this.riskAssessmentFb.controls['signaturePad1'].invalid\r\n  }\r\n  drawComplete2() {\r\n    // will be notified of szimek/signature_pad's onEnd event\r\n    console.log(this.signaturePad2.toDataURL());\r\n    this.riskAssessmentFb.controls[\"signature2\"].setValue(this.signaturePad2.toDataURL());\r\n    this.signRequired = this.riskAssessmentFb.controls['signature2'].invalid\r\n  }\r\n  clear2() {\r\n    console.log('clear2');\r\n    this.signaturePad2.clear();\r\n\r\n    this.signRequired = this.riskAssessmentFb.controls['signature2'].untouched\r\n  }\r\n  drawStart2() {\r\n    // will be notified of szimek/signature_pad's onBegin event\r\n    console.log('begin drawing');\r\n\r\n    //this.signRequired = this.riskAssessmentFb.controls['signaturePad2'].invalid\r\n  }\r\n\r\n  getAllJobTask() {\r\n    this.logicalFormInfo.getAllJobtask().subscribe((res: any) => {\r\n      this.jobTaskData = res.data;\r\n      console.log('jobTaskDetails=>', this.jobTaskData);\r\n      for (let i = 0; i < this.jobTaskData.length; i++) {\r\n        // this.taskArr[i] = 0;\r\n        this.jobtask().push(this.jobtaskk(i));\r\n      }\r\n    });\r\n  }\r\n\r\n  getAllPPE() {\r\n    this.logicalFormInfo.getAllPPE().subscribe((res: any) => {\r\n      // console.log('PPE=>', res);\r\n      this.PPEselection = res.data;\r\n      for (let i = 0; i < this.PPEselection.length; i++) {\r\n        this.ppeArr[i] = 0;\r\n        this.ppe().push(this.ppeSelect(i));\r\n        this.ppe2().push(this.ppeSelect(i));\r\n      }\r\n    });\r\n  }\r\n  getAllProjectMang() {\r\n    this.logicalFormInfo.getAllProjectMang().subscribe((res: any) => {\r\n      this.projectMang = res.data;\r\n      // console.log('getAllProjectMang=>', this.projectMang);\r\n    });\r\n  }\r\n  getAllHighRisk() {\r\n    this.logicalFormInfo.getAllRisk().subscribe((res: any) => {\r\n      // console.log('Risk=>', res);\r\n      this.highRiskConstruction = res.data;\r\n      for (let i = 0; i < this.highRiskConstruction.length; i++) {\r\n        this.riskArr[i] = 0;\r\n        this.riskConstruct().push(this.riskCons(i))\r\n        this.riskConstruct2().push(this.riskCons(i))\r\n      }\r\n    });\r\n  }\r\n  getHighRiskById() {\r\n    let mode = 'Risk';\r\n    this.logicalFormInfo.getFormDataById(mode).subscribe((res) => {\r\n      this.highRiskConstruction = res.data[0].subComponents;\r\n      // console.log(' this.highRiskConstruction=>', this.highRiskConstruction);\r\n      for (let i = 0; i < this.highRiskConstruction.length; i++) {\r\n        this.riskArr[i] = 0;\r\n      }\r\n    });\r\n  }\r\n  getAllLicence() {\r\n    this.logicalFormInfo.getAllLicence().subscribe((res) => {\r\n      this.licenseAndQualification = res.data;\r\n      // console.log(\r\n      //   'this.licenseAndQualification=>',\r\n      //   this.licenseAndQualification\r\n      // );\r\n      for (let i = 0; i < this.licenseAndQualification.length; i++) {\r\n        this.licenceArr[i] = 0;\r\n        this.Licence().push(this.license(i))\r\n      }\r\n    });\r\n  }\r\n  getAllHazard() {\r\n    this.logicalFormInfo.getAllHazards().subscribe((res: any) => {\r\n      // console.log('getAllHazards=>', res);\r\n      this.allHazards = res.data;\r\n    });\r\n  }\r\n  getAllContrActReq() {\r\n    this.logicalFormInfo.getAllContrlActReq().subscribe((res: any) => {\r\n      // console.log('getAllHazards=>', res);\r\n      this.allContrlActReq = res.data;\r\n    });\r\n  }\r\n\r\n\r\n  deleteHazrds(type, title, i, j) {\r\n    console.log('type=>', type, title, i);\r\n    console.log(this.jobTaskSelected[i]);\r\n\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: `Do you want to delete \"${title}\"?`,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#00B96F',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Delete!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        if (type === 'identifyHazards') {\r\n          this.jobTaskSelected[i].allHazardsTitle.splice(j, 1);\r\n        }\r\n        if (type === 'ctrlActreq') {\r\n          this.jobTaskSelected[i].allContrlActReqTitle.splice(j, 1);\r\n        }\r\n      }\r\n    });\r\n  }\r\n  onLicenseChange(e, license, i) {\r\n    console.log(\"e\", e.target.checked);\r\n    let c = this.riskAssessmentFb.controls['licence'] as FormArray\r\n    let d = c.controls[i] as FormGroup\r\n    if (e.target.checked) {\r\n      d.controls[license].setValue(\"Open Cable Licence\")\r\n    }\r\n    else {\r\n      d.controls[license].reset()\r\n    }\r\n  }\r\n  onRiskChange(e, risk, i) {\r\n    console.log(\"e\", e.target.checked);\r\n    let c = this.riskAssessmentFb.controls['riskConstruction'] as FormArray\r\n    let d = c.controls[i] as FormGroup\r\n    if (e.target.checked) {\r\n      d.controls[risk].setValue(\"Working in or near trenches or shafts deeper than 1.5metres\")\r\n    }\r\n    else {\r\n      d.controls[risk].reset()\r\n    }\r\n  }\r\n  onPPEChange(e, ppe, i) {\r\n    console.log(\"e\", e.target.checked);\r\n    let c = this.riskAssessmentFb.controls['PPEselection'] as FormArray\r\n    let d = c.controls[i] as FormGroup\r\n    if (e.target.checked) {\r\n      d.controls[ppe].setValue(\"Disposable dust mask\")\r\n    }\r\n    else {\r\n      d.controls[ppe].reset()\r\n    }\r\n  }\r\n  onRiskChange2(e, risk, i) {\r\n    console.log(\"e\", e.target.checked);\r\n    let c = this.riskAssessmentFb.controls['riskConstruction2'] as FormArray\r\n    let d = c.controls[i] as FormGroup\r\n    if (e.target.checked) {\r\n      d.controls[risk].setValue(\"Working in or near trenches or shafts deeper than 1.5metres\")\r\n    }\r\n    else {\r\n      d.controls[risk].reset()\r\n    }\r\n  }\r\n  onPPEChange2(e, ppe, i) {\r\n    console.log(\"e\", e.target.checked);\r\n    let c = this.riskAssessmentFb.controls['PPESelection2'] as FormArray\r\n    let d = c.controls[i] as FormGroup\r\n    if (e.target.checked) {\r\n      d.controls[ppe].setValue(\"Disposable dust mask\")\r\n    }\r\n    else {\r\n      d.controls[ppe].reset()\r\n    }\r\n  }\r\n  onJobtaskSelect(e, jobTaskRecd) {\r\n    // this.jobTaskSelected=[];\r\n\r\n    console.log('event', e.target.value, jobTaskRecd);\r\n    let item = e.target.value;\r\n    if (e.target.checked) {\r\n      this.checkArray.push(item);\r\n      console.log('jobTaskRecd', jobTaskRecd);\r\n\r\n      this.jobTaskSelected.push(jobTaskRecd);\r\n    } else {\r\n      this.checkArray.forEach((item, j) => {\r\n        if (item == e.target.value) {\r\n          this.checkArray.splice(j, 1);\r\n          this.jobTaskSelected.splice(j, 1);\r\n          return;\r\n        }\r\n      });\r\n    }\r\n\r\n    for (let k = 0; k < this.riskArr.length; k++) {\r\n      this.riskArr[k] = 0;\r\n      let c = this.riskAssessmentFb.controls['riskConstruction'] as FormArray\r\n      let c1 = this.riskAssessmentFb.controls['riskConstruction2'] as FormArray\r\n      let d = c.controls[k] as FormGroup\r\n      let d1 = c1.controls[k] as FormGroup\r\n      d.controls[this.highRiskConstruction[k]._id].reset();\r\n      d1.controls[this.highRiskConstruction[k]._id].reset();\r\n    }\r\n    for (let k = 0; k < this.ppeArr.length; k++) {\r\n      this.ppeArr[k] = 0;\r\n      let c = this.riskAssessmentFb.controls['PPEselection'] as FormArray\r\n      let d = c.controls[k] as FormGroup\r\n      d.controls[this.PPEselection[k]._id].reset();\r\n      let c1 = this.riskAssessmentFb.controls['PPESelection2'] as FormArray\r\n      let d1 = c1.controls[k] as FormGroup\r\n      d1.controls[this.PPEselection[k]._id].reset();\r\n    }\r\n    for (let k = 0; k < this.licenceArr.length; k++) {\r\n      this.licenceArr[k] = 0;\r\n      let c = this.riskAssessmentFb.controls['licence'] as FormArray\r\n      let d = c.controls[k] as FormGroup\r\n      d.controls[this.licenseAndQualification[k]._id].reset();\r\n    }\r\n    this.chemicalTask = false;\r\n    console.log('jobTaskSelected', this.jobTaskSelected);\r\n\r\n    this.jobTaskSelected.forEach((element) => {\r\n      //looking for chemical task\r\n\r\n      if (element.chemical == 'YES') {\r\n        this.chemicalTask = true;\r\n      }\r\n\r\n      element.risk.forEach((item) => {\r\n        this.highRiskConstruction.forEach((highRisk, index) => {\r\n          if (highRisk._id === item) {\r\n            this.riskArr[index] = 1;\r\n            let c = this.riskAssessmentFb.controls['riskConstruction'] as FormArray\r\n            let d = c.controls[index] as FormGroup\r\n            d.controls[this.highRiskConstruction[index]._id].setValue(\"Working in or near trenches or shafts deeper than 1.5metres\")\r\n            let c1 = this.riskAssessmentFb.controls['riskConstruction2'] as FormArray\r\n            let d1 = c1.controls[index] as FormGroup\r\n            d1.controls[this.highRiskConstruction[index]._id].setValue(\"Working in or near trenches or shafts deeper than 1.5metres\")\r\n            // //  c.controls[highRisk._id].value\r\n            console.log(\"x\", d.controls[this.highRiskConstruction[index]._id].value);\r\n          }\r\n        });\r\n      });\r\n      element.PPE.forEach((item) => {\r\n        this.PPEselection.forEach((ppeItem, index) => {\r\n          if (ppeItem._id === item) {\r\n            this.ppeArr[index] = 1;\r\n            let c = this.riskAssessmentFb.controls['PPEselection'] as FormArray\r\n            let d = c.controls[index] as FormGroup\r\n            d.controls[this.PPEselection[index]._id].setValue(\"Disposable dust mask\");\r\n            let c1 = this.riskAssessmentFb.controls['PPESelection2'] as FormArray\r\n            let d1 = c1.controls[index] as FormGroup\r\n            d1.controls[this.PPEselection[index]._id].setValue(\"Disposable dust mask\");\r\n          }\r\n        });\r\n      });\r\n      element.licence.forEach(ele => {\r\n        this.licenseAndQualification.forEach((item, index) => {\r\n          if (item._id === ele) {\r\n            console.log(\"item\", item);\r\n            console.log(\"ele\", ele);\r\n            this.licenceArr[index] = 1;\r\n            let c = this.riskAssessmentFb.controls['licence'] as FormArray\r\n            let d = c.controls[index] as FormGroup\r\n            d.controls[this.licenseAndQualification[index]._id].setValue(\"Open Cable Licence\");\r\n          }\r\n        });\r\n      });\r\n    });\r\n    // this.checkArray.forEach((id) => {\r\n\r\n    //   this.jobTaskData.forEach((element) => {\r\n    //     //looking for chemical task\r\n\r\n    //     if(id === element._id && element.chemical == \"YES\"){\r\n    //       this.chemicalTask=true;\r\n    //     }\r\n    //     if (id === element._id) {\r\n    //       element.risk.forEach((riskItem) => {\r\n    //         this.highRiskConstruction.forEach((highRisk, riskIndex) => {\r\n\r\n    //           if (highRisk._id === riskItem) {\r\n    //             this.riskArr[riskIndex] = 1;\r\n    //           }\r\n    //         });\r\n    //       });\r\n    //       element.PPE.forEach((riskItem) => {\r\n    //         this.PPEselection.forEach((highRisk, index) => {\r\n    //           if (highRisk._id === riskItem) {\r\n    //             this.ppeArr[index] = 1;\r\n    //           }\r\n    //         });\r\n    //       });\r\n    //       // element.tradeCategoryId.forEach((riskItem) => {\r\n    //       //   this.licenseAndQualification.forEach((highRisk, index) => {\r\n    //       //     if (highRisk.tradeCategoryId._id === riskItem) {\r\n    //       //       this.licenceArr[index] = 1;\r\n    //       //     }\r\n    //       //   });\r\n    //       // });\r\n    //       this.licenseAndQualification.forEach((highRisk, index) => {\r\n\r\n    //         if (highRisk.tradeCategoryId._id === element.tradeCategoryId._id) {\r\n    //           this.licenceArr[index] = 1;\r\n    //         }\r\n    //       });\r\n\r\n    //     }\r\n    //   });\r\n    // });\r\n\r\n    while (this.riskLevelFA().length) {\r\n      this.riskLevelFA().removeAt(0);\r\n    }\r\n    while (this.residlRiskLevelFA().length) {\r\n      this.residlRiskLevelFA().removeAt(0);\r\n    }\r\n    while (this.personResFA().length) {\r\n      this.personResFA().removeAt(0);\r\n    }\r\n    this.allCOPSelected = [];\r\n    this.jobTaskSelected.forEach((data, i) => {\r\n      this.addActionRiskLevel();\r\n      this.addActionResiRiskLevel();\r\n      this.addActionPersonRes();\r\n      this.personResFA()\r\n        .controls[i].get('personRes')\r\n        .setValue(data?.staff);\r\n      this.riskLevelFA().controls[i].get('riskLevel').setValue(data.riskLevel);\r\n      this.residlRiskLevelFA()\r\n        .controls[i].get('resiRiskLevel')\r\n        .setValue(data.residualRisk);\r\n      console.log(\"data\", data);\r\n      data.allCOPTitle.forEach((element, index) => {\r\n        this.allCOPSelected.push(element);\r\n        // this.COP().push(this.codeOfPrac(index));\r\n      });\r\n\r\n      console.log('allCOPSelected', this.allCOPSelected);\r\n      let myMap = new Map()\r\n      this.allCOPSelected.forEach((item) => {\r\n        if (myMap.has(item)) {\r\n          myMap.set(item, myMap.get(item) + 1);\r\n        } else {\r\n          myMap.set(item, 1);\r\n        }\r\n      })\r\n      this.allCOPSelected = Array.from(new Set(this.allCOPSelected.map(x => JSON.stringify(x)))).map(y => JSON.parse(y));\r\n      console.log('allCOPSelected', this.allCOPSelected, myMap);\r\n    });\r\n  }\r\n  getAllJobNumber() {\r\n    this.logicalFormInfo.getAllJobNumber().subscribe((res: any) => {\r\n      this.allJobNumbers = res.data;\r\n    });\r\n  }\r\n  getAllStaff() {\r\n    this.logicalFormInfo.getAllStaff().subscribe((res: any) => {\r\n      this.staff = res.data;\r\n    });\r\n  }\r\n  getAllResidualRiskLevel() {\r\n    this.logicalFormInfo.getAllResidual().subscribe((res: any) => {\r\n      this.resiRiskLevel = res.data;\r\n    });\r\n  }\r\n  getAllRiskLevel() {\r\n    this.logicalFormInfo.getAllRiskLevel().subscribe((res: any) => {\r\n      this.riskLevel = res.data;\r\n    });\r\n  }\r\n  getAllChemical() {\r\n    this.logicalFormInfo.getAllChemical().subscribe((res: any) => {\r\n      this.allChemicals = res.data;\r\n\r\n    });\r\n  }\r\n  drop(event: CdkDragDrop<string[]>) {\r\n    moveItemInArray(\r\n      this.jobTaskSelected,\r\n      event.previousIndex,\r\n      event.currentIndex\r\n    );\r\n    while (this.riskLevelFA().length) {\r\n      this.riskLevelFA().removeAt(0);\r\n    }\r\n    while (this.residlRiskLevelFA().length) {\r\n      this.residlRiskLevelFA().removeAt(0);\r\n    }\r\n    while (this.personResFA().length) {\r\n      this.personResFA().removeAt(0);\r\n    }\r\n    this.allCOPSelected = [];\r\n    this.jobTaskSelected.forEach((data, i) => {\r\n      this.addActionRiskLevel();\r\n      this.addActionResiRiskLevel();\r\n      this.addActionPersonRes();\r\n      this.personResFA()\r\n        .controls[i].get('personRes')\r\n        .setValue(data?.staffId?._id);\r\n      this.riskLevelFA().controls[i].get('riskLevel').setValue(data.riskLevel);\r\n      this.residlRiskLevelFA()\r\n        .controls[i].get('resiRiskLevel')\r\n        .setValue(data.residualRisk);\r\n      console.log('data', data);\r\n\r\n      data.allCOPTitle.forEach((element) => {\r\n        this.allCOPSelected.push(element);\r\n      });\r\n    });\r\n    console.log('allCOPSelected', this.allCOPSelected);\r\n  }\r\n  addItem(type, i) {\r\n    const dialogRef = this.dialog.open(AddItemComponent, {\r\n      width: '550px',\r\n      // height:'50%',\r\n      data: {\r\n        type: type,\r\n        title: ''\r\n      },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      let data = {\r\n        title: result,\r\n        id: ''\r\n      }\r\n      if (type === 'identifyHazards' && result != 'false') {\r\n\r\n        this.jobTaskSelected[i].allHazardsTitle.push(data);\r\n      }\r\n      if (type === 'ctrlActreq' && result != 'false') {\r\n        this.jobTaskSelected[i].allContrlActReqTitle.push(data);\r\n      }\r\n\r\n      console.log('The dialog was closed');\r\n    });\r\n  }\r\n  editHazrds(type, title, i) {\r\n    const dialogRef = this.dialog.open(AddItemComponent, {\r\n      width: '550px',\r\n      // height:'50%',\r\n      data: {\r\n        type: type,\r\n        title: title\r\n      },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      let data = {\r\n        title: result,\r\n        id: ''\r\n      }\r\n      if (type === 'editIdentifyHazards' && result != 'false') {\r\n\r\n        this.jobTaskSelected[i].allHazardsTitle[i] = data;\r\n      }\r\n      if (type === 'editCtrlActreq' && result != 'false') {\r\n        this.jobTaskSelected[i].allContrlActReqTitle[i] = data;\r\n      }\r\n\r\n      console.log('The dialog was closed');\r\n\r\n    });\r\n  }\r\n  addChemical() {\r\n    const dialogRef = this.dialog.open(AddItemComponent, {\r\n      width: '550px',\r\n      // height:'50%',\r\n      data: {\r\n        type: 'chemical',\r\n        title: ''\r\n      },\r\n\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result != 'false' && result) {\r\n        let data = {\r\n          title: result,\r\n        };\r\n        this.logicalFormInfo.addChemical(data).subscribe((res: any) => {\r\n          this.getAllChemical();\r\n        });\r\n      }\r\n      console.log('The dialog was closed');\r\n    });\r\n  }\r\n  getAllRegulator() {\r\n    this.logicalFormInfo.getAllRegulator().subscribe((res: any) => {\r\n      console.log(\"this.regulatorData\", res.data)\r\n      this.regulatorData = res.data;\r\n\r\n    })\r\n  }\r\n\r\n  getAllSafe() {\r\n    this.logicalFormInfo.getAllSafety().subscribe((res: any) => {\r\n      console.log(\"this.safety\", res)\r\n      this.safety = res.data\r\n    })\r\n  }\r\n  getAllJurisdiction() {\r\n    this.logicalFormInfo.getAllJurisdiction().subscribe((res: any) => {\r\n      console.log('JurisdictionData=>', res);\r\n      this.JurisdictionData = res.data;\r\n    });\r\n  }\r\n  getAllState() {\r\n    this.logicalFormInfo.getAllStates().subscribe((res: any) => {\r\n      console.log('getAllStates=>', res);\r\n      this.states = res.data;\r\n    });\r\n  }\r\n\r\n  setProjectManager(value, e) {\r\n    if (value === 'projectManagerSWMS') {\r\n      this.riskAssessmentFb.get('projectManager').setValue(e.target.value);\r\n    }\r\n    if (value === 'projectManager') {\r\n      console.log('setProjectManager==>', this.projectManager)\r\n      this.riskAssessmentFb.get('projectManagerSWMS').setValue(e.target.value);\r\n    }\r\n  }\r\n  fileChangeEvent(fileInput: any, i) {\r\n    const files = fileInput.target.files[0];\r\n    const formdata = new FormData();\r\n    formdata.append('', files);\r\n    console.log(files);\r\n\r\n    this.upload.upload(formdata).subscribe((res) => {\r\n      console.log('AddProductComponent -> browser -> res', res);\r\n      this.sdsRegisterFA().controls[i].get(\"file\").setValue(res.files[0])\r\n      console.log(\"sdsRegister\", this.riskAssessmentFb.get(\"SDSRegister\").value);\r\n    });\r\n  }\r\n  onSubmit() {\r\n    const data = {\r\n      ...this.riskAssessmentFb.value,\r\n      codeOfPract: this.allCOPSelected,\r\n      identifyHazards: this.jobTaskSelected\r\n    }\r\n    console.log(\"data\", data);\r\n    if (this.id !== 'form') {\r\n      this.logicalFormInfo.updateAssessment(this.id, data).subscribe((res) => {\r\n        console.log(\"this.riskAssessmentFb updated\", res);\r\n        this.router.navigate([\"/admin/forms/riskAssessTable\"]);\r\n      })\r\n\r\n    }\r\n    else {\r\n      this.logicalFormInfo.addAssessment(data).subscribe((res) => {\r\n        this.router.navigate([\"/admin/forms/riskAssessTable\"]);\r\n        console.log(\"this.riskAssessmentFb posted\", res);\r\n      })\r\n    }\r\n    this.riskAssessmentFb.reset();\r\n    this.allCOPSelected = [];\r\n    this.jobTaskSelected = [];\r\n    this.signaturePad1.clear();\r\n    this.signaturePad2.clear();\r\n  }\r\n  getDate(event) {\r\n    console.log(\" event.terget.value\", event.value);\r\n    this.dateGet = event.value\r\n    console.log(\"timepicker\", this.riskAssessmentFb.get(\"dateTime\").value)\r\n    // d.setHours(12)\r\n    // d.setMinutes(30)\r\n    //  let a=[]\r\n    //     //a= d.split(\" \");\r\n    //  // a= a.splice(0,4,'12:30:00')\r\n    //    console.log(\" event.terget.valueeeeee\",this.timepicker,d);\r\n  }\r\n  getTime(event,timePicker) {\r\n    console.log(\"this.dateGet\",this.dateGet)\r\n    let time = event\r\n    console.log(\"time\", timePicker)\r\n    let timeArr = []\r\n    timeArr = time.split(\":\");\r\n    this.dateGet.setHours(timeArr[0])\r\n    this.dateGet.setMinutes(timeArr[1])\r\n    console.log(\"timepicker\", this.dateGet)\r\n  let a=new Date(this.dateGet).toUTCString()\r\n   console.log(\"UTC\",a)\r\nlet b=new Date(a).toISOString()\r\nconsole.log(\"toISOString\",b)\r\n    this.riskAssessmentFb.get(\"dateTime\").setValue(b)\r\n   \r\n\r\n\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Router } from '@angular/router';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport Swal from 'sweetalert2'\r\n\r\n@Component({\r\n  selector: 'app-incidents-table',\r\n  templateUrl: './incidents-table.component.html',\r\n  styleUrls: ['./incidents-table.component.scss']\r\n})\r\nexport class IncidentsTableComponent implements OnInit {\r\ndisplayedColumns: string[] = ['position','projectName',\"customerName\",\"Email\",\"Site\",'Action'];\r\n  showDatas: any;\r\n  tempArray: MatTableDataSource <any>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor(private logicalFormInfo: LogicalFormInfoService,public router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getIncidentReport();\r\n  }\r\n  ngAfterViewInit() {\r\n  //   this.tempArray.paginator = this.paginator;\r\n  //   this.tempArray.sort = this.sort; \r\n   }\r\n  delete(id)\r\n  {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: `Do you want to delete `,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#00B96F',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Delete!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.logicalFormInfo.deleteIncidentReport(id).subscribe((res)=>{\r\n          console.log(\"deleted\",res);\r\n          \r\n            Swal.fire({\r\n              title: 'Deleted successfully',\r\n              showConfirmButton: false,\r\n              timer: 1200,\r\n            });\r\n            console.log('deleted res', res);\r\n            this.getIncidentReport();\r\n          });\r\n      }\r\n    });\r\n    \r\n   \r\n  }\r\n  getIncidentReport()\r\n  {\r\n    this.logicalFormInfo.getAllIncidentReport().subscribe((res:any)=>\r\n    {\r\n      this.showDatas= res.data;\r\n      this.showDatas.forEach((element,i) => {\r\n        return this.showDatas[i].index= i\r\n      });\r\n      this.tempArray = new MatTableDataSource<any>(this.showDatas);\r\n      this.tempArray.paginator = this.paginator;\r\n      this.tempArray.sort = this.sort; \r\n      console.log(\"get res\",this.showDatas);\r\n    })\r\n  }\r\n  edit(id)\r\n  {\r\n    this.router.navigate([\"/admin/forms/incidentRep/\"+id]);\r\n  }\r\n}\r\n","<div class=\"btn btn-outline-primary\" [routerLink]=\"['/admin/forms']\"><i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i></div>\r\n<div class=\"col ml-2 pt-3\">\r\n    <h1> Incident Report List</h1>\r\n    </div>\r\n    <div class=\" \">\r\n      <table mat-table [dataSource]=\"tempArray\" matSort>\r\n    \r\n        <!-- Position Column -->\r\n        <ng-container matColumnDef=\"position\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> No. </th>\r\n          <td mat-cell *matCellDef=\"let element;let i=index\">{{element.index+1}}</td>\r\n        </ng-container>\r\n    \r\n        <!-- Name Column -->\r\n       \r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"projectName\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Project Name </th>\r\n      <td mat-cell *matCellDef=\"let element\">{{element.projectName}}</td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"customerName\">\r\n      <th mat-header-cell *matHeaderCellDef> Customer Name</th>\r\n      <td mat-cell *matCellDef=\"let element\">{{element.customerName}}</td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"Email\">\r\n      <th mat-header-cell *matHeaderCellDef>Email</th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.customerEmail}} </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"Site\">\r\n        <th mat-header-cell *matHeaderCellDef>Site Name</th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.siteName}} </td>\r\n      </ng-container>\r\n     <ng-container matColumnDef=\"Action\">\r\n      <th mat-header-cell *matHeaderCellDef> Action </th>\r\n      <td mat-cell *matCellDef=\"let element\" > \r\n        <!-- <i class=\"fa fa-eye \"aria-hidden=\"true\" title=\"view\"></i> -->\r\n        <!-- <button [routerLink]=\"element.link\" mat-icon-button aria-label=\"Example icon button with a delete icon\">\r\n          <mat-icon>visibility</mat-icon>\r\n        </button>\r\n        <a (click)=\"goTo(element.title)\">\r\n          <span style=\"cursor: pointer !important;\">\r\n              <mat-icon >launch</mat-icon>\r\n          </span>\r\n      </a> -->\r\n      <div style=\"display: flex; justify-content: space-around;\">\r\n        <span class=\"material-icons\" matTooltip=\"Edit\" (click)=\"edit(element._id)\" >\r\n            edit\r\n        </span>\r\n        <span class=\"material-icons\" matTooltip=\"Delete\" (click)=\"delete(element._id)\"  >\r\n            delete\r\n        </span>\r\n        </div>\r\n      </td>\r\n    </ng-container>\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n      </table>\r\n    \r\n      <mat-paginator [pageSizeOptions]=\"[20]\"\r\n                     showFirstLastButtons \r\n                     aria-label=\"Select page of periodic elements\">\r\n      </mat-paginator>\r\n    </div>\r\n    ","import Swal from 'sweetalert2';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Router } from '@angular/router';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\n\r\n@Component({\r\n  selector: 'app-site-inspection-table',\r\n  templateUrl: './site-inspection-table.component.html',\r\n  styleUrls: ['./site-inspection-table.component.scss']\r\n})\r\nexport class SiteInspectionTableComponent implements OnInit {\r\n  displayedColumns: string[] = ['position','Name',\"Phone\",\"Email\",\"Site\",'Action'];\r\n  showDatas: any;\r\n  tempArray: MatTableDataSource <any>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor(private logicalFormInfo: LogicalFormInfoService,public router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getsiteInspection();\r\n  }\r\n  ngAfterViewInit() {\r\n   \r\n  }\r\n  delete(id)\r\n  {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: `Do you want to delete `,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#00B96F',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Delete!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.logicalFormInfo.deleteSiteInspection(id).subscribe((res) => {\r\n            Swal.fire({\r\n              title: 'Deleted successfully',\r\n              showConfirmButton: false,\r\n              timer: 1200,\r\n            });\r\n            console.log('deleted res', res);\r\n            this.getsiteInspection();\r\n          });\r\n      }\r\n    });\r\n   \r\n  }\r\n  getsiteInspection()\r\n  {\r\n    this.logicalFormInfo.getAllSiteInspection().subscribe((res:any)=>\r\n    {\r\n      console.log(\"res\",res.data);\r\n      \r\n      this.showDatas= res.data.map(x => {\r\n        console.log(x.sitePreview)\r\n    return {\r\n      ...x.sitePreview[0],\r\n      _id:x._id,\r\n    \r\n    }\r\n    })\r\n    console.log(\"res\", this.showDatas);\r\n    this.showDatas.forEach((element,i) => {\r\n      return this.showDatas[i].index= i\r\n    });\r\n\r\n      this.tempArray = new MatTableDataSource<any>(this.showDatas);\r\n      this.tempArray.paginator = this.paginator;\r\n      this.tempArray.sort = this.sort; \r\n      console.log(\"get res\",this.showDatas);\r\n    })\r\n  }\r\n  edit(id)\r\n  {\r\n    this.router.navigate([\"/admin/forms/siteInspect/\"+id]);\r\n  }\r\n}\r\n\r\n","<div class=\"btn btn-outline-primary\" [routerLink]=\"['/admin/forms']\"><i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i></div>\r\n<div class=\"col ml-2 pt-3\">\r\n    <h1> Site Inspection List</h1>\r\n    </div>\r\n    <div class=\" \">\r\n      <table mat-table [dataSource]=\"tempArray\" matSort>\r\n    \r\n        <!-- Position Column -->\r\n        <ng-container matColumnDef=\"position\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> No. </th>\r\n          <td mat-cell *matCellDef=\"let element;let i=index\">{{element.index+1}}</td>\r\n        </ng-container>\r\n    \r\n        <!-- Name Column -->\r\n       \r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"Name\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\r\n      <td mat-cell *matCellDef=\"let element;let i=index\">{{element.customerName}}</td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"Phone\">\r\n      <th mat-header-cell *matHeaderCellDef> Phone</th>\r\n      <td mat-cell *matCellDef=\"let element\">{{element.custConctPh}}</td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"Email\">\r\n      <th mat-header-cell *matHeaderCellDef>Email</th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.custEmail}} </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"Site\">\r\n        <th mat-header-cell *matHeaderCellDef>Site Name</th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.siteName}} </td>\r\n      </ng-container>\r\n     <ng-container matColumnDef=\"Action\">\r\n      <th mat-header-cell *matHeaderCellDef> Action </th>\r\n      <td mat-cell *matCellDef=\"let element\" > \r\n        <!-- <i class=\"fa fa-eye \"aria-hidden=\"true\" title=\"view\"></i> -->\r\n        <!-- <button [routerLink]=\"element.link\" mat-icon-button aria-label=\"Example icon button with a delete icon\">\r\n          <mat-icon>visibility</mat-icon>\r\n        </button>\r\n        <a (click)=\"goTo(element.title)\">\r\n          <span style=\"cursor: pointer !important;\">\r\n              <mat-icon >launch</mat-icon>\r\n          </span>\r\n      </a> -->\r\n      <div style=\"display: flex; justify-content: space-around;\">\r\n        <span class=\"material-icons\" matTooltip=\"Edit\" (click)=\"edit(element._id)\" >\r\n            edit\r\n        </span>\r\n        <span class=\"material-icons\" matTooltip=\"Delete\" (click)=\"delete(element._id)\"  >\r\n            delete\r\n        </span>\r\n        </div>\r\n      </td>\r\n    </ng-container>\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n      </table>\r\n    \r\n      <mat-paginator [pageSizeOptions]=\"[20]\"\r\n                     showFirstLastButtons \r\n                     aria-label=\"Select page of periodic elements\">\r\n      </mat-paginator>\r\n    </div>\r\n    \r\n"]}