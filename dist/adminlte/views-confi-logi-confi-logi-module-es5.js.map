{"version":3,"sources":["webpack:///src/app/views/confi-logi/confi-logi.module.ts","webpack:///src/app/views/confi-logi/confi-logi.component.ts","webpack:///src/app/views/confi-logi/confi-logi.component.html","webpack:///src/app/views/confi-logi/job-number/create-job-no/create-job-no.component.ts","webpack:///src/app/views/confi-logi/job-number/create-job-no/create-job-no.component.html","webpack:///src/app/views/confi-logi/set-logic/set-logic.component.ts","webpack:///src/app/views/confi-logi/set-logic/set-logic.component.html","webpack:///src/app/views/confi-logi/confi-logi-routing.module.ts","webpack:///src/app/views/confi-logi/job-number/job-number.component.ts","webpack:///src/app/views/confi-logi/job-number/job-number.component.html"],"names":["ConfiLogiModule","declarations","imports","ConfiLogiComponent","selector","templateUrl","styleUrls","CreateJobNoComponent","dialogRef","data","logicalFormInfoService","fb","allSites","allCustomers","addJobNumberForm","get","valueChanges","subscribe","res","JSON","parse","setValue","streetNumber","streetAddress","suburb","state","customerContact","customerContactPhone","customerEmail","group","siteName","value","disabled","customerName","getAllSite","console","log","getAllCustomer","controls","arrObj","f","addJobNumber","close","item","onSubmit","SetLogicComponent","logicalFormInfo","setTitle","allHazards","allContrlActReq","jobTaskData","highRiskData","PPESelectionData","codeOfPract","licenseAndQual","licenseAndQualificationData","licenceCatAll","highRiskConstructionData","task","riskLevel","residuleRiskL","PPEselection","label","licenseAndQualification","highRiskConstruction2","PPEselection2","JobTaskDetail","highRiskConstr","array","PPE","LicenceCat","identifyHazrds","contrActReq","residualRisk","getJobTask","getAllHighRisk","getAllLicence","getAllCategories","getAllPPE","getAllHazard","getAllContrActReq","highRiskFA","push","highRiskFG","PPE_FA","PPE_FG","licenceCatFA","licenceCatFG","contrActReqFA","contrActReqFG","identifyHazrdsFA","identifyHazrdsFG","riskLevelFA","riskLevelFG","residlRiskLevelFA","residlRiskLevelFG","addCOP","newActionCOP","highRiskArr","ppeArr","licenceArr","hazardsArr","contrActReqArr","resiRiskLevel","copArr","getAllJobtask","forEach","i","addActionHighRisk","addActionPPE","addActionLicnCat","addActionContrActReq","addActionIdentifyHazrds","addActionRiskLevel","addActionResiRiskLevel","risk","licence","identifyHazard","controlActionRequired","getAllRisk","getAllHazards","getAllContrlActReq","getAllLicenceCat","title","id","ppe","element","_id","set","updateJobTask","fire","showConfirmButton","timer","catArr","licenceCategoryId","Risk","routes","path","component","ConfiLogiRoutingModule","forChild","exports","JobNumberComponent","dialog","ELEMENT_DATA","displayedColumns","dataSource","paginator","getAllJobNumber","open","height","action","userId","afterClosed","result","width","getAllJobTask","text","jobNumber","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","deleteJobNumber","openDialog"],"mappings":"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","file":"views-confi-logi-confi-logi-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { ConfiLogiRoutingModule } from './confi-logi-routing.module';\r\nimport { ConfiLogiComponent } from './confi-logi.component';\r\nimport { SetLogicComponent } from './set-logic/set-logic.component';\r\nimport { JobNumberComponent } from './job-number/job-number.component';\r\nimport { CreateJobNoComponent } from './job-number/create-job-no/create-job-no.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [ConfiLogiComponent, SetLogicComponent, JobNumberComponent, CreateJobNoComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ConfiLogiRoutingModule,SharedModule,FormsModule,\r\n    ReactiveFormsModule\r\n  ]\r\n})\r\nexport class ConfiLogiModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-confi-logi',\r\n  templateUrl: './confi-logi.component.html',\r\n  styleUrls: ['./confi-logi.component.scss']\r\n})\r\nexport class ConfiLogiComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<router-outlet></router-outlet>","import { JobNumber } from './../../../../utils/services/logical-form-info.service';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Component, OnInit, Inject, AfterViewInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-create-job-no',\r\n  templateUrl: './create-job-no.component.html',\r\n  styleUrls: ['./create-job-no.component.scss']\r\n})\r\nexport class CreateJobNoComponent implements OnInit, AfterViewInit {\r\n  allSites: any[] = []\r\n  addJobNumberForm: FormGroup\r\n  addCustomerForm: FormGroup;\r\n  allCustomers: any[] = []\r\n  constructor(\r\n    private dialogRef: MatDialogRef<CreateJobNoComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private logicalFormInfoService: LogicalFormInfoService,\r\n    private fb: FormBuilder\r\n  ) { }\r\n  ngAfterViewInit(): void {\r\n    this.addJobNumberForm.get('siteName').valueChanges.subscribe(res => {\r\n      // console.log(JSON.parse(res))\r\n      res = JSON.parse(res)\r\n      this.addJobNumberForm.get('streetNumber').setValue(res.streetNumber)\r\n      this.addJobNumberForm.get('streetAddress').setValue(res.streetAddress)\r\n      this.addJobNumberForm.get('suburb').setValue(res.suburb)\r\n      this.addJobNumberForm.get('state').setValue(res.state)\r\n    })\r\n    this.addJobNumberForm.get('customerName').valueChanges.subscribe(res => {\r\n      // console.log(JSON.parse(res))\r\n      res = JSON.parse(res)\r\n      this.addJobNumberForm.get('customerContact').setValue(res.customerContact)\r\n      this.addJobNumberForm.get('customerContactPhone').setValue(res.customerContactPhone)\r\n      this.addJobNumberForm.get('customerEmail').setValue(res.customerEmail)\r\n    })\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.addJobNumberForm = this.fb.group({\r\n      siteName: [''],\r\n      streetNumber: [{ value: '', disabled: true }],\r\n      streetAddress: [{ value: '', disabled: true }],\r\n      suburb: [{ value: '', disabled: true }],\r\n      state: [{ value: '', disabled: true }],\r\n      customerName: [''],\r\n      customerContact: [{ value: '', disabled: true }],\r\n      customerContactPhone: [{ value: '', disabled: true }],\r\n      customerEmail: [{ value: '', disabled: true }],\r\n    })\r\n    this.logicalFormInfoService.getAllSite().subscribe((res: any) => {\r\n      this.allSites = res.data;\r\n      console.log(res.data);\r\n      \r\n    })\r\n    this.logicalFormInfoService.getAllCustomer().subscribe((res: any) => {\r\n      this.allCustomers = res.data\r\n    })\r\n  }\r\n  get f(){\r\n    return this.addJobNumberForm.controls\r\n  }\r\n  onSubmit() {\r\n    console.log(this.addJobNumberForm.value)\r\n    let data : JobNumber\r\n    data = {\r\n      arrObj:[{\r\n        customerContact:this.f.customerContact.value,\r\n        customerContactPhone:this.f.customerContactPhone.value,\r\n        customerEmail:this.f.customerEmail.value,\r\n        customerName:JSON.parse(this.f.customerName.value).customerName,\r\n        siteName:JSON.parse(this.f.siteName.value).siteName,\r\n        state:this.f.state.value,\r\n        streetAddress:this.f.streetAddress.value,\r\n        streetNumber:this.f.streetNumber.value,\r\n        suburb:this.f.suburb.value,\r\n      }]\r\n    }\r\n    console.log(data)\r\n    this.logicalFormInfoService.addJobNumber(data).subscribe((res:any)=>{\r\n      console.log(res)\r\n      this.dialogRef.close('success')\r\n    })\r\n  }\r\n  setSite(item) {\r\n    console.log(item)\r\n    this.addJobNumberForm.get('streetNumber').setValue(item.streetNumber)\r\n    this.addJobNumberForm.get('streetAddress').setValue(item.streetAddress)\r\n    this.addJobNumberForm.get('suburb').setValue(item.suburb)\r\n    this.addJobNumberForm.get('state').setValue(item.state)\r\n  }\r\n  setCustomer(item) {\r\n    this.addJobNumberForm.get('customerContact').setValue(item.customerContact)\r\n    this.addJobNumberForm.get('customerContactPhone').setValue(item.customerContactPhone)\r\n    this.addJobNumberForm.get('customerEmail').setValue(item.customerEmail)\r\n  }\r\n}\r\n","<section [formGroup]=\"addJobNumberForm\" class=\"content\">\r\n  <div class=\"container px-4 py-4 bg-white\">\r\n    <h1>Create Job Number</h1>\r\n  \r\n    <div class=\"row\">\r\n  \r\n      <div class=\"my-3 col-6\">\r\n        <p for=\"exampleFormControlInput1\" class=\"form-Label\">Site Name</p>\r\n        <select\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          formControlName=\"siteName\"\r\n          id=\"siteName\"\r\n        >\r\n          <option [value]=\"item|json\" *ngFor=\"let item of allSites \">{{item.siteName}}</option>\r\n        </select>\r\n      </div>\r\n    \r\n    </div>\r\n  \r\n    \r\n    <div class=\"row\">\r\n      <div class=\"my-3 col-2\">\r\n        <p for=\"exampleFormControlInput1\" class=\"form-Label\">Street Number</p>\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          formControlName=\"streetNumber\"\r\n          id=\"siteName\"\r\n        />\r\n      </div>\r\n      <div class=\"my-3 col-4\">\r\n        <p for=\"exampleFormControlInput1\" class=\"form-Label\">Street Address</p>\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          formControlName=\"streetAddress\"\r\n          id=\"siteName\"\r\n        />\r\n      </div>\r\n      <div class=\"my-3 col-2\">\r\n        <p for=\"exampleFormControlInput1\" class=\"form-Label\">Suburb</p>\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          formControlName=\"suburb\"\r\n          id=\"siteName\"\r\n        />\r\n      </div>\r\n      <div class=\"my-3 col-4\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-label\"\r\n          >State</p\r\n        >\r\n\r\n          <select\r\n        class=\"form-select form-control col\"\r\n        aria-label=\"Default select example\"\r\n        formControlName=\"state\"\r\n      >\r\n        <option selected hidden>Select</option>\r\n              <option value=\"NSW\">NSW</option>\r\n              <option value=\"ACT\">ACT</option>\r\n              <option value=\"QLD\">QLD</option>\r\n              <option value=\"NT\">NT</option>\r\n              <option value=\"SA\">SA</option>\r\n              <option value=\"NZ\">NZ</option>\r\n              <option value=\"TAS\">TAS</option>\r\n              <option value=\"VIC\">VIC</option>\r\n              <option value=\"WA\">WA</option>\r\n      </select>\r\n    \r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"my-3 col\">\r\n        <p for=\"exampleFormControlInput1\" class=\"form-Label\">Customer Name</p>\r\n        <select\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          formControlName=\"customerName\"\r\n          id=\"siteName\"\r\n        >\r\n          <option [value]=\"item|json\" *ngFor=\"let item of allCustomers \">{{item.customerName}}</option>\r\n        </select>\r\n      </div>\r\n      <div class=\"my-3 col\">\r\n        <p for=\"exampleFormControlInput1\" class=\"form-Label\">Customer Contact</p>\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          id=\"siteName\"\r\n          formControlName=\"customerContact\"\r\n        />\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"my-3 col\">\r\n        <p for=\"exampleFormControlInput1\" class=\"form-Label\">Customer Contact Phone</p>\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          id=\"siteName\"\r\n          formControlName=\"customerContactPhone\"\r\n        />\r\n      </div>\r\n      <div class=\"my-3 col\">\r\n        <p for=\"exampleFormControlInput1\" class=\"form-Label\">Customer Email</p>\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          id=\"siteName\"\r\n          formControlName=\"customerEmail\"\r\n        />\r\n      </div>\r\n    </div> \r\n  <div >\r\n    <button class=\"btn btn-primary\" (click)=\"onSubmit()\">\r\n      Create\r\n    </button>\r\n  </div>\r\n    <!-- <div class=\"row\">\r\n      <div class=\"my-3 col\">\r\n        <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n          Customer Contact Phone\r\n        </p>\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          formControlName=\"customerContactPhone\"\r\n          id=\"siteName\"\r\n        />\r\n      </div>\r\n      <div class=\"my-3 col\">\r\n        <p for=\"exampleFormControlInput1\" class=\"form-Label\">Project Manager</p>\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          formControlName=\"projectManager\"\r\n          id=\"siteName\"\r\n        />\r\n      </div>\r\n    </div> -->\r\n  </div>\r\n  </section>\r\n  \r\n ","import { element } from 'protractor';\r\nimport { MatSelect } from '@angular/material/select';\r\nimport {\r\n  Component,\r\n  OnInit,\r\n  QueryList,\r\n  ViewChildren,\r\n  AfterViewInit,\r\n  AfterViewChecked,\r\n} from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormArray } from '@angular/forms';\r\nimport Swal from 'sweetalert2';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { SetTitleService } from 'src/app/utils/services/set-title.service';\r\n@Component({\r\n  selector: 'app-set-logic',\r\n  templateUrl: './set-logic.component.html',\r\n  styleUrls: ['./set-logic.component.scss'],\r\n})\r\nexport class SetLogicComponent implements AfterViewInit, OnInit {\r\n  JobTaskDetail!: FormGroup;\r\n  allHazards=[];\r\n  allContrlActReq=[];\r\n  jobTaskData: any = [];\r\n  highRiskData: any = [];\r\n  PPESelectionData: any = [];\r\n  codeOfPract: any = [];\r\n  licenseAndQual: any = [];\r\n  licenseAndQualificationData: any = [];\r\n  licenceCatAll: any = [];\r\n  highRiskConstructionData: any = [];\r\n  task: any = [];\r\n  riskLevel='';\r\n  residuleRiskL='';\r\n  PPEselection = [\r\n    { label: 'Disposable dust mask', value: '' },\r\n    { label: 'Dust Mas', value: '' },\r\n    { label: 'Face shield', value: '' },\r\n    { label: 'Full face respirator', value: '' },\r\n    { label: 'Gttors', value: '' },\r\n    { label: 'Half face respirator', value: '' },\r\n    { label: 'Hard Hat', value: '' },\r\n    { label: 'Hearing protection', value: '' },\r\n    { label: 'High-Vis Clothing', value: '' },\r\n    { label: 'Lock Out Tags', value: '' },\r\n    { label: 'Long sleeve/Long pants', value: '' },\r\n    { label: 'Out of Service Tags', value: '' },\r\n    { label: 'Protective gloves', value: '' },\r\n    { label: 'Rescue kit', value: '' },\r\n    { label: 'Safety boots', value: '' },\r\n    { label: 'Safety glasses', value: '' },\r\n    { label: 'Sun Screen', value: '' },\r\n    { label: 'torch', value: '' },\r\n    { label: 'Wide Brim Hat', value: '' },\r\n  ];\r\n\r\n  licenseAndQualification = [\r\n    { label: 'Open Cable Licence', value: '' },\r\n    { label: 'White Card', value: '' },\r\n    { label: 'EWP Licence', value: '' },\r\n    { label: 'Working At Heights', value: '' },\r\n    { label: 'Security Licence', value: '' },\r\n    { label: 'Asbestos Awarness', value: '' },\r\n    { label: 'Working In Confined Space', value: '' },\r\n  ];\r\n\r\n  highRiskConstruction2 = [\r\n    {\r\n      label: 'Working in or near trenches or shafts deeper than 1.5metres',\r\n      value: '',\r\n    },\r\n    { label: 'Work in or near a confined space', value: '' },\r\n    {\r\n      label:\r\n        'Work in an area that may have a contaminated or flammable atmosphere',\r\n      value: '',\r\n    },\r\n    { label: 'Working around or near mobile plant', value: '' },\r\n    { label: 'Work with near or near asbestos', value: '' },\r\n    { label: 'Working with hazardous substances', value: '' },\r\n    { label: 'Working with or near tilt-up/precast concrete', value: '' },\r\n    { label: 'Risk of falls higher than 2 metres', value: '' },\r\n    {\r\n      label: 'Working near on or adjacent to a road or rail corridor',\r\n      value: '',\r\n    },\r\n    { label: 'Working on or near telecommunication tower', value: '' },\r\n    { label: 'Working on or near telecommunication tower', value: '' },\r\n    { label: 'Work near explosives', value: '' },\r\n    {\r\n      label:\r\n        'Work in or near water or other liquid that involves a risk of drowning',\r\n      value: '',\r\n    },\r\n    { label: 'Demolition of load-bearing structure', value: '' },\r\n    { label: 'Diving work', value: '' },\r\n  ];\r\n\r\n  PPEselection2 = [\r\n    { label: 'Disposable dust mask', value: '' },\r\n    { label: 'Dust Mas', value: '' },\r\n    { label: 'Face shield', value: '' },\r\n    { label: 'Full face respirator', value: '' },\r\n    { label: 'Gttors', value: '' },\r\n    { label: 'Half face respirator', value: '' },\r\n    { label: 'Hard Hat', value: '' },\r\n    { label: 'Hearing protection', value: '' },\r\n    { label: 'High-Vis Clothing', value: '' },\r\n    { label: 'Lock Out Tags', value: '' },\r\n    { label: 'Long sleeve/Long pants', value: '' },\r\n    { label: 'Out of Service Tags', value: '' },\r\n    { label: 'Protective gloves', value: '' },\r\n    { label: 'Rescue kit', value: '' },\r\n    { label: 'Safety boots', value: '' },\r\n    { label: 'Safety glasses', value: '' },\r\n    { label: 'Sun Screen', value: '' },\r\n    { label: 'torch', value: '' },\r\n    { label: 'Wide Brim Hat', value: '' },\r\n  ];\r\n  // @ViewChild('risk') risk: any;\r\n  @ViewChildren('risk') Risk: QueryList<any>;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    private setTitle: SetTitleService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.setTitle.setTitle('WHS-Set Relation');\r\n\r\n    this.JobTaskDetail = this.fb.group({\r\n      highRiskConstr: this.fb.array([]),\r\n      PPE: this.fb.array([]),\r\n      LicenceCat: this.fb.array([]),\r\n      identifyHazrds: this.fb.array([]),\r\n      contrActReq: this.fb.array([]),\r\n      riskLevel: this.fb.array([]),\r\n      residualRisk: this.fb.array([]),\r\n    //  codeOfPract: this.fb.array([]),\r\n    });\r\n\r\n    this.getJobTask();\r\n    this.getAllHighRisk();\r\n    this.getAllLicence();\r\n    this.getAllCategories();\r\n    this.getAllPPE();\r\n    this.getAllHazard();\r\n    this.getAllContrActReq();\r\n    //  this.getCodOfCond();\r\n  }\r\n\r\n  ngAfterViewInit() {}\r\n\r\n  addActionHighRisk() {\r\n    {\r\n      this.highRiskFA().push(this.highRiskFG());\r\n    }\r\n  }\r\n  addActionPPE() {\r\n    {\r\n      this.PPE_FA().push(this.PPE_FG());\r\n    }\r\n  }\r\n  addActionLicnCat() {\r\n    {\r\n      this.licenceCatFA().push(this.licenceCatFG());\r\n    }\r\n  }\r\n  addActionContrActReq() {\r\n    {\r\n      this.contrActReqFA().push(this.contrActReqFG());\r\n    }\r\n  }\r\n  addActionIdentifyHazrds() {\r\n    {\r\n      this.identifyHazrdsFA().push(this.identifyHazrdsFG());\r\n    }\r\n  }\r\n  addActionRiskLevel() {\r\n    {\r\n      this.riskLevelFA().push(this.riskLevelFG());\r\n    }\r\n  }\r\n  addActionResiRiskLevel() {\r\n    {\r\n      this.residlRiskLevelFA().push(this.residlRiskLevelFG());\r\n    }\r\n  }\r\n  addActionCOP() {\r\n    {\r\n      this.addCOP().push(this.newActionCOP());\r\n    }\r\n  }\r\n  highRiskFA(): FormArray {\r\n    return this.JobTaskDetail.get('highRiskConstr') as FormArray;\r\n  }\r\n  PPE_FA(): FormArray {\r\n    return this.JobTaskDetail.get('PPE') as FormArray;\r\n  }\r\n  licenceCatFA(): FormArray {\r\n    return this.JobTaskDetail.get('LicenceCat') as FormArray;\r\n  }\r\n  identifyHazrdsFA(): FormArray {\r\n    return this.JobTaskDetail.get('identifyHazrds') as FormArray;\r\n  }\r\n  contrActReqFA(): FormArray {\r\n    return this.JobTaskDetail.get('contrActReq') as FormArray;\r\n  }\r\n  addCOP(): FormArray {\r\n    return this.JobTaskDetail.get('codeOfPract') as FormArray;\r\n  }\r\n  riskLevelFA(): FormArray {\r\n    return this.JobTaskDetail.get('riskLevel') as FormArray;\r\n  }\r\n  residlRiskLevelFA(): FormArray {\r\n    return this.JobTaskDetail.get('residualRisk') as FormArray;\r\n  }\r\n  highRiskFG(): FormGroup {\r\n    return this.fb.group({\r\n      highRiskArr: [''],\r\n    });\r\n  }\r\n  PPE_FG(): FormGroup {\r\n    return this.fb.group({\r\n      ppeArr: [''],\r\n    });\r\n  }\r\n  licenceCatFG(): FormGroup {\r\n    return this.fb.group({\r\n      licenceArr: [''],\r\n    });\r\n  }\r\n  identifyHazrdsFG(): FormGroup {\r\n    return this.fb.group({\r\n      hazardsArr: [''],\r\n    });\r\n  }\r\n  contrActReqFG(): FormGroup {\r\n    return this.fb.group({\r\n      contrActReqArr: [''],\r\n    });\r\n  }\r\n  riskLevelFG(): FormGroup {\r\n    return this.fb.group({\r\n      riskLevel: [''],\r\n    });\r\n  }\r\n  residlRiskLevelFG(): FormGroup {\r\n    return this.fb.group({\r\n      resiRiskLevel: [''],\r\n    });\r\n  }\r\n  newActionCOP(): FormGroup {\r\n    //code of practice\r\n    return this.fb.group({\r\n      copArr: [''],\r\n    });\r\n  }\r\n\r\n  onFormSubmit() {\r\n    console.log(this.JobTaskDetail);\r\n  }\r\n  getJobTask() {\r\n    this.logicalFormInfo.getAllJobtask().subscribe((res: any) => {\r\n      console.log('jobTaskDetails=>', res);\r\n      this.jobTaskData = res.data;\r\n      this.jobTaskData.forEach((item,i) => {\r\n        this.addActionHighRisk();\r\n        this.addActionPPE();\r\n        this.addActionLicnCat();\r\n        this.addActionContrActReq();\r\n        this.addActionIdentifyHazrds(); \r\n        this.addActionRiskLevel(); \r\n        this.addActionResiRiskLevel();   \r\n        this.highRiskFA().controls[i].get('highRiskArr').setValue(item.risk);\r\n        this.PPE_FA().controls[i].get('ppeArr').setValue(item.PPE);\r\n        this.licenceCatFA().controls[i].get('licenceArr').setValue(item.licence);\r\n        // console.log(\"item.identifyHazard\",item.identifyHazard+\"i\",i);\r\n        // console.log(\"item.controlActionRequired\",item.controlActionRequired+\"i\",i);\r\n        \r\n        \r\n        this.identifyHazrdsFA().controls[i].get('hazardsArr').setValue(item.identifyHazard);\r\n        this.contrActReqFA().controls[i].get('contrActReqArr').setValue(item.controlActionRequired);\r\n        this.riskLevelFA().controls[i].get('riskLevel').setValue(item.riskLevel);\r\n        this.residlRiskLevelFA().controls[i].get('resiRiskLevel').setValue(item.residualRisk);\r\n\r\n        });\r\nconsole.log(\"this.identifyHazrdsFA()\", this.identifyHazrdsFA().value);\r\n\r\n    });\r\n  }\r\n  getAllHighRisk() {\r\n    this.logicalFormInfo.getAllRisk().subscribe((res: any) => {\r\n      console.log('Risk=>', res);\r\n      this.highRiskConstructionData = res.data;\r\n    });\r\n  }\r\n  getAllPPE() {\r\n    this.logicalFormInfo.getAllPPE().subscribe((res: any) => {\r\n      console.log('PPE=>', res);\r\n      this.PPESelectionData = res.data;\r\n    });\r\n  }\r\n  // getCodOfCond() {\r\n  //   this.mode = 'codeOfPractice';\r\n  //   this.logicalFormInfo.getFormDataById(this.mode).subscribe((data) => {\r\n  //     console.log('codeOfPractice=>', data);\r\n  //     this.codeOfPract = data.data[0];\r\n  //   });\r\n  // }\r\n  getAllLicence() {\r\n    this.logicalFormInfo.getAllLicence().subscribe((res) => {\r\n      console.log('Licence=>', res);\r\n      this.licenseAndQual = res.data;\r\n    });\r\n  }\r\n  getAllHazard() {\r\n    this.logicalFormInfo.getAllHazards().subscribe((res:any) => {\r\n      console.log('getAllHazards=>', res);\r\n      this.allHazards = res.data;\r\n    });\r\n  }\r\n  getAllContrActReq()  {\r\n    this.logicalFormInfo.getAllContrlActReq().subscribe((res:any) => {\r\n      console.log('getAllHazards=>', res);\r\n      this.allContrlActReq = res.data;\r\n    });\r\n  }\r\n  getAllCategories() {\r\n    this.logicalFormInfo.getAllLicenceCat().subscribe((res) => {\r\n      console.log('getAllLicenceCat=>', res);\r\n      this.licenceCatAll = res.data;\r\n    });\r\n  }\r\n\r\n  // setRelation(riskIds, ppeIDs, codOfPractIds, title, id) {\r\n  setRelation(title, id,i) {\r\n    // console.log('risk', riskIds);\r\n\r\n    // console.log('ppe', ppeIDs);\r\n    /// console.log('licence', licenceIds);\r\n    // console.log('codOfPract', codOfPractIds);\r\n    console.log('index', title);\r\n    console.log('id', id);\r\n    console.log('id', i);\r\nlet risk = [],\r\nppe=[],\r\nlicence=[],\r\nidentifyHazard=[],\r\ncontrolActionRequired=[];\r\n  if(this.highRiskFA().controls[i].get('highRiskArr').value){\r\n    this.highRiskFA().controls[i].get('highRiskArr').value.forEach(element => {\r\n      risk.push(element._id)\r\n    });\r\n  }\r\n  if(this.PPE_FA().controls[i].get('ppeArr').value){\r\n    this.PPE_FA().controls[i].get('ppeArr').value.forEach(element => {\r\n      ppe.push(element._id)\r\n    });\r\n  }\r\n  if(this.licenceCatFA().controls[i].get('licenceArr').value){\r\n    this.licenceCatFA().controls[i].get('licenceArr').value.forEach(element => {\r\n      licence.push(element._id)\r\n    });\r\n  }\r\n  if(this.identifyHazrdsFA().controls[i].get('hazardsArr').value){\r\n    this.identifyHazrdsFA().controls[i].get('hazardsArr').value.forEach(element => {\r\n      identifyHazard.push(element._id)\r\n    });\r\n  }\r\n  if(this.contrActReqFA().controls[i].get('contrActReqArr').value){\r\n    this.contrActReqFA().controls[i].get('contrActReqArr').value.forEach(element => {\r\n      controlActionRequired.push(element._id)\r\n    });\r\n  }\r\n\r\n    let data = {\r\n      title: title,\r\n      risk: this.highRiskFA().controls[i].get('highRiskArr').value,\r\n      PPE: this.PPE_FA().controls[i].get('ppeArr').value,\r\n      licence: this.licenceCatFA().controls[i].get('licenceArr').value,\r\n      identifyHazard:this.identifyHazrdsFA().controls[i].get('hazardsArr').value,\r\n      controlActionRequired: this.contrActReqFA().controls[i].get('contrActReqArr').value,\r\n      riskLevel:this.riskLevelFA().controls[i].get('riskLevel').value ,\r\n      residualRisk: this.residlRiskLevelFA().controls[i].get('resiRiskLevel').value,\r\n      set:true      \r\n    };\r\n    console.log(data);\r\n\r\n    this.logicalFormInfo.updateJobTask(data,id).subscribe((res) => {\r\n      console.log('resJob Task=>', res);\r\n      this.getJobTask();\r\n\r\n      Swal.fire({\r\n        title: 'Relation set successfully',\r\n        showConfirmButton: false,\r\n        timer: 1200,\r\n      });\r\n    });\r\n  }\r\n  categorySel(catArr) {\r\n    this.licenseAndQualificationData = [];\r\n\r\n    console.log(catArr);\r\n    catArr.forEach((element) => {\r\n      this.licenseAndQual.forEach((item) => {\r\n        if (element === item.licenceCategoryId._id) {\r\n          this.licenseAndQualificationData.push(item);\r\n        }\r\n      });\r\n    });\r\n    console.log(\r\n      ' this.licenseAndQualificationData',\r\n      this.licenseAndQualificationData\r\n    );\r\n  }\r\n}\r\n","<section class=\"content\" [formGroup]=\"JobTaskDetail\">\r\n    <div class=\"container-fluid\">\r\n      <div class=\"text-center\">\r\n        <h1 > Job Task List</h1>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-12\">\r\n          <div class=\"card\">\r\n            <div class=\"card-body p-0 overflow-auto\">\r\n              <table class=\"table table-hover text-wrap\">\r\n                <thead>\r\n                  <tr>\r\n                    <th style=\"width: 1%\">Index</th>\r\n                    <th style=\"width: 20%\">Job Task List </th>\r\n                    <th style=\"width: 15%\">High Risk Construction </th>\r\n                    <th style=\"width: 15%\">PPE</th>\r\n                    <th style=\"width: 15%\">Licence Category</th>\r\n                    <th style=\"width: 15%\">Identify Hazards</th>\r\n                    <th style=\"width: 15%\">Risk</th>\r\n                    <th style=\"width: 15%\">Control Action Required</th>\r\n                    <th style=\"width: 15%\">Residule Risk</th>\r\n                    <!-- <th style=\"width: 15%\">Code Of Practice</th> -->\r\n                    <th style=\"width: 15%\">Action</th>\r\n  \r\n                  </tr>\r\n                </thead>\r\n                <tbody >\r\n                  <tr *ngFor=\"let task of  jobTaskData; let i = index\">\r\n                    <td>{{i+1}}</td>\r\n                    <td>{{ task.title }}</td>\r\n                    <ng-container formArrayName=\"highRiskConstr\">\r\n                      <td [formGroupName]=\"i\">\r\n                        <mat-form-field appearance=\"fill\">\r\n                          <mat-label>HighRiskConstruction</mat-label>\r\n                          <mat-select formControlName=\"highRiskArr\" multiple >\r\n                            <mat-select-trigger>\r\n                              <span *ngIf=\"!highRiskFA().controls[i].get('highRiskArr').value?.length\" class=\"example-additional-selection\">\r\n                              </span>\r\n                              <span *ngIf=\"highRiskFA().controls[i].get('highRiskArr').value?.length == 1\" class=\"example-additional-selection\">\r\n                                One Item selected\r\n                              </span>\r\n                              <span *ngIf=\"highRiskFA().controls[i].get('highRiskArr').value?.length > 1\" class=\"example-additional-selection\">\r\n                                More than one selected\r\n                              </span>\r\n                            </mat-select-trigger>\r\n                            <mat-option *ngFor=\"let parameter of highRiskConstructionData\" [value]=\"parameter._id\">\r\n                              {{parameter.title}}</mat-option>\r\n                          </mat-select>\r\n                        </mat-form-field>\r\n                      </td>\r\n                    </ng-container >                \r\n                    <ng-container formArrayName=\"PPE\">\r\n                      <td [formGroupName]=\"i\">\r\n                        <mat-form-field appearance=\"fill\">\r\n                          <mat-label>PPE selection</mat-label>\r\n                          <mat-select formControlName=\"ppeArr\" multiple >\r\n                            <mat-select-trigger>\r\n                              <span *ngIf=\"!PPE_FA().controls[i].get('ppeArr').value?.length \" class=\"example-additional-selection\">\r\n                               \r\n                              </span>\r\n                              <span *ngIf=\"PPE_FA().controls[i].get('ppeArr').value?.length == 1\" class=\"example-additional-selection\">\r\n                               One Item selected\r\n                              </span>\r\n                              <span *ngIf=\"PPE_FA().controls[i].get('ppeArr').value?.length > 1\" class=\"example-additional-selection\">\r\n                                More than one selected\r\n                              </span>\r\n                            </mat-select-trigger>\r\n                            <mat-option *ngFor=\"let parameter of PPESelectionData\" [value]=\"parameter._id\">{{parameter.title}}\r\n                            </mat-option>\r\n                          </mat-select>\r\n                        </mat-form-field>\r\n                      </td>\r\n                    </ng-container>\r\n                    <ng-container formArrayName=\"LicenceCat\">\r\n                      <td [formGroupName]=\"i\">\r\n                        <mat-form-field appearance=\"fill\">\r\n                          <mat-label>Licence Categories</mat-label>\r\n                          <mat-select formControlName=\"licenceArr\" multiple >\r\n                            <mat-select-trigger>\r\n                              <span *ngIf=\"!licenceCatFA().controls[i].get('licenceArr').value?.length\" class=\"example-additional-selection\">\r\n                              </span>\r\n                              <span *ngIf=\"licenceCatFA().controls[i].get('licenceArr').value?.length == 1\" class=\"example-additional-selection\">\r\n                                One Item selected\r\n                              </span>\r\n                              <span *ngIf=\"licenceCatFA().controls[i].get('licenceArr').value?.length > 1\" class=\"example-additional-selection\">\r\n                                More than one selected\r\n                              </span>\r\n                            </mat-select-trigger>\r\n                            <mat-option *ngFor=\"let parameter of licenceCatAll\" [value]=\"parameter._id\">{{parameter.title}}\r\n                            </mat-option>\r\n                          </mat-select>\r\n                        </mat-form-field>\r\n                      </td>\r\n                    </ng-container>\r\n                    <ng-container formArrayName=\"identifyHazrds\">\r\n                      <td [formGroupName]=\"i\">\r\n                        <mat-form-field appearance=\"fill\">\r\n                          <mat-label>Identify Hazards</mat-label>\r\n                          <mat-select formControlName=\"hazardsArr\" multiple >\r\n                            <mat-select-trigger>\r\n                              <span *ngIf=\"!identifyHazrdsFA().controls[i].get('hazardsArr').value?.length\" class=\"example-additional-selection\">\r\n                              </span>\r\n                              <span *ngIf=\"identifyHazrdsFA().controls[i].get('hazardsArr').value?.length == 1\" class=\"example-additional-selection\">\r\n                                One Item selected\r\n                              </span>\r\n                              <span *ngIf=\"identifyHazrdsFA().controls[i].get('hazardsArr').value?.length > 1\" class=\"example-additional-selection\">\r\n                                More than one selected\r\n                              </span>\r\n                            </mat-select-trigger>\r\n                            <mat-option *ngFor=\"let parameter of allHazards\" [value]=\"parameter\">{{parameter.title}}\r\n                            </mat-option>\r\n                          </mat-select>\r\n                        </mat-form-field>\r\n                      </td>\r\n                    </ng-container>\r\n                  <ng-container formArrayName=\"riskLevel\">\r\n                    <td [formGroupName]=\"i\">\r\n                      <mat-form-field appearance=\"fill\">\r\n                      <mat-label>Risk</mat-label>\r\n                      <mat-select formControlName=\"riskLevel\" >\r\n                        <mat-option value=\"L1\">L1</mat-option>\r\n                        <mat-option value=\"L2\">L2</mat-option>\r\n                        <mat-option value=\"L3\">L3</mat-option>\r\n                        <mat-option value=\"L4\">L4</mat-option>\r\n                        <mat-option value=\"L5\">L5</mat-option>                        \r\n                      </mat-select>\r\n                    </mat-form-field>\r\n                    </td>\r\n                  </ng-container>\r\n                   \r\n                    <ng-container formArrayName=\"contrActReq\">\r\n                      <td [formGroupName]=\"i\">\r\n                        <mat-form-field appearance=\"fill\">\r\n                          <mat-label>Control Actions Required</mat-label>\r\n                          <mat-select formControlName=\"contrActReqArr\" multiple >\r\n                            <mat-select-trigger>\r\n                              <span *ngIf=\"!contrActReqFA().controls[i].get('contrActReqArr').value?.length\" class=\"example-additional-selection\">\r\n                              </span>\r\n                              <span *ngIf=\"contrActReqFA().controls[i].get('contrActReqArr').value?.length == 1\" class=\"example-additional-selection\">\r\n                                One Item selected\r\n                              </span>\r\n                              <span *ngIf=\"contrActReqFA().controls[i].get('contrActReqArr').value?.length > 1\" class=\"example-additional-selection\">\r\n                                More than one selected\r\n                              </span>\r\n                            </mat-select-trigger>\r\n                            <mat-option *ngFor=\"let parameter of allContrlActReq\" [value]=\"parameter\">{{parameter.title}}\r\n                            </mat-option>\r\n                          </mat-select>\r\n                        </mat-form-field>\r\n                      </td>\r\n                    </ng-container>\r\n\r\n                    <ng-container formArrayName=\"residualRisk\">\r\n                      <td [formGroupName]=\"i\">\r\n                        <mat-form-field appearance=\"fill\">\r\n                        <mat-label>Residule Risk</mat-label>\r\n                        <mat-select formControlName=\"resiRiskLevel\" >\r\n                          <mat-option value=\"L1\">L1</mat-option>\r\n                          <mat-option value=\"L2\">L2</mat-option>\r\n                          <mat-option value=\"L3\">L3</mat-option>\r\n                          <mat-option value=\"L4\">L4</mat-option>\r\n                          <mat-option value=\"L5\">L5</mat-option>                        \r\n                        </mat-select>\r\n                      </mat-form-field>\r\n                      </td>\r\n                    </ng-container>\r\n                 \r\n                 \r\n                  <!-- <ng-container formArrayName=\"codeOfPract\">\r\n                    <td [formGroupName]=\"i\">\r\n                      <mat-form-field appearance=\"fill\">\r\n                        <mat-label>Code Of Practice\r\n                        </mat-label>\r\n                        <mat-select formControlName=\"copArr\" multiple >\r\n                          <mat-select-trigger>\r\n                            {{codeOfPract.value ? codeOfPract.value[0] : ''}}\r\n                            <span *ngIf=\"codeOfPract.value?.length > 1\" class=\"example-additional-selection\">\r\n                              (+{{codeOfPract.value.length - 1}} {{codeOfPract.value?.length === 2 ? 'other' : 'others'}})\r\n                            </span>\r\n                          </mat-select-trigger>\r\n                          <mat-option *ngFor=\"let parameter of codeOfPract.subComponents\" [value]=\"parameter._id\">\r\n                            {{parameter.title}}</mat-option>\r\n                        </mat-select>\r\n                      </mat-form-field>\r\n                    </td>\r\n                  </ng-container> -->\r\n                 \r\n                    <!-- <td><button class=\"btn btn-primary\" (click)=\"setRelation(risk.value,ppeSel.value,codOfPractice.value,task.title,task._id)\">Set</button></td> -->\r\n                    <td *ngIf=\"!task.set\"><button class=\"btn btn-primary\" (click)=\"setRelation(task.title,task._id,i)\">Set</button></td>\r\n                    <td *ngIf=\"task.set\"><button class=\"btn btn-primary\" (click)=\"setRelation(task.title,task._id,i)\">Update</button></td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section>","import { JobNumberComponent } from './job-number/job-number.component';\r\nimport { SetLogicComponent } from './set-logic/set-logic.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ConfiLogiComponent } from './confi-logi.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: ConfiLogiComponent },\r\n  { path: 'setLogic', component: SetLogicComponent },\r\n  { path: 'setJobNumber', component: JobNumberComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ConfiLogiRoutingModule { }\r\n","import Swal from 'sweetalert2';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { CreateJobNoComponent } from './create-job-no/create-job-no.component';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { AddSiteComponent } from 'src/app/site-info/add-site-info/add-site/add-site.component';\r\nimport { EditSiteComponent } from 'src/app/site-info/add-site-info/edit-site/edit-site.component';\r\nimport { SetTitleService } from 'src/app/utils/services/set-title.service';\r\n\r\n@Component({\r\n  selector: 'app-job-number',\r\n  templateUrl: './job-number.component.html',\r\n  styleUrls: ['./job-number.component.scss'],\r\n})\r\nexport class JobNumberComponent implements OnInit {\r\n  mode: any;\r\n  jobTaskData: any = [];\r\n  ELEMENT_DATA = [];\r\n  /////////////mat table////////////////\r\n  displayedColumns: string[] = [\r\n    'jobNumber',\r\n    'siteName',\r\n    'streetNumber',\r\n    'streetAddress',\r\n    'suburb',\r\n    'state',\r\n    'customerName',\r\n    'customerContact',\r\n    //'customerContactPhone',\r\n   // 'customerEmail',\r\n    /* 'edit', */\r\n    'delete',\r\n  ];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n  /////////////mat table end////////////////\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private setTitle: SetTitleService,\r\n    private logicalFormInfoService: LogicalFormInfoService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.setTitle.setTitle('WHS-Add Site Info');\r\n    this.getAllJobNumber();\r\n  }\r\n  getAllJobNumber() {\r\n    this.logicalFormInfoService.getAllJobNumber().subscribe((res: any) => {\r\n      console.log(res);\r\n      this.dataSource.data = res.data;\r\n      console.log(\"getAllJobNumber\",res.data);\r\n      \r\n      this.dataSource.paginator = this.paginator;\r\n    });\r\n  }\r\n\r\n  getAllJobTask() {\r\n    // this.logicalFormInfo.getAllJobtask().subscribe((res: any) => {\r\n    //   console.log('jobTaskDetails=>', res);\r\n    //   // this.jobTaskData = res.data[0].subComponents;\r\n    //   let data = res.data\r\n    //   data.forEach((element, index) => {\r\n    //     element.index = index + 1; //adding index\r\n    //   });\r\n    //   this.ELEMENT_DATA = data;\r\n    //   this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n    //   this.dataSource.paginator = this.paginator;\r\n    //   //  this.task = res.data.subComponents;\r\n    // });\r\n  }\r\n\r\n  openDialog(id) {\r\n    let dialogRef = this.dialog.open(CreateJobNoComponent, {\r\n      height: '80%',\r\n      data: {\r\n        action: 'new',\r\n        userId: id,\r\n      },\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      console.log('CustomerInfoComponent -> openDialog -> result', result);\r\n     console.log(\"result\",result);\r\n     if(result ===\"success\"){\r\n      this.getAllJobNumber();\r\n      Swal.fire({\r\n        title: 'Job Number created successfully',\r\n        showConfirmButton: false,\r\n        timer: 1200,\r\n      });\r\n     }\r\n      console.log('The dialog was closed');\r\n    });\r\n  }\r\n  edit(element) {\r\n    const dialogRef = this.dialog.open(EditSiteComponent, {\r\n      width: '550px',\r\n      data: element,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result == 'true') {\r\n        this.getAllJobTask();\r\n      }\r\n      console.log('The dialog was closed');\r\n    });\r\n  }\r\n  delete(item) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: `Do you want to delete \"${item.jobNumber}\"?`,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#00B96F',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Delete!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.logicalFormInfoService\r\n          .deleteJobNumber(item._id)\r\n          .subscribe((res) => {\r\n            Swal.fire({\r\n              title: 'Job Number Deleted successfully',\r\n              showConfirmButton: false,\r\n              timer: 1200,\r\n            });\r\n            console.log('deleted res', res);\r\n            this.getAllJobNumber();\r\n          });\r\n      }\r\n    });\r\n  }\r\n}\r\n","\r\n\r\n<h2>\r\n  Job Number List\r\n  <button (click)=\"openDialog('abcd')\" _ngcontent-hqi-c400=\"\" type=\"button\" class=\"btn btn-outline-primary mt-1 mr-2 float-right\"><i _ngcontent-hqi-c400=\"\" class=\"fas fa-plus\"></i> Create </button>\r\n\r\n</h2>\r\n<!-- <div class=\"col ml-2 mb-2\">\r\n  \r\n  <div class=\"col-sm-9\" style=\"display: flex; justify-content: flex-end\">\r\n    <button _ngcontent-tdm-c400=\"\" (click)=\"openDialog('id')\" type=\"button\" class=\"btn btn-outline-primary mt-1 mr-2 float-right\"><i _ngcontent-tdm-c400=\"\" class=\"fas fa-plus\"></i> Add Job Number </button>\r\n</div>\r\n</div> -->\r\n<div class=\"mat-elevation-z8 ml-2\">\r\n  <table mat-table [dataSource]=\"dataSource\">\r\n\r\n    <!-- Position Column -->\r\n    <ng-container matColumnDef=\"index\">\r\n      <th mat-header-cell *matHeaderCellDef> No. </th>\r\n      <td mat-cell *matCellDef=\"let element;let i = index\">{{i+1}}</td>\r\n    </ng-container>\r\n\r\n    <!-- Name Column -->\r\n   \r\n<!-- Name Column -->\r\n<ng-container matColumnDef=\"jobNumber\">\r\n  <th mat-header-cell *matHeaderCellDef> Job Number </th>\r\n  <td mat-cell *matCellDef=\"let element\"> {{element.jobNumber}} </td>\r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"siteName\">\r\n  <th mat-header-cell *matHeaderCellDef> Site Name </th>\r\n  <td mat-cell *matCellDef=\"let element\"> {{element.siteName}} </td>\r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"streetNumber\">\r\n  <th mat-header-cell *matHeaderCellDef> Street Number </th>\r\n  <td mat-cell *matCellDef=\"let element\"> {{element.streetNumber}} </td>\r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"streetAddress\">\r\n  <th mat-header-cell *matHeaderCellDef> Street Address </th>\r\n  <td mat-cell *matCellDef=\"let element\"> {{element.streetAddress}} </td>\r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"suburb\">\r\n  <th mat-header-cell *matHeaderCellDef> Suburb </th>\r\n  <td mat-cell *matCellDef=\"let element\"> {{element.suburb}} </td>\r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"state\">\r\n  <th mat-header-cell *matHeaderCellDef> State </th>\r\n  <td mat-cell *matCellDef=\"let element\"> {{element.state}} </td>\r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"customerName\">\r\n  <th mat-header-cell *matHeaderCellDef> Customer Name </th>\r\n  <td mat-cell *matCellDef=\"let element\"> {{element.customerName}} </td>\r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"customerContact\">\r\n  <th mat-header-cell *matHeaderCellDef> Customer Contact </th>\r\n  <td mat-cell *matCellDef=\"let element\"> {{element.customerContact}} </td>\r\n</ng-container>\r\n\r\n<!-- <ng-container matColumnDef=\"customerContactPhone\">\r\n  <th mat-header-cell *matHeaderCellDef> Customer Contact Phone </th>\r\n  <td mat-cell *matCellDef=\"let element\"> {{element.customerContactPhone}} </td>\r\n</ng-container> -->\r\n\r\n<!-- <ng-container matColumnDef=\"customerEmail\">\r\n  <th mat-header-cell *matHeaderCellDef> Customer Email </th>\r\n  <td mat-cell *matCellDef=\"let element\"> {{element.customerEmail}} </td>\r\n</ng-container> -->\r\n\r\n\r\n\r\n<ng-container matColumnDef=\"edit\">\r\n  <th mat-header-cell *matHeaderCellDef> Edit </th>\r\n  <td mat-cell *matCellDef=\"let element\"(click)=\"edit(element)\"> <i class=\"fas fa-pencil-alt \"></i> \r\n  </td>\r\n</ng-container>\r\n<ng-container matColumnDef=\"delete\">\r\n  <th mat-header-cell *matHeaderCellDef> Delete </th>\r\n  <td mat-cell *matCellDef=\"let element\"(click)=\"delete(element)\"> <i class=\"fas fa-trash \"></i> \r\n  </td>\r\n</ng-container>\r\n\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n  </table>\r\n\r\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\"\r\n                 showFirstLastButtons \r\n                 aria-label=\"Select page of periodic elements\">\r\n  </mat-paginator>\r\n</div>\r\n"]}