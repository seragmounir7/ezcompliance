{"version":3,"sources":["webpack:///src/app/views/confi-logi/confi-logi.module.ts","webpack:///src/app/views/confi-logi/confi-logi.component.ts","webpack:///src/app/views/confi-logi/confi-logi.component.html","webpack:///src/app/views/confi-logi/job-number/create-job-no/create-job-no.component.ts","webpack:///src/app/views/confi-logi/job-number/create-job-no/create-job-no.component.html","webpack:///src/app/views/confi-logi/set-logic/set-logic.component.ts","webpack:///src/app/views/confi-logi/set-logic/set-logic.component.html","webpack:///src/app/views/confi-logi/confi-logi-routing.module.ts","webpack:///src/app/views/confi-logi/job-number/job-number.component.ts","webpack:///src/app/views/confi-logi/job-number/job-number.component.html"],"names":["ConfiLogiModule","declarations","imports","ConfiLogiComponent","selector","templateUrl","styleUrls","CreateJobNoComponent","SetLogicComponent","fb","logicalFormInfo","setTitle","allHazards","allContrlActReq","jobTaskData","highRiskData","PPESelectionData","codeOfPract","licenseAndQual","licenseAndQualificationData","licenceCatAll","highRiskConstructionData","task","riskLevel","residuleRiskL","PPEselection","label","value","licenseAndQualification","highRiskConstruction2","PPEselection2","JobTaskDetail","group","highRiskConstr","array","PPE","LicenceCat","identifyHazrds","contrActReq","residualRisk","getJobTask","getAllHighRisk","getAllLicence","getAllCategories","getAllPPE","getAllHazard","getAllContrActReq","highRiskFA","push","highRiskFG","PPE_FA","PPE_FG","licenceCatFA","licenceCatFG","contrActReqFA","contrActReqFG","identifyHazrdsFA","identifyHazrdsFG","riskLevelFA","riskLevelFG","residlRiskLevelFA","residlRiskLevelFG","addCOP","newActionCOP","get","highRiskArr","ppeArr","licenceArr","hazardsArr","contrActReqArr","resiRiskLevel","copArr","console","log","getAllJobtask","subscribe","res","data","forEach","item","i","addActionHighRisk","addActionPPE","addActionLicnCat","addActionContrActReq","addActionIdentifyHazrds","addActionRiskLevel","addActionResiRiskLevel","controls","setValue","risk","licence","identifyHazard","controlActionRequired","getAllRisk","getAllHazards","getAllContrlActReq","getAllLicenceCat","title","id","ppe","element","_id","set","updateJobTask","fire","showConfirmButton","timer","catArr","licenceCategoryId","Risk","routes","path","component","ConfiLogiRoutingModule","forChild","exports","JobNumberComponent"],"mappings":"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","file":"views-confi-logi-confi-logi-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { ConfiLogiRoutingModule } from './confi-logi-routing.module';\r\nimport { ConfiLogiComponent } from './confi-logi.component';\r\nimport { SetLogicComponent } from './set-logic/set-logic.component';\r\nimport { JobNumberComponent } from './job-number/job-number.component';\r\nimport { CreateJobNoComponent } from './job-number/create-job-no/create-job-no.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [ConfiLogiComponent, SetLogicComponent, JobNumberComponent, CreateJobNoComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ConfiLogiRoutingModule,SharedModule,FormsModule,\r\n    ReactiveFormsModule\r\n  ]\r\n})\r\nexport class ConfiLogiModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-confi-logi',\r\n  templateUrl: './confi-logi.component.html',\r\n  styleUrls: ['./confi-logi.component.scss']\r\n})\r\nexport class ConfiLogiComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-create-job-no',\r\n  templateUrl: './create-job-no.component.html',\r\n  styleUrls: ['./create-job-no.component.scss']\r\n})\r\nexport class CreateJobNoComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>create-job-no works!</p>\r\n","import { element } from 'protractor';\r\nimport { MatSelect } from '@angular/material/select';\r\nimport {\r\n  Component,\r\n  OnInit,\r\n  QueryList,\r\n  ViewChildren,\r\n  AfterViewInit,\r\n  AfterViewChecked,\r\n} from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormArray } from '@angular/forms';\r\nimport Swal from 'sweetalert2';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { SetTitleService } from 'src/app/utils/services/set-title.service';\r\n@Component({\r\n  selector: 'app-set-logic',\r\n  templateUrl: './set-logic.component.html',\r\n  styleUrls: ['./set-logic.component.scss'],\r\n})\r\nexport class SetLogicComponent implements AfterViewInit, OnInit {\r\n  JobTaskDetail!: FormGroup;\r\n  allHazards=[];\r\n  allContrlActReq=[];\r\n  jobTaskData: any = [];\r\n  highRiskData: any = [];\r\n  PPESelectionData: any = [];\r\n  codeOfPract: any = [];\r\n  licenseAndQual: any = [];\r\n  licenseAndQualificationData: any = [];\r\n  licenceCatAll: any = [];\r\n  highRiskConstructionData: any = [];\r\n  task: any = [];\r\n  riskLevel='';\r\n  residuleRiskL='';\r\n  PPEselection = [\r\n    { label: 'Disposable dust mask', value: '' },\r\n    { label: 'Dust Mas', value: '' },\r\n    { label: 'Face shield', value: '' },\r\n    { label: 'Full face respirator', value: '' },\r\n    { label: 'Gttors', value: '' },\r\n    { label: 'Half face respirator', value: '' },\r\n    { label: 'Hard Hat', value: '' },\r\n    { label: 'Hearing protection', value: '' },\r\n    { label: 'High-Vis Clothing', value: '' },\r\n    { label: 'Lock Out Tags', value: '' },\r\n    { label: 'Long sleeve/Long pants', value: '' },\r\n    { label: 'Out of Service Tags', value: '' },\r\n    { label: 'Protective gloves', value: '' },\r\n    { label: 'Rescue kit', value: '' },\r\n    { label: 'Safety boots', value: '' },\r\n    { label: 'Safety glasses', value: '' },\r\n    { label: 'Sun Screen', value: '' },\r\n    { label: 'torch', value: '' },\r\n    { label: 'Wide Brim Hat', value: '' },\r\n  ];\r\n\r\n  licenseAndQualification = [\r\n    { label: 'Open Cable Licence', value: '' },\r\n    { label: 'White Card', value: '' },\r\n    { label: 'EWP Licence', value: '' },\r\n    { label: 'Working At Heights', value: '' },\r\n    { label: 'Security Licence', value: '' },\r\n    { label: 'Asbestos Awarness', value: '' },\r\n    { label: 'Working In Confined Space', value: '' },\r\n  ];\r\n\r\n  highRiskConstruction2 = [\r\n    {\r\n      label: 'Working in or near trenches or shafts deeper than 1.5metres',\r\n      value: '',\r\n    },\r\n    { label: 'Work in or near a confined space', value: '' },\r\n    {\r\n      label:\r\n        'Work in an area that may have a contaminated or flammable atmosphere',\r\n      value: '',\r\n    },\r\n    { label: 'Working around or near mobile plant', value: '' },\r\n    { label: 'Work with near or near asbestos', value: '' },\r\n    { label: 'Working with hazardous substances', value: '' },\r\n    { label: 'Working with or near tilt-up/precast concrete', value: '' },\r\n    { label: 'Risk of falls higher than 2 metres', value: '' },\r\n    {\r\n      label: 'Working near on or adjacent to a road or rail corridor',\r\n      value: '',\r\n    },\r\n    { label: 'Working on or near telecommunication tower', value: '' },\r\n    { label: 'Working on or near telecommunication tower', value: '' },\r\n    { label: 'Work near explosives', value: '' },\r\n    {\r\n      label:\r\n        'Work in or near water or other liquid that involves a risk of drowning',\r\n      value: '',\r\n    },\r\n    { label: 'Demolition of load-bearing structure', value: '' },\r\n    { label: 'Diving work', value: '' },\r\n  ];\r\n\r\n  PPEselection2 = [\r\n    { label: 'Disposable dust mask', value: '' },\r\n    { label: 'Dust Mas', value: '' },\r\n    { label: 'Face shield', value: '' },\r\n    { label: 'Full face respirator', value: '' },\r\n    { label: 'Gttors', value: '' },\r\n    { label: 'Half face respirator', value: '' },\r\n    { label: 'Hard Hat', value: '' },\r\n    { label: 'Hearing protection', value: '' },\r\n    { label: 'High-Vis Clothing', value: '' },\r\n    { label: 'Lock Out Tags', value: '' },\r\n    { label: 'Long sleeve/Long pants', value: '' },\r\n    { label: 'Out of Service Tags', value: '' },\r\n    { label: 'Protective gloves', value: '' },\r\n    { label: 'Rescue kit', value: '' },\r\n    { label: 'Safety boots', value: '' },\r\n    { label: 'Safety glasses', value: '' },\r\n    { label: 'Sun Screen', value: '' },\r\n    { label: 'torch', value: '' },\r\n    { label: 'Wide Brim Hat', value: '' },\r\n  ];\r\n  // @ViewChild('risk') risk: any;\r\n  @ViewChildren('risk') Risk: QueryList<any>;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    private setTitle: SetTitleService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.setTitle.setTitle('WHS-Set Relation');\r\n\r\n    this.JobTaskDetail = this.fb.group({\r\n      highRiskConstr: this.fb.array([]),\r\n      PPE: this.fb.array([]),\r\n      LicenceCat: this.fb.array([]),\r\n      identifyHazrds: this.fb.array([]),\r\n      contrActReq: this.fb.array([]),\r\n      riskLevel: this.fb.array([]),\r\n      residualRisk: this.fb.array([]),\r\n    //  codeOfPract: this.fb.array([]),\r\n    });\r\n\r\n    this.getJobTask();\r\n    this.getAllHighRisk();\r\n    this.getAllLicence();\r\n    this.getAllCategories();\r\n    this.getAllPPE();\r\n    this.getAllHazard();\r\n    this.getAllContrActReq();\r\n    //  this.getCodOfCond();\r\n  }\r\n\r\n  ngAfterViewInit() {}\r\n\r\n  addActionHighRisk() {\r\n    {\r\n      this.highRiskFA().push(this.highRiskFG());\r\n    }\r\n  }\r\n  addActionPPE() {\r\n    {\r\n      this.PPE_FA().push(this.PPE_FG());\r\n    }\r\n  }\r\n  addActionLicnCat() {\r\n    {\r\n      this.licenceCatFA().push(this.licenceCatFG());\r\n    }\r\n  }\r\n  addActionContrActReq() {\r\n    {\r\n      this.contrActReqFA().push(this.contrActReqFG());\r\n    }\r\n  }\r\n  addActionIdentifyHazrds() {\r\n    {\r\n      this.identifyHazrdsFA().push(this.identifyHazrdsFG());\r\n    }\r\n  }\r\n  addActionRiskLevel() {\r\n    {\r\n      this.riskLevelFA().push(this.riskLevelFG());\r\n    }\r\n  }\r\n  addActionResiRiskLevel() {\r\n    {\r\n      this.residlRiskLevelFA().push(this.residlRiskLevelFG());\r\n    }\r\n  }\r\n  addActionCOP() {\r\n    {\r\n      this.addCOP().push(this.newActionCOP());\r\n    }\r\n  }\r\n  highRiskFA(): FormArray {\r\n    return this.JobTaskDetail.get('highRiskConstr') as FormArray;\r\n  }\r\n  PPE_FA(): FormArray {\r\n    return this.JobTaskDetail.get('PPE') as FormArray;\r\n  }\r\n  licenceCatFA(): FormArray {\r\n    return this.JobTaskDetail.get('LicenceCat') as FormArray;\r\n  }\r\n  identifyHazrdsFA(): FormArray {\r\n    return this.JobTaskDetail.get('identifyHazrds') as FormArray;\r\n  }\r\n  contrActReqFA(): FormArray {\r\n    return this.JobTaskDetail.get('contrActReq') as FormArray;\r\n  }\r\n  addCOP(): FormArray {\r\n    return this.JobTaskDetail.get('codeOfPract') as FormArray;\r\n  }\r\n  riskLevelFA(): FormArray {\r\n    return this.JobTaskDetail.get('riskLevel') as FormArray;\r\n  }\r\n  residlRiskLevelFA(): FormArray {\r\n    return this.JobTaskDetail.get('residualRisk') as FormArray;\r\n  }\r\n  highRiskFG(): FormGroup {\r\n    return this.fb.group({\r\n      highRiskArr: [''],\r\n    });\r\n  }\r\n  PPE_FG(): FormGroup {\r\n    return this.fb.group({\r\n      ppeArr: [''],\r\n    });\r\n  }\r\n  licenceCatFG(): FormGroup {\r\n    return this.fb.group({\r\n      licenceArr: [''],\r\n    });\r\n  }\r\n  identifyHazrdsFG(): FormGroup {\r\n    return this.fb.group({\r\n      hazardsArr: [''],\r\n    });\r\n  }\r\n  contrActReqFG(): FormGroup {\r\n    return this.fb.group({\r\n      contrActReqArr: [''],\r\n    });\r\n  }\r\n  riskLevelFG(): FormGroup {\r\n    return this.fb.group({\r\n      riskLevel: [''],\r\n    });\r\n  }\r\n  residlRiskLevelFG(): FormGroup {\r\n    return this.fb.group({\r\n      resiRiskLevel: [''],\r\n    });\r\n  }\r\n  newActionCOP(): FormGroup {\r\n    //code of practice\r\n    return this.fb.group({\r\n      copArr: [''],\r\n    });\r\n  }\r\n\r\n  onFormSubmit() {\r\n    console.log(this.JobTaskDetail);\r\n  }\r\n  getJobTask() {\r\n    this.logicalFormInfo.getAllJobtask().subscribe((res: any) => {\r\n      console.log('jobTaskDetails=>', res);\r\n      this.jobTaskData = res.data;\r\n      this.jobTaskData.forEach((item,i) => {\r\n        this.addActionHighRisk();\r\n        this.addActionPPE();\r\n        this.addActionLicnCat();\r\n        this.addActionContrActReq();\r\n        this.addActionIdentifyHazrds(); \r\n        this.addActionRiskLevel(); \r\n        this.addActionResiRiskLevel();   \r\n        this.highRiskFA().controls[i].get('highRiskArr').setValue(item.risk);\r\n        this.PPE_FA().controls[i].get('ppeArr').setValue(item.PPE);\r\n        this.licenceCatFA().controls[i].get('licenceArr').setValue(item.licence);\r\n        this.identifyHazrdsFA().controls[i].get('hazardsArr').setValue(item.identifyHazard);\r\n        this.contrActReqFA().controls[i].get('contrActReqArr').setValue(item.controlActionRequired);\r\n        this.riskLevelFA().controls[i].get('riskLevel').setValue(item.riskLevel);\r\n        this.residlRiskLevelFA().controls[i].get('resiRiskLevel').setValue(item.residualRisk);\r\n\r\n        });\r\n\r\n    });\r\n  }\r\n  getAllHighRisk() {\r\n    this.logicalFormInfo.getAllRisk().subscribe((res: any) => {\r\n      console.log('Risk=>', res);\r\n      this.highRiskConstructionData = res.data;\r\n    });\r\n  }\r\n  getAllPPE() {\r\n    this.logicalFormInfo.getAllPPE().subscribe((res: any) => {\r\n      console.log('PPE=>', res);\r\n      this.PPESelectionData = res.data;\r\n    });\r\n  }\r\n  // getCodOfCond() {\r\n  //   this.mode = 'codeOfPractice';\r\n  //   this.logicalFormInfo.getFormDataById(this.mode).subscribe((data) => {\r\n  //     console.log('codeOfPractice=>', data);\r\n  //     this.codeOfPract = data.data[0];\r\n  //   });\r\n  // }\r\n  getAllLicence() {\r\n    this.logicalFormInfo.getAllLicence().subscribe((res) => {\r\n      console.log('Licence=>', res);\r\n      this.licenseAndQual = res.data;\r\n    });\r\n  }\r\n  getAllHazard() {\r\n    this.logicalFormInfo.getAllHazards().subscribe((res:any) => {\r\n      console.log('getAllHazards=>', res);\r\n      this.allHazards = res.data;\r\n    });\r\n  }\r\n  getAllContrActReq()  {\r\n    this.logicalFormInfo.getAllContrlActReq().subscribe((res:any) => {\r\n      console.log('getAllHazards=>', res);\r\n      this.allContrlActReq = res.data;\r\n    });\r\n  }\r\n  getAllCategories() {\r\n    this.logicalFormInfo.getAllLicenceCat().subscribe((res) => {\r\n      console.log('getAllLicenceCat=>', res);\r\n      this.licenceCatAll = res.data;\r\n    });\r\n  }\r\n\r\n  // setRelation(riskIds, ppeIDs, codOfPractIds, title, id) {\r\n  setRelation(title, id,i) {\r\n    // console.log('risk', riskIds);\r\n\r\n    // console.log('ppe', ppeIDs);\r\n    /// console.log('licence', licenceIds);\r\n    // console.log('codOfPract', codOfPractIds);\r\n    console.log('index', title);\r\n    console.log('id', id);\r\n    console.log('id', i);\r\nlet risk = [],\r\nppe=[],\r\nlicence=[],\r\nidentifyHazard=[],\r\ncontrolActionRequired=[];\r\n  if(this.highRiskFA().controls[i].get('highRiskArr').value){\r\n    this.highRiskFA().controls[i].get('highRiskArr').value.forEach(element => {\r\n      risk.push(element._id)\r\n    });\r\n  }\r\n  if(this.PPE_FA().controls[i].get('ppeArr').value){\r\n    this.PPE_FA().controls[i].get('ppeArr').value.forEach(element => {\r\n      ppe.push(element._id)\r\n    });\r\n  }\r\n  if(this.licenceCatFA().controls[i].get('licenceArr').value){\r\n    this.licenceCatFA().controls[i].get('licenceArr').value.forEach(element => {\r\n      licence.push(element._id)\r\n    });\r\n  }\r\n  if(this.identifyHazrdsFA().controls[i].get('hazardsArr').value){\r\n    this.identifyHazrdsFA().controls[i].get('hazardsArr').value.forEach(element => {\r\n      identifyHazard.push(element._id)\r\n    });\r\n  }\r\n  if(this.contrActReqFA().controls[i].get('contrActReqArr').value){\r\n    this.contrActReqFA().controls[i].get('contrActReqArr').value.forEach(element => {\r\n      controlActionRequired.push(element._id)\r\n    });\r\n  }\r\n\r\n    let data = {\r\n      title: title,\r\n      risk: this.highRiskFA().controls[i].get('highRiskArr').value,\r\n      PPE: this.PPE_FA().controls[i].get('ppeArr').value,\r\n      licence: this.licenceCatFA().controls[i].get('licenceArr').value,\r\n      identifyHazard:this.identifyHazrdsFA().controls[i].get('hazardsArr').value,\r\n      controlActionRequired: this.contrActReqFA().controls[i].get('contrActReqArr').value,\r\n      riskLevel:this.riskLevelFA().controls[i].get('riskLevel').value ,\r\n      residualRisk: this.residlRiskLevelFA().controls[i].get('resiRiskLevel').value,\r\n      set:true      \r\n    };\r\n    console.log(data);\r\n\r\n    this.logicalFormInfo.updateJobTask(data,id).subscribe((res) => {\r\n      console.log('resJob Task=>', res);\r\n      this.getJobTask();\r\n\r\n      Swal.fire({\r\n        title: 'Relation set successfully',\r\n        showConfirmButton: false,\r\n        timer: 1200,\r\n      });\r\n    });\r\n  }\r\n  categorySel(catArr) {\r\n    this.licenseAndQualificationData = [];\r\n\r\n    console.log(catArr);\r\n    catArr.forEach((element) => {\r\n      this.licenseAndQual.forEach((item) => {\r\n        if (element === item.licenceCategoryId._id) {\r\n          this.licenseAndQualificationData.push(item);\r\n        }\r\n      });\r\n    });\r\n    console.log(\r\n      ' this.licenseAndQualificationData',\r\n      this.licenseAndQualificationData\r\n    );\r\n  }\r\n}\r\n","<section class=\"content\" [formGroup]=\"JobTaskDetail\">\r\n    <div class=\"container-fluid\">\r\n      <div class=\"text-center\">\r\n        <h1 > Job Task List</h1>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-12\">\r\n          <div class=\"card\">\r\n            <div class=\"card-body p-0 overflow-auto\">\r\n              <table class=\"table table-hover text-wrap\">\r\n                <thead>\r\n                  <tr>\r\n                    <th style=\"width: 1%\">Index</th>\r\n                    <th style=\"width: 20%\">Job Task List </th>\r\n                    <th style=\"width: 15%\">High Risk Construction </th>\r\n                    <th style=\"width: 15%\">PPE</th>\r\n                    <th style=\"width: 15%\">Licence Category</th>\r\n                    <th style=\"width: 15%\">Identify Hazards</th>\r\n                    <th style=\"width: 15%\">Risk</th>\r\n                    <th style=\"width: 15%\">Control Action Required</th>\r\n                    <th style=\"width: 15%\">Residule Risk</th>\r\n                    <!-- <th style=\"width: 15%\">Code Of Practice</th> -->\r\n                    <th style=\"width: 15%\">Action</th>\r\n  \r\n                  </tr>\r\n                </thead>\r\n                <tbody >\r\n                  <tr *ngFor=\"let task of  jobTaskData; let i = index\">\r\n                    <td>{{i+1}}</td>\r\n                    <td>{{ task.title }}</td>\r\n                    <ng-container formArrayName=\"highRiskConstr\">\r\n                      <td [formGroupName]=\"i\">\r\n                        <mat-form-field appearance=\"fill\">\r\n                          <mat-label>HighRiskConstruction</mat-label>\r\n                          <mat-select formControlName=\"highRiskArr\" multiple >\r\n                            <mat-select-trigger>\r\n                              <span *ngIf=\"!highRiskFA().controls[i].get('highRiskArr').value?.length\" class=\"example-additional-selection\">\r\n                              </span>\r\n                              <span *ngIf=\"highRiskFA().controls[i].get('highRiskArr').value?.length == 1\" class=\"example-additional-selection\">\r\n                                One Item selected\r\n                              </span>\r\n                              <span *ngIf=\"highRiskFA().controls[i].get('highRiskArr').value?.length > 1\" class=\"example-additional-selection\">\r\n                                More than one selected\r\n                              </span>\r\n                            </mat-select-trigger>\r\n                            <mat-option *ngFor=\"let parameter of highRiskConstructionData\" [value]=\"parameter._id\">\r\n                              {{parameter.title}}</mat-option>\r\n                          </mat-select>\r\n                        </mat-form-field>\r\n                      </td>\r\n                    </ng-container >                \r\n                    <ng-container formArrayName=\"PPE\">\r\n                      <td [formGroupName]=\"i\">\r\n                        <mat-form-field appearance=\"fill\">\r\n                          <mat-label>PPE selection</mat-label>\r\n                          <mat-select formControlName=\"ppeArr\" multiple >\r\n                            <mat-select-trigger>\r\n                              <span *ngIf=\"!PPE_FA().controls[i].get('ppeArr').value?.length \" class=\"example-additional-selection\">\r\n                               \r\n                              </span>\r\n                              <span *ngIf=\"PPE_FA().controls[i].get('ppeArr').value?.length == 1\" class=\"example-additional-selection\">\r\n                               One Item selected\r\n                              </span>\r\n                              <span *ngIf=\"PPE_FA().controls[i].get('ppeArr').value?.length > 1\" class=\"example-additional-selection\">\r\n                                More than one selected\r\n                              </span>\r\n                            </mat-select-trigger>\r\n                            <mat-option *ngFor=\"let parameter of PPESelectionData\" [value]=\"parameter._id\">{{parameter.title}}\r\n                            </mat-option>\r\n                          </mat-select>\r\n                        </mat-form-field>\r\n                      </td>\r\n                    </ng-container>\r\n                    <ng-container formArrayName=\"LicenceCat\">\r\n                      <td [formGroupName]=\"i\">\r\n                        <mat-form-field appearance=\"fill\">\r\n                          <mat-label>Licence Categories</mat-label>\r\n                          <mat-select formControlName=\"licenceArr\" multiple >\r\n                            <mat-select-trigger>\r\n                              <span *ngIf=\"!licenceCatFA().controls[i].get('licenceArr').value?.length\" class=\"example-additional-selection\">\r\n                              </span>\r\n                              <span *ngIf=\"licenceCatFA().controls[i].get('licenceArr').value?.length == 1\" class=\"example-additional-selection\">\r\n                                One Item selected\r\n                              </span>\r\n                              <span *ngIf=\"licenceCatFA().controls[i].get('licenceArr').value?.length > 1\" class=\"example-additional-selection\">\r\n                                More than one selected\r\n                              </span>\r\n                            </mat-select-trigger>\r\n                            <mat-option *ngFor=\"let parameter of licenceCatAll\" [value]=\"parameter._id\">{{parameter.title}}\r\n                            </mat-option>\r\n                          </mat-select>\r\n                        </mat-form-field>\r\n                      </td>\r\n                    </ng-container>\r\n                    <ng-container formArrayName=\"identifyHazrds\">\r\n                      <td [formGroupName]=\"i\">\r\n                        <mat-form-field appearance=\"fill\">\r\n                          <mat-label>Identify Hazards</mat-label>\r\n                          <mat-select formControlName=\"hazardsArr\" multiple >\r\n                            <mat-select-trigger>\r\n                              <span *ngIf=\"!identifyHazrdsFA().controls[i].get('hazardsArr').value?.length\" class=\"example-additional-selection\">\r\n                              </span>\r\n                              <span *ngIf=\"identifyHazrdsFA().controls[i].get('hazardsArr').value?.length == 1\" class=\"example-additional-selection\">\r\n                                One Item selected\r\n                              </span>\r\n                              <span *ngIf=\"identifyHazrdsFA().controls[i].get('hazardsArr').value?.length > 1\" class=\"example-additional-selection\">\r\n                                More than one selected\r\n                              </span>\r\n                            </mat-select-trigger>\r\n                            <mat-option *ngFor=\"let parameter of allHazards\" [value]=\"parameter\">{{parameter.title}}\r\n                            </mat-option>\r\n                          </mat-select>\r\n                        </mat-form-field>\r\n                      </td>\r\n                    </ng-container>\r\n                  <ng-container formArrayName=\"riskLevel\">\r\n                    <td [formGroupName]=\"i\">\r\n                      <mat-form-field appearance=\"fill\">\r\n                      <mat-label>Risk</mat-label>\r\n                      <mat-select formControlName=\"riskLevel\" >\r\n                        <mat-option value=\"L1\">L1</mat-option>\r\n                        <mat-option value=\"L2\">L2</mat-option>\r\n                        <mat-option value=\"L3\">L3</mat-option>\r\n                        <mat-option value=\"L4\">L4</mat-option>\r\n                        <mat-option value=\"L5\">L5</mat-option>                        \r\n                      </mat-select>\r\n                    </mat-form-field>\r\n                    </td>\r\n                  </ng-container>\r\n                   \r\n                    <ng-container formArrayName=\"contrActReq\">\r\n                      <td [formGroupName]=\"i\">\r\n                        <mat-form-field appearance=\"fill\">\r\n                          <mat-label>Control Actions Required</mat-label>\r\n                          <mat-select formControlName=\"contrActReqArr\" multiple >\r\n                            <mat-select-trigger>\r\n                              <span *ngIf=\"!contrActReqFA().controls[i].get('contrActReqArr').value?.length\" class=\"example-additional-selection\">\r\n                              </span>\r\n                              <span *ngIf=\"contrActReqFA().controls[i].get('contrActReqArr').value?.length == 1\" class=\"example-additional-selection\">\r\n                                One Item selected\r\n                              </span>\r\n                              <span *ngIf=\"contrActReqFA().controls[i].get('contrActReqArr').value?.length > 1\" class=\"example-additional-selection\">\r\n                                More than one selected\r\n                              </span>\r\n                            </mat-select-trigger>\r\n                            <mat-option *ngFor=\"let parameter of allContrlActReq\" [value]=\"parameter\">{{parameter.title}}\r\n                            </mat-option>\r\n                          </mat-select>\r\n                        </mat-form-field>\r\n                      </td>\r\n                    </ng-container>\r\n\r\n                    <ng-container formArrayName=\"residualRisk\">\r\n                      <td [formGroupName]=\"i\">\r\n                        <mat-form-field appearance=\"fill\">\r\n                        <mat-label>Residule Risk</mat-label>\r\n                        <mat-select formControlName=\"resiRiskLevel\" >\r\n                          <mat-option value=\"L1\">L1</mat-option>\r\n                          <mat-option value=\"L2\">L2</mat-option>\r\n                          <mat-option value=\"L3\">L3</mat-option>\r\n                          <mat-option value=\"L4\">L4</mat-option>\r\n                          <mat-option value=\"L5\">L5</mat-option>                        \r\n                        </mat-select>\r\n                      </mat-form-field>\r\n                      </td>\r\n                    </ng-container>\r\n                 \r\n                 \r\n                  <!-- <ng-container formArrayName=\"codeOfPract\">\r\n                    <td [formGroupName]=\"i\">\r\n                      <mat-form-field appearance=\"fill\">\r\n                        <mat-label>Code Of Practice\r\n                        </mat-label>\r\n                        <mat-select formControlName=\"copArr\" multiple >\r\n                          <mat-select-trigger>\r\n                            {{codeOfPract.value ? codeOfPract.value[0] : ''}}\r\n                            <span *ngIf=\"codeOfPract.value?.length > 1\" class=\"example-additional-selection\">\r\n                              (+{{codeOfPract.value.length - 1}} {{codeOfPract.value?.length === 2 ? 'other' : 'others'}})\r\n                            </span>\r\n                          </mat-select-trigger>\r\n                          <mat-option *ngFor=\"let parameter of codeOfPract.subComponents\" [value]=\"parameter._id\">\r\n                            {{parameter.title}}</mat-option>\r\n                        </mat-select>\r\n                      </mat-form-field>\r\n                    </td>\r\n                  </ng-container> -->\r\n                 \r\n                    <!-- <td><button class=\"btn btn-primary\" (click)=\"setRelation(risk.value,ppeSel.value,codOfPractice.value,task.title,task._id)\">Set</button></td> -->\r\n                    <td *ngIf=\"!task.set\"><button class=\"btn btn-primary\" (click)=\"setRelation(task.title,task._id,i)\">Set</button></td>\r\n                    <td *ngIf=\"task.set\"><button class=\"btn btn-primary\" (click)=\"setRelation(task.title,task._id,i)\">Update</button></td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section>","import { SetLogicComponent } from './set-logic/set-logic.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ConfiLogiComponent } from './confi-logi.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: ConfiLogiComponent },\r\n  { path: 'setLogic', component: SetLogicComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ConfiLogiRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-job-number',\r\n  templateUrl: './job-number.component.html',\r\n  styleUrls: ['./job-number.component.scss']\r\n})\r\nexport class JobNumberComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>job-number works!</p>\r\n"]}