{"version":3,"sources":["webpack:///src/app/views/confi-logi/confi-logi.module.ts","webpack:///src/app/views/confi-logi/set-logic/set-relation/set-relation.component.ts","webpack:///src/app/views/confi-logi/set-logic/set-relation/set-relation.component.html","webpack:///src/app/views/confi-logi/hazard-treatment/add-hazard-relation/add-hazard-relation.component.ts","webpack:///src/app/views/confi-logi/hazard-treatment/add-hazard-relation/add-hazard-relation.component.html","webpack:///src/app/views/confi-logi/set-logic/add-job-task/add-job-task.component.ts","webpack:///src/app/views/confi-logi/set-logic/add-job-task/add-job-task.component.html","webpack:///src/app/views/confi-logi/set-logic/test-logic/test-logic.component.ts","webpack:///src/app/views/confi-logi/set-logic/test-logic/test-logic.component.html","webpack:///src/app/views/confi-logi/hazard-treatment/hazard-treatment.component.ts","webpack:///src/app/views/confi-logi/hazard-treatment/hazard-treatment.component.html","webpack:///src/app/views/confi-logi/confi-logi.component.ts","webpack:///src/app/views/confi-logi/confi-logi.component.html","webpack:///src/app/views/confi-logi/job-number/create-job-no/create-job-no.component.ts","webpack:///src/app/views/confi-logi/job-number/create-job-no/create-job-no.component.html","webpack:///src/app/views/confi-logi/set-logic/set-logic.component.ts","webpack:///src/app/views/confi-logi/set-logic/set-logic.component.html","webpack:///src/app/views/confi-logi/confi-logi-routing.module.ts","webpack:///src/app/views/confi-logi/set-logic/set-relation/add-item/add-item.component.ts","webpack:///src/app/views/confi-logi/set-logic/set-relation/add-item/add-item.component.html","webpack:///src/app/views/confi-logi/job-number/job-number.component.ts","webpack:///src/app/views/confi-logi/job-number/job-number.component.html"],"names":["ConfiLogiModule","declarations","imports","SetRelationComponent","route","dialog","router","fb","logicalFormInfo","jobTask","highRiskConstructionData","PPESelectionData","licenseAndQual","allHazards","allContrlActReq","licenceByTradecat","resiRiskLevelData","riskLevelData","staff","allCodeOfPract","isLinear","jobTaskId","stepperList","name","i","code","count","JobTaskDetail","group","highRiskConstr","PPE","codeOfPract","LicenceCat","identifyHazrds","contrActReq","riskLevel","residualRiskL","personResp","chemical","queryParams","subscribe","id","console","log","getJobtaskById","res","data","getLicenceByTradeCat","tradeCategoryId","set","patchValue","risk","codeOfPractice","licence","identifyHazard","controlActionRequired","residualRisk","get","setValue","getAllHighRisk","getAllPPE","getAllHazard","getAllContrActReq","getAllStaff","getAllResidualRiskLevel","getAllRiskLevel","getAllCodeOfPractice","getAllResidual","getAllRisk","getAllCOP","getAllHazards","getAllContrlActReq","licenceData","value","allContrlActReqTitle","temp1","forEach","element1","element2","_id","title","push","allHazardsTitle","temp2","allCOPTitle","temp3","staffTitle","temp4","updateJobTask","fire","showConfirmButton","timer","navigate","type","temp","dialogRef","open","width","afterClosed","result","length","map","x","index","selector","templateUrl","styleUrls","AddHazardRelationComponent","hazard","hazardId","Consequences","Likelihood","RiskRating","ActionRequired","setHazard","riskRating","required","actionRequired","getHazardTreatmentById","updateHazardTreatmentRelation","AddJobTaskComponent","Edit","Add","licenceCatAll","dataRec","addjob","tradeCategory","getAllCategories","Id","Eddit","Added","jobTaskDetails","getAllLicenceCat","close","err","error","addJobTask","TestLogicComponent","ref","ctx","estimate","staffId","item","HazardTreatmentComponent","setTitle","hazardData","ELEMENT_DATA","displayedColumns","dataSource","paginator","getAllHazardTreatmentRelation","setStatesDetail","element","sort","Risk","ConfiLogiComponent","CreateJobNoComponent","logicalFormInfoService","allSites","allCustomers","allState","addJobNumberForm","valueChanges","JSON","parse","streetNumber","streetAddress","suburb","stateId","customerContact","contacts","phone","email","siteName","disabled","state","customerName","customerContactPhone","customerEmail","getAllSite","getAllCustomer","getAllStates","controls","arrObj","f","addJobNumber","onSubmit","SetLogicComponent","jobTaskData","highRiskData","licenseAndQualificationData","task","residuleRiskL","PPEselection","label","licenseAndQualification","highRiskConstruction2","PPEselection2","getJobTask","getAllJobtask","getAllLicence","catArr","licenceCategoryId","routes","path","component","ConfiLogiRoutingModule","forChild","exports","AddItemComponent","addItem","addHighRisk","addPPE","addLicence","addHazard","addCOP","addRiskLevel","addControlActReq","addResidRiskLevel","addStaff","addRisk","resData","addResidual","addHazards","dataTemp","addContrlActReq","addCode","closeDialog","onFormSubmit","JobNumberComponent","getAllJobNumber","height","action","userId","getAllJobTask","text","jobNumber","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","deleteJobNumber","openDialog"],"mappings":"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","file":"views-confi-logi-confi-logi-module-es5.js","sourcesContent":["import { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { ConfiLogiRoutingModule } from './confi-logi-routing.module';\r\nimport { ConfiLogiComponent } from './confi-logi.component';\r\nimport { SetLogicComponent } from './set-logic/set-logic.component';\r\nimport { JobNumberComponent } from './job-number/job-number.component';\r\nimport { CreateJobNoComponent } from './job-number/create-job-no/create-job-no.component';\r\nimport { SetRelationComponent } from './set-logic/set-relation/set-relation.component';\r\nimport {AutosizeModule} from 'ngx-autosize';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport { AddItemComponent } from './set-logic/set-relation/add-item/add-item.component';\r\nimport { TestLogicComponent } from './set-logic/test-logic/test-logic.component';\r\nimport { AddJobTaskComponent } from './set-logic/add-job-task/add-job-task.component';\r\nimport { HazardTreatmentComponent } from './hazard-treatment/hazard-treatment.component';\r\nimport { AddHazardRelationComponent } from './hazard-treatment/add-hazard-relation/add-hazard-relation.component';\r\n\r\n@NgModule({\r\n  declarations: [ConfiLogiComponent, SetLogicComponent, JobNumberComponent, CreateJobNoComponent, SetRelationComponent, AddItemComponent, TestLogicComponent, AddJobTaskComponent, HazardTreatmentComponent, AddHazardRelationComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ConfiLogiRoutingModule,SharedModule,FormsModule,\r\n    ReactiveFormsModule,MatStepperModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    AutosizeModule\r\n  ]\r\n})\r\nexport class ConfiLogiModule { }\r\n","import { AddItemComponent } from './add-item/add-item.component';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport Swal from 'sweetalert2';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-set-relation',\r\n  templateUrl: './set-relation.component.html',\r\n  styleUrls: ['./set-relation.component.scss'],\r\n})\r\nexport class SetRelationComponent implements OnInit {\r\n  JobTaskDetail!: FormGroup;\r\n  jobTask = null;\r\n  highRiskConstructionData = [];\r\n  PPESelectionData = [];\r\n  licenseAndQual = [];\r\n  allHazards = [];\r\n  allContrlActReq = [];\r\n  licenceByTradecat = [];\r\n  resiRiskLevelData = [];\r\n  riskLevelData = [];\r\n  staff = [];\r\n  allCodeOfPract = [];\r\n  isLinear = false;\r\n  jobTaskId = null;\r\n  stepperList:any[]=[\r\n    {\r\n      name:'HighRisk Construction',\r\n      i:1,\r\n      code:'highRisk'\r\n\r\n    },\r\n    {\r\n      name:'PPE',\r\n      i:0,\r\n      code:'ppe'\r\n    },\r\n    {\r\n      name:'Licence',\r\n      i:0,\r\n       code:'licence'\r\n    },\r\n    {\r\n      name:'Identify Hazards',\r\n      i:0,\r\n       code:'identifyHazards'\r\n    },\r\n    {\r\n      name:'Risk Level',\r\n      i:0,\r\n       code:'riskLevel'\r\n    },\r\n    {\r\n      name:'Control Action Required',\r\n      i:0,\r\n       code:'ctrlActreq'\r\n    },\r\n    {\r\n      name:'Code of Practice',\r\n      i:0,\r\n       code:'codeOfPract'\r\n    },\r\n    {\r\n      name:'Residule Risk Level',\r\n      i:0,\r\n       code:'resRiskLevel'\r\n    },\r\n    // {\r\n    //   name:'Code of Practice',\r\n    //   i:0,\r\n    //    code:'codeOfPract'\r\n    // },\r\n    {\r\n      name:'Chemical related Task',\r\n      i:0,\r\n       code:''\r\n    },\r\n    {\r\n      name:'Person Responsible',\r\n      i:0,\r\n       code:'perResbl'\r\n    }\r\n  ]\r\n\r\n  count:number=0\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private dialog: MatDialog,\r\n    private router: Router,\r\n    private fb: FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.JobTaskDetail = this.fb.group({\r\n      highRiskConstr: [],\r\n      PPE: [],\r\n      codeOfPract: [],\r\n      LicenceCat: [],\r\n      identifyHazrds: [],\r\n      contrActReq: [],\r\n      riskLevel: [],\r\n      residualRiskL: [],\r\n      personResp: [],\r\n      chemical: [],\r\n    });\r\n\r\n    this.route.queryParams.subscribe((id) => {\r\n      console.log(id);\r\n      this.jobTaskId = id.id;\r\n      this.logicalFormInfo.getJobtaskById(id.id).subscribe((res: any) => {\r\n        this.jobTask = res.data;\r\n        console.log(\r\n          'this.jobTask ',\r\n          this.jobTask \r\n        );\r\n        this.getLicenceByTradeCat(this.jobTask.tradeCategoryId);\r\n\r\n        if (this.jobTask.set == true) {\r\n          this.JobTaskDetail.patchValue({\r\n            highRiskConstr: this.jobTask.risk,\r\n            PPE: this.jobTask.PPE,\r\n            codeOfPract: this.jobTask.codeOfPractice,\r\n           LicenceCat: this.jobTask.licence,\r\n            identifyHazrds: this.jobTask.identifyHazard,\r\n            contrActReq: this.jobTask.controlActionRequired,\r\n            riskLevel: this.jobTask.riskLevel,\r\n            residualRiskL: this.jobTask.residualRisk,\r\n            personResp: this.jobTask.staff,\r\n            chemical: this.jobTask.chemical,\r\n          });\r\n        }\r\n        if (this.jobTask?.chemical === 'YES')\r\n          this.JobTaskDetail.get('chemical').setValue('YES');\r\n        else this.JobTaskDetail.get('chemical').setValue('NO');\r\n      });\r\n    });\r\n\r\n    this.getAllHighRisk();\r\n    this.getAllPPE();\r\n    this.getAllHazard();\r\n    this.getAllContrActReq();\r\n    this.getAllStaff();\r\n    this.getAllResidualRiskLevel();\r\n    this.getAllRiskLevel();\r\n    this.getAllCodeOfPractice();\r\n  }\r\n\r\n  getAllResidualRiskLevel() {\r\n    this.logicalFormInfo.getAllResidual().subscribe((res: any) => {\r\n    //  console.log('this.resiRiskLevelData', res.data);\r\n      this.resiRiskLevelData = res.data;\r\n    });\r\n  }\r\n  getAllRiskLevel() {\r\n    this.logicalFormInfo.getAllRiskLevel().subscribe((res: any) => {\r\n//console.log('this.riskLevelData', res.data);\r\n      this.riskLevelData = res.data;\r\n    });\r\n  }\r\n  getAllStaff() {\r\n    this.logicalFormInfo.getAllStaff().subscribe((res: any) => {\r\n      console.log(res);\r\n      this.staff = res.data;\r\n    });\r\n  }\r\n  getAllHighRisk() {\r\n    this.logicalFormInfo.getAllRisk().subscribe((res: any) => {\r\n//console.log('Risk=>', res);\r\n      this.highRiskConstructionData = res.data;\r\n    });\r\n  }\r\n  getAllPPE() {\r\n    this.logicalFormInfo.getAllPPE().subscribe((res: any) => {\r\n    //  console.log('PPE=>', res);\r\n      this.PPESelectionData = res.data;\r\n    });\r\n  }\r\n  getAllCodeOfPractice() {\r\n   \r\n    this.logicalFormInfo.getAllCOP().subscribe((res:any) => {\r\n      //console.log('codeOfPractice=>', res);\r\n   this.allCodeOfPract=res.data;\r\n    });\r\n \r\n  }\r\n\r\n  getAllHazard() {\r\n    this.logicalFormInfo.getAllHazards().subscribe((res: any) => {\r\n   //   console.log('getAllHazards=>', res);\r\n      this.allHazards = res.data;\r\n    });\r\n  }\r\n  getAllContrActReq() {\r\n    this.logicalFormInfo.getAllContrlActReq().subscribe((res: any) => {\r\n    //  console.log('getAllHazards=>', res);\r\n      this.allContrlActReq = res.data;\r\n    });\r\n  }\r\n  getLicenceByTradeCat(id) {\r\n    console.log('getLicenceByTradeCat', id);\r\n\r\n    this.logicalFormInfo.getLicenceByTradeCat(id).subscribe((res) => {\r\n   //   console.log('getAllLicenceCat=>', res);\r\n      this.licenceByTradecat = res.data.licenceData;\r\n    });\r\n  }\r\n  setRelation() {\r\n    console.log(this.JobTaskDetail.value);\r\n    let allContrlActReqTitle=[];\r\n    let temp1=this.JobTaskDetail.get('contrActReq').value;\r\n    if(temp1!=null){\r\n      this.allContrlActReq.forEach(element1 => {\r\n        temp1.forEach(element2 => {\r\n          if(element1._id===element2){\r\n            let data={\r\n              title:element1.title,\r\n              id:element1._id\r\n            }\r\n            allContrlActReqTitle.push(data)\r\n          }\r\n        });\r\n      });\r\n    }\r\n  \r\n \r\n   \r\n    let allHazardsTitle=[];\r\n    let temp2=this.JobTaskDetail.get('identifyHazrds').value;\r\n    if(temp2!=null){\r\n      this.allHazards.forEach(element1 => {\r\n        temp2.forEach(element2 => {\r\n          if(element1._id===element2){\r\n            let data={\r\n              title:element1.title,\r\n              id:element1._id\r\n            }\r\n            allHazardsTitle.push(data)\r\n          }\r\n        });\r\n      });\r\n    }\r\n  \r\n    let allCOPTitle=[];\r\n    let temp3=this.JobTaskDetail.get('codeOfPract').value;\r\n    if(temp3!=null){\r\n      this.allCodeOfPract.forEach(element1 => {\r\n        temp3.forEach(element2 => {\r\n          if(element1._id===element2){\r\n            let data={\r\n              title:element1.title,\r\n              id:element1._id\r\n            }\r\n            allCOPTitle.push(data)\r\n          }\r\n        });\r\n      })\r\n    }\r\n    let staffTitle=[];\r\n    let temp4=this.JobTaskDetail.get('personResp').value;\r\n    if(temp4!=null){\r\n      console.log(temp4);\r\n      \r\n      this.staff.forEach(element1 => {\r\n        temp4.forEach(element2 => {\r\n          if(element1._id===element2){\r\n            let data={\r\n              title:element1.title,\r\n              id:element1._id\r\n            }\r\n            staffTitle.push(data)\r\n          }\r\n        });\r\n      })\r\n    }\r\n  ;\r\n    let data = {\r\n      title: this.jobTask.title,\r\n      risk: this.JobTaskDetail.get('highRiskConstr').value||[],\r\n      codeOfPractice: this.JobTaskDetail.get('codeOfPract').value||[],\r\n      PPE: this.JobTaskDetail.get('PPE').value||[],\r\n      tradeCategoryId:this.jobTask.tradeCategoryId,\r\n      licence: this.JobTaskDetail.get('LicenceCat').value||[],\r\n      identifyHazard: this.JobTaskDetail.get('identifyHazrds').value||[],\r\n      controlActionRequired: this.JobTaskDetail.get('contrActReq').value||[],\r\n      riskLevel: this.JobTaskDetail.get('riskLevel').value,\r\n      residualRisk: this.JobTaskDetail.get('residualRiskL').value,\r\n      staff: this.JobTaskDetail.get('personResp').value,\r\n      chemical: this.JobTaskDetail.get('chemical').value,\r\n      allHazardsTitle:allHazardsTitle,\r\n      allContrlActReqTitle:allContrlActReqTitle,\r\n      allCOPTitle:allCOPTitle,\r\n      staffTitle:staffTitle,\r\n      set: true,\r\n    };\r\n\r\n    console.log('send data', data);\r\n\r\n    this.logicalFormInfo\r\n      .updateJobTask(data, this.jobTaskId)\r\n      .subscribe((res) => {\r\n        console.log('resJob Task=>', res);\r\n\r\n        Swal.fire({\r\n          title: 'Relation set successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });\r\n        this.router.navigate(['/admin/confiLogi/setLogic']);\r\n      });\r\n  }\r\n  addItem(type) {\r\n    let temp = {\r\n      type: type,\r\n      tradeCategoryId: this.jobTask.tradeCategoryId,\r\n    };\r\n    if (type === 'licence') {\r\n      temp = {\r\n        type: type,\r\n        tradeCategoryId: this.jobTask.tradeCategoryId,\r\n      };\r\n    } else {\r\n      temp = {\r\n        type: type,\r\n        tradeCategoryId: '',\r\n      };\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(AddItemComponent, {\r\n      width: '550px',\r\n      // height:'50%',\r\n      data: temp,\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      switch (result) {\r\n        case 'highRisk': {\r\n          let data = this.JobTaskDetail.get('highRiskConstr').value;\r\n          this.getAllHighRisk();\r\n          this.JobTaskDetail.get('highRiskConstr').patchValue(data);\r\n          break;\r\n        }\r\n        case 'ppe': {\r\n          let data = this.JobTaskDetail.get('PPE').value;\r\n          this.getAllPPE();\r\n          this.JobTaskDetail.get('PPE').patchValue(data);\r\n          break;\r\n        }\r\n        case 'codeOfPract': {\r\n          let data = this.JobTaskDetail.get('codeOfPract').value;\r\n          this.getAllCodeOfPractice();\r\n          this.JobTaskDetail.get('codeOfPract').patchValue(data);\r\n          break;\r\n        }\r\n        case 'licence': {\r\n          let data = this.JobTaskDetail.get('LicenceCat').value;\r\n          this.getLicenceByTradeCat(this.jobTask.tradeCategoryId);\r\n          this.JobTaskDetail.get('LicenceCat').patchValue(data);\r\n          break;\r\n        }\r\n        case 'identifyHazards': {\r\n          let data = this.JobTaskDetail.get('identifyHazrds').value;\r\n          this.getAllHazard();\r\n          this.JobTaskDetail.get('identifyHazrds').patchValue(data);\r\n          break;\r\n        }\r\n        case 'riskLevel': {\r\n          let data = this.JobTaskDetail.get('riskLevel').value;\r\n          this.getAllRiskLevel();\r\n          this.JobTaskDetail.get('riskLevel').patchValue(data);\r\n          break;\r\n        }\r\n        case 'ctrlActreq': {\r\n          let data = this.JobTaskDetail.get('contrActReq').value;\r\n          this.getAllContrActReq();\r\n          this.JobTaskDetail.get('contrActReq').patchValue(data);\r\n          break;\r\n        }\r\n        case 'resRiskLevel': {\r\n          let data = this.JobTaskDetail.get('residualRiskL').value;\r\n          this.getAllResidualRiskLevel();\r\n          this.JobTaskDetail.get('residualRiskL').patchValue(data);\r\n          break;\r\n        }\r\n        case 'perResbl': {\r\n          let data = this.JobTaskDetail.get('personResp').value;\r\n          this.getAllStaff();\r\n          this.JobTaskDetail.get('personResp').patchValue(data);\r\n          break;\r\n        }\r\n      }\r\n      console.log('The dialog was closed');\r\n    });\r\n  }\r\n  prev(){\r\n    \r\n    if(this.count != this.stepperList.length+1 && this.count !=0){\r\n      this.count--\r\n      this.stepperList.map(x => {\r\n        x.i = 0\r\n      }) \r\n      this.stepperList[this.count].i = 1\r\n      \r\n    }\r\n  }\r\n  next(){\r\n    if(this.count != this.stepperList.length-1){\r\n      this.count++\r\n      this.stepperList.map(x => {\r\n        x.i = 0\r\n      }) \r\n      this.stepperList[this.count].i = 1\r\n      \r\n    }\r\n  }\r\n  handleClick(index){\r\n    console.log(index)\r\n    this.count = index\r\n    this.stepperList.map(x => {\r\n      x.i = 0\r\n    }) \r\n    this.stepperList[this.count].i = 1\r\n  }\r\n  // addItem(type) {\r\n  //   switch (type) {\r\n  //     case 'highRisk': {\r\n  //       this.openDialogBox(type);\r\n  //       break;\r\n  //     }\r\n  //     case 'ppe': {\r\n  //       this.openDialogBox(type);\r\n  //       break;\r\n  //     }\r\n  //     case 'licence': {\r\n  //       this.openDialogBox(type);\r\n  //       break;\r\n  //     }\r\n  //     case 'identifyHazards': {\r\n  //       this.openDialogBox(type);\r\n  //       break;\r\n  //     }\r\n  //     case 'riskLevel': {\r\n  //       this.openDialogBox(type);\r\n  //       break;\r\n  //     }\r\n  //     case 'ctrlActreq': {\r\n  //       this.openDialogBox(type);\r\n  //       break;\r\n  //     }\r\n  //     case 'resRiskLevel': {\r\n  //       this.openDialogBox(type);\r\n  //       break;\r\n  //     }\r\n  //     case 'perResbl': {\r\n  //       this.openDialogBox(type);\r\n  //       break;\r\n  //     }\r\n\r\n  //   }\r\n  // }\r\n}\r\n","<div class=\"btn btn-outline-primary\" [routerLink]=\"['/admin/confiLogi/setLogic']\">\r\n  <i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i> \r\n\r\n</div>\r\n<div class=\"ml-2\">\r\n  <h2>Job Task :&nbsp;{{ jobTask?.title }}</h2>\r\n</div>\r\n<!-- <mat-horizontal-stepper [formGroup]=\"JobTaskDetail\" style=\"height: 500px;\">\r\n  \r\n  <mat-step >\r\n    <ng-template matStepLabel>HighRisk Construction</ng-template>\r\n    <h2 class=\"text-center mt-3\">HighRisk Construction<span class=\"material-icons ml-3\"(click)=\"addItem('highRisk')\" >add_circle_outline</span></h2> \r\n    <div class=\"row justify-content-center\">\r\n        <div class=\"col-1 my-auto\"> \r\n        </div>\r\n        <div class=\"col-7\">\r\n            <mat-form-field class=\"container\" appearance=\"fill\">\r\n                <mat-label class=\"text-center \">HighRiskConstruction</mat-label>\r\n                <mat-select formControlName=\"highRiskConstr\" multiple >\r\n                  <mat-select-trigger>\r\n                    <span\r\n                      *ngIf=\"!JobTaskDetail.get('highRiskConstr').value?.length\"\r\n                      class=\"example-additional-selection\"\r\n                    >\r\n                    </span>\r\n                    <span\r\n                      *ngIf=\"JobTaskDetail.get('highRiskConstr').value?.length == 1\"\r\n                      class=\"example-additional-selection\"\r\n                    >\r\n                      One Item selected\r\n                    </span>\r\n                    <span\r\n                      *ngIf=\"JobTaskDetail.get('highRiskConstr').value?.length > 1\"\r\n                      class=\"example-additional-selection\"\r\n                    >\r\n                      More than one selected\r\n                    </span>\r\n                  </mat-select-trigger>\r\n                  <mat-option\r\n                    *ngFor=\"let parameter of highRiskConstructionData\"\r\n                    [value]=\"parameter._id\"\r\n                  >\r\n                    {{ parameter.title }}</mat-option\r\n                  >\r\n                </mat-select>\r\n              </mat-form-field>\r\n        </div>\r\n        <div class=\"col-1 my-auto\">\r\n            <button class=\"btn\" matStepperNext><i class=\"fas fa-arrow-right\"></i></button>\r\n        </div>\r\n    </div>\r\n \r\n\r\n  </mat-step>\r\n  <mat-step >\r\n    <ng-template matStepLabel>PPE</ng-template>\r\n    <h2 class=\"text-center mt-3\">PPE<span class=\"material-icons ml-3\"(click)=\"addItem('ppe')\" >add_circle_outline</span></h2>\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-1 my-auto\"><button class=\"btn\" matStepperPrevious><i class=\"fas fa-arrow-left\"></i></button></div>\r\n      <div class=\"col-7\">\r\n        <mat-form-field class=\"container\" appearance=\"fill\">\r\n          <mat-label>PPE selection</mat-label>\r\n          <mat-select formControlName=\"PPE\" multiple>\r\n            <mat-select-trigger>\r\n              <span\r\n                *ngIf=\"!JobTaskDetail.get('PPE').value?.length\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n              </span>\r\n              <span\r\n                *ngIf=\"JobTaskDetail.get('PPE').value?.length == 1\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n                One Item selected\r\n              </span>\r\n              <span\r\n                *ngIf=\"JobTaskDetail.get('PPE').value?.length > 1\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n                More than one selected\r\n              </span>\r\n            </mat-select-trigger>\r\n            <mat-option\r\n              *ngFor=\"let parameter of PPESelectionData\"\r\n              [value]=\"parameter._id\"\r\n              >{{ parameter.title }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n      <div class=\"col-1 my-auto\"><button class=\"btn\" matStepperNext><i class=\"fas fa-arrow-right\"></i></button></div>\r\n    </div>\r\n   \r\n  </mat-step>\r\n  <mat-step >\r\n    <ng-template matStepLabel>Licence </ng-template>\r\n    <h2 class=\"text-center mt-3\">Licences <span class=\"material-icons ml-3\"(click)=\"addItem('licence')\" >add_circle_outline</span> </h2>\r\n    <div class=\"row justify-content-center\">\r\n        <div class=\"col-1 my-auto\"> \r\n            <button class=\"btn\" matStepperPrevious><i class=\"fas fa-arrow-left\"></i></button>\r\n        </div>\r\n        <div class=\"col-7\">\r\n            <mat-form-field class=\"container\" appearance=\"fill\">\r\n                <mat-label>Licences</mat-label>                \r\n                <mat-select formControlName=\"LicenceCat\" multiple>\r\n                  <mat-select-trigger>\r\n                    <span\r\n                      *ngIf=\"!JobTaskDetail.get('LicenceCat').value?.length\"\r\n                      class=\"example-additional-selection\"\r\n                    >\r\n                    </span>\r\n                    <span\r\n                      *ngIf=\"JobTaskDetail.get('LicenceCat').value?.length == 1\"\r\n                      class=\"example-additional-selection\"\r\n                    >\r\n                      One Item selected\r\n                    </span>\r\n                    <span\r\n                      *ngIf=\"JobTaskDetail.get('LicenceCat').value?.length > 1\"\r\n                      class=\"example-additional-selection\"\r\n                    >\r\n                      More than one selected\r\n                    </span>\r\n                  </mat-select-trigger>\r\n                  <mat-option\r\n                    *ngFor=\"let parameter of licenceByTradecat\"\r\n                    [value]=\"parameter._id\"\r\n                    >{{ parameter.title }}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n        </div>\r\n        <div class=\"col-1 my-auto\">\r\n            <button class=\"btn\" matStepperNext><i class=\"fas fa-arrow-right\"></i></button>\r\n        </div>\r\n    </div>\r\n   \r\n  \r\n  </mat-step>\r\n\r\n  <mat-step >\r\n    <ng-template matStepLabel>Identify Hazards</ng-template>\r\n    <h2 class=\"text-center mt-3\">Identify Hazards<span class=\"material-icons ml-3\"(click)=\"addItem('identifyHazards')\" >add_circle_outline</span></h2>\r\n    <div class=\"row justify-content-center\">\r\n        <div class=\"col-1 my-auto\"> \r\n            <button class=\"btn\" matStepperPrevious><i class=\"fas fa-arrow-left\"></i></button>\r\n        </div>\r\n        <div class=\"col-7\">\r\n            <mat-form-field class=\"container\" appearance=\"fill\">\r\n                <mat-label>Identify Hazards</mat-label>\r\n                <mat-select formControlName=\"identifyHazrds\" multiple>\r\n                  <mat-select-trigger>\r\n                    <span\r\n                      *ngIf=\"!JobTaskDetail.get('identifyHazrds').value?.length\"\r\n                      class=\"example-additional-selection\"\r\n                    >\r\n                    </span>\r\n                    <span\r\n                      *ngIf=\"JobTaskDetail.get('identifyHazrds').value?.length == 1\"\r\n                      class=\"example-additional-selection\"\r\n                    >\r\n                      One Item selected\r\n                    </span>\r\n                    <span\r\n                      *ngIf=\"JobTaskDetail.get('identifyHazrds').value?.length > 1\"\r\n                      class=\"example-additional-selection\"\r\n                    >\r\n                      More than one selected\r\n                    </span>\r\n                  </mat-select-trigger>\r\n                  <mat-option *ngFor=\"let parameter of allHazards\" [value]=\"parameter._id\"\r\n                    >{{ parameter.title }}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n        </div>\r\n        <div class=\"col-1 my-auto\">\r\n            <button class=\"btn\" matStepperNext><i class=\"fas fa-arrow-right\"></i></button>\r\n        </div>\r\n    </div>\r\n  \r\n\r\n  </mat-step>\r\n  <mat-step > \r\n    <ng-template matStepLabel>Risk Level</ng-template>\r\n    <h2 class=\"text-center mt-3\">Risk Level<span class=\"material-icons ml-3\"(click)=\"addItem('riskLevel')\" >add_circle_outline</span></h2>\r\n    <div class=\"row justify-content-center\">\r\n        <div class=\"col-1 my-auto\"> \r\n            <button class=\"btn\" matStepperPrevious><i class=\"fas fa-arrow-left\"></i></button>\r\n        </div>\r\n        <div class=\"col-7\">\r\n              <mat-form-field class=\"container\" appearance=\"fill\">\r\n                <mat-label>Risk Level</mat-label>\r\n                <mat-select formControlName=\"riskLevel\">\r\n                  <mat-option *ngFor=\"let parameter of riskLevelData\" [value]=\"parameter._id\">\r\n                    {{parameter.title}}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n        <div class=\"col-1 my-auto\">\r\n            <button class=\"btn\" matStepperNext><i class=\"fas fa-arrow-right\"></i></button>\r\n        </div>\r\n    </div>\r\n  \r\n \r\n  </mat-step>\r\n  <mat-step >\r\n    <ng-template matStepLabel>Control Action Required</ng-template>\r\n    <h2 class=\"text-center mt-3\">Control Action Required<span class=\"material-icons ml-3\"(click)=\"addItem('ctrlActreq')\" >add_circle_outline</span></h2>\r\n    <div class=\"row justify-content-center\">\r\n        <div class=\"col-1 my-auto\"> \r\n            <button class=\"btn\" matStepperPrevious><i class=\"fas fa-arrow-left\"></i></button>\r\n        </div>\r\n        <div class=\"col-7\">\r\n            <mat-form-field class=\"container\" appearance=\"fill\">\r\n                <mat-label>Control Action Required</mat-label>\r\n                <mat-select formControlName=\"contrActReq\" multiple>\r\n                  <mat-select-trigger>\r\n                    <span\r\n                      *ngIf=\"!JobTaskDetail.get('contrActReq').value?.length\"\r\n                      class=\"example-additional-selection\"\r\n                    >\r\n                    </span>\r\n                    <span\r\n                      *ngIf=\"JobTaskDetail.get('contrActReq').value?.length == 1\"\r\n                      class=\"example-additional-selection\"\r\n                    >\r\n                      One Item selected\r\n                    </span>\r\n                    <span\r\n                      *ngIf=\"JobTaskDetail.get('contrActReq').value?.length > 1\"\r\n                      class=\"example-additional-selection\"\r\n                    >\r\n                      More than one selected\r\n                    </span>\r\n                  </mat-select-trigger>\r\n                  <mat-option\r\n                    *ngFor=\"let parameter of allContrlActReq\"\r\n                    [value]=\"parameter._id\"\r\n                    >{{ parameter.title }}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n        </div>\r\n        <div class=\"col-1 my-auto\">\r\n            <button class=\"btn\" matStepperNext><i class=\"fas fa-arrow-right\"></i></button>\r\n        </div>\r\n    </div>\r\n   \r\n\r\n  </mat-step>\r\n  <mat-step >\r\n    <ng-template matStepLabel>Code of Practice</ng-template>\r\n    <h2 class=\"text-center mt-3\">Code of Practice<span class=\"material-icons ml-3\"(click)=\"addItem('codeOfPract')\" >add_circle_outline</span></h2>\r\n    <div class=\"row justify-content-center\">\r\n        <div class=\"col-1 my-auto\"> \r\n            <button class=\"btn\" matStepperPrevious><i class=\"fas fa-arrow-left\"></i></button>\r\n        </div>\r\n        <div class=\"col-7\">\r\n            <mat-form-field class=\"container\" appearance=\"fill\">\r\n                <mat-label>Code of Practice</mat-label>\r\n                <mat-select formControlName=\"codeOfPract\" multiple>\r\n                  <mat-select-trigger>\r\n                    <span\r\n                      *ngIf=\"!JobTaskDetail.get('codeOfPract').value?.length\"\r\n                      class=\"example-additional-selection\"\r\n                    >\r\n                    </span>\r\n                    <span\r\n                      *ngIf=\"JobTaskDetail.get('codeOfPract').value?.length == 1\"\r\n                      class=\"example-additional-selection\"\r\n                    >\r\n                      One Item selected\r\n                    </span>\r\n                    <span\r\n                      *ngIf=\"JobTaskDetail.get('codeOfPract').value?.length > 1\"\r\n                      class=\"example-additional-selection\"\r\n                    >\r\n                      More than one selected\r\n                    </span>\r\n                  </mat-select-trigger>\r\n                  <mat-option\r\n                    *ngFor=\"let parameter of allCodeOfPract\"\r\n                    [value]=\"parameter._id\"\r\n                    >{{ parameter.title }}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n        </div>\r\n        <div class=\"col-1 my-auto\">\r\n            <button class=\"btn\" matStepperNext><i class=\"fas fa-arrow-right\"></i></button>\r\n        </div>\r\n    </div>\r\n   \r\n\r\n  </mat-step>\r\n  <mat-step >\r\n    <ng-template matStepLabel>Residule Risk Level</ng-template>\r\n    <h2 class=\"text-center mt-3\">Residule Risk Level<span class=\"material-icons ml-3\"(click)=\"addItem('resRiskLevel')\" >add_circle_outline</span></h2>\r\n    <div class=\"row justify-content-center\">\r\n        <div class=\"col-1 my-auto\"> \r\n            <button class=\"btn\" matStepperPrevious><i class=\"fas fa-arrow-left\"></i></button>\r\n        </div>\r\n        <div class=\"col-7\">\r\n             <mat-form-field class=\"container\" appearance=\"fill\">\r\n                <mat-label>Residule Risk Level</mat-label>\r\n                <mat-select formControlName=\"residualRiskL\">\r\n                  <mat-option *ngFor=\"let parameter of resiRiskLevelData\" [value]=\"parameter._id\">\r\n                    {{parameter.title}}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n        </div>\r\n        <div class=\"col-1 my-auto\">\r\n            <button class=\"btn\" matStepperNext><i class=\"fas fa-arrow-right\"></i></button>\r\n        </div>\r\n    </div>\r\n \r\n\r\n  </mat-step>\r\n  <mat-step >\r\n    <ng-template matStepLabel>Chemical related Task</ng-template>\r\n    <h2 class=\"text-center mt-3\">Is this Job Task includes Chemicals?</h2>\r\n    <div class=\"row justify-content-center\">\r\n        <div class=\"col-1 my-auto\"> \r\n            <button class=\"btn\" matStepperPrevious><i class=\"fas fa-arrow-left\"></i></button>\r\n        </div>\r\n        <div class=\"col-7 text-center\">\r\n            <div class=\"form-check form-check-inline\">\r\n                <input class=\"form-check-input\" type=\"radio\" value=\"YES\" formControlName=\"chemical\">\r\n                <label class=\"form-check-label\" for=\"inlineRadio1\">Yes</label>\r\n              </div>\r\n              <div class=\"form-check form-check-inline\">\r\n                <input class=\"form-check-input\" type=\"radio\"  value=\"NO\" formControlName=\"chemical\">\r\n                <label class=\"form-check-label\" for=\"inlineRadio2\">No</label>\r\n              </div>\r\n        </div>\r\n        <div class=\"col-1 my-auto\">\r\n            <button class=\"btn\" matStepperNext><i class=\"fas fa-arrow-right\"></i></button>\r\n        </div>\r\n    </div>\r\n \r\n\r\n  </mat-step>\r\n\r\n  <mat-step >\r\n    <ng-template matStepLabel>Person Responsible</ng-template>\r\n    <h2 class=\"text-center mt-3\">Person Responsible<span class=\"material-icons ml-3\"(click)=\"addItem('perResbl')\" >add_circle_outline</span></h2>\r\n    <div class=\"row justify-content-center mt-3\">\r\n        <div class=\"col-1 my-auto\"> \r\n            <button class=\"btn\" matStepperPrevious><i class=\"fas fa-arrow-left\"></i></button>\r\n        </div>\r\n        <div class=\"col-6\">\r\n          \r\n            <mat-form-field class=\"container\" appearance=\"fill\">\r\n              <mat-label>Person Responsible</mat-label>\r\n              <mat-select formControlName=\"personResp\">\r\n                <mat-option *ngFor=\"let person of staff\" [value]=\"person._id\">\r\n                  {{person.title}}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n        </div>\r\n        <div class=\"col-1 my-auto\">\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"text-center mt-3\">\r\n      <button *ngIf=\"!jobTask?.set\" class=\"btn btn-primary\"(click)=\"setRelation()\">Set</button>\r\n      <button *ngIf=\"jobTask?.set\" class=\"btn btn-primary\"(click)=\"setRelation()\">Update</button>\r\n    </div>\r\n  </mat-step>\r\n</mat-horizontal-stepper> -->\r\n\r\n\r\n<section class=\"\">\r\n  <div class=\"\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-3\">\r\n        <!-- Tabs nav -->\r\n        <div\r\n          class=\"nav flex-column nav-pills nav-pills-custom\"\r\n          id=\"v-pills-tab\"\r\n          role=\"tablist\"\r\n          aria-orientation=\"vertical\"\r\n        >\r\n          <p\r\n            *ngFor=\"let item of stepperList; let i = index\"\r\n            (click)=\"handleClick(i)\"\r\n            class=\"nav-link mb-3 p-3 shadow\"\r\n            [class.active]=\"stepperList[i].i\"\r\n            id=\"v-pills-home-tab\"\r\n            data-toggle=\"pill\"\r\n            role=\"tab\"\r\n            aria-controls=\"v-pills-home\"\r\n            aria-selected=\"true\"\r\n          >\r\n            <i class=\"fa fa-user-circle-o mr-2\"></i>\r\n            <span class=\"font-weight-bold small text-uppercase\">{{\r\n              item.name\r\n            }}</span>\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"col-md-9\">\r\n        <!-- Tabs content -->\r\n        <div class=\"tab-content\" id=\"v-pills-tabContent\">\r\n          <div\r\n            *ngFor=\"let item of stepperList; let i = index\"\r\n            class=\"tab-pane fade shadow rounded bg-white p-5\"\r\n            [class.active]=\"stepperList[i].i\"\r\n            [class.show]=\"stepperList[i].i\"\r\n            id=\"v-pills-home\"\r\n            role=\"tabpanel\"\r\n            aria-labelledby=\"v-pills-home-tab\"\r\n          >\r\n            <h2 class=\"font-italic mb-4\">{{ item.name }}<span *ngIf=\"item.code\" class=\"material-icons ml-3 my-auto p-0\"(click)=\"addItem(item.code)\" >add_circle_outline</span></h2>\r\n            <p class=\"font-italic text-muted mb-2\">\r\n              <ng-container\r\n                *ngTemplateOutlet=\"test; context: { name: item.name }\"\r\n              ></ng-container>\r\n            </p>\r\n            <div>\r\n              <!-- <div class=\"buttons\">\r\n                                <button mat-icon-button (click)=\"prev(1)\"><i  style=\"font-size: 25px;\" class=\"fas fa-arrow-left\"></i></button> <button mat-icon-button (click)=\"next(1)\"><i style=\"font-size: 25px;\" class=\"fas fa-arrow-right\"></i></button>\r\n                            </div> -->\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- <div class=\"buttons\">\r\n                            <button mat-icon-button (click)=\"prev(1)\"><i  style=\"font-size: 25px;\" class=\"fas fa-arrow-left\"></i></button> <button mat-icon-button (click)=\"next(1)\"><i style=\"font-size: 25px;\" class=\"fas fa-arrow-right\"></i></button>\r\n                        </div> -->\r\n  </div>\r\n</section>\r\n\r\n<ng-template\r\n  [formGroup]=\"JobTaskDetail\"\r\n  let\r\n  #test\r\n  let-name=\"name\"\r\n  class=\"my-auto\"\r\n>\r\n  <ng-container\r\n    *ngIf=\"name.toLowerCase() == 'HighRisk Construction'.toLowerCase()\"\r\n  >\r\n    <div class=\"row justify-content-center\" style=\"margin-top: auto\">\r\n      \r\n      <div class=\"col-7\">\r\n        <mat-form-field class=\"container\" appearance=\"fill\">\r\n          <mat-label class=\"text-center\">HighRiskConstruction</mat-label>\r\n          <mat-select formControlName=\"highRiskConstr\" multiple>\r\n            <mat-select-trigger>\r\n              <span\r\n                *ngIf=\"!JobTaskDetail.get('highRiskConstr').value?.length\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n              </span>\r\n              <span\r\n                *ngIf=\"JobTaskDetail.get('highRiskConstr').value?.length == 1\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n                One Item selected\r\n              </span>\r\n              <span\r\n                *ngIf=\"JobTaskDetail.get('highRiskConstr').value?.length > 1\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n                More than one selected\r\n              </span>\r\n            </mat-select-trigger>\r\n            <mat-option\r\n              *ngFor=\"let parameter of highRiskConstructionData\"\r\n              [value]=\"parameter._id\"\r\n            >\r\n              {{ parameter.title }}</mat-option\r\n            >\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n      \r\n    </div>\r\n  </ng-container>\r\n  <ng-container *ngIf=\"name.toLowerCase() == 'PPE'.toLowerCase()\">\r\n    <div class=\"row justify-content-center\">\r\n      \r\n      <div class=\"col-7\">\r\n        <mat-form-field class=\"container\" appearance=\"fill\">\r\n          <mat-label>PPE selection</mat-label>\r\n          <mat-select formControlName=\"PPE\" multiple>\r\n            <mat-select-trigger>\r\n              <span\r\n                *ngIf=\"!JobTaskDetail.get('PPE').value?.length\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n              </span>\r\n              <span\r\n                *ngIf=\"JobTaskDetail.get('PPE').value?.length == 1\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n                One Item selected\r\n              </span>\r\n              <span\r\n                *ngIf=\"JobTaskDetail.get('PPE').value?.length > 1\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n                More than one selected\r\n              </span>\r\n            </mat-select-trigger>\r\n            <mat-option\r\n              *ngFor=\"let parameter of PPESelectionData\"\r\n              [value]=\"parameter._id\"\r\n              >{{ parameter.title }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n      \r\n    </div>\r\n  </ng-container>\r\n  <ng-container *ngIf=\"name.toLowerCase() == 'Licence'.toLowerCase()\">\r\n    <div class=\"row justify-content-center\">\r\n      \r\n      <div class=\"col-7\">\r\n        <mat-form-field class=\"container\" appearance=\"fill\">\r\n          <mat-label>Licences</mat-label>\r\n          <mat-select formControlName=\"LicenceCat\" multiple>\r\n            <mat-select-trigger>\r\n              <span\r\n                *ngIf=\"!JobTaskDetail.get('LicenceCat').value?.length\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n              </span>\r\n              <span\r\n                *ngIf=\"JobTaskDetail.get('LicenceCat').value?.length == 1\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n                One Item selected\r\n              </span>\r\n              <span\r\n                *ngIf=\"JobTaskDetail.get('LicenceCat').value?.length > 1\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n                More than one selected\r\n              </span>\r\n            </mat-select-trigger>\r\n            <mat-option\r\n              *ngFor=\"let parameter of licenceByTradecat\"\r\n              [value]=\"parameter._id\"\r\n              >{{ parameter.title }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n      \r\n    </div>\r\n  </ng-container>\r\n  <ng-container *ngIf=\"name.toLowerCase() == 'Identify Hazards'.toLowerCase()\">\r\n    <div class=\"row justify-content-center\">\r\n      \r\n      <div class=\"col-7\">\r\n        <mat-form-field class=\"container\" appearance=\"fill\">\r\n          <mat-label>Identify Hazards</mat-label>\r\n          <mat-select formControlName=\"identifyHazrds\" multiple>\r\n            <mat-select-trigger>\r\n              <span\r\n                *ngIf=\"!JobTaskDetail.get('identifyHazrds').value?.length\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n              </span>\r\n              <span\r\n                *ngIf=\"JobTaskDetail.get('identifyHazrds').value?.length == 1\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n                One Item selected\r\n              </span>\r\n              <span\r\n                *ngIf=\"JobTaskDetail.get('identifyHazrds').value?.length > 1\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n                More than one selected\r\n              </span>\r\n            </mat-select-trigger>\r\n            <mat-option\r\n              *ngFor=\"let parameter of allHazards\"\r\n              [value]=\"parameter._id\"\r\n              >{{ parameter.title }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n      \r\n    </div>\r\n  </ng-container>\r\n  <ng-container *ngIf=\"name.toLowerCase() == 'Risk Level'.toLowerCase()\">\r\n    <div class=\"row justify-content-center\">\r\n      \r\n      <div class=\"col-7\">\r\n        <mat-form-field class=\"container\" appearance=\"fill\">\r\n          <mat-label>Risk Level</mat-label>\r\n          <mat-select formControlName=\"riskLevel\">\r\n            <mat-option\r\n              *ngFor=\"let parameter of riskLevelData\"\r\n              [value]=\"parameter._id\"\r\n            >\r\n              {{ parameter.title }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n      \r\n    </div>\r\n  </ng-container>\r\n  <ng-container\r\n    *ngIf=\"name.toLowerCase() == 'Control Action Required'.toLowerCase()\"\r\n  >\r\n    <div class=\"row justify-content-center\">\r\n      \r\n      <div class=\"col-7\">\r\n        <mat-form-field class=\"container\" appearance=\"fill\">\r\n          <mat-label>Control Action Required</mat-label>\r\n          <mat-select formControlName=\"contrActReq\" multiple>\r\n            <mat-select-trigger>\r\n              <span\r\n                *ngIf=\"!JobTaskDetail.get('contrActReq').value?.length\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n              </span>\r\n              <span\r\n                *ngIf=\"JobTaskDetail.get('contrActReq').value?.length == 1\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n                One Item selected\r\n              </span>\r\n              <span\r\n                *ngIf=\"JobTaskDetail.get('contrActReq').value?.length > 1\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n                More than one selected\r\n              </span>\r\n            </mat-select-trigger>\r\n            <mat-option\r\n              *ngFor=\"let parameter of allContrlActReq\"\r\n              [value]=\"parameter._id\"\r\n              >{{ parameter.title }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n      \r\n    </div>\r\n  </ng-container>\r\n  <ng-container *ngIf=\"name.toLowerCase() == 'Code of Practice'.toLowerCase()\">\r\n    <div class=\"row justify-content-center\">\r\n      \r\n      <div class=\"col-7\">\r\n        <mat-form-field class=\"container\" appearance=\"fill\">\r\n          <mat-label>Code of Practice</mat-label>\r\n          <mat-select formControlName=\"codeOfPract\" multiple>\r\n            <mat-select-trigger>\r\n              <span\r\n                *ngIf=\"!JobTaskDetail.get('codeOfPract').value?.length\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n              </span>\r\n              <span\r\n                *ngIf=\"JobTaskDetail.get('codeOfPract').value?.length == 1\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n                One Item selected\r\n              </span>\r\n              <span\r\n                *ngIf=\"JobTaskDetail.get('codeOfPract').value?.length > 1\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n                More than one selected\r\n              </span>\r\n            </mat-select-trigger>\r\n            <mat-option\r\n              *ngFor=\"let parameter of allCodeOfPract\"\r\n              [value]=\"parameter._id\"\r\n              >{{ parameter.title }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n      \r\n    </div>\r\n  </ng-container>\r\n  <ng-container\r\n    *ngIf=\"name.toLowerCase() == 'Residule Risk Level'.toLowerCase()\"\r\n  >\r\n    <div class=\"row justify-content-center\">\r\n      \r\n      <div class=\"col-7\">\r\n        <mat-form-field class=\"container\" appearance=\"fill\">\r\n          <mat-label>Residule Risk Level</mat-label>\r\n          <mat-select formControlName=\"residualRiskL\">\r\n            <mat-option\r\n              *ngFor=\"let parameter of resiRiskLevelData\"\r\n              [value]=\"parameter._id\"\r\n            >\r\n              {{ parameter.title }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n      \r\n    </div>\r\n  </ng-container>\r\n  <ng-container\r\n    *ngIf=\"name.toLowerCase() == 'Chemical related Task'.toLowerCase()\"\r\n  >\r\n    <div class=\"row justify-content-center\">\r\n      \r\n      <div class=\"col-7 text-center\">\r\n        <div class=\"form-check form-check-inline\">\r\n          <input\r\n            class=\"form-check-input\"\r\n            type=\"radio\"\r\n            value=\"YES\"\r\n            formControlName=\"chemical\"\r\n          />\r\n          <label class=\"form-check-label\" for=\"inlineRadio1\">Yes</label>\r\n        </div>\r\n        <div class=\"form-check form-check-inline\">\r\n          <input\r\n            class=\"form-check-input\"\r\n            type=\"radio\"\r\n            value=\"NO\"\r\n            formControlName=\"chemical\"\r\n          />\r\n          <label class=\"form-check-label\" for=\"inlineRadio2\">No</label>\r\n        </div>\r\n      </div>\r\n      \r\n    </div>\r\n  </ng-container>\r\n  <ng-container\r\n    *ngIf=\"name.toLowerCase() == 'Person Responsible'.toLowerCase()\"\r\n  >\r\n    <div class=\"row justify-content-center mt-3\">\r\n      \r\n      <div class=\"col-6\">\r\n        <mat-form-field class=\"container\" appearance=\"fill\">\r\n          <mat-label>Person Responsible</mat-label>\r\n          <mat-select formControlName=\"personResp\" multiple>\r\n            <mat-select-trigger>\r\n              <span\r\n                *ngIf=\"!JobTaskDetail.get('personResp').value?.length\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n              </span>\r\n              <span\r\n                *ngIf=\"JobTaskDetail.get('personResp').value?.length == 1\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n                One Item selected\r\n              </span>\r\n              <span\r\n                *ngIf=\"JobTaskDetail.get('personResp').value?.length > 1\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n                More than one selected\r\n              </span>\r\n            </mat-select-trigger>\r\n            <mat-option\r\n              *ngFor=\"let parameter of staff\"\r\n              [value]=\"parameter._id\"\r\n              >{{ parameter.title }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n        <!-- <mat-form-field class=\"container\" appearance=\"fill\">\r\n          <mat-label>Person Responsible</mat-label>\r\n          <mat-select formControlName=\"personResp\">\r\n            <mat-option *ngFor=\"let person of staff\" [value]=\"person._id\">\r\n              {{ person.title }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field> -->\r\n      </div>\r\n      <div class=\"col-1 my-auto\">\r\n        <!--  -->\r\n      </div>\r\n    </div>\r\n    <div class=\"text-center mt-3\">\r\n      <button\r\n        *ngIf=\"!jobTask?.set\"\r\n        class=\"btn btn-primary\"\r\n        (click)=\"setRelation()\"\r\n      >\r\n        Set\r\n      </button>\r\n      <button\r\n        *ngIf=\"jobTask?.set\"\r\n        class=\"btn btn-primary\"\r\n        (click)=\"setRelation()\"\r\n      >\r\n        Update\r\n      </button>\r\n    </div>\r\n  </ng-container>\r\n  <div class=\"buttons\">\r\n    <button mat-icon-button (click)=\"prev()\">\r\n      <i style=\"font-size: 25px\" class=\"fas fa-arrow-left\"></i>\r\n    </button>\r\n    <button mat-icon-button (click)=\"next()\">\r\n      <i style=\"font-size: 25px\" class=\"fas fa-arrow-right\"></i>\r\n    </button>\r\n  </div>\r\n</ng-template>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { LandingPageInfoServiceService } from 'src/app/utils/services/landing-page-info-service.service';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-add-hazard-relation',\r\n  templateUrl: './add-hazard-relation.component.html',\r\n  styleUrls: ['./add-hazard-relation.component.scss']\r\n})\r\nexport class AddHazardRelationComponent implements OnInit {\r\n  setHazard!: FormGroup;\r\n  hazard = null;\r\n  hazardId = null;\r\n  JurisdictionData: [];\r\n  safety: [];\r\n  codeData: [];\r\n  regulatorData: [];\r\n  isLinear = false;\r\n  constructor(private route: ActivatedRoute, private fb: FormBuilder, private logicalFormInfo: LogicalFormInfoService,\r\n    public router: Router,) { }\r\n\r\n\r\n    ngOnInit(): void {\r\n      this.setHazard = this.fb.group({\r\n        // Consequence: ['', Validators.required],\r\n        // Likelihood: ['', Validators.required],\r\n        riskRating: ['', Validators.required],\r\n        actionRequired: ['', Validators.required],\r\n  \r\n      });\r\n      this.route\r\n        .queryParams\r\n        .subscribe((id) => {\r\n          console.log(id);\r\n          this.hazardId = id.id;\r\n          this.logicalFormInfo.getHazardTreatmentById(this.hazardId).subscribe((res: any) => {\r\n            console.log(\"getHazardTreatmentById=>\", res);\r\n            this.hazard = res.data;\r\n            console.log(\"hazard\", this.hazard);\r\n            if (this.hazard.set == true) {\r\n              this.setHazard.patchValue({\r\n                riskRating: this.hazard.riskRating,\r\n                actionRequired: this.hazard.actionRequired,\r\n                \r\n  \r\n              });\r\n            }\r\n          \r\n          })\r\n        });\r\n  \r\n  \r\n  \r\n    }\r\n    Consequences: Array<any> = [\r\n      { name: '1-Insignificant',value:1 },\r\n      { name: '2-Moderate',value:2 },\r\n      { name: '4-Minor',value:4},\r\n      { name: '3-Major',value:3 },\r\n      { name: '5-Catastrophic',value:5 },\r\n    ];\r\n  \r\n  \r\n    Likelihood: Array<any> = [\r\n      { name: '1-Insignificant',value:1 },\r\n      { name: '3-Moderate',value:3},\r\n      { name: '2-Minor',value:2 },\r\n      { name: '4-Major',value:4 },\r\n      { name: '5-Catastrophic',value:5 }\r\n    ];\r\n    RiskRating: Array<any> = [\r\n  \r\n      { name: 'Low',value:'low'  },\r\n      { name: 'Medium',value: 'medium'},\r\n      { name: 'High',value:'high' },\r\n    \r\n  \r\n    ];\r\n    ActionRequired: Array<any> = [\r\n  \r\n      { name: 'Immediately',value:'immediately'  },\r\n      { name: 'Today',value:'today'  },\r\n      { name: 'This week',value:'thisWeek' },\r\n      { name: 'This Month',value:'thisMonth'  },\r\n  \r\n    ];\r\n  \r\n    setRelation() {\r\n      console.log(this.setHazard.value)\r\n      let data = {\r\n        set: true,\r\n        title: this.hazard.title,\r\n        // Consequence: this.setHazard.get('Consequence').value,\r\n        // Likelihood: this.setHazard.get('Likelihood').value,\r\n        riskRating: this.setHazard.get('riskRating').value,\r\n        actionRequired: this.setHazard.get('actionRequired').value,\r\n       \r\n      }\r\n      console.log(\"data=>\", data)\r\n      console.log(\"hazardId=>\", this.hazardId)\r\n      this.logicalFormInfo.updateHazardTreatmentRelation(this.hazardId,data).subscribe((res: any) => {\r\n        console.log('updateStates=>', res);\r\n  \r\n        Swal.fire({\r\n          title: 'Updated successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });\r\n        this.router.navigate(['/admin/confiLogi/setHazard'])\r\n      });\r\n  \r\n    }\r\n}\r\n","<div class=\"btn btn-outline-primary\" [routerLink]=\"['/admin/confiLogi/setHazard']\">\r\n    <i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\r\n  </div>\r\n  <div class=\"ml-2\">\r\n    <h2>Hazrad Treatment Relation :&nbsp;{{ hazard?.title }}</h2>\r\n  </div>\r\n \r\n  <div class=\"row\" [formGroup]=\"setHazard\">\r\n       \r\n    <!-- <div class=\"col-3\">\r\n      <select class=\"form-select form-control\" aria-label=\"Default select example\" formControlName=\"Consequence\" >\r\n         <option value=\"\" selected hidden> Select consequence</option>\r\n         <option *ngFor=\"let consequence of Consequences\"  [value]=\"consequence._id\"  >{{consequence.name}}</option>\r\n      \r\n      </select>\r\n      </div>\r\n      <div class=\"col-3\">\r\n        <select class=\"form-select form-control\" aria-label=\"Default select example\" formControlName=\"Likelihood\"  >\r\n           <option value=\"\" selected hidden> Select  Likelihood</option>\r\n           <option *ngFor=\"let likelihood of Likelihood\"  [value]=\"likelihood._id\" >{{likelihood.name}}</option>\r\n        \r\n        </select>\r\n        </div> -->\r\n        <div class=\"col-6\">\r\n          <select class=\"form-select form-control\" aria-label=\"Default select example\" formControlName=\"riskRating\" >\r\n             <option value=\"\" selected hidden> Select Rating</option>\r\n             <option *ngFor=\"let rating of RiskRating\"  [value]=\"rating.value\">{{rating.name}}</option>\r\n          </select>\r\n          </div>\r\n          <div class=\"col-6\">\r\n            <select class=\"form-select form-control\" aria-label=\"Default select example\" formControlName=\"actionRequired\" >\r\n               <option value=\"\" selected hidden> Action Required</option>\r\n               <option *ngFor=\"let action of ActionRequired\"  [value]=\"action.value\">{{action.name}}</option>\r\n            </select>\r\n            </div>\r\n          \r\n          <div class=\"ml-3 mt-3\">\r\n            <button *ngIf=\"!hazard?.set\"  class=\"btn btn-primary\" (click)=\"setRelation()\" >Set</button>\r\n            <button *ngIf=\"hazard?.set\" class=\"btn btn-primary\"(click)=\" setRelation() \">Update</button>\r\n          </div>\r\n</div>\r\n","import { Component, OnInit,Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n  FormArray,\r\n  \r\n} from '@angular/forms';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-add-job-task',\r\n  templateUrl: './add-job-task.component.html',\r\n  styleUrls: ['./add-job-task.component.scss']\r\n})\r\nexport class AddJobTaskComponent implements OnInit {\r\n  dataRec: any;\r\n  jobTaskDetails!: FormGroup;\r\n  addjob!:FormGroup;\r\n  formData: any;\r\n  Edit=false;\r\n  Add=true;\r\n  licenceCatAll=[];\r\n  Id:any;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private router: Router,\r\n    private logicalFormInfo:LogicalFormInfoService,\r\n    private dialogRef: MatDialogRef<AddJobTaskComponent>,\r\n\t\t@Inject(MAT_DIALOG_DATA) public data: any,\r\n  ) { \r\n    this.dataRec = data;\r\n    \r\n    console.log(\"datarec\",this.dataRec)\r\n    this.addjob=this.fb.group({\r\n      title:['',Validators.required],\r\n      tradeCategory: ['', Validators.required],      \r\n    });\r\n  }\r\n\r\n  ngOnInit(): void { \r\n   \r\n \r\n    this.getAllCategories();\r\n    if (this.Id != \"\") {\r\n      this.Eddit();\r\n    }\r\n    else {\r\n      this.Added();\r\n\r\n\r\n    }\r\n  }\r\n  \r\n  Added() {\r\n    if (this.Edit == true) {\r\n      this.Edit = false;\r\n      this.Add = true;\r\n      this.addjob=this.fb.group({\r\n        title:['',Validators.required],\r\n        tradeCategory: ['', Validators.required],      \r\n      });\r\n\r\n    }\r\n    else {\r\n      this.Add = true;\r\n    }\r\n  }\r\n\r\n  Eddit() {\r\n    if (this.Add == true) {\r\n      this.Add = false;\r\n      this.Edit = true;\r\n      this.jobTaskDetails=this.fb.group({\r\n\r\n        title:[this.dataRec.title,Validators.required],\r\n        tradeCategoryId: [this.dataRec.tradeCategoryId._id, Validators.required],      \r\n      });\r\n    }\r\n    else {\r\n      this.Edit = true;\r\n    }\r\n  }\r\n  getAllCategories() {\r\n    this.logicalFormInfo.getAllLicenceCat().subscribe((res) => {\r\n      console.log('getAllLicenceCat=>', res);\r\n      this.licenceCatAll = res.data;\r\n    });\r\n  }\r\n  onFormSubmit() {\r\n    console.log(this.jobTaskDetails.get('title').value);\r\n    let data = {\r\n      title: this.jobTaskDetails.get('title').value,\r\n      tradeCategoryId:  this.jobTaskDetails.get('tradeCategoryId').value\r\n    };\r\n    console.log(\"edit\",data)\r\n    this.logicalFormInfo.updateJobTask(data, this.dataRec._id).subscribe((data) => {\r\n      console.log('JOBTask=>', data);\r\n      this.dialogRef.close('true');\r\n      Swal.fire({\r\n        title: 'JobTask Updated successfully',\r\n        showConfirmButton: false,\r\n        timer: 1200,\r\n      }); \r\n          \r\n    },(err)=>{console.error(err);} \r\n  \r\n    );\r\n    \r\n  }\r\n  addForm() {\r\n    // let data = {\r\n    //   title: this.addjob.get('title').value,\r\n    //   tradeCategoryId:this.addjob.get('tradeCategoryId').value\r\n    // };\r\n    console.log(\"addForm\",this.addjob.value)\r\n    this.logicalFormInfo.addJobTask(this.addjob.value).subscribe((data) => {\r\n      console.log('JOBTask=>', data);\r\n      this.dialogRef.close('true');\r\n      Swal.fire({\r\n        title: 'Parameter Added successfully',\r\n        showConfirmButton: false,\r\n        timer: 1200,\r\n      }); \r\n          \r\n    },(err)=>{console.error(err);} \r\n  \r\n    );\r\n  }\r\n  close() {\r\n    this.dialogRef.close();\r\n}\r\n}\r\n","<div class=\"container px-4 py-4 bg-white\">\r\n \r\n    <div mat-dialog-title class=\"dialog-title\">\r\n        <!-- <h2>Add Job Task</h2> -->\r\n        <h2 *ngIf=\"!dataRec\">Add Job Task </h2>\r\n        <h2 *ngIf=\"dataRec\">Edit Job Task</h2>\r\n     <button type=\"button\" class=\"close\"  style=\"font-size: 30px;\"\r\n      (click)=\"close()\" aria-label=\"Close\">\r\n    <span aria-hidden=\"true\">×</span>\r\n</button>\r\n    \r\n   </div>\r\n    <br />\r\n\r\n     <div class=\"row \" *ngIf=\"Add\"  [formGroup]=\"addjob\">\r\n     <div class=\"col-6\">\r\n        <input type=\"text\" formControlName=\"title\" class=\"form-control sign\" id=\"title\" />\r\n      </div>\r\n      <div class=\"col-6\">\r\n        <select class=\"form-select form-control\" aria-label=\"Default select example\" formControlName=\"tradeCategoryId\">\r\n          <option value=\"\" selected hidden>Select category</option>\r\n          <option *ngFor=\"let tradeCat of licenceCatAll\" [value]=\"tradeCat._id\">{{tradeCat.title}}</option>\r\n         </select>\r\n      </div>\r\n\r\n    </div>\r\n    <div class=\"row \"*ngIf=\"Edit\" [formGroup]=\"jobTaskDetails\" >\r\n      <div class=\"col-6\">\r\n         <input type=\"text\" formControlName=\"title\" class=\"form-control sign\" id=\"title\" />\r\n       </div>\r\n       <div class=\"col-6\">\r\n         <select class=\"form-select form-control\" aria-label=\"Default select example\" formControlName=\"tradeCategoryId\">\r\n           <option value=\"\" selected hidden>Select category</option>\r\n           <option *ngFor=\"let tradeCat of licenceCatAll\" [value]=\"tradeCat._id\">{{tradeCat.title}}</option>\r\n          </select>\r\n       </div>\r\n \r\n     </div>\r\n    <br />\r\n   <hr>\r\n    <div class=\"col-md-2\">\r\n      <button mat-raised-button color=\"primary\"*ngIf=\"Edit\" [disabled]=\"!jobTaskDetails.valid\"(click)=\"onFormSubmit()\">Update</button>\r\n      <button mat-raised-button color=\"primary\"  *ngIf=\"Add\" [disabled]=\"!addjob.valid\" (click)=\"addForm()\">Add</button>\r\n    </div>\r\n  \r\n</div>","import { AddItemComponent } from './../set-relation/add-item/add-item.component';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport Swal from 'sweetalert2';\r\n@Component({\r\n  selector: 'app-test-logic',\r\n  templateUrl: './test-logic.component.html',\r\n  styleUrls: ['./test-logic.component.scss']\r\n})\r\nexport class TestLogicComponent implements OnInit {\r\n\r\n  JobTaskDetail!: FormGroup;\r\n  jobTask = null;\r\n  highRiskConstructionData = [];\r\n  PPESelectionData = [];\r\n  licenseAndQual = [];\r\n  allHazards = [];\r\n  allContrlActReq = [];\r\n  licenceByTradecat = [];\r\n  resiRiskLevelData = [];\r\n  riskLevelData = [];\r\n  staff = [];\r\n  allCodeOfPract = [];\r\n  isLinear = false;\r\n  jobTaskId = null;\r\n  stepperList:any[]=[\r\n    {\r\n      name:'HighRisk Construction',\r\n      i:1,\r\n      ref:'test'\r\n    },\r\n    {\r\n      name:'PPE',\r\n      i:0,\r\n      ref:'test2'\r\n    },\r\n    {\r\n      name:'Licence',\r\n      i:0,\r\n    },\r\n    {\r\n      name:'Identify Hazards',\r\n      i:0,\r\n    },\r\n    {\r\n      name:'Risk Level',\r\n      i:0,\r\n    },\r\n    {\r\n      name:'Control Action Required',\r\n      i:0,\r\n    },\r\n    {\r\n      name:'Code of Practice',\r\n      i:0,\r\n    },\r\n    {\r\n      name:'Residule Risk Level',\r\n      i:0,\r\n    },\r\n    {\r\n      name:'Code of Practice',\r\n      i:0,\r\n    },\r\n    {\r\n      name:'Chemical related Task',\r\n      i:0,\r\n    },\r\n    {\r\n      name:'Person Responsible',\r\n      i:0,\r\n    }\r\n  ]\r\n\r\n  count:number=0\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private dialog: MatDialog,\r\n    private router: Router,\r\n    private fb: FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService\r\n  ) {}\r\n  \r\n  ngOnInit(): void {\r\n    this.JobTaskDetail = this.fb.group({\r\n      highRiskConstr: [''],\r\n      PPE: [''],\r\n      codeOfPract: [''],\r\n      LicenceCat: [''],\r\n      identifyHazrds: [''],\r\n      contrActReq: [''],\r\n      riskLevel: [''],\r\n      residualRiskL: [''],\r\n      personResp: [''],\r\n      chemical: [],\r\n    });\r\n\r\n    this.route.queryParams.subscribe((id) => {\r\n      console.log(id);\r\n      this.jobTaskId = id.id;\r\n      this.logicalFormInfo.getJobtaskById(id.id).subscribe((res: any) => {\r\n        this.jobTask = res.data;\r\n        console.log(\r\n          'this.jobTask ',\r\n          this.jobTask \r\n        );\r\n        this.getLicenceByTradeCat(this.jobTask.tradeCategoryId);\r\n\r\n        if (this.jobTask.set == true) {\r\n          this.JobTaskDetail.patchValue({\r\n            highRiskConstr: this.jobTask.risk,\r\n            PPE: this.jobTask.PPE,\r\n            codeOfPract: this.jobTask.PPE,\r\n           LicenceCat: this.jobTask.licence,\r\n            identifyHazrds: this.jobTask.identifyHazard,\r\n            contrActReq: this.jobTask.controlActionRequired,\r\n            riskLevel: this.jobTask.riskLevel,\r\n            residualRiskL: this.jobTask.residualRisk,\r\n            personResp: this.jobTask.staffId,\r\n            chemical: this.jobTask.chemical,\r\n          });\r\n        }\r\n        if (this.jobTask?.chemical === 'YES')\r\n          this.JobTaskDetail.get('chemical').setValue('YES');\r\n        else this.JobTaskDetail.get('chemical').setValue('NO');\r\n      });\r\n    });\r\n\r\n    this.getAllHighRisk();\r\n    this.getAllPPE();\r\n    this.getAllHazard();\r\n    this.getAllContrActReq();\r\n    this.getAllStaff();\r\n    this.getAllResidualRiskLevel();\r\n    this.getAllRiskLevel();\r\n    this.getAllCodeOfPractice();\r\n  }\r\n\r\n  getAllResidualRiskLevel() {\r\n    this.logicalFormInfo.getAllResidual().subscribe((res: any) => {\r\n      console.log('this.resiRiskLevelData', res.data);\r\n      this.resiRiskLevelData = res.data;\r\n    });\r\n  }\r\n  getAllRiskLevel() {\r\n    this.logicalFormInfo.getAllRiskLevel().subscribe((res: any) => {\r\n      console.log('this.riskLevelData', res.data);\r\n      this.riskLevelData = res.data;\r\n    });\r\n  }\r\n  getAllStaff() {\r\n    this.logicalFormInfo.getAllStaff().subscribe((res: any) => {\r\n      console.log(res);\r\n      this.staff = res.data;\r\n    });\r\n  }\r\n  getAllHighRisk() {\r\n    this.logicalFormInfo.getAllRisk().subscribe((res: any) => {\r\n      console.log('Risk=>', res);\r\n      this.highRiskConstructionData = res.data;\r\n    });\r\n  }\r\n  getAllPPE() {\r\n    this.logicalFormInfo.getAllPPE().subscribe((res: any) => {\r\n      console.log('PPE=>', res);\r\n      this.PPESelectionData = res.data;\r\n    });\r\n  }\r\n  getAllCodeOfPractice() {\r\n   \r\n    this.logicalFormInfo.getAllCOP().subscribe((res:any) => {\r\n      console.log('codeOfPractice=>', res);\r\n   this.allCodeOfPract=res.data;\r\n    });\r\n \r\n  }\r\n\r\n  getAllHazard() {\r\n    this.logicalFormInfo.getAllHazards().subscribe((res: any) => {\r\n      console.log('getAllHazards=>', res);\r\n      this.allHazards = res.data;\r\n    });\r\n  }\r\n  getAllContrActReq() {\r\n    this.logicalFormInfo.getAllContrlActReq().subscribe((res: any) => {\r\n      console.log('getAllHazards=>', res);\r\n      this.allContrlActReq = res.data;\r\n    });\r\n  }\r\n  getLicenceByTradeCat(id) {\r\n    console.log('getLicenceByTradeCat', id);\r\n\r\n    this.logicalFormInfo.getLicenceByTradeCat(id).subscribe((res) => {\r\n      console.log('getAllLicenceCat=>', res);\r\n      this.licenceByTradecat = res.data.licenceData;\r\n    });\r\n  }\r\n  setRelation() {\r\n    console.log(this.JobTaskDetail.value);\r\n    let allContrlActReqTitle=[];\r\n    let temp1=this.JobTaskDetail.get('contrActReq').value;\r\n    this.allContrlActReq.forEach(element1 => {\r\n      temp1.forEach(element2 => {\r\n        if(element1._id===element2){\r\n          allContrlActReqTitle.push(element1.title)\r\n        }\r\n      });\r\n    });\r\n    let allHazardsTitle=[];\r\n    let temp2=this.JobTaskDetail.get('identifyHazrds').value;\r\n    this.allHazards.forEach(element1 => {\r\n      temp2.forEach(element2 => {\r\n        if(element1._id===element2){\r\n          allHazardsTitle.push(element1.title)\r\n        }\r\n      });\r\n    });\r\n    let allCOPTitle=[];\r\n    let temp3=this.JobTaskDetail.get('codeOfPract').value;\r\n    this.allCodeOfPract.forEach(element1 => {\r\n      temp3.forEach(element2 => {\r\n        if(element1._id===element2){\r\n          allCOPTitle.push(element1.title)\r\n        }\r\n      });\r\n    });\r\n    let data = {\r\n      title: this.jobTask.title,\r\n      risk: this.JobTaskDetail.get('highRiskConstr').value,\r\n      PPE: this.JobTaskDetail.get('PPE').value,\r\n      tradeCategoryId:this.jobTask.tradeCategoryId,\r\n      licence: this.JobTaskDetail.get('LicenceCat').value,\r\n      identifyHazard: this.JobTaskDetail.get('identifyHazrds').value,\r\n      controlActionRequired: this.JobTaskDetail.get('contrActReq').value,\r\n      riskLevel: this.JobTaskDetail.get('riskLevel').value,\r\n      residualRisk: this.JobTaskDetail.get('residualRiskL').value,\r\n      staffId: this.JobTaskDetail.get('personResp').value,\r\n      chemical: this.JobTaskDetail.get('chemical').value,\r\n      set: true,\r\n    };\r\n\r\n    console.log('send data', data);\r\n\r\n    this.logicalFormInfo\r\n      .updateJobTask(data, this.jobTaskId)\r\n      .subscribe((res) => {\r\n        console.log('resJob Task=>', res);\r\n\r\n        Swal.fire({\r\n          title: 'Relation set successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });\r\n        this.router.navigate(['/admin/confiLogi/setLogic']);\r\n      });\r\n  }\r\n  addItem(type) {\r\n    let temp = {\r\n      type: type,\r\n      tradeCategoryId: this.jobTask.tradeCategoryId,\r\n    };\r\n    if (type === 'licence') {\r\n      temp = {\r\n        type: type,\r\n        tradeCategoryId: this.jobTask.tradeCategoryId,\r\n      };\r\n    } else {\r\n      temp = {\r\n        type: type,\r\n        tradeCategoryId: '',\r\n      };\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(AddItemComponent, {\r\n      width: '550px',\r\n      // height:'50%',\r\n      data: temp,\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      switch (result) {\r\n        case 'highRisk': {\r\n          let data = this.JobTaskDetail.get('highRiskConstr').value;\r\n          this.getAllHighRisk();\r\n          this.JobTaskDetail.get('highRiskConstr').patchValue(data);\r\n          break;\r\n        }\r\n        case 'ppe': {\r\n          let data = this.JobTaskDetail.get('PPE').value;\r\n          this.getAllPPE();\r\n          this.JobTaskDetail.get('PPE').patchValue(data);\r\n          break;\r\n        }\r\n        case 'codeOfPract': {\r\n          let data = this.JobTaskDetail.get('codeOfPract').value;\r\n          this.getAllCodeOfPractice();\r\n          this.JobTaskDetail.get('codeOfPract').patchValue(data);\r\n          break;\r\n        }\r\n        case 'licence': {\r\n          let data = this.JobTaskDetail.get('LicenceCat').value;\r\n          this.getLicenceByTradeCat(this.jobTask.tradeCategoryId);\r\n          this.JobTaskDetail.get('LicenceCat').patchValue(data);\r\n          break;\r\n        }\r\n        case 'identifyHazards': {\r\n          let data = this.JobTaskDetail.get('identifyHazrds').value;\r\n          this.getAllHazard();\r\n          this.JobTaskDetail.get('identifyHazrds').patchValue(data);\r\n          break;\r\n        }\r\n        case 'riskLevel': {\r\n          let data = this.JobTaskDetail.get('riskLevel').value;\r\n          this.getAllRiskLevel();\r\n          this.JobTaskDetail.get('riskLevel').patchValue(data);\r\n          break;\r\n        }\r\n        case 'ctrlActreq': {\r\n          let data = this.JobTaskDetail.get('contrActReq').value;\r\n          this.getAllContrActReq();\r\n          this.JobTaskDetail.get('contrActReq').patchValue(data);\r\n          break;\r\n        }\r\n        case 'resRiskLevel': {\r\n          let data = this.JobTaskDetail.get('residualRiskL').value;\r\n          this.getAllResidualRiskLevel();\r\n          this.JobTaskDetail.get('residualRiskL').patchValue(data);\r\n          break;\r\n        }\r\n        case 'perResbl': {\r\n          let data = this.JobTaskDetail.get('personResp').value;\r\n          this.getAllStaff();\r\n          this.JobTaskDetail.get('personResp').patchValue(data);\r\n          break;\r\n        }\r\n      }\r\n      console.log('The dialog was closed');\r\n    });\r\n  }\r\n\r\n  prev(item){\r\n    if(this.count != this.stepperList.length+1){\r\n      this.count--\r\n      this.stepperList.map(x => {\r\n        x.i = 0\r\n      }) \r\n      this.stepperList[this.count].i = 1\r\n      \r\n    }\r\n  }\r\n  next(item){\r\n    if(this.count != this.stepperList.length-1){\r\n      this.count++\r\n      this.stepperList.map(x => {\r\n        x.i = 0\r\n      }) \r\n      this.stepperList[this.count].i = 1\r\n      \r\n    }\r\n  }\r\n  handleClick(index){\r\n    console.log(index)\r\n    this.count = index\r\n    this.stepperList.map(x => {\r\n      x.i = 0\r\n    }) \r\n    this.stepperList[this.count].i = 1\r\n  }\r\n\r\nctx = {estimate: 'this.totalEstimate'};\r\n}\r\n","<section class=\"\">\r\n  <div class=\"\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-3\">\r\n        <!-- Tabs nav -->\r\n        <div\r\n          class=\"nav flex-column nav-pills nav-pills-custom\"\r\n          id=\"v-pills-tab\"\r\n          role=\"tablist\"\r\n          aria-orientation=\"vertical\"\r\n        >\r\n          <p\r\n            *ngFor=\"let item of stepperList; let i = index\"\r\n            (click)=\"handleClick(i)\"\r\n            class=\"nav-link mb-3 p-3 shadow\"\r\n            [class.active]=\"stepperList[i].i\"\r\n            id=\"v-pills-home-tab\"\r\n            data-toggle=\"pill\"\r\n            role=\"tab\"\r\n            aria-controls=\"v-pills-home\"\r\n            aria-selected=\"true\"\r\n          >\r\n            <i class=\"fa fa-user-circle-o mr-2\"></i>\r\n            <span class=\"font-weight-bold small text-uppercase\">{{\r\n              item.name\r\n            }}</span>\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"col-md-9\">\r\n        <!-- Tabs content -->\r\n        <div class=\"tab-content\" id=\"v-pills-tabContent\">\r\n          <div\r\n            *ngFor=\"let item of stepperList; let i = index\"\r\n            class=\"tab-pane fade shadow rounded bg-white p-5\"\r\n            [class.active]=\"stepperList[i].i\"\r\n            [class.show]=\"stepperList[i].i\"\r\n            id=\"v-pills-home\"\r\n            role=\"tabpanel\"\r\n            aria-labelledby=\"v-pills-home-tab\"\r\n          >\r\n            <h4 class=\"font-italic mb-4\">{{ item.name }}</h4>\r\n            <p class=\"font-italic text-muted mb-2\">\r\n              <ng-container\r\n                *ngTemplateOutlet=\"test; context: { name: item.name }\"\r\n              ></ng-container>\r\n            </p>\r\n            <div>\r\n              <!-- <div class=\"buttons\">\r\n                                <button mat-icon-button (click)=\"prev(1)\"><i  style=\"font-size: 25px;\" class=\"fas fa-arrow-left\"></i></button> <button mat-icon-button (click)=\"next(1)\"><i style=\"font-size: 25px;\" class=\"fas fa-arrow-right\"></i></button>\r\n                            </div> -->\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- <div class=\"buttons\">\r\n                            <button mat-icon-button (click)=\"prev(1)\"><i  style=\"font-size: 25px;\" class=\"fas fa-arrow-left\"></i></button> <button mat-icon-button (click)=\"next(1)\"><i style=\"font-size: 25px;\" class=\"fas fa-arrow-right\"></i></button>\r\n                        </div> -->\r\n  </div>\r\n</section>\r\n\r\n<ng-template\r\n  [formGroup]=\"JobTaskDetail\"\r\n  let\r\n  #test\r\n  let-name=\"name\"\r\n  class=\"my-auto\"\r\n>\r\n  <ng-container\r\n    *ngIf=\"name.toLowerCase() == 'HighRisk Construction'.toLowerCase()\"\r\n  >\r\n    <div class=\"row justify-content-center\" style=\"margin-top: auto\">\r\n      <div class=\"col-1 my-auto\"></div>\r\n      <div class=\"col-7\">\r\n        <mat-form-field class=\"container\" appearance=\"fill\">\r\n          <mat-label class=\"text-center\">HighRiskConstruction</mat-label>\r\n          <mat-select formControlName=\"highRiskConstr\" multiple>\r\n            <mat-select-trigger>\r\n              <span\r\n                *ngIf=\"!JobTaskDetail.get('highRiskConstr').value?.length\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n              </span>\r\n              <span\r\n                *ngIf=\"JobTaskDetail.get('highRiskConstr').value?.length == 1\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n                One Item selected\r\n              </span>\r\n              <span\r\n                *ngIf=\"JobTaskDetail.get('highRiskConstr').value?.length > 1\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n                More than one selected\r\n              </span>\r\n            </mat-select-trigger>\r\n            <mat-option\r\n              *ngFor=\"let parameter of highRiskConstructionData\"\r\n              [value]=\"parameter._id\"\r\n            >\r\n              {{ parameter.title }}</mat-option\r\n            >\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n      <div class=\"col-1 my-auto\"></div>\r\n    </div>\r\n  </ng-container>\r\n  <ng-container *ngIf=\"name.toLowerCase() == 'PPE'.toLowerCase()\">\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-1 my-auto\"></div>\r\n      <div class=\"col-7\">\r\n        <mat-form-field class=\"container\" appearance=\"fill\">\r\n          <mat-label>PPE selection</mat-label>\r\n          <mat-select formControlName=\"PPE\" multiple>\r\n            <mat-select-trigger>\r\n              <span\r\n                *ngIf=\"!JobTaskDetail.get('PPE').value?.length\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n              </span>\r\n              <span\r\n                *ngIf=\"JobTaskDetail.get('PPE').value?.length == 1\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n                One Item selected\r\n              </span>\r\n              <span\r\n                *ngIf=\"JobTaskDetail.get('PPE').value?.length > 1\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n                More than one selected\r\n              </span>\r\n            </mat-select-trigger>\r\n            <mat-option\r\n              *ngFor=\"let parameter of PPESelectionData\"\r\n              [value]=\"parameter._id\"\r\n              >{{ parameter.title }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n      <div class=\"col-1 my-auto\"></div>\r\n    </div>\r\n  </ng-container>\r\n  <ng-container *ngIf=\"name.toLowerCase() == 'Licence'.toLowerCase()\">\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-1 my-auto\"></div>\r\n      <div class=\"col-7\">\r\n        <mat-form-field class=\"container\" appearance=\"fill\">\r\n          <mat-label>Licences</mat-label>\r\n          <mat-select formControlName=\"LicenceCat\" multiple>\r\n            <mat-select-trigger>\r\n              <span\r\n                *ngIf=\"!JobTaskDetail.get('LicenceCat').value?.length\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n              </span>\r\n              <span\r\n                *ngIf=\"JobTaskDetail.get('LicenceCat').value?.length == 1\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n                One Item selected\r\n              </span>\r\n              <span\r\n                *ngIf=\"JobTaskDetail.get('LicenceCat').value?.length > 1\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n                More than one selected\r\n              </span>\r\n            </mat-select-trigger>\r\n            <mat-option\r\n              *ngFor=\"let parameter of licenceByTradecat\"\r\n              [value]=\"parameter._id\"\r\n              >{{ parameter.title }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n      <div class=\"col-1 my-auto\"></div>\r\n    </div>\r\n  </ng-container>\r\n  <ng-container *ngIf=\"name.toLowerCase() == 'Identify Hazards'.toLowerCase()\">\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-1 my-auto\"></div>\r\n      <div class=\"col-7\">\r\n        <mat-form-field class=\"container\" appearance=\"fill\">\r\n          <mat-label>Identify Hazards</mat-label>\r\n          <mat-select formControlName=\"identifyHazrds\" multiple>\r\n            <mat-select-trigger>\r\n              <span\r\n                *ngIf=\"!JobTaskDetail.get('identifyHazrds').value?.length\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n              </span>\r\n              <span\r\n                *ngIf=\"JobTaskDetail.get('identifyHazrds').value?.length == 1\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n                One Item selected\r\n              </span>\r\n              <span\r\n                *ngIf=\"JobTaskDetail.get('identifyHazrds').value?.length > 1\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n                More than one selected\r\n              </span>\r\n            </mat-select-trigger>\r\n            <mat-option\r\n              *ngFor=\"let parameter of allHazards\"\r\n              [value]=\"parameter._id\"\r\n              >{{ parameter.title }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n      <div class=\"col-1 my-auto\"></div>\r\n    </div>\r\n  </ng-container>\r\n  <ng-container *ngIf=\"name.toLowerCase() == 'Risk Level'.toLowerCase()\">\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-1 my-auto\"></div>\r\n      <div class=\"col-7\">\r\n        <mat-form-field class=\"container\" appearance=\"fill\">\r\n          <mat-label>Risk Level</mat-label>\r\n          <mat-select formControlName=\"riskLevel\">\r\n            <mat-option\r\n              *ngFor=\"let parameter of riskLevelData\"\r\n              [value]=\"parameter._id\"\r\n            >\r\n              {{ parameter.title }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n      <div class=\"col-1 my-auto\"></div>\r\n    </div>\r\n  </ng-container>\r\n  <ng-container\r\n    *ngIf=\"name.toLowerCase() == 'Control Action Required'.toLowerCase()\"\r\n  >\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-1 my-auto\"></div>\r\n      <div class=\"col-7\">\r\n        <mat-form-field class=\"container\" appearance=\"fill\">\r\n          <mat-label>Control Action Required</mat-label>\r\n          <mat-select formControlName=\"contrActReq\" multiple>\r\n            <mat-select-trigger>\r\n              <span\r\n                *ngIf=\"!JobTaskDetail.get('contrActReq').value?.length\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n              </span>\r\n              <span\r\n                *ngIf=\"JobTaskDetail.get('contrActReq').value?.length == 1\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n                One Item selected\r\n              </span>\r\n              <span\r\n                *ngIf=\"JobTaskDetail.get('contrActReq').value?.length > 1\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n                More than one selected\r\n              </span>\r\n            </mat-select-trigger>\r\n            <mat-option\r\n              *ngFor=\"let parameter of allContrlActReq\"\r\n              [value]=\"parameter._id\"\r\n              >{{ parameter.title }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n      <div class=\"col-1 my-auto\"></div>\r\n    </div>\r\n  </ng-container>\r\n  <ng-container *ngIf=\"name.toLowerCase() == 'Code of Practice'.toLowerCase()\">\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-1 my-auto\"></div>\r\n      <div class=\"col-7\">\r\n        <mat-form-field class=\"container\" appearance=\"fill\">\r\n          <mat-label>Code of Practice</mat-label>\r\n          <mat-select formControlName=\"codeOfPract\" multiple>\r\n            <mat-select-trigger>\r\n              <span\r\n                *ngIf=\"!JobTaskDetail.get('codeOfPract').value?.length\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n              </span>\r\n              <span\r\n                *ngIf=\"JobTaskDetail.get('codeOfPract').value?.length == 1\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n                One Item selected\r\n              </span>\r\n              <span\r\n                *ngIf=\"JobTaskDetail.get('codeOfPract').value?.length > 1\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n                More than one selected\r\n              </span>\r\n            </mat-select-trigger>\r\n            <mat-option\r\n              *ngFor=\"let parameter of allCodeOfPract\"\r\n              [value]=\"parameter._id\"\r\n              >{{ parameter.title }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n      <div class=\"col-1 my-auto\"></div>\r\n    </div>\r\n  </ng-container>\r\n  <ng-container\r\n    *ngIf=\"name.toLowerCase() == 'Residule Risk Level'.toLowerCase()\"\r\n  >\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-1 my-auto\"></div>\r\n      <div class=\"col-7\">\r\n        <mat-form-field class=\"container\" appearance=\"fill\">\r\n          <mat-label>Residule Risk Level</mat-label>\r\n          <mat-select formControlName=\"residualRiskL\">\r\n            <mat-option\r\n              *ngFor=\"let parameter of resiRiskLevelData\"\r\n              [value]=\"parameter._id\"\r\n            >\r\n              {{ parameter.title }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n      <div class=\"col-1 my-auto\"></div>\r\n    </div>\r\n  </ng-container>\r\n  <ng-container *ngIf=\"name.toLowerCase() == 'Code of Practice'.toLowerCase()\">\r\n    <ng-template matStepLabel>Code of Practice</ng-template>\r\n    <h2 class=\"text-center mt-3\">\r\n      Code of Practice<span\r\n        class=\"material-icons ml-3\"\r\n        (click)=\"addItem('codeOfPract')\"\r\n        >add_circle_outline</span\r\n      >\r\n    </h2>\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-1 my-auto\">\r\n        <button class=\"btn\" matStepperPrevious>\r\n          <i class=\"fas fa-arrow-left\"></i>\r\n        </button>\r\n      </div>\r\n      <div class=\"col-7\">\r\n        <mat-form-field class=\"container\" appearance=\"fill\">\r\n          <mat-label>Code of Practice</mat-label>\r\n          <mat-select formControlName=\"codeOfPract\" multiple>\r\n            <mat-select-trigger>\r\n              <span\r\n                *ngIf=\"!JobTaskDetail.get('codeOfPract').value?.length\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n              </span>\r\n              <span\r\n                *ngIf=\"JobTaskDetail.get('codeOfPract').value?.length == 1\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n                One Item selected\r\n              </span>\r\n              <span\r\n                *ngIf=\"JobTaskDetail.get('codeOfPract').value?.length > 1\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n                More than one selected\r\n              </span>\r\n            </mat-select-trigger>\r\n            <mat-option\r\n              *ngFor=\"let parameter of allCodeOfPract\"\r\n              [value]=\"parameter._id\"\r\n              >{{ parameter.title }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n      <div class=\"col-1 my-auto\">\r\n        <button class=\"btn\" matStepperNext>\r\n          <i class=\"fas fa-arrow-right\"></i>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </ng-container>\r\n  <ng-container\r\n    *ngIf=\"name.toLowerCase() == 'Chemical related Task'.toLowerCase()\"\r\n  >\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-1 my-auto\"></div>\r\n      <div class=\"col-7 text-center\">\r\n        <div class=\"form-check form-check-inline\">\r\n          <input\r\n            class=\"form-check-input\"\r\n            type=\"radio\"\r\n            value=\"YES\"\r\n            formControlName=\"chemical\"\r\n          />\r\n          <label class=\"form-check-label\" for=\"inlineRadio1\">Yes</label>\r\n        </div>\r\n        <div class=\"form-check form-check-inline\">\r\n          <input\r\n            class=\"form-check-input\"\r\n            type=\"radio\"\r\n            value=\"NO\"\r\n            formControlName=\"chemical\"\r\n          />\r\n          <label class=\"form-check-label\" for=\"inlineRadio2\">No</label>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-1 my-auto\"></div>\r\n    </div>\r\n  </ng-container>\r\n  <ng-container\r\n    *ngIf=\"name.toLowerCase() == 'Person Responsible'.toLowerCase()\"\r\n  >\r\n    <div class=\"row justify-content-center mt-3\">\r\n      <div class=\"col-1 my-auto\"></div>\r\n      <div class=\"col-6\">\r\n        <mat-form-field class=\"container\" appearance=\"fill\">\r\n          <mat-label>Person Responsible</mat-label>\r\n          <mat-select formControlName=\"personResp\">\r\n            <mat-option *ngFor=\"let person of staff\" [value]=\"person._id\">\r\n              {{ person.title }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n      <div class=\"col-1 my-auto\">\r\n        <!--  -->\r\n      </div>\r\n    </div>\r\n    <div class=\"text-center mt-3\">\r\n      <button\r\n        *ngIf=\"!jobTask?.set\"\r\n        class=\"btn btn-primary\"\r\n        (click)=\"setRelation()\"\r\n      >\r\n        Set\r\n      </button>\r\n      <button\r\n        *ngIf=\"jobTask?.set\"\r\n        class=\"btn btn-primary\"\r\n        (click)=\"setRelation()\"\r\n      >\r\n        Update\r\n      </button>\r\n    </div>\r\n  </ng-container>\r\n  <div class=\"buttons\">\r\n    <button mat-icon-button (click)=\"prev(1)\">\r\n      <i style=\"font-size: 25px\" class=\"fas fa-arrow-left\"></i>\r\n    </button>\r\n    <button mat-icon-button (click)=\"next(1)\">\r\n      <i style=\"font-size: 25px\" class=\"fas fa-arrow-right\"></i>\r\n    </button>\r\n  </div>\r\n</ng-template>\r\n","import { Component, OnInit, QueryList, ViewChild, ViewChildren } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport {MatSort, Sort} from '@angular/material/sort';\r\nimport { Router } from '@angular/router';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { SetTitleService } from 'src/app/utils/services/set-title.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-hazard-treatment',\r\n  templateUrl: './hazard-treatment.component.html',\r\n  styleUrls: ['./hazard-treatment.component.scss']\r\n})\r\nexport class HazardTreatmentComponent implements OnInit {\r\n  setStatesDetail!: FormGroup;\r\n  hazardData:any=[]\r\n \r\n  ELEMENT_DATA = [];\r\n  displayedColumns: string[] = ['index', 'title', 'edit'];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n  \r\n  @ViewChildren('risk') Risk: QueryList<any>;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    private setTitle: SetTitleService,\r\n    public router: Router,\r\n  ) {}\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.setTitle.setTitle('WHS-Set Hazard Relation');\r\n this.getAllHazardTreatmentRelation();\r\n  }\r\n  onFormSubmit() {\r\n    console.log(this.setStatesDetail);\r\n  }\r\n  getAllHazardTreatmentRelation() {\r\n    this.logicalFormInfo.getAllHazardTreatmentRelation().subscribe((res: any) => {\r\n      console.log('getAllHazardTreatmentRelation=>', res);\r\n      this.hazardData = res.data;\r\n      \r\n      this.hazardData.forEach((element, index) => {\r\n        element.index = index + 1; //adding index\r\n      });\r\n\r\n      this.ELEMENT_DATA =  this.hazardData;\r\n      this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n     \r\n\r\n    });\r\n  }\r\n  setRelation_2(id){\r\n    this.router.navigate(['/admin/confiLogi/setHazardRelation'],\r\n     \r\n       {queryParams: { id:id}});\r\n   }\r\n}\r\n","  <!-- stepper logic -->\r\n  \r\n  <h2 class=\"ml-2\"> Set Hazard's Relation</h2>\r\n \r\n  <div class=\"\">\r\n    <table mat-table [dataSource]=\"dataSource\" matSort >\r\n  \r\n      <!-- Position Column -->\r\n      <ng-container matColumnDef=\"index\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> No. </th>\r\n        <td mat-cell *matCellDef=\"let element\">{{element.index}}</td>\r\n      </ng-container>\r\n  \r\n     \r\n\r\n  <ng-container matColumnDef=\"title\">\r\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> Title </th>\r\n    <td mat-cell *matCellDef=\"let element\"> {{element.title}} </td>\r\n  </ng-container>\r\n  \r\n  <ng-container matColumnDef=\"edit\">\r\n    <th mat-header-cell *matHeaderCellDef> Set </th>\r\n    <td  mat-cell *matCellDef=\"let element\"(click)=\"setRelation_2(element._id)\"> <button *ngIf=\"!element.set\" mat-stroked-button color=\"primary\" class=\"myBtn\">Set</button> <button  *ngIf=\"element.set\" mat-stroked-button color=\"primary\" class=\"myBtn\">Update</button>\r\n    </td>\r\n  </ng-container>\r\n \r\n  \r\n  \r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n    </table>\r\n  \r\n    <mat-paginator [pageSizeOptions]=\"[20]\"\r\n                   showFirstLastButtons \r\n                   aria-label=\"Select page of periodic elements\">\r\n    </mat-paginator>\r\n  </div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-confi-logi',\r\n  templateUrl: './confi-logi.component.html',\r\n  styleUrls: ['./confi-logi.component.scss']\r\n})\r\nexport class ConfiLogiComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<router-outlet></router-outlet>","import { JobNumber } from './../../../../utils/services/logical-form-info.service';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Component, OnInit, Inject, AfterViewInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-create-job-no',\r\n  templateUrl: './create-job-no.component.html',\r\n  styleUrls: ['./create-job-no.component.scss']\r\n})\r\nexport class CreateJobNoComponent implements OnInit, AfterViewInit {\r\n  allSites: any[] = []\r\n  addJobNumberForm: FormGroup\r\n  addCustomerForm: FormGroup;\r\n  allCustomers: any[] = [];\r\n  allState: any = [];\r\n  constructor(\r\n    private dialogRef: MatDialogRef<CreateJobNoComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private logicalFormInfoService: LogicalFormInfoService,\r\n    private fb: FormBuilder\r\n  ) { }\r\n  ngAfterViewInit(): void {\r\n    this.addJobNumberForm.get('siteName').valueChanges.subscribe(res => {\r\n      // console.log(JSON.parse(res))\r\n      res = JSON.parse(res)\r\n      this.addJobNumberForm.get('streetNumber').setValue(res.streetNumber)\r\n      this.addJobNumberForm.get('streetAddress').setValue(res.streetAddress)\r\n      this.addJobNumberForm.get('suburb').setValue(res.suburb)\r\n      this.addJobNumberForm.get('state').setValue(res.stateId._id)\r\n    })\r\n    this.addJobNumberForm.get('customerName').valueChanges.subscribe(res => {\r\n      // console.log(JSON.parse(res))\r\n      res = JSON.parse(res)\r\n      this.addJobNumberForm.get('customerContact').setValue(res.customerContact)\r\n      this.addJobNumberForm.get('customerContactPhone').setValue(res.contacts[0]?.phone)\r\n      this.addJobNumberForm.get('customerEmail').setValue(res.contacts[0]?.email)\r\n      // this.addJobNumberForm.get('customerEmail').setValue(res.ABN)\r\n    })\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.addJobNumberForm = this.fb.group({\r\n      siteName: ['',Validators.required],\r\n      streetNumber: [{ value: '', disabled: true },Validators.required],\r\n      streetAddress: [{ value: '', disabled: true },Validators.required],\r\n      suburb: [{ value: '', disabled: true },Validators.required],\r\n      state: [{ value: '', disabled: true },Validators.required],\r\n      customerName: ['',Validators.required],\r\n      customerContact: [{ value: '', disabled: true },Validators.required],\r\n      customerContactPhone: [{ value: '', disabled: true },Validators.required],\r\n      customerEmail: [{ value: '', disabled: true },Validators.required],\r\n    })\r\n    this.logicalFormInfoService.getAllSite().subscribe((res: any) => {\r\n      this.allSites = res.data;\r\n      console.log(res.data);\r\n      \r\n    })\r\n    this.logicalFormInfoService.getAllCustomer().subscribe((res: any) => {\r\n      this.allCustomers = res.data\r\n    })\r\n    this.getAllStates();\r\n  }\r\n  get f(){\r\n    return this.addJobNumberForm.controls\r\n  }\r\n  onSubmit() {\r\n    console.log(this.addJobNumberForm.value)\r\n    let data : JobNumber\r\n    data = {\r\n      arrObj:[{\r\n        customerContact:this.f.customerContact.value,\r\n        customerContactPhone:this.f.customerContactPhone.value,\r\n        customerEmail:this.f.customerEmail.value,\r\n        customerName:JSON.parse(this.f.customerName.value).customerName,\r\n        siteName:JSON.parse(this.f.siteName.value).siteName,\r\n        stateId:this.f.state.value,\r\n        streetAddress:this.f.streetAddress.value,\r\n        streetNumber:this.f.streetNumber.value,\r\n        suburb:this.f.suburb.value,\r\n      }]\r\n    }\r\n    console.log(data)\r\n    this.logicalFormInfoService.addJobNumber(data).subscribe((res:any)=>{\r\n      console.log(res)\r\n      this.dialogRef.close('success')\r\n    })\r\n  }\r\n  setSite(item) {\r\n    console.log(item)\r\n    this.addJobNumberForm.get('streetNumber').setValue(item.streetNumber)\r\n    this.addJobNumberForm.get('streetAddress').setValue(item.streetAddress)\r\n    this.addJobNumberForm.get('suburb').setValue(item.suburb)\r\n    this.addJobNumberForm.get('state').setValue(item.stateId._id)\r\n  }\r\n  setCustomer(item) {\r\n    this.addJobNumberForm.get('customerContact').setValue(item.customerContact)\r\n    this.addJobNumberForm.get('customerContactPhone').setValue(item.contacts[0]?.phone)\r\n    this.addJobNumberForm.get('customerEmail').setValue(item.contacts[0]?.email)\r\n  //   this.addJobNumberForm.get('customerEmail').setValue(item.ABN)\r\n   }\r\n  close() {\r\n    this.dialogRef.close();\r\n}\r\ngetAllStates() {\r\n  this.logicalFormInfoService.getAllStates().subscribe((res) => {\r\n    console.log('getAllStates=>', res);\r\n    this.allState = res.data;\r\n  });\r\n\r\n}\r\n}\r\n","<section [formGroup]=\"addJobNumberForm\" >\r\n  <div>\r\n    <div mat-dialog-title class=\"dialog-title\">\r\n    <h1>Create Job Number</h1>\r\n    <button type=\"button\" class=\"close\" \r\n    style=\"font-size: 25px;\"\r\n      (click)=\"close()\" aria-label=\"Close\">\r\n    <span aria-hidden=\"true\">×</span>\r\n  </button>\r\n  </div>\r\n    <div class=\"row\">\r\n  \r\n      <div class=\"my-3 col-6\">\r\n        <p for=\"exampleFormControlInput1\" class=\"form-Label\">Site Name</p>\r\n        <select\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          formControlName=\"siteName\"\r\n          id=\"siteName\"\r\n        >\r\n          <option [value]=\"item|json\" *ngFor=\"let item of allSites \">{{item.siteName}}</option>\r\n        </select>\r\n      </div>\r\n    \r\n    </div>\r\n  \r\n    \r\n    <div class=\"row\">\r\n      <div class=\"my-3 col-2\">\r\n        <p for=\"exampleFormControlInput1\" class=\"form-Label\">Street Number</p>\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          formControlName=\"streetNumber\"\r\n          id=\"siteName\"\r\n        />\r\n      </div>\r\n      <div class=\"my-3 col-4\">\r\n        <p for=\"exampleFormControlInput1\" class=\"form-Label\">Street Address</p>\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          formControlName=\"streetAddress\"\r\n          id=\"siteName\"\r\n        />\r\n      </div>\r\n      <div class=\"my-3 col-2\">\r\n        <p for=\"exampleFormControlInput1\" class=\"form-Label\">Suburb</p>\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          formControlName=\"suburb\"\r\n          id=\"siteName\"\r\n        />\r\n      </div>\r\n      <div class=\"my-3 col-4\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-label\"\r\n          >State</p\r\n        >\r\n\r\n          <select\r\n        class=\"form-select form-control col\"\r\n        aria-label=\"Default select example\"\r\n        formControlName=\"state\"\r\n      >\r\n      <option selected hidden>Select</option>\r\n      <option *ngFor =\"let item of allState\" [value]=\"item._id\">{{item.title}}</option>\r\n        <!-- <option selected hidden>Select</option>\r\n              <option value=\"NSW\">NSW</option>\r\n              <option value=\"ACT\">ACT</option>\r\n              <option value=\"QLD\">QLD</option>\r\n              <option value=\"NT\">NT</option>\r\n              <option value=\"SA\">SA</option>\r\n              <option value=\"NZ\">NZ</option>\r\n              <option value=\"TAS\">TAS</option>\r\n              <option value=\"VIC\">VIC</option>\r\n              <option value=\"WA\">WA</option> -->\r\n      </select>\r\n    \r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"my-3 col\">\r\n        <p for=\"exampleFormControlInput1\" class=\"form-Label\">Customer Name</p>\r\n        <select\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          formControlName=\"customerName\"\r\n          id=\"siteName\"\r\n        >\r\n          <option [value]=\"item|json\" *ngFor=\"let item of allCustomers \">{{item.customerName}}</option>\r\n        </select>\r\n      </div>\r\n      <div class=\"my-3 col\">\r\n        <p for=\"exampleFormControlInput1\" class=\"form-Label\">Customer Contact</p>\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          id=\"siteName\"\r\n          formControlName=\"customerContact\"\r\n        />\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"my-3 col\">\r\n        <p for=\"exampleFormControlInput1\" class=\"form-Label\">Customer Contact Phone</p>\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          id=\"siteName\"\r\n          formControlName=\"customerContactPhone\"\r\n        />\r\n      </div>\r\n      <div class=\"my-3 col\">\r\n        <p for=\"exampleFormControlInput1\" class=\"form-Label\">Customer Email</p>\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          id=\"siteName\"\r\n          formControlName=\"customerEmail\"\r\n        />\r\n      </div>\r\n    </div> \r\n  <div >\r\n    <button class=\"btn btn-primary\" (click)=\"onSubmit()\" [disabled]=\"addJobNumberForm.invalid \" >\r\n      Create\r\n    </button>\r\n  </div>\r\n    <!-- <div class=\"row\">\r\n      <div class=\"my-3 col\">\r\n        <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n          Customer Contact Phone\r\n        </p>\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          formControlName=\"customerContactPhone\"\r\n          id=\"siteName\"\r\n        />\r\n      </div>\r\n      <div class=\"my-3 col\">\r\n        <p for=\"exampleFormControlInput1\" class=\"form-Label\">Project Manager</p>\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          formControlName=\"projectManager\"\r\n          id=\"siteName\"\r\n        />\r\n      </div>\r\n    </div> -->\r\n  </div>\r\n  </section>\r\n  \r\n ","\r\nimport {\r\n  Component,\r\n  OnInit,\r\n  QueryList,\r\n  ViewChildren,\r\n  AfterViewInit,\r\n} from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormArray } from '@angular/forms';\r\nimport Swal from 'sweetalert2';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { SetTitleService } from 'src/app/utils/services/set-title.service';\r\nimport { ViewChild } from '@angular/core';\r\n\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { AddItemComponent } from './set-relation/add-item/add-item.component';\r\nimport { AddJobTaskComponent } from './add-job-task/add-job-task.component';\r\nimport { MatSort } from '@angular/material/sort';\r\n@Component({\r\n  selector: 'app-set-logic',\r\n  templateUrl: './set-logic.component.html',\r\n  styleUrls: ['./set-logic.component.scss'],\r\n})\r\nexport class SetLogicComponent implements AfterViewInit, OnInit {\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  JobTaskDetail!: FormGroup;\r\n  allHazards=[];\r\n  allContrlActReq=[];\r\n  jobTaskData: any = [];\r\n  highRiskData: any = [];\r\n  PPESelectionData: any = [];\r\n  codeOfPract: any = [];\r\n  licenseAndQual: any = [];\r\n  licenseAndQualificationData: any = [];\r\n  licenceCatAll: any = [];\r\n  highRiskConstructionData: any = [];\r\n  task: any = [];\r\n  riskLevel='';\r\n  residuleRiskL='';\r\n  PPEselection = [\r\n    { label: 'Disposable dust mask', value: '' },\r\n    { label: 'Dust Mas', value: '' },\r\n    { label: 'Face shield', value: '' },\r\n    { label: 'Full face respirator', value: '' },\r\n    { label: 'Gttors', value: '' },\r\n    { label: 'Half face respirator', value: '' },\r\n    { label: 'Hard Hat', value: '' },\r\n    { label: 'Hearing protection', value: '' },\r\n    { label: 'High-Vis Clothing', value: '' },\r\n    { label: 'Lock Out Tags', value: '' },\r\n    { label: 'Long sleeve/Long pants', value: '' },\r\n    { label: 'Out of Service Tags', value: '' },\r\n    { label: 'Protective gloves', value: '' },\r\n    { label: 'Rescue kit', value: '' },\r\n    { label: 'Safety boots', value: '' },\r\n    { label: 'Safety glasses', value: '' },\r\n    { label: 'Sun Screen', value: '' },\r\n    { label: 'torch', value: '' },\r\n    { label: 'Wide Brim Hat', value: '' },\r\n  ];\r\n\r\n  licenseAndQualification = [\r\n    { label: 'Open Cable Licence', value: '' },\r\n    { label: 'White Card', value: '' },\r\n    { label: 'EWP Licence', value: '' },\r\n    { label: 'Working At Heights', value: '' },\r\n    { label: 'Security Licence', value: '' },\r\n    { label: 'Asbestos Awarness', value: '' },\r\n    { label: 'Working In Confined Space', value: '' },\r\n  ];\r\n\r\n  highRiskConstruction2 = [\r\n    {\r\n      label: 'Working in or near trenches or shafts deeper than 1.5metres',\r\n      value: '',\r\n    },\r\n    { label: 'Work in or near a confined space', value: '' },\r\n    {\r\n      label:\r\n        'Work in an area that may have a contaminated or flammable atmosphere',\r\n      value: '',\r\n    },\r\n    { label: 'Working around or near mobile plant', value: '' },\r\n    { label: 'Work with near or near asbestos', value: '' },\r\n    { label: 'Working with hazardous substances', value: '' },\r\n    { label: 'Working with or near tilt-up/precast concrete', value: '' },\r\n    { label: 'Risk of falls higher than 2 metres', value: '' },\r\n    {\r\n      label: 'Working near on or adjacent to a road or rail corridor',\r\n      value: '',\r\n    },\r\n    { label: 'Working on or near telecommunication tower', value: '' },\r\n    { label: 'Working on or near telecommunication tower', value: '' },\r\n    { label: 'Work near explosives', value: '' },\r\n    {\r\n      label:\r\n        'Work in or near water or other liquid that involves a risk of drowning',\r\n      value: '',\r\n    },\r\n    { label: 'Demolition of load-bearing structure', value: '' },\r\n    { label: 'Diving work', value: '' },\r\n  ];\r\n\r\n  PPEselection2 = [\r\n    { label: 'Disposable dust mask', value: '' },\r\n    { label: 'Dust Mas', value: '' },\r\n    { label: 'Face shield', value: '' },\r\n    { label: 'Full face respirator', value: '' },\r\n    { label: 'Gttors', value: '' },\r\n    { label: 'Half face respirator', value: '' },\r\n    { label: 'Hard Hat', value: '' },\r\n    { label: 'Hearing protection', value: '' },\r\n    { label: 'High-Vis Clothing', value: '' },\r\n    { label: 'Lock Out Tags', value: '' },\r\n    { label: 'Long sleeve/Long pants', value: '' },\r\n    { label: 'Out of Service Tags', value: '' },\r\n    { label: 'Protective gloves', value: '' },\r\n    { label: 'Rescue kit', value: '' },\r\n    { label: 'Safety boots', value: '' },\r\n    { label: 'Safety glasses', value: '' },\r\n    { label: 'Sun Screen', value: '' },\r\n    { label: 'torch', value: '' },\r\n    { label: 'Wide Brim Hat', value: '' },\r\n  ];\r\n  ELEMENT_DATA = [];\r\n  /////////////mat table////////////////\r\n  displayedColumns: string[] = ['index', 'title', 'edit'];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n  // @ViewChild('risk') risk: any;\r\n  @ViewChildren('risk') Risk: QueryList<any>;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,    private dialog: MatDialog,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    private setTitle: SetTitleService,\r\n    public router: Router,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.setTitle.setTitle('WHS-Set Relation');\r\n \r\n    // this.JobTaskDetail = this.fb.group({\r\n    //   highRiskConstr: this.fb.array([]),\r\n    //   PPE: this.fb.array([]),\r\n    //   LicenceCat: this.fb.array([]),\r\n    //   identifyHazrds: this.fb.array([]),\r\n    //   contrActReq: this.fb.array([]),\r\n    //   riskLevel: this.fb.array([]),\r\n    //   residualRisk: this.fb.array([]),\r\n    // });\r\n\r\n    this.getJobTask();\r\n    // this.getAllHighRisk();\r\n    // this.getAllLicence();\r\n    // this.getAllCategories();\r\n    // this.getAllPPE();\r\n    // this.getAllHazard();\r\n    // this.getAllContrActReq();\r\n  }\r\n\r\n  \r\n\r\n  // addActionHighRisk() {\r\n  //   {\r\n  //     this.highRiskFA().push(this.highRiskFG());\r\n  //   }\r\n  // }\r\n  // addActionPPE() {\r\n  //   {\r\n  //     this.PPE_FA().push(this.PPE_FG());\r\n  //   }\r\n  // }\r\n  // addActionLicnCat() {\r\n  //   {\r\n  //     this.licenceCatFA().push(this.licenceCatFG());\r\n  //   }\r\n  // }\r\n  // addActionContrActReq() {\r\n  //   {\r\n  //     this.contrActReqFA().push(this.contrActReqFG());\r\n  //   }\r\n  // }\r\n  // addActionIdentifyHazrds() {\r\n  //   {\r\n  //     this.identifyHazrdsFA().push(this.identifyHazrdsFG());\r\n  //   }\r\n  // }\r\n  // addActionRiskLevel() {\r\n  //   {\r\n  //     this.riskLevelFA().push(this.riskLevelFG());\r\n  //   }\r\n  // }\r\n  // addActionResiRiskLevel() {\r\n  //   {\r\n  //     this.residlRiskLevelFA().push(this.residlRiskLevelFG());\r\n  //   }\r\n  // }\r\n  // addActionCOP() {\r\n  //   {\r\n  //     this.addCOP().push(this.newActionCOP());\r\n  //   }\r\n  // }\r\n  // highRiskFA(): FormArray {\r\n  //   return this.JobTaskDetail.get('highRiskConstr') as FormArray;\r\n  // }\r\n  // PPE_FA(): FormArray {\r\n  //   return this.JobTaskDetail.get('PPE') as FormArray;\r\n  // }\r\n  // licenceCatFA(): FormArray {\r\n  //   return this.JobTaskDetail.get('LicenceCat') as FormArray;\r\n  // }\r\n  // identifyHazrdsFA(): FormArray {\r\n  //   return this.JobTaskDetail.get('identifyHazrds') as FormArray;\r\n  // }\r\n  // contrActReqFA(): FormArray {\r\n  //   return this.JobTaskDetail.get('contrActReq') as FormArray;\r\n  // }\r\n  // addCOP(): FormArray {\r\n  //   return this.JobTaskDetail.get('codeOfPract') as FormArray;\r\n  // }\r\n  // riskLevelFA(): FormArray {\r\n  //   return this.JobTaskDetail.get('riskLevel') as FormArray;\r\n  // }\r\n  // residlRiskLevelFA(): FormArray {\r\n  //   return this.JobTaskDetail.get('residualRisk') as FormArray;\r\n  // }\r\n  // highRiskFG(): FormGroup {\r\n  //   return this.fb.group({\r\n  //     highRiskArr: [''],\r\n  //   });\r\n  // }\r\n  // PPE_FG(): FormGroup {\r\n  //   return this.fb.group({\r\n  //     ppeArr: [''],\r\n  //   });\r\n  // }\r\n  // licenceCatFG(): FormGroup {\r\n  //   return this.fb.group({\r\n  //     licenceArr: [''],\r\n  //   });\r\n  // }\r\n  // identifyHazrdsFG(): FormGroup {\r\n  //   return this.fb.group({\r\n  //     hazardsArr: [''],\r\n  //   });\r\n  // }\r\n  // contrActReqFG(): FormGroup {\r\n  //   return this.fb.group({\r\n  //     contrActReqArr: [''],\r\n  //   });\r\n  // }\r\n  // riskLevelFG(): FormGroup {\r\n  //   return this.fb.group({\r\n  //     riskLevel: [''],\r\n  //   });\r\n  // }\r\n  // residlRiskLevelFG(): FormGroup {\r\n  //   return this.fb.group({\r\n  //     resiRiskLevel: [''],\r\n  //   });\r\n  // }\r\n  // newActionCOP(): FormGroup {\r\n  //   //code of practice\r\n  //   return this.fb.group({\r\n  //     copArr: [''],\r\n  //   });\r\n  // }\r\n\r\n  onFormSubmit() {\r\n    console.log(this.JobTaskDetail);\r\n  }\r\n  getJobTask() {\r\n    this.logicalFormInfo.getAllJobtask().subscribe((res: any) => {\r\n      console.log('jobTaskDetails=>', res);\r\n      this.jobTaskData = res.data;\r\n      \r\n      this.jobTaskData.forEach((element, index) => {\r\n        element.index = index + 1; //adding index\r\n      });\r\n\r\n      this.ELEMENT_DATA =  this.jobTaskData;\r\n      this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n      // this.jobTaskData.forEach((item,i) => {\r\n      //   this.addActionHighRisk();\r\n      //   this.addActionPPE();\r\n      //   this.addActionLicnCat();\r\n      //   this.addActionContrActReq();\r\n      //   this.addActionIdentifyHazrds(); \r\n      //   this.addActionRiskLevel(); \r\n      //   this.addActionResiRiskLevel();   \r\n      //   this.highRiskFA().controls[i].get('highRiskArr').setValue(item.risk);\r\n      //   this.PPE_FA().controls[i].get('ppeArr').setValue(item.PPE);\r\n      //   this.licenceCatFA().controls[i].get('licenceArr').setValue(item.licence);  \r\n      //   this.identifyHazrdsFA().controls[i].get('hazardsArr').setValue(item.identifyHazard);\r\n      //   this.contrActReqFA().controls[i].get('contrActReqArr').setValue(item.controlActionRequired);\r\n      //   this.riskLevelFA().controls[i].get('riskLevel').setValue(item.riskLevel);\r\n      //   this.residlRiskLevelFA().controls[i].get('resiRiskLevel').setValue(item.residualRisk);\r\n\r\n      //   });\r\n\r\n    });\r\n  }\r\n  getAllHighRisk() {\r\n    this.logicalFormInfo.getAllRisk().subscribe((res: any) => {\r\n      console.log('Risk=>', res);\r\n      this.highRiskConstructionData = res.data;\r\n    });\r\n  }\r\n  getAllPPE() {\r\n    this.logicalFormInfo.getAllPPE().subscribe((res: any) => {\r\n      console.log('PPE=>', res);\r\n      this.PPESelectionData = res.data;\r\n    });\r\n  }\r\n\r\n  getAllLicence() {\r\n    this.logicalFormInfo.getAllLicence().subscribe((res) => {\r\n      console.log('Licence=>', res);\r\n      this.licenseAndQual = res.data;\r\n    });\r\n  }\r\n  getAllHazard() {\r\n    this.logicalFormInfo.getAllHazards().subscribe((res:any) => {\r\n      console.log('getAllHazards=>', res);\r\n      this.allHazards = res.data;\r\n    });\r\n  }\r\n  getAllContrActReq()  {\r\n    this.logicalFormInfo.getAllContrlActReq().subscribe((res:any) => {\r\n      console.log('getAllHazards=>', res);\r\n      this.allContrlActReq = res.data;\r\n    });\r\n  }\r\n  getAllCategories() {\r\n    this.logicalFormInfo.getAllLicenceCat().subscribe((res) => {\r\n      console.log('getAllLicenceCat=>', res);\r\n      this.licenceCatAll = res.data;\r\n    });\r\n  }\r\n  setRelation_2(id){\r\n   this.router.navigate(['/admin/confiLogi/setRelation'],\r\n\r\n      {queryParams: { id:id}});\r\n  }\r\n /* setRelation(title, id,i) {\r\n\r\n    console.log('index', title);\r\n    console.log('id', id);\r\n    console.log('id', i);\r\nlet risk = [],\r\nppe=[],\r\nlicence=[],\r\nidentifyHazard=[],\r\ncontrolActionRequired=[];\r\n  if(this.highRiskFA().controls[i].get('highRiskArr').value){\r\n    this.highRiskFA().controls[i].get('highRiskArr').value.forEach(element => {\r\n      risk.push(element._id)\r\n    });\r\n  }\r\n  if(this.PPE_FA().controls[i].get('ppeArr').value){\r\n    this.PPE_FA().controls[i].get('ppeArr').value.forEach(element => {\r\n      ppe.push(element._id)\r\n    });\r\n  }\r\n  if(this.licenceCatFA().controls[i].get('licenceArr').value){\r\n    this.licenceCatFA().controls[i].get('licenceArr').value.forEach(element => {\r\n      licence.push(element._id)\r\n    });\r\n  }\r\n  if(this.identifyHazrdsFA().controls[i].get('hazardsArr').value){\r\n    this.identifyHazrdsFA().controls[i].get('hazardsArr').value.forEach(element => {\r\n      identifyHazard.push(element._id)\r\n    });\r\n  }\r\n  if(this.contrActReqFA().controls[i].get('contrActReqArr').value){\r\n    this.contrActReqFA().controls[i].get('contrActReqArr').value.forEach(element => {\r\n      controlActionRequired.push(element._id)\r\n    });\r\n  }\r\n\r\n    let data = {\r\n      title: title,\r\n      risk: this.highRiskFA().controls[i].get('highRiskArr').value,\r\n      PPE: this.PPE_FA().controls[i].get('ppeArr').value,\r\n      licence: this.licenceCatFA().controls[i].get('licenceArr').value,\r\n      identifyHazard:this.identifyHazrdsFA().controls[i].get('hazardsArr').value,\r\n      controlActionRequired: this.contrActReqFA().controls[i].get('contrActReqArr').value,\r\n      riskLevel:this.riskLevelFA().controls[i].get('riskLevel').value ,\r\n      residualRisk: this.residlRiskLevelFA().controls[i].get('resiRiskLevel').value,\r\n      set:true      \r\n    };\r\n    console.log(data);\r\n\r\n    this.logicalFormInfo.updateJobTask(data,id).subscribe((res) => {\r\n      console.log('resJob Task=>', res);\r\n      this.getJobTask();\r\n\r\n      Swal.fire({\r\n        title: 'Relation set successfully',\r\n        showConfirmButton: false,\r\n        timer: 1200,\r\n      });\r\n    });\r\n  } */\r\n  categorySel(catArr) {\r\n    this.licenseAndQualificationData = [];\r\n\r\n    console.log(catArr);\r\n    catArr.forEach((element) => {\r\n      this.licenseAndQual.forEach((item) => {\r\n        if (element === item.licenceCategoryId._id) {\r\n          this.licenseAndQualificationData.push(item);\r\n        }\r\n      });\r\n    });\r\n    console.log(\r\n      ' this.licenseAndQualificationData',\r\n      this.licenseAndQualificationData\r\n    );\r\n  }\r\n\r\n \r\n  // openDialog(element) {\r\n  \r\n  //   const dialogRef = this.dialog.open(AddJobTaskComponent, {\r\n  //     width: \"800px\",\r\n  //     data: element,\r\n  //   });\r\n  //   console.log(element)\r\n  //   dialogRef.afterClosed().subscribe((result) => {\r\n  //     if ((result == \"true\")) {\r\n  //       this.getJobTask();\r\n  //     }\r\n  //     console.log(\"The dialog was closed\");\r\n  //   });\r\n  // }\r\n  // delete(item) {\r\n  //   Swal.fire({\r\n  //     title: 'Are you sure?',\r\n  //     text: `Do you want to delete \"${item.title}\"?`,\r\n  //     icon: 'warning',\r\n  //     showCancelButton: true,\r\n  //     confirmButtonColor: '#00B96F',\r\n  //     cancelButtonColor: '#d33',\r\n  //     confirmButtonText: 'Yes, Delete!',\r\n  //   }).then((result) => {\r\n  //     if (result.value) {\r\n  //       this.logicalFormInfo\r\n  //         .deleteJobTask(item._id)\r\n  //         .subscribe((res) => {\r\n  //           Swal.fire({\r\n  //             title: 'Parameter Deleted successfully',\r\n  //             showConfirmButton: false,\r\n  //             timer: 1200,\r\n  //           }); console.log('deleted res', res);\r\n  //           this.getJobTask();\r\n\r\n  //         });\r\n  //     }\r\n  //   });\r\n  // }\r\n\r\n}\r\n","<!-- <section class=\"content\" [formGroup]=\"JobTaskDetail\">\r\n    <div class=\"container-fluid\">\r\n      <div class=\"text-center\">\r\n        <h1 > Job Task List</h1>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-12\">\r\n          <div class=\"card\">\r\n            <div class=\"card-body p-0 overflow-auto\">\r\n              <table class=\"table table-hover text-wrap\">\r\n                <thead>\r\n                  <tr>\r\n                    <th style=\"width: 1%\">Index</th>\r\n                    <th style=\"width: 20%\">Job Task List </th>\r\n                    <th style=\"width: 15%\">High Risk Construction </th>\r\n                    <th style=\"width: 15%\">PPE</th>\r\n                    <th style=\"width: 15%\">Licence Category</th>\r\n                    <th style=\"width: 15%\">Identify Hazards</th>\r\n                    <th style=\"width: 15%\">Risk</th>\r\n                    <th style=\"width: 15%\">Control Action Required</th>\r\n                    <th style=\"width: 15%\">Residule Risk</th>\r\n                    <th style=\"width: 15%\">Action</th>\r\n  \r\n                  </tr>\r\n                </thead>\r\n                <tbody >\r\n                  <tr *ngFor=\"let task of  jobTaskData; let i = index\">\r\n                    <td>{{i+1}}</td>\r\n                    <td>{{ task.title }}</td>\r\n                    <ng-container formArrayName=\"highRiskConstr\">\r\n                      <td [formGroupName]=\"i\">\r\n                        <mat-form-field appearance=\"fill\">\r\n                          <mat-label>HighRiskConstruction</mat-label>\r\n                          <mat-select formControlName=\"highRiskArr\" multiple >\r\n                            <mat-select-trigger>\r\n                              <span *ngIf=\"!highRiskFA().controls[i].get('highRiskArr').value?.length\" class=\"example-additional-selection\">\r\n                              </span>\r\n                              <span *ngIf=\"highRiskFA().controls[i].get('highRiskArr').value?.length == 1\" class=\"example-additional-selection\">\r\n                                One Item selected\r\n                              </span>\r\n                              <span *ngIf=\"highRiskFA().controls[i].get('highRiskArr').value?.length > 1\" class=\"example-additional-selection\">\r\n                                More than one selected\r\n                              </span>\r\n                            </mat-select-trigger>\r\n                            <mat-option *ngFor=\"let parameter of highRiskConstructionData\" [value]=\"parameter._id\">\r\n                              {{parameter.title}}</mat-option>\r\n                          </mat-select>\r\n                        </mat-form-field>\r\n                      </td>\r\n                    </ng-container >                \r\n                    <ng-container formArrayName=\"PPE\">\r\n                      <td [formGroupName]=\"i\">\r\n                        <mat-form-field appearance=\"fill\">\r\n                          <mat-label>PPE selection</mat-label>\r\n                          <mat-select formControlName=\"ppeArr\" multiple >\r\n                            <mat-select-trigger>\r\n                              <span *ngIf=\"!PPE_FA().controls[i].get('ppeArr').value?.length \" class=\"example-additional-selection\">\r\n                               \r\n                              </span>\r\n                              <span *ngIf=\"PPE_FA().controls[i].get('ppeArr').value?.length == 1\" class=\"example-additional-selection\">\r\n                               One Item selected\r\n                              </span>\r\n                              <span *ngIf=\"PPE_FA().controls[i].get('ppeArr').value?.length > 1\" class=\"example-additional-selection\">\r\n                                More than one selected\r\n                              </span>\r\n                            </mat-select-trigger>\r\n                            <mat-option *ngFor=\"let parameter of PPESelectionData\" [value]=\"parameter._id\">{{parameter.title}}\r\n                            </mat-option>\r\n                          </mat-select>\r\n                        </mat-form-field>\r\n                      </td>\r\n                    </ng-container>\r\n                    <ng-container formArrayName=\"LicenceCat\">\r\n                      <td [formGroupName]=\"i\">\r\n                        <mat-form-field appearance=\"fill\">\r\n                          <mat-label>Licence Categories</mat-label>\r\n                          <mat-select formControlName=\"licenceArr\" multiple >\r\n                            <mat-select-trigger>\r\n                              <span *ngIf=\"!licenceCatFA().controls[i].get('licenceArr').value?.length\" class=\"example-additional-selection\">\r\n                              </span>\r\n                              <span *ngIf=\"licenceCatFA().controls[i].get('licenceArr').value?.length == 1\" class=\"example-additional-selection\">\r\n                                One Item selected\r\n                              </span>\r\n                              <span *ngIf=\"licenceCatFA().controls[i].get('licenceArr').value?.length > 1\" class=\"example-additional-selection\">\r\n                                More than one selected\r\n                              </span>\r\n                            </mat-select-trigger>\r\n                            <mat-option *ngFor=\"let parameter of licenceCatAll\" [value]=\"parameter._id\">{{parameter.title}}\r\n                            </mat-option>\r\n                          </mat-select>\r\n                        </mat-form-field>\r\n                      </td>\r\n                    </ng-container>\r\n                    <ng-container formArrayName=\"identifyHazrds\">\r\n                      <td [formGroupName]=\"i\">\r\n                        <mat-form-field appearance=\"fill\">\r\n                          <mat-label>Identify Hazards</mat-label>\r\n                          <mat-select formControlName=\"hazardsArr\" multiple >\r\n                            <mat-select-trigger>\r\n                              <span *ngIf=\"!identifyHazrdsFA().controls[i].get('hazardsArr').value?.length\" class=\"example-additional-selection\">\r\n                              </span>\r\n                              <span *ngIf=\"identifyHazrdsFA().controls[i].get('hazardsArr').value?.length == 1\" class=\"example-additional-selection\">\r\n                                One Item selected\r\n                              </span>\r\n                              <span *ngIf=\"identifyHazrdsFA().controls[i].get('hazardsArr').value?.length > 1\" class=\"example-additional-selection\">\r\n                                More than one selected\r\n                              </span>\r\n                            </mat-select-trigger>\r\n                            <mat-option *ngFor=\"let parameter of allHazards\" ngValue=\"parameter\">{{parameter.title}}\r\n                            </mat-option>\r\n                          </mat-select>\r\n                        </mat-form-field>\r\n                      </td>\r\n                    </ng-container>\r\n                  <ng-container formArrayName=\"riskLevel\">\r\n                    <td [formGroupName]=\"i\">\r\n                      <mat-form-field appearance=\"fill\">\r\n                      <mat-label>Risk</mat-label>\r\n                      <mat-select formControlName=\"riskLevel\" >\r\n                        <mat-option value=\"L1\">L1</mat-option>\r\n                        <mat-option value=\"L2\">L2</mat-option>\r\n                        <mat-option value=\"L3\">L3</mat-option>\r\n                        <mat-option value=\"L4\">L4</mat-option>\r\n                        <mat-option value=\"L5\">L5</mat-option>                        \r\n                      </mat-select>\r\n                    </mat-form-field>\r\n                    </td>\r\n                  </ng-container>\r\n                   \r\n                    <ng-container formArrayName=\"contrActReq\">\r\n                      <td [formGroupName]=\"i\">\r\n                        <mat-form-field appearance=\"fill\">\r\n                          <mat-label>Control Actions Required</mat-label>\r\n                          <mat-select formControlName=\"contrActReqArr\" multiple >\r\n                            <mat-select-trigger>\r\n                              <span *ngIf=\"!contrActReqFA().controls[i].get('contrActReqArr').value?.length\" class=\"example-additional-selection\">\r\n                              </span>\r\n                              <span *ngIf=\"contrActReqFA().controls[i].get('contrActReqArr').value?.length == 1\" class=\"example-additional-selection\">\r\n                                One Item selected\r\n                              </span>\r\n                              <span *ngIf=\"contrActReqFA().controls[i].get('contrActReqArr').value?.length > 1\" class=\"example-additional-selection\">\r\n                                More than one selected\r\n                              </span>\r\n                            </mat-select-trigger>\r\n                            <mat-option *ngFor=\"let parameter of allContrlActReq\" [value]=\"parameter\">{{parameter.title}}\r\n                            </mat-option>\r\n                          </mat-select>\r\n                        </mat-form-field>\r\n                      </td>\r\n                    </ng-container>\r\n\r\n                    <ng-container formArrayName=\"residualRisk\">\r\n                      <td [formGroupName]=\"i\">\r\n                        <mat-form-field appearance=\"fill\">\r\n                        <mat-label>Residule Risk</mat-label>\r\n                        <mat-select formControlName=\"resiRiskLevel\" >\r\n                          <mat-option value=\"L1\">L1</mat-option>\r\n                          <mat-option value=\"L2\">L2</mat-option>\r\n                          <mat-option value=\"L3\">L3</mat-option>\r\n                          <mat-option value=\"L4\">L4</mat-option>\r\n                          <mat-option value=\"L5\">L5</mat-option>                        \r\n                        </mat-select>\r\n                      </mat-form-field>\r\n                      </td>\r\n                    </ng-container>\r\n                 \r\n                 \r\n                 <td *ngIf=\"!task.set\"><button class=\"btn btn-primary\" (click)=\"setRelation(task.title,task._id,i)\">Set</button></td>\r\n                    <td *ngIf=\"task.set\"><button class=\"btn btn-primary\" (click)=\"setRelation(task.title,task._id,i)\">Update</button></td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section> -->\r\n\r\n  <!-- stepper logic -->\r\n  \r\n<h2 class=\"ml-2\"> Set Relation</h2>\r\n<!-- <div class=\"col ml-2 mb-2\">\r\n  \r\n  <button  class=\"btn btn-outline-primary mt-1 mr-2 float-right\"  (click)=\"openDialog('')\" >\r\n    <i class=\"fas fa-folder-plus mr-2\"></i>Add Job Task \r\n  </button>\r\n</div> -->\r\n<div class=\"\">\r\n  <table mat-table [dataSource]=\"dataSource\" matSort>\r\n\r\n    <!-- Position Column -->\r\n    <ng-container matColumnDef=\"index\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> No. </th>\r\n      <td mat-cell *matCellDef=\"let element\">{{element.index}}</td>\r\n    </ng-container>\r\n\r\n    <!-- Name Column -->\r\n   \r\n<!-- Name Column -->\r\n<ng-container matColumnDef=\"title\">\r\n  <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\r\n  <td mat-cell *matCellDef=\"let element\"> <span class=\"flex-start\"><pre  style=\" font-family: Roboto, Helvetica Neue, sans-serif; font-size: 14px;\">{{element.title}} </pre>  </span> </td>\r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"edit\">\r\n  <th mat-header-cell *matHeaderCellDef> Set </th>\r\n  <td  mat-cell *matCellDef=\"let element\"(click)=\"setRelation_2(element._id)\"> <button *ngIf=\"!element.set\" class=\"myBtn\" mat-stroked-button color=\"primary\">Set</button> <button  *ngIf=\"element.set\"  class=\"myBtn\" mat-stroked-button color=\"primary\">Update</button>\r\n  </td>\r\n</ng-container>\r\n<!-- <ng-container matColumnDef=\"action\">\r\n  <th mat-header-cell *matHeaderCellDef> Action </th>\r\n  <td mat-cell *matCellDef=\"let element\">\r\n\r\n     <button mat-icon-button class=\"mr-2\" aria-label=\"Example icon button with a delete icon\">\r\n      <mat-icon (click)=\"openDialog(element)\">edit</mat-icon>\r\n    </button>\r\n    <button mat-icon-button aria-label=\"Example icon button with a delete icon\"(click)=\"delete(element)\">\r\n      <mat-icon >delete</mat-icon>\r\n    </button>\r\n  </td>\r\n</ng-container> -->\r\n<!-- <ng-container matColumnDef=\"delete\">\r\n  <th mat-header-cell *matHeaderCellDef> Delete </th>\r\n  <td mat-cell *matCellDef=\"let element\"(click)=\"delete(element)\"> <i class=\"fas fa-trash \"></i> \r\n  </td>\r\n</ng-container> -->\r\n\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n  </table>\r\n\r\n  <mat-paginator [pageSizeOptions]=\"[20]\"\r\n                 showFirstLastButtons \r\n                 aria-label=\"Select page of periodic elements\">\r\n  </mat-paginator>\r\n</div>\r\n","import { SetRelationComponent } from './set-logic/set-relation/set-relation.component';\r\nimport { JobNumberComponent } from './job-number/job-number.component';\r\nimport { SetLogicComponent } from './set-logic/set-logic.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ConfiLogiComponent } from './confi-logi.component';\r\nimport { TestLogicComponent } from './set-logic/test-logic/test-logic.component';\r\nimport { AddJobTaskComponent } from './set-logic/add-job-task/add-job-task.component';\r\nimport { HazardReportComponent } from '../forms/hazard-report/hazard-report.component';\r\nimport { HazardTreatmentComponent } from './hazard-treatment/hazard-treatment.component';\r\nimport { AddHazardRelationComponent } from './hazard-treatment/add-hazard-relation/add-hazard-relation.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: ConfiLogiComponent },\r\n  { path: 'setLogic', component: SetLogicComponent },\r\n  { path: 'setJobNumber', component: JobNumberComponent },\r\n  // { path: 'setRelation', component: TestLogicComponent },\r\n  { path: 'setRelation', component: SetRelationComponent },\r\n  {path:'addTask',component:AddJobTaskComponent},\r\n  {path:'setHazard',component:HazardTreatmentComponent},\r\n  {path:'setHazardRelation',component:AddHazardRelationComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ConfiLogiRoutingModule { }\r\n","import { Component, OnInit,Inject } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport Swal from 'sweetalert2';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\n@Component({\r\n  selector: 'app-add-item',\r\n  templateUrl: './add-item.component.html',\r\n  styleUrls: ['./add-item.component.scss']\r\n})\r\nexport class AddItemComponent implements OnInit {\r\n  addItem!: FormGroup;\r\n  dataRec: any;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    public dialogRef: MatDialogRef<AddItemComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.dataRec = data;\r\n  }\r\n  ngOnInit(): void {\r\n    console.log(this.dataRec);\r\n    \r\n    this.addItem = this.fb.group({\r\n      title: ['', Validators.required],\r\n    });\r\n  }\r\n  onFormSubmit() {\r\n     \r\n    let data={\r\n      title :this.addItem.get('title').value\r\n    }\r\n\r\n    switch (this.dataRec.type) {\r\n      case 'highRisk': {\r\n       this.addHighRisk(data);\r\n        break;\r\n      }\r\n      case 'ppe': {\r\n       this.addPPE(data);\r\n        break;\r\n      }\r\n      case 'licence': {\r\n       this.addLicence(data);\r\n        break;\r\n      }\r\n      case 'identifyHazards': {\r\n       this.addHazard(data);\r\n        break;\r\n      }\r\n      case 'codeOfPract': {\r\n       this.addCOP(data);\r\n        break;\r\n      }\r\n      case 'riskLevel': {\r\n       this.addRiskLevel(data);\r\n        break;\r\n      }\r\n      case 'ctrlActreq': {\r\n       this.addControlActReq(data);\r\n        break;\r\n      }\r\n      case 'resRiskLevel': {\r\n       this.addResidRiskLevel(data);\r\n        break;\r\n      }\r\n      case 'perResbl': {\r\n       this.addStaff(data);\r\n        break;\r\n      }\r\n    \r\n    \r\n    }\r\n\r\n  }\r\n  closeDialog(){\r\n    this.dialogRef.close('false');\r\n\r\n  }\r\n\r\n  addHighRisk(data){\r\n    this.logicalFormInfo\r\n    .addRisk(data)\r\n    .subscribe((resData) => {\r\n      console.log('resData', resData);\r\n\r\n      this.dialogRef.close('highRisk');\r\n      Swal.fire({\r\n        title: 'Item  Added successfully',\r\n        showConfirmButton: false,\r\n        timer: 1200,\r\n      });     \r\n     });\r\n  }\r\n  addPPE(data){\r\n    this.logicalFormInfo\r\n    .addPPE(data)\r\n    .subscribe((resData) => {\r\n      console.log('resData', resData);\r\n\r\n      this.dialogRef.close('ppe');\r\n      Swal.fire({\r\n        title: 'Item  Added successfully',\r\n        showConfirmButton: false,\r\n        timer: 1200,\r\n      });     \r\n     });\r\n  }\r\n  addRiskLevel(data){\r\n    this.logicalFormInfo\r\n    .addRiskLevel(data)\r\n    .subscribe((resData) => {\r\n      console.log('resData', resData);\r\n\r\n      this.dialogRef.close('riskLevel');\r\n      Swal.fire({\r\n        title: 'Item  Added successfully',\r\n        showConfirmButton: false,\r\n        timer: 1200,\r\n      });     \r\n     });\r\n  }\r\n  addResidRiskLevel(data){\r\n    this.logicalFormInfo\r\n    .addResidual(data)\r\n    .subscribe((resData) => {\r\n      console.log('resData', resData);\r\n\r\n      this.dialogRef.close('resRiskLevel');\r\n      Swal.fire({\r\n        title: 'Item  Added successfully',\r\n        showConfirmButton: false,\r\n        timer: 1200,\r\n      });     \r\n     });\r\n  }\r\n  addHazard(data){\r\n    this.logicalFormInfo\r\n    .addHazards(data)\r\n    .subscribe((resData) => {\r\n      console.log('resData', resData);\r\n\r\n      this.dialogRef.close('identifyHazards');\r\n      Swal.fire({\r\n        title: 'Item  Added successfully',\r\n        showConfirmButton: false,\r\n        timer: 1200,\r\n      });     \r\n     });\r\n  }\r\n  addLicence(data){\r\n let dataTemp={\r\n    title:data.title,\r\n    tradeCategoryId:this.dataRec.tradeCategoryId\r\n  }\r\n    this.logicalFormInfo\r\n    .addLicence(dataTemp)\r\n    .subscribe((resData) => {\r\n      console.log('resData', resData);\r\n\r\n      this.dialogRef.close('licence');\r\n      Swal.fire({\r\n        title: 'Item  Added successfully',\r\n        showConfirmButton: false,\r\n        timer: 1200,\r\n      });     \r\n     });\r\n  }\r\n  addControlActReq(data){\r\n    this.logicalFormInfo\r\n    .addContrlActReq(data)\r\n    .subscribe((resData) => {\r\n      console.log('resData', resData);\r\n\r\n      this.dialogRef.close('ctrlActreq');\r\n      Swal.fire({\r\n        title: 'Item  Added successfully',\r\n        showConfirmButton: false,\r\n        timer: 1200,\r\n      });     \r\n     });\r\n  }\r\n  addStaff(data){\r\n    this.logicalFormInfo\r\n    .addStaff(data)\r\n    .subscribe((resData) => {\r\n      console.log('resData', resData);\r\n\r\n      this.dialogRef.close('perResbl');\r\n      Swal.fire({\r\n        title: 'Item  Added successfully',\r\n        showConfirmButton: false,\r\n        timer: 1200,\r\n      });     \r\n     });\r\n  }\r\n  addCOP(data){\r\n    this.logicalFormInfo\r\n    .addCode(data)\r\n    .subscribe((resData) => {\r\n      console.log('resData', resData);\r\n\r\n      this.dialogRef.close('codeOfPract');\r\n      Swal.fire({\r\n        title: 'Item  Added successfully',\r\n        showConfirmButton: false,\r\n        timer: 1200,\r\n      });     \r\n     });\r\n  }\r\n}\r\n","<form [formGroup]=\"addItem\" >\r\n    <h2 *ngIf=\"dataRec.type==='highRisk'\"> Add High Risk Construction parameter</h2>\r\n    <h2 *ngIf=\"dataRec.type==='ppe'\"> Add PPE</h2>\r\n    <h2 *ngIf=\"dataRec.type==='licence'\"> Add Licence </h2>\r\n    <h2 *ngIf=\"dataRec.type==='identifyHazards'\"> Add Identify Hazards </h2>\r\n    <h2 *ngIf=\"dataRec.type==='riskLevel'\"> Add Risk Level</h2>\r\n    <h2 *ngIf=\"dataRec.type==='ctrlActreq'\"> Add Control Action Required</h2>\r\n    <h2 *ngIf=\"dataRec.type==='resRiskLevel'\"> Add Residual Risk</h2>\r\n    <h2 *ngIf=\"dataRec.type==='perResbl'\"> Add Person Responsible </h2>\r\n    <h2 *ngIf=\"dataRec.type==='codeOfPract'\"> Add Code of Practice </h2>\r\n  \r\n    <textarea   autosize \r\n    class=\"form-control sign\" placeholder=\"Enter your text......\" formControlName=\"title\" ></textarea>\r\n  \r\n    <br>\r\n    \r\n    <div class=\"row\">\r\n        <div class=\"col-sm-2 offset-8 \">\r\n            <button mat-raised-button (click)=\"closeDialog()\">Close</button>\r\n        </div>\r\n        <div class=\"col-sm-2  \">\r\n            <button mat-raised-button  [disabled]=\"!addItem.valid\"(click)=\"onFormSubmit()\">Add</button>\r\n        </div>\r\n    </div>\r\n</form>   \r\n\r\n","import Swal from 'sweetalert2';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { CreateJobNoComponent } from './create-job-no/create-job-no.component';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { AddSiteComponent } from 'src/app/site-info/add-site-info/add-site/add-site.component';\r\nimport { EditSiteComponent } from 'src/app/site-info/add-site-info/edit-site/edit-site.component';\r\nimport { SetTitleService } from 'src/app/utils/services/set-title.service';\r\nimport { MatSort } from '@angular/material/sort';\r\n\r\n@Component({\r\n  selector: 'app-job-number',\r\n  templateUrl: './job-number.component.html',\r\n  styleUrls: ['./job-number.component.scss'],\r\n})\r\nexport class JobNumberComponent implements OnInit {\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  mode: any;\r\n  jobTaskData: any = [];\r\n  ELEMENT_DATA = [];\r\n  /////////////mat table////////////////\r\n  displayedColumns: string[] = [\r\n    'jobNumber',\r\n    'siteName',\r\n    'streetNumber',\r\n    'streetAddress',\r\n    'suburb',\r\n    'state',\r\n    'customerName',\r\n    'customerContact',\r\n    //'customerContactPhone',\r\n   // 'customerEmail',\r\n    /* 'edit', */\r\n    'action',\r\n  ];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n  /////////////mat table end////////////////\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private setTitle: SetTitleService,\r\n    private logicalFormInfoService: LogicalFormInfoService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.setTitle.setTitle('WHS-Add Site Info');\r\n    this.getAllJobNumber();\r\n  }\r\n  getAllJobNumber() {\r\n    this.logicalFormInfoService.getAllJobNumber().subscribe((res: any) => {\r\n      console.log(res);\r\n      this.dataSource = res.data;\r\n      console.log(\"getAllJobNumber\",this.dataSource);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    });\r\n  }\r\n\r\n  getAllJobTask() {\r\n    // this.logicalFormInfo.getAllJobtask().subscribe((res: any) => {\r\n    //   console.log('jobTaskDetails=>', res);\r\n    //   // this.jobTaskData = res.data[0].subComponents;\r\n    //   let data = res.data\r\n    //   data.forEach((element, index) => {\r\n    //     element.index = index + 1; //adding index\r\n    //   });\r\n    //   this.ELEMENT_DATA = data;\r\n    //   this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n    //   this.dataSource.paginator = this.paginator;\r\n    //   //  this.task = res.data.subComponents;\r\n    // });\r\n  }\r\n\r\n  openDialog(id) {\r\n    let dialogRef = this.dialog.open(CreateJobNoComponent, {\r\n      height: '80%',\r\n      data: {\r\n        action: 'new',\r\n        userId: id,\r\n      },\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      console.log('CustomerInfoComponent -> openDialog -> result', result);\r\n     console.log(\"result\",result);\r\n     if(result ===\"success\"){\r\n      this.getAllJobNumber();\r\n      Swal.fire({\r\n        title: 'Job Number created successfully',\r\n        showConfirmButton: false,\r\n        timer: 1200,\r\n      });\r\n     }\r\n      console.log('The dialog was closed');\r\n    });\r\n  }\r\n  edit(element) {\r\n    const dialogRef = this.dialog.open(EditSiteComponent, {\r\n      width: '550px',\r\n      data: element,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result == 'true') {\r\n        this.getAllJobTask();\r\n      }\r\n      console.log('The dialog was closed');\r\n    });\r\n  }\r\n  delete(item) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: `Do you want to delete \"${item.jobNumber}\"?`,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#00B96F',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Delete!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.logicalFormInfoService\r\n          .deleteJobNumber(item._id)\r\n          .subscribe((res) => {\r\n            Swal.fire({\r\n              title: 'Job Number Deleted successfully',\r\n              showConfirmButton: false,\r\n              timer: 1200,\r\n            });\r\n            console.log('deleted res', res);\r\n            this.getAllJobNumber();\r\n          });\r\n      }\r\n    });\r\n  }\r\n}\r\n","\r\n\r\n<h2>\r\n  Job Number List\r\n  <button (click)=\"openDialog('abcd')\" _ngcontent-hqi-c400=\"\" type=\"button\" class=\"btn btn-outline-primary mt-1 mr-2 float-right\"><i _ngcontent-hqi-c400=\"\" class=\"fas fa-plus\"></i> Create </button>\r\n\r\n</h2>\r\n<!-- <div class=\"col ml-2 mb-2\">\r\n  \r\n  <div class=\"col-sm-9\" style=\"display: flex; justify-content: flex-end\">\r\n    <button _ngcontent-tdm-c400=\"\" (click)=\"openDialog('id')\" type=\"button\" class=\"btn btn-outline-primary mt-1 mr-2 float-right\"><i _ngcontent-tdm-c400=\"\" class=\"fas fa-plus\"></i> Add Job Number </button>\r\n</div>\r\n</div> -->\r\n<div class=\"\">\r\n  <table mat-table [dataSource]=\"dataSource\" matSort>\r\n\r\n    <!-- Position Column -->\r\n    <ng-container matColumnDef=\"index\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> No. </th>\r\n      <td mat-cell *matCellDef=\"let element;let i = index\">{{i+1}}</td>\r\n    </ng-container>\r\n\r\n    <!-- Name Column -->\r\n   \r\n<!-- Name Column -->\r\n<ng-container matColumnDef=\"jobNumber\">\r\n  <th mat-header-cell *matHeaderCellDef > Job Number </th>\r\n  <td mat-cell *matCellDef=\"let element\"> {{element.jobNumber}} </td>\r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"siteName\">\r\n  <th mat-header-cell *matHeaderCellDef > Site Name </th>\r\n  <td mat-cell *matCellDef=\"let element\"> <span class=\"flex-start\">{{element.siteName}} </span></td>\r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"streetNumber\">\r\n  <th mat-header-cell *matHeaderCellDef > Street Number </th>\r\n  <td mat-cell *matCellDef=\"let element\"> {{element.streetNumber}} </td>\r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"streetAddress\">\r\n  <th mat-header-cell *matHeaderCellDef> Street Address </th>\r\n  <td mat-cell *matCellDef=\"let element\"><span class=\"flex-start\">{{element.streetAddress}}</span>  </td>\r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"suburb\">\r\n  <th mat-header-cell *matHeaderCellDef > Suburb </th>\r\n  <td mat-cell *matCellDef=\"let element\"> {{element.suburb}} </td>\r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"state\">\r\n  <th mat-header-cell *matHeaderCellDef> State </th>\r\n  <td mat-cell *matCellDef=\"let element\" > {{element.stateId?.title}} </td>\r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"customerName\">\r\n  <th mat-header-cell *matHeaderCellDef> Customer Name </th>\r\n  <td mat-cell *matCellDef=\"let element\"><span class=\"flex-start\"> {{element.customerName}}</span> </td>\r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"customerContact\">\r\n  <th mat-header-cell *matHeaderCellDef> Customer Contact </th>\r\n  <td mat-cell *matCellDef=\"let element\"><span class=\"flex-start\">{{element.customerContact}}</span>  </td>\r\n</ng-container>\r\n\r\n<!-- <ng-container matColumnDef=\"customerContactPhone\">\r\n  <th mat-header-cell *matHeaderCellDef> Customer Contact Phone </th>\r\n  <td mat-cell *matCellDef=\"let element\"> {{element.customerContactPhone}} </td>\r\n</ng-container> -->\r\n\r\n<!-- <ng-container matColumnDef=\"customerEmail\">\r\n  <th mat-header-cell *matHeaderCellDef> Customer Email </th>\r\n  <td mat-cell *matCellDef=\"let element\"> {{element.customerEmail}} </td>\r\n</ng-container> -->\r\n\r\n\r\n\r\n<ng-container matColumnDef=\"edit\">\r\n  <th mat-header-cell *matHeaderCellDef> Edit </th>\r\n  <td mat-cell *matCellDef=\"let element\"(click)=\"edit(element)\"> <i class=\"fas fa-pencil-alt \"></i> \r\n  </td>\r\n</ng-container>\r\n<ng-container matColumnDef=\"action\">\r\n  <th mat-header-cell *matHeaderCellDef> Action </th>\r\n  <td mat-cell *matCellDef=\"let element\"> \r\n    <!-- <i class=\"fas fa-trash \"></i> \r\n    <button mat-icon-button class=\"mr-2\" color=\"primary\" aria-label=\"Example icon button with a delete icon\">\r\n      <mat-icon (click)=\"edit(element)\">edit</mat-icon>\r\n    </button> -->\r\n    <button mat-icon-button aria-label=\"Example icon button with a delete icon\" (click)=\"delete(element)\">\r\n      <mat-icon >delete</mat-icon>\r\n    </button>\r\n  </td>\r\n</ng-container>\r\n\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n  </table>\r\n\r\n  <mat-paginator [pageSizeOptions]=\"[20]\"\r\n                 showFirstLastButtons \r\n                 aria-label=\"Select page of periodic elements\">\r\n  </mat-paginator>\r\n</div>\r\n"]}