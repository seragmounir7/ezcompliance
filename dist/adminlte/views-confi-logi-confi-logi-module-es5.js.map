{"version":3,"sources":["webpack:///src/app/views/confi-logi/confi-logi.module.ts","webpack:///src/app/views/confi-logi/set-logic/set-relation/set-relation.component.ts","webpack:///src/app/views/confi-logi/set-logic/set-relation/set-relation.component.html","webpack:///src/app/views/confi-logi/set-logic/test-logic/test-logic.component.ts","webpack:///src/app/views/confi-logi/set-logic/test-logic/test-logic.component.html","webpack:///src/app/views/confi-logi/confi-logi.component.ts","webpack:///src/app/views/confi-logi/confi-logi.component.html","webpack:///src/app/views/confi-logi/job-number/create-job-no/create-job-no.component.ts","webpack:///src/app/views/confi-logi/job-number/create-job-no/create-job-no.component.html","webpack:///src/app/views/confi-logi/set-logic/set-logic.component.ts","webpack:///src/app/views/confi-logi/set-logic/set-logic.component.html","webpack:///src/app/views/confi-logi/confi-logi-routing.module.ts","webpack:///src/app/views/confi-logi/set-logic/set-relation/add-item/add-item.component.ts","webpack:///src/app/views/confi-logi/set-logic/set-relation/add-item/add-item.component.html","webpack:///src/app/views/confi-logi/job-number/job-number.component.ts","webpack:///src/app/views/confi-logi/job-number/job-number.component.html"],"names":["ConfiLogiModule","declarations","imports","SetRelationComponent","route","dialog","router","fb","logicalFormInfo","jobTask","highRiskConstructionData","PPESelectionData","licenseAndQual","allHazards","allContrlActReq","licenceByTradecat","resiRiskLevelData","riskLevelData","staff","allCodeOfPract","isLinear","jobTaskId","JobTaskDetail","group","highRiskConstr","PPE","codeOfPract","LicenceCat","identifyHazrds","contrActReq","riskLevel","residualRiskL","personResp","chemical","queryParams","subscribe","id","console","log","getJobtaskById","res","data","getLicenceByTradeCat","tradeCategoryId","set","patchValue","risk","licence","identifyHazard","controlActionRequired","residualRisk","staffId","get","setValue","getAllHighRisk","getAllPPE","getAllHazard","getAllContrActReq","getAllStaff","getAllResidualRiskLevel","getAllRiskLevel","getAllCodeOfPractice","getAllResidual","getAllRisk","getAllCOP","getAllHazards","getAllContrlActReq","licenceData","value","allContrlActReqTitle","temp1","forEach","element1","element2","_id","push","title","allHazardsTitle","temp2","allCOPTitle","temp3","updateJobTask","fire","showConfirmButton","timer","navigate","type","temp","dialogRef","open","width","afterClosed","result","addItem","selector","templateUrl","styleUrls","TestLogicComponent","count","stepperList","name","i","tag","arr","item","length","map","x","index","prev","next","ConfiLogiComponent","CreateJobNoComponent","logicalFormInfoService","allSites","allCustomers","addJobNumberForm","valueChanges","JSON","parse","streetNumber","streetAddress","suburb","state","customerContact","customerContactPhone","customerEmail","siteName","disabled","customerName","getAllSite","getAllCustomer","controls","arrObj","f","addJobNumber","close","onSubmit","SetLogicComponent","setTitle","jobTaskData","highRiskData","licenseAndQualificationData","licenceCatAll","task","residuleRiskL","PPEselection","label","licenseAndQualification","highRiskConstruction2","PPEselection2","ELEMENT_DATA","displayedColumns","dataSource","paginator","array","getJobTask","highRiskFA","highRiskFG","PPE_FA","PPE_FG","licenceCatFA","licenceCatFG","contrActReqFA","contrActReqFG","identifyHazrdsFA","identifyHazrdsFG","riskLevelFA","riskLevelFG","residlRiskLevelFA","residlRiskLevelFG","addCOP","newActionCOP","highRiskArr","ppeArr","licenceArr","hazardsArr","contrActReqArr","resiRiskLevel","copArr","getAllJobtask","element","getAllLicence","getAllLicenceCat","ppe","catArr","licenceCategoryId","Risk","routes","path","component","ConfiLogiRoutingModule","forChild","exports","AddItemComponent","dataRec","required","addHighRisk","addPPE","addLicence","addHazard","addRiskLevel","addControlActReq","addResidRiskLevel","addStaff","addRisk","resData","addResidual","addHazards","dataTemp","addContrlActReq","addCode","closeDialog","onFormSubmit","JobNumberComponent","getAllJobNumber","height","action","userId","getAllJobTask","text","jobNumber","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","deleteJobNumber","openDialog"],"mappings":"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","file":"views-confi-logi-confi-logi-module-es5.js","sourcesContent":["import { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { ConfiLogiRoutingModule } from './confi-logi-routing.module';\r\nimport { ConfiLogiComponent } from './confi-logi.component';\r\nimport { SetLogicComponent } from './set-logic/set-logic.component';\r\nimport { JobNumberComponent } from './job-number/job-number.component';\r\nimport { CreateJobNoComponent } from './job-number/create-job-no/create-job-no.component';\r\nimport { SetRelationComponent } from './set-logic/set-relation/set-relation.component';\r\n\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport { AddItemComponent } from './set-logic/set-relation/add-item/add-item.component';\r\nimport { TestLogicComponent } from './set-logic/test-logic/test-logic.component';\r\n\r\n@NgModule({\r\n  declarations: [ConfiLogiComponent, SetLogicComponent, JobNumberComponent, CreateJobNoComponent, SetRelationComponent, AddItemComponent, TestLogicComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ConfiLogiRoutingModule,SharedModule,FormsModule,\r\n    ReactiveFormsModule,MatStepperModule,\r\n    MatIconModule,\r\n    MatButtonModule\r\n  ]\r\n})\r\nexport class ConfiLogiModule { }\r\n","import { AddItemComponent } from './add-item/add-item.component';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport Swal from 'sweetalert2';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-set-relation',\r\n  templateUrl: './set-relation.component.html',\r\n  styleUrls: ['./set-relation.component.scss'],\r\n})\r\nexport class SetRelationComponent implements OnInit {\r\n  JobTaskDetail!: FormGroup;\r\n  jobTask = null;\r\n  highRiskConstructionData = [];\r\n  PPESelectionData = [];\r\n  licenseAndQual = [];\r\n  allHazards = [];\r\n  allContrlActReq = [];\r\n  licenceByTradecat = [];\r\n  resiRiskLevelData = [];\r\n  riskLevelData = [];\r\n  staff = [];\r\n  allCodeOfPract = [];\r\n  isLinear = false;\r\n  jobTaskId = null;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private dialog: MatDialog,\r\n    private router: Router,\r\n    private fb: FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.JobTaskDetail = this.fb.group({\r\n      highRiskConstr: [''],\r\n      PPE: [''],\r\n      codeOfPract: [''],\r\n      LicenceCat: [''],\r\n      identifyHazrds: [''],\r\n      contrActReq: [''],\r\n      riskLevel: [''],\r\n      residualRiskL: [''],\r\n      personResp: [''],\r\n      chemical: [],\r\n    });\r\n\r\n    this.route.queryParams.subscribe((id) => {\r\n      console.log(id);\r\n      this.jobTaskId = id.id;\r\n      this.logicalFormInfo.getJobtaskById(id.id).subscribe((res: any) => {\r\n        this.jobTask = res.data;\r\n        console.log(\r\n          'this.jobTask ',\r\n          this.jobTask \r\n        );\r\n        this.getLicenceByTradeCat(this.jobTask.tradeCategoryId);\r\n\r\n        if (this.jobTask.set == true) {\r\n          this.JobTaskDetail.patchValue({\r\n            highRiskConstr: this.jobTask.risk,\r\n            PPE: this.jobTask.PPE,\r\n            codeOfPract: this.jobTask.PPE,\r\n           LicenceCat: this.jobTask.licence,\r\n            identifyHazrds: this.jobTask.identifyHazard,\r\n            contrActReq: this.jobTask.controlActionRequired,\r\n            riskLevel: this.jobTask.riskLevel,\r\n            residualRiskL: this.jobTask.residualRisk,\r\n            personResp: this.jobTask.staffId,\r\n            chemical: this.jobTask.chemical,\r\n          });\r\n        }\r\n        if (this.jobTask?.chemical === 'YES')\r\n          this.JobTaskDetail.get('chemical').setValue('YES');\r\n        else this.JobTaskDetail.get('chemical').setValue('NO');\r\n      });\r\n    });\r\n\r\n    this.getAllHighRisk();\r\n    this.getAllPPE();\r\n    this.getAllHazard();\r\n    this.getAllContrActReq();\r\n    this.getAllStaff();\r\n    this.getAllResidualRiskLevel();\r\n    this.getAllRiskLevel();\r\n    this.getAllCodeOfPractice();\r\n  }\r\n\r\n  getAllResidualRiskLevel() {\r\n    this.logicalFormInfo.getAllResidual().subscribe((res: any) => {\r\n      console.log('this.resiRiskLevelData', res.data);\r\n      this.resiRiskLevelData = res.data;\r\n    });\r\n  }\r\n  getAllRiskLevel() {\r\n    this.logicalFormInfo.getAllRiskLevel().subscribe((res: any) => {\r\n      console.log('this.riskLevelData', res.data);\r\n      this.riskLevelData = res.data;\r\n    });\r\n  }\r\n  getAllStaff() {\r\n    this.logicalFormInfo.getAllStaff().subscribe((res: any) => {\r\n      console.log(res);\r\n      this.staff = res.data;\r\n    });\r\n  }\r\n  getAllHighRisk() {\r\n    this.logicalFormInfo.getAllRisk().subscribe((res: any) => {\r\n      console.log('Risk=>', res);\r\n      this.highRiskConstructionData = res.data;\r\n    });\r\n  }\r\n  getAllPPE() {\r\n    this.logicalFormInfo.getAllPPE().subscribe((res: any) => {\r\n      console.log('PPE=>', res);\r\n      this.PPESelectionData = res.data;\r\n    });\r\n  }\r\n  getAllCodeOfPractice() {\r\n   \r\n    this.logicalFormInfo.getAllCOP().subscribe((res:any) => {\r\n      console.log('codeOfPractice=>', res);\r\n   this.allCodeOfPract=res.data;\r\n    });\r\n \r\n  }\r\n\r\n  getAllHazard() {\r\n    this.logicalFormInfo.getAllHazards().subscribe((res: any) => {\r\n      console.log('getAllHazards=>', res);\r\n      this.allHazards = res.data;\r\n    });\r\n  }\r\n  getAllContrActReq() {\r\n    this.logicalFormInfo.getAllContrlActReq().subscribe((res: any) => {\r\n      console.log('getAllHazards=>', res);\r\n      this.allContrlActReq = res.data;\r\n    });\r\n  }\r\n  getLicenceByTradeCat(id) {\r\n    console.log('getLicenceByTradeCat', id);\r\n\r\n    this.logicalFormInfo.getLicenceByTradeCat(id).subscribe((res) => {\r\n      console.log('getAllLicenceCat=>', res);\r\n      this.licenceByTradecat = res.data.licenceData;\r\n    });\r\n  }\r\n  setRelation() {\r\n    console.log(this.JobTaskDetail.value);\r\n    let allContrlActReqTitle=[];\r\n    let temp1=this.JobTaskDetail.get('contrActReq').value;\r\n    this.allContrlActReq.forEach(element1 => {\r\n      temp1.forEach(element2 => {\r\n        if(element1._id===element2){\r\n          allContrlActReqTitle.push(element1.title)\r\n        }\r\n      });\r\n    });\r\n    let allHazardsTitle=[];\r\n    let temp2=this.JobTaskDetail.get('identifyHazrds').value;\r\n    this.allHazards.forEach(element1 => {\r\n      temp2.forEach(element2 => {\r\n        if(element1._id===element2){\r\n          allHazardsTitle.push(element1.title)\r\n        }\r\n      });\r\n    });\r\n    let allCOPTitle=[];\r\n    let temp3=this.JobTaskDetail.get('codeOfPract').value;\r\n    this.allCodeOfPract.forEach(element1 => {\r\n      temp3.forEach(element2 => {\r\n        if(element1._id===element2){\r\n          allCOPTitle.push(element1.title)\r\n        }\r\n      });\r\n    });\r\n    let data = {\r\n      title: this.jobTask.title,\r\n      risk: this.JobTaskDetail.get('highRiskConstr').value,\r\n      PPE: this.JobTaskDetail.get('PPE').value,\r\n      tradeCategoryId:this.jobTask.tradeCategoryId,\r\n      licence: this.JobTaskDetail.get('LicenceCat').value,\r\n      identifyHazard: this.JobTaskDetail.get('identifyHazrds').value,\r\n      controlActionRequired: this.JobTaskDetail.get('contrActReq').value,\r\n      riskLevel: this.JobTaskDetail.get('riskLevel').value,\r\n      residualRisk: this.JobTaskDetail.get('residualRiskL').value,\r\n      staffId: this.JobTaskDetail.get('personResp').value,\r\n      chemical: this.JobTaskDetail.get('chemical').value,\r\n      set: true,\r\n    };\r\n\r\n    console.log('send data', data);\r\n\r\n    this.logicalFormInfo\r\n      .updateJobTask(data, this.jobTaskId)\r\n      .subscribe((res) => {\r\n        console.log('resJob Task=>', res);\r\n\r\n        Swal.fire({\r\n          title: 'Relation set successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });\r\n        this.router.navigate(['/admin/confiLogi/setLogic']);\r\n      });\r\n  }\r\n  addItem(type) {\r\n    let temp = {\r\n      type: type,\r\n      tradeCategoryId: this.jobTask.tradeCategoryId,\r\n    };\r\n    if (type === 'licence') {\r\n      temp = {\r\n        type: type,\r\n        tradeCategoryId: this.jobTask.tradeCategoryId,\r\n      };\r\n    } else {\r\n      temp = {\r\n        type: type,\r\n        tradeCategoryId: '',\r\n      };\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(AddItemComponent, {\r\n      width: '550px',\r\n      // height:'50%',\r\n      data: temp,\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      switch (result) {\r\n        case 'highRisk': {\r\n          let data = this.JobTaskDetail.get('highRiskConstr').value;\r\n          this.getAllHighRisk();\r\n          this.JobTaskDetail.get('highRiskConstr').patchValue(data);\r\n          break;\r\n        }\r\n        case 'ppe': {\r\n          let data = this.JobTaskDetail.get('PPE').value;\r\n          this.getAllPPE();\r\n          this.JobTaskDetail.get('PPE').patchValue(data);\r\n          break;\r\n        }\r\n        case 'codeOfPract': {\r\n          let data = this.JobTaskDetail.get('codeOfPract').value;\r\n          this.getAllCodeOfPractice();\r\n          this.JobTaskDetail.get('codeOfPract').patchValue(data);\r\n          break;\r\n        }\r\n        case 'licence': {\r\n          let data = this.JobTaskDetail.get('LicenceCat').value;\r\n          this.getLicenceByTradeCat(this.jobTask.tradeCategoryId);\r\n          this.JobTaskDetail.get('LicenceCat').patchValue(data);\r\n          break;\r\n        }\r\n        case 'identifyHazards': {\r\n          let data = this.JobTaskDetail.get('identifyHazrds').value;\r\n          this.getAllHazard();\r\n          this.JobTaskDetail.get('identifyHazrds').patchValue(data);\r\n          break;\r\n        }\r\n        case 'riskLevel': {\r\n          let data = this.JobTaskDetail.get('riskLevel').value;\r\n          this.getAllRiskLevel();\r\n          this.JobTaskDetail.get('riskLevel').patchValue(data);\r\n          break;\r\n        }\r\n        case 'ctrlActreq': {\r\n          let data = this.JobTaskDetail.get('contrActReq').value;\r\n          this.getAllContrActReq();\r\n          this.JobTaskDetail.get('contrActReq').patchValue(data);\r\n          break;\r\n        }\r\n        case 'resRiskLevel': {\r\n          let data = this.JobTaskDetail.get('residualRiskL').value;\r\n          this.getAllResidualRiskLevel();\r\n          this.JobTaskDetail.get('residualRiskL').patchValue(data);\r\n          break;\r\n        }\r\n        case 'perResbl': {\r\n          let data = this.JobTaskDetail.get('personResp').value;\r\n          this.getAllStaff();\r\n          this.JobTaskDetail.get('personResp').patchValue(data);\r\n          break;\r\n        }\r\n      }\r\n      console.log('The dialog was closed');\r\n    });\r\n  }\r\n  // addItem(type) {\r\n  //   switch (type) {\r\n  //     case 'highRisk': {\r\n  //       this.openDialogBox(type);\r\n  //       break;\r\n  //     }\r\n  //     case 'ppe': {\r\n  //       this.openDialogBox(type);\r\n  //       break;\r\n  //     }\r\n  //     case 'licence': {\r\n  //       this.openDialogBox(type);\r\n  //       break;\r\n  //     }\r\n  //     case 'identifyHazards': {\r\n  //       this.openDialogBox(type);\r\n  //       break;\r\n  //     }\r\n  //     case 'riskLevel': {\r\n  //       this.openDialogBox(type);\r\n  //       break;\r\n  //     }\r\n  //     case 'ctrlActreq': {\r\n  //       this.openDialogBox(type);\r\n  //       break;\r\n  //     }\r\n  //     case 'resRiskLevel': {\r\n  //       this.openDialogBox(type);\r\n  //       break;\r\n  //     }\r\n  //     case 'perResbl': {\r\n  //       this.openDialogBox(type);\r\n  //       break;\r\n  //     }\r\n\r\n  //   }\r\n  // }\r\n}\r\n","<div class=\"btn btn-outline-primary\" [routerLink]=\"['/admin/confiLogi/setLogic']\">\r\n  <i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\r\n</div>\r\n<div class=\"ml-2\">\r\n  <h2>Job Task :&nbsp;{{ jobTask?.title }}</h2>\r\n</div>\r\n<mat-horizontal-stepper [formGroup]=\"JobTaskDetail\" style=\"height: 500px;\">\r\n  \r\n  <mat-step >\r\n    <ng-template matStepLabel>HighRisk Construction</ng-template>\r\n    <h2 class=\"text-center mt-3\">HighRisk Construction<span class=\"material-icons ml-3\"(click)=\"addItem('highRisk')\" >add_circle_outline</span></h2> \r\n    <div class=\"row justify-content-center\">\r\n        <div class=\"col-1 my-auto\"> \r\n            <!-- <button class=\"btn\" matStepperPrevious><i class=\"fas fa-arrow-left\"></i></button> -->\r\n        </div>\r\n        <div class=\"col-7\">\r\n            <mat-form-field class=\"container\" appearance=\"fill\">\r\n                <mat-label class=\"text-center \">HighRiskConstruction</mat-label>\r\n                <mat-select formControlName=\"highRiskConstr\" multiple >\r\n                  <mat-select-trigger>\r\n                    <span\r\n                      *ngIf=\"!JobTaskDetail.get('highRiskConstr').value?.length\"\r\n                      class=\"example-additional-selection\"\r\n                    >\r\n                    </span>\r\n                    <span\r\n                      *ngIf=\"JobTaskDetail.get('highRiskConstr').value?.length == 1\"\r\n                      class=\"example-additional-selection\"\r\n                    >\r\n                      One Item selected\r\n                    </span>\r\n                    <span\r\n                      *ngIf=\"JobTaskDetail.get('highRiskConstr').value?.length > 1\"\r\n                      class=\"example-additional-selection\"\r\n                    >\r\n                      More than one selected\r\n                    </span>\r\n                  </mat-select-trigger>\r\n                  <mat-option\r\n                    *ngFor=\"let parameter of highRiskConstructionData\"\r\n                    [value]=\"parameter._id\"\r\n                  >\r\n                    {{ parameter.title }}</mat-option\r\n                  >\r\n                </mat-select>\r\n              </mat-form-field>\r\n        </div>\r\n        <div class=\"col-1 my-auto\">\r\n            <button class=\"btn\" matStepperNext><i class=\"fas fa-arrow-right\"></i></button>\r\n        </div>\r\n    </div>\r\n \r\n\r\n  </mat-step>\r\n  <mat-step >\r\n    <ng-template matStepLabel>PPE</ng-template>\r\n    <h2 class=\"text-center mt-3\">PPE<span class=\"material-icons ml-3\"(click)=\"addItem('ppe')\" >add_circle_outline</span></h2>\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-1 my-auto\"><button class=\"btn\" matStepperPrevious><i class=\"fas fa-arrow-left\"></i></button></div>\r\n      <div class=\"col-7\">\r\n        <mat-form-field class=\"container\" appearance=\"fill\">\r\n          <mat-label>PPE selection</mat-label>\r\n          <mat-select formControlName=\"PPE\" multiple>\r\n            <mat-select-trigger>\r\n              <span\r\n                *ngIf=\"!JobTaskDetail.get('PPE').value?.length\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n              </span>\r\n              <span\r\n                *ngIf=\"JobTaskDetail.get('PPE').value?.length == 1\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n                One Item selected\r\n              </span>\r\n              <span\r\n                *ngIf=\"JobTaskDetail.get('PPE').value?.length > 1\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n                More than one selected\r\n              </span>\r\n            </mat-select-trigger>\r\n            <mat-option\r\n              *ngFor=\"let parameter of PPESelectionData\"\r\n              [value]=\"parameter._id\"\r\n              >{{ parameter.title }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n      <div class=\"col-1 my-auto\"><button class=\"btn\" matStepperNext><i class=\"fas fa-arrow-right\"></i></button></div>\r\n    </div>\r\n   \r\n  </mat-step>\r\n  <mat-step >\r\n<<<<<<< HEAD\r\n    <ng-template matStepLabel>Licence </ng-template>\r\n    <h2 class=\"text-center mt-3\">Licences <span class=\"material-icons ml-3\"(click)=\"addItem('licence')\" >add_circle_outline</span> </h2>\r\n=======\r\n    <ng-template matStepLabel>Licence Category</ng-template>\r\n    <h2 class=\"text-center mt-3\">Licence <span class=\"material-icons ml-3\"(click)=\"addItem('licence')\" >add_circle_outline</span> </h2>\r\n>>>>>>> 251c0a9b0f57bd4e73303b18d5b531815caa435a\r\n    <div class=\"row justify-content-center\">\r\n        <div class=\"col-1 my-auto\"> \r\n            <button class=\"btn\" matStepperPrevious><i class=\"fas fa-arrow-left\"></i></button>\r\n        </div>\r\n        <div class=\"col-7\">\r\n            <mat-form-field class=\"container\" appearance=\"fill\">\r\n<<<<<<< HEAD\r\n                <mat-label>Licences</mat-label>                \r\n=======\r\n                <mat-label>Licences</mat-label>\r\n                \r\n>>>>>>> 251c0a9b0f57bd4e73303b18d5b531815caa435a\r\n                <mat-select formControlName=\"LicenceCat\" multiple>\r\n                  <mat-select-trigger>\r\n                    <span\r\n                      *ngIf=\"!JobTaskDetail.get('LicenceCat').value?.length\"\r\n                      class=\"example-additional-selection\"\r\n                    >\r\n                    </span>\r\n                    <span\r\n                      *ngIf=\"JobTaskDetail.get('LicenceCat').value?.length == 1\"\r\n                      class=\"example-additional-selection\"\r\n                    >\r\n                      One Item selected\r\n                    </span>\r\n                    <span\r\n                      *ngIf=\"JobTaskDetail.get('LicenceCat').value?.length > 1\"\r\n                      class=\"example-additional-selection\"\r\n                    >\r\n                      More than one selected\r\n                    </span>\r\n                  </mat-select-trigger>\r\n                  <mat-option\r\n                    *ngFor=\"let parameter of licenceByTradecat\"\r\n                    [value]=\"parameter._id\"\r\n                    >{{ parameter.title }}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n        </div>\r\n        <div class=\"col-1 my-auto\">\r\n            <button class=\"btn\" matStepperNext><i class=\"fas fa-arrow-right\"></i></button>\r\n        </div>\r\n    </div>\r\n   \r\n  \r\n  </mat-step>\r\n\r\n  <mat-step >\r\n    <ng-template matStepLabel>Identify Hazards</ng-template>\r\n    <h2 class=\"text-center mt-3\">Identify Hazards<span class=\"material-icons ml-3\"(click)=\"addItem('identifyHazards')\" >add_circle_outline</span></h2>\r\n    <div class=\"row justify-content-center\">\r\n        <div class=\"col-1 my-auto\"> \r\n            <button class=\"btn\" matStepperPrevious><i class=\"fas fa-arrow-left\"></i></button>\r\n        </div>\r\n        <div class=\"col-7\">\r\n            <mat-form-field class=\"container\" appearance=\"fill\">\r\n                <mat-label>Identify Hazards</mat-label>\r\n                <mat-select formControlName=\"identifyHazrds\" multiple>\r\n                  <mat-select-trigger>\r\n                    <span\r\n                      *ngIf=\"!JobTaskDetail.get('identifyHazrds').value?.length\"\r\n                      class=\"example-additional-selection\"\r\n                    >\r\n                    </span>\r\n                    <span\r\n                      *ngIf=\"JobTaskDetail.get('identifyHazrds').value?.length == 1\"\r\n                      class=\"example-additional-selection\"\r\n                    >\r\n                      One Item selected\r\n                    </span>\r\n                    <span\r\n                      *ngIf=\"JobTaskDetail.get('identifyHazrds').value?.length > 1\"\r\n                      class=\"example-additional-selection\"\r\n                    >\r\n                      More than one selected\r\n                    </span>\r\n                  </mat-select-trigger>\r\n                  <mat-option *ngFor=\"let parameter of allHazards\" [value]=\"parameter._id\"\r\n                    >{{ parameter.title }}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n        </div>\r\n        <div class=\"col-1 my-auto\">\r\n            <button class=\"btn\" matStepperNext><i class=\"fas fa-arrow-right\"></i></button>\r\n        </div>\r\n    </div>\r\n  \r\n\r\n  </mat-step>\r\n  <mat-step > \r\n    <ng-template matStepLabel>Risk Level</ng-template>\r\n    <h2 class=\"text-center mt-3\">Risk Level<span class=\"material-icons ml-3\"(click)=\"addItem('riskLevel')\" >add_circle_outline</span></h2>\r\n    <div class=\"row justify-content-center\">\r\n        <div class=\"col-1 my-auto\"> \r\n            <button class=\"btn\" matStepperPrevious><i class=\"fas fa-arrow-left\"></i></button>\r\n        </div>\r\n        <div class=\"col-7\">\r\n              <mat-form-field class=\"container\" appearance=\"fill\">\r\n                <mat-label>Risk Level</mat-label>\r\n                <mat-select formControlName=\"riskLevel\">\r\n                  <mat-option *ngFor=\"let parameter of riskLevelData\" [value]=\"parameter._id\">\r\n                    {{parameter.title}}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n        <div class=\"col-1 my-auto\">\r\n            <button class=\"btn\" matStepperNext><i class=\"fas fa-arrow-right\"></i></button>\r\n        </div>\r\n    </div>\r\n  \r\n \r\n  </mat-step>\r\n  <mat-step >\r\n    <ng-template matStepLabel>Control Action Required</ng-template>\r\n    <h2 class=\"text-center mt-3\">Control Action Required<span class=\"material-icons ml-3\"(click)=\"addItem('ctrlActreq')\" >add_circle_outline</span></h2>\r\n    <div class=\"row justify-content-center\">\r\n        <div class=\"col-1 my-auto\"> \r\n            <button class=\"btn\" matStepperPrevious><i class=\"fas fa-arrow-left\"></i></button>\r\n        </div>\r\n        <div class=\"col-7\">\r\n            <mat-form-field class=\"container\" appearance=\"fill\">\r\n                <mat-label>Control Action Required</mat-label>\r\n                <mat-select formControlName=\"contrActReq\" multiple>\r\n                  <mat-select-trigger>\r\n                    <span\r\n                      *ngIf=\"!JobTaskDetail.get('contrActReq').value?.length\"\r\n                      class=\"example-additional-selection\"\r\n                    >\r\n                    </span>\r\n                    <span\r\n                      *ngIf=\"JobTaskDetail.get('contrActReq').value?.length == 1\"\r\n                      class=\"example-additional-selection\"\r\n                    >\r\n                      One Item selected\r\n                    </span>\r\n                    <span\r\n                      *ngIf=\"JobTaskDetail.get('contrActReq').value?.length > 1\"\r\n                      class=\"example-additional-selection\"\r\n                    >\r\n                      More than one selected\r\n                    </span>\r\n                  </mat-select-trigger>\r\n                  <mat-option\r\n                    *ngFor=\"let parameter of allContrlActReq\"\r\n                    [value]=\"parameter._id\"\r\n                    >{{ parameter.title }}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n        </div>\r\n        <div class=\"col-1 my-auto\">\r\n            <button class=\"btn\" matStepperNext><i class=\"fas fa-arrow-right\"></i></button>\r\n        </div>\r\n    </div>\r\n   \r\n\r\n  </mat-step>\r\n  <mat-step >\r\n<<<<<<< HEAD\r\n    <ng-template matStepLabel>Code of Practice</ng-template>\r\n    <h2 class=\"text-center mt-3\">Code of Practice<span class=\"material-icons ml-3\"(click)=\"addItem('codeOfPract')\" >add_circle_outline</span></h2>\r\n=======\r\n    <ng-template matStepLabel>Residule Risk Level</ng-template>\r\n    <h2 class=\"text-center mt-3\">Residule Risk Level<span class=\"material-icons ml-3\"(click)=\"addItem('resRiskLevel')\" >add_circle_outline</span></h2>\r\n>>>>>>> 251c0a9b0f57bd4e73303b18d5b531815caa435a\r\n    <div class=\"row justify-content-center\">\r\n        <div class=\"col-1 my-auto\"> \r\n            <button class=\"btn\" matStepperPrevious><i class=\"fas fa-arrow-left\"></i></button>\r\n        </div>\r\n        <div class=\"col-7\">\r\n            <mat-form-field class=\"container\" appearance=\"fill\">\r\n                <mat-label>Code of Practice</mat-label>\r\n                <mat-select formControlName=\"codeOfPract\" multiple>\r\n                  <mat-select-trigger>\r\n                    <span\r\n                      *ngIf=\"!JobTaskDetail.get('codeOfPract').value?.length\"\r\n                      class=\"example-additional-selection\"\r\n                    >\r\n                    </span>\r\n                    <span\r\n                      *ngIf=\"JobTaskDetail.get('codeOfPract').value?.length == 1\"\r\n                      class=\"example-additional-selection\"\r\n                    >\r\n                      One Item selected\r\n                    </span>\r\n                    <span\r\n                      *ngIf=\"JobTaskDetail.get('codeOfPract').value?.length > 1\"\r\n                      class=\"example-additional-selection\"\r\n                    >\r\n                      More than one selected\r\n                    </span>\r\n                  </mat-select-trigger>\r\n                  <mat-option\r\n                    *ngFor=\"let parameter of allCodeOfPract\"\r\n                    [value]=\"parameter._id\"\r\n                    >{{ parameter.title }}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n        </div>\r\n        <div class=\"col-1 my-auto\">\r\n            <button class=\"btn\" matStepperNext><i class=\"fas fa-arrow-right\"></i></button>\r\n        </div>\r\n    </div>\r\n   \r\n\r\n  </mat-step>\r\n  <mat-step >\r\n    <ng-template matStepLabel>Residule Risk Level</ng-template>\r\n    <h2 class=\"text-center mt-3\">Residule Risk Level<span class=\"material-icons ml-3\"(click)=\"addItem('resRiskLevel')\" >add_circle_outline</span></h2>\r\n    <div class=\"row justify-content-center\">\r\n        <div class=\"col-1 my-auto\"> \r\n            <button class=\"btn\" matStepperPrevious><i class=\"fas fa-arrow-left\"></i></button>\r\n        </div>\r\n        <div class=\"col-7\">\r\n             <mat-form-field class=\"container\" appearance=\"fill\">\r\n                <mat-label>Residule Risk Level</mat-label>\r\n                <mat-select formControlName=\"residualRiskL\">\r\n                  <mat-option *ngFor=\"let parameter of resiRiskLevelData\" [value]=\"parameter._id\">\r\n                    {{parameter.title}}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n        </div>\r\n        <div class=\"col-1 my-auto\">\r\n            <button class=\"btn\" matStepperNext><i class=\"fas fa-arrow-right\"></i></button>\r\n        </div>\r\n    </div>\r\n \r\n\r\n  </mat-step>\r\n  <mat-step >\r\n    <ng-template matStepLabel>Chemical related Task</ng-template>\r\n    <h2 class=\"text-center mt-3\">Is this Job Task includes Chemicals?</h2>\r\n    <div class=\"row justify-content-center\">\r\n        <div class=\"col-1 my-auto\"> \r\n            <button class=\"btn\" matStepperPrevious><i class=\"fas fa-arrow-left\"></i></button>\r\n        </div>\r\n        <div class=\"col-7 text-center\">\r\n            <div class=\"form-check form-check-inline\">\r\n                <input class=\"form-check-input\" type=\"radio\" value=\"YES\" formControlName=\"chemical\">\r\n                <label class=\"form-check-label\" for=\"inlineRadio1\">Yes</label>\r\n              </div>\r\n              <div class=\"form-check form-check-inline\">\r\n                <input class=\"form-check-input\" type=\"radio\"  value=\"NO\" formControlName=\"chemical\">\r\n                <label class=\"form-check-label\" for=\"inlineRadio2\">No</label>\r\n              </div>\r\n        </div>\r\n        <div class=\"col-1 my-auto\">\r\n            <button class=\"btn\" matStepperNext><i class=\"fas fa-arrow-right\"></i></button>\r\n        </div>\r\n    </div>\r\n \r\n\r\n  </mat-step>\r\n\r\n  <mat-step >\r\n    <ng-template matStepLabel>Person Responsible</ng-template>\r\n    <h2 class=\"text-center mt-3\">Person Responsible<span class=\"material-icons ml-3\"(click)=\"addItem('perResbl')\" >add_circle_outline</span></h2>\r\n    <div class=\"row justify-content-center mt-3\">\r\n        <div class=\"col-1 my-auto\"> \r\n            <button class=\"btn\" matStepperPrevious><i class=\"fas fa-arrow-left\"></i></button>\r\n        </div>\r\n        <div class=\"col-6\">\r\n          \r\n            <mat-form-field class=\"container\" appearance=\"fill\">\r\n              <mat-label>Person Responsible</mat-label>\r\n              <mat-select formControlName=\"personResp\">\r\n                <mat-option *ngFor=\"let person of staff\" [value]=\"person._id\">\r\n                  {{person.title}}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n        </div>\r\n        <div class=\"col-1 my-auto\">\r\n            <!-- <button class=\"btn\" matStepperNext><i class=\"fas fa-arrow-right\"></i></button> -->\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"text-center mt-3\">\r\n      <button *ngIf=\"!jobTask?.set\" class=\"btn btn-primary\"(click)=\"setRelation()\">Set</button>\r\n      <button *ngIf=\"jobTask?.set\" class=\"btn btn-primary\"(click)=\"setRelation()\">Update</button>\r\n    </div>\r\n  </mat-step>\r\n</mat-horizontal-stepper>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-test-logic',\r\n  templateUrl: './test-logic.component.html',\r\n  styleUrls: ['./test-logic.component.scss']\r\n})\r\nexport class TestLogicComponent implements OnInit {\r\n\r\n  count:number=0\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  stepperList=[\r\n    {\r\n      name:'Personal information',\r\n      i:1,\r\n      tag:`<mat-step >\r\n      <ng-template matStepLabel>Person Responsible</ng-template>\r\n      <h2 class=\"text-center mt-3\">Person Responsible<span class=\"material-icons ml-3\"(click)=\"addItem('perResbl')\" >add_circle_outline</span></h2>\r\n      <div class=\"row justify-content-center mt-3\">\r\n          <div class=\"col-1 my-auto\"> \r\n              <button class=\"btn\" matStepperPrevious><i class=\"fas fa-arrow-left\"></i></button>\r\n          </div>\r\n          <div class=\"col-6\">\r\n            \r\n              <mat-form-field class=\"container\" appearance=\"fill\">\r\n                <mat-label>Person Responsible</mat-label>\r\n                <mat-select formControlName=\"personResp\">\r\n                  <mat-option *ngFor=\"let person of staff\" [value]=\"person._id\">\r\n                    {{person.title}}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n          </div>\r\n          <div class=\"col-1 my-auto\">\r\n              <!-- <button class=\"btn\" matStepperNext><i class=\"fas fa-arrow-right\"></i></button> -->\r\n          </div>\r\n      </div>\r\n  \r\n      <div class=\"text-center mt-3\">\r\n        <button *ngIf=\"!jobTask?.set\" class=\"btn btn-primary\"(click)=\"setRelation()\">Set</button>\r\n        <button *ngIf=\"jobTask?.set\" class=\"btn btn-primary\"(click)=\"setRelation()\">Update</button>\r\n      </div>\r\n    </mat-step>`\r\n    },\r\n    {\r\n      name:'Bookings',\r\n      i:0,\r\n    },\r\n    {\r\n      name:'Reviews',\r\n      i:0,\r\n    },\r\n    {\r\n      name:'Confirm booking',\r\n      i:0,\r\n    }\r\n  ]\r\n  arr =[1,0,0,0]\r\n  prev(item){\r\n    if(this.count != this.stepperList.length+1){\r\n      this.count--\r\n      this.stepperList.map(x => {\r\n        x.i = 0\r\n      }) \r\n      this.stepperList[this.count].i = 1\r\n      \r\n    }\r\n  }\r\n  next(item){\r\n    if(this.count != this.stepperList.length-1){\r\n      this.count++\r\n      this.stepperList.map(x => {\r\n        x.i = 0\r\n      }) \r\n      this.stepperList[this.count].i = 1\r\n      \r\n    }\r\n  }\r\n  handleClick(index){\r\n    console.log(index)\r\n    this.count = index\r\n    this.stepperList.map(x => {\r\n      x.i = 0\r\n    }) \r\n    this.stepperList[this.count].i = 1\r\n  }\r\n\r\n}\r\n","<section class=\"py-5 header\">\r\n    <div class=\"container py-4\">\r\n        <!-- <header class=\"text-center mb-5 pb-5 text-white\">\r\n            <h1 class=\"display-4\">Bootstrap vertical tabs</h1>\r\n            <p class=\"font-italic mb-1\">Making advantage of Bootstrap 4 components, easily build an awesome tabbed interface.</p>\r\n            <p class=\"font-italic\"> \r\n                <a class=\"text-white\" href=\"\">\r\n                    <u></u>\r\n                </a>\r\n            </p>\r\n        </header> -->\r\n\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-md-3\">\r\n                <!-- Tabs nav -->\r\n                <div class=\"nav flex-column nav-pills nav-pills-custom\" id=\"v-pills-tab\" role=\"tablist\" aria-orientation=\"vertical\">\r\n                    <p *ngFor=\"let item of stepperList;let i = index\" (click)=\"handleClick(i)\"  class=\"nav-link mb-3 p-3 shadow \"\r\n                        [class.active]=\"stepperList[i].i\" id=\"v-pills-home-tab\" data-toggle=\"pill\"  role=\"tab\"\r\n                        aria-controls=\"v-pills-home\" aria-selected=\"true\">\r\n                        <i class=\"fa fa-user-circle-o mr-2\"></i>\r\n                        <span class=\"font-weight-bold small text-uppercase\">{{item.name}}</span></p>\r\n\r\n                    <!-- <a class=\"nav-link mb-3 p-3 shadow\" id=\"v-pills-profile-tab\" data-toggle=\"pill\" href=\"#v-pills-profile\" role=\"tab\" aria-controls=\"v-pills-profile\" aria-selected=\"false\">\r\n                        <i class=\"fa fa-calendar-minus-o mr-2\"></i>\r\n                        <span class=\"font-weight-bold small text-uppercase\">Bookings</span></a>\r\n\r\n                    <a class=\"nav-link mb-3 p-3 shadow\" id=\"v-pills-messages-tab\" data-toggle=\"pill\" href=\"#v-pills-messages\" role=\"tab\" aria-controls=\"v-pills-messages\" aria-selected=\"false\">\r\n                        <i class=\"fa fa-star mr-2\"></i>\r\n                        <span class=\"font-weight-bold small text-uppercase\">Reviews</span></a>\r\n\r\n                    <a class=\"nav-link mb-3 p-3 shadow\" id=\"v-pills-settings-tab\" data-toggle=\"pill\" href=\"#v-pills-settings\" role=\"tab\" aria-controls=\"v-pills-settings\" aria-selected=\"false\">\r\n                        <i class=\"fa fa-check mr-2\"></i>\r\n                        <span class=\"font-weight-bold small text-uppercase\">Confirm booking</span></a> -->\r\n\r\n \r\n\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div class=\"col-md-9\">\r\n                <!-- Tabs content -->\r\n                <div class=\"tab-content\" id=\"v-pills-tabContent\">\r\n                    <div *ngFor=\"let item of stepperList;let i = index\" class=\"tab-pane fade shadow rounded bg-white  p-5\" [class.active]=\"stepperList[i].i\" [class.show]=\"stepperList[i].i\" id=\"v-pills-home\" role=\"tabpanel\" aria-labelledby=\"v-pills-home-tab\">\r\n                        <h4 class=\"font-italic mb-4\">{{item.name}}</h4>\r\n                        <p class=\"font-italic text-muted mb-2\" >Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\r\n                    </div>\r\n                    \r\n                    <!-- <div class=\"tab-pane fade shadow rounded bg-white   p-5\" id=\"v-pills-profile\" role=\"tabpanel\" aria-labelledby=\"v-pills-profile-tab\">\r\n                        <h4 class=\"font-italic mb-4\">Bookings</h4>\r\n                        <p class=\"font-italic text-muted mb-2\">Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\r\n                    </div>\r\n                    \r\n                    <div class=\"tab-pane fade shadow rounded bg-white p-5\" id=\"v-pills-messages\" role=\"tabpanel\" aria-labelledby=\"v-pills-messages-tab\">\r\n                        <h4 class=\"font-italic mb-4\">Reviews</h4>\r\n                        <p class=\"font-italic text-muted mb-2\">Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\r\n                    </div>\r\n                    \r\n                    <div class=\"tab-pane fade shadow rounded bg-white p-5\" id=\"v-pills-settings\" role=\"tabpanel\" aria-labelledby=\"v-pills-settings-tab\">\r\n                        <h4 class=\"font-italic mb-4\">Confirm booking</h4>\r\n                        <p class=\"font-italic text-muted mb-2\">Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\r\n                    </div> -->\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"buttons\">\r\n    \r\n        <button mat-icon-button (click)=\"prev(1)\"><i  style=\"font-size: 25px;\" class=\"fas fa-arrow-left\"></i></button> <button mat-icon-button (click)=\"next(1)\"><i style=\"font-size: 25px;\" class=\"fas fa-arrow-right\"></i></button>\r\n    </div>\r\n</section>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-confi-logi',\r\n  templateUrl: './confi-logi.component.html',\r\n  styleUrls: ['./confi-logi.component.scss']\r\n})\r\nexport class ConfiLogiComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<router-outlet></router-outlet>","import { JobNumber } from './../../../../utils/services/logical-form-info.service';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Component, OnInit, Inject, AfterViewInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-create-job-no',\r\n  templateUrl: './create-job-no.component.html',\r\n  styleUrls: ['./create-job-no.component.scss']\r\n})\r\nexport class CreateJobNoComponent implements OnInit, AfterViewInit {\r\n  allSites: any[] = []\r\n  addJobNumberForm: FormGroup\r\n  addCustomerForm: FormGroup;\r\n  allCustomers: any[] = []\r\n  constructor(\r\n    private dialogRef: MatDialogRef<CreateJobNoComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private logicalFormInfoService: LogicalFormInfoService,\r\n    private fb: FormBuilder\r\n  ) { }\r\n  ngAfterViewInit(): void {\r\n    this.addJobNumberForm.get('siteName').valueChanges.subscribe(res => {\r\n      // console.log(JSON.parse(res))\r\n      res = JSON.parse(res)\r\n      this.addJobNumberForm.get('streetNumber').setValue(res.streetNumber)\r\n      this.addJobNumberForm.get('streetAddress').setValue(res.streetAddress)\r\n      this.addJobNumberForm.get('suburb').setValue(res.suburb)\r\n      this.addJobNumberForm.get('state').setValue(res.state)\r\n    })\r\n    this.addJobNumberForm.get('customerName').valueChanges.subscribe(res => {\r\n      // console.log(JSON.parse(res))\r\n      res = JSON.parse(res)\r\n      this.addJobNumberForm.get('customerContact').setValue(res.customerContact)\r\n      this.addJobNumberForm.get('customerContactPhone').setValue(res.customerContactPhone)\r\n      this.addJobNumberForm.get('customerEmail').setValue(res.customerEmail)\r\n    })\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.addJobNumberForm = this.fb.group({\r\n      siteName: [''],\r\n      streetNumber: [{ value: '', disabled: true }],\r\n      streetAddress: [{ value: '', disabled: true }],\r\n      suburb: [{ value: '', disabled: true }],\r\n      state: [{ value: '', disabled: true }],\r\n      customerName: [''],\r\n      customerContact: [{ value: '', disabled: true }],\r\n      customerContactPhone: [{ value: '', disabled: true }],\r\n      customerEmail: [{ value: '', disabled: true }],\r\n    })\r\n    this.logicalFormInfoService.getAllSite().subscribe((res: any) => {\r\n      this.allSites = res.data;\r\n      console.log(res.data);\r\n      \r\n    })\r\n    this.logicalFormInfoService.getAllCustomer().subscribe((res: any) => {\r\n      this.allCustomers = res.data\r\n    })\r\n  }\r\n  get f(){\r\n    return this.addJobNumberForm.controls\r\n  }\r\n  onSubmit() {\r\n    console.log(this.addJobNumberForm.value)\r\n    let data : JobNumber\r\n    data = {\r\n      arrObj:[{\r\n        customerContact:this.f.customerContact.value,\r\n        customerContactPhone:this.f.customerContactPhone.value,\r\n        customerEmail:this.f.customerEmail.value,\r\n        customerName:JSON.parse(this.f.customerName.value).customerName,\r\n        siteName:JSON.parse(this.f.siteName.value).siteName,\r\n        state:this.f.state.value,\r\n        streetAddress:this.f.streetAddress.value,\r\n        streetNumber:this.f.streetNumber.value,\r\n        suburb:this.f.suburb.value,\r\n      }]\r\n    }\r\n    console.log(data)\r\n    this.logicalFormInfoService.addJobNumber(data).subscribe((res:any)=>{\r\n      console.log(res)\r\n      this.dialogRef.close('success')\r\n    })\r\n  }\r\n  setSite(item) {\r\n    console.log(item)\r\n    this.addJobNumberForm.get('streetNumber').setValue(item.streetNumber)\r\n    this.addJobNumberForm.get('streetAddress').setValue(item.streetAddress)\r\n    this.addJobNumberForm.get('suburb').setValue(item.suburb)\r\n    this.addJobNumberForm.get('state').setValue(item.state)\r\n  }\r\n  setCustomer(item) {\r\n    this.addJobNumberForm.get('customerContact').setValue(item.customerContact)\r\n    this.addJobNumberForm.get('customerContactPhone').setValue(item.customerContactPhone)\r\n    this.addJobNumberForm.get('customerEmail').setValue(item.customerEmail)\r\n  }\r\n}\r\n","<section [formGroup]=\"addJobNumberForm\" class=\"content\">\r\n  <div class=\"container px-4 py-4 bg-white\">\r\n    <h1>Create Job Number</h1>\r\n  \r\n    <div class=\"row\">\r\n  \r\n      <div class=\"my-3 col-6\">\r\n        <p for=\"exampleFormControlInput1\" class=\"form-Label\">Site Name</p>\r\n        <select\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          formControlName=\"siteName\"\r\n          id=\"siteName\"\r\n        >\r\n          <option [value]=\"item|json\" *ngFor=\"let item of allSites \">{{item.siteName}}</option>\r\n        </select>\r\n      </div>\r\n    \r\n    </div>\r\n  \r\n    \r\n    <div class=\"row\">\r\n      <div class=\"my-3 col-2\">\r\n        <p for=\"exampleFormControlInput1\" class=\"form-Label\">Street Number</p>\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          formControlName=\"streetNumber\"\r\n          id=\"siteName\"\r\n        />\r\n      </div>\r\n      <div class=\"my-3 col-4\">\r\n        <p for=\"exampleFormControlInput1\" class=\"form-Label\">Street Address</p>\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          formControlName=\"streetAddress\"\r\n          id=\"siteName\"\r\n        />\r\n      </div>\r\n      <div class=\"my-3 col-2\">\r\n        <p for=\"exampleFormControlInput1\" class=\"form-Label\">Suburb</p>\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          formControlName=\"suburb\"\r\n          id=\"siteName\"\r\n        />\r\n      </div>\r\n      <div class=\"my-3 col-4\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-label\"\r\n          >State</p\r\n        >\r\n\r\n          <select\r\n        class=\"form-select form-control col\"\r\n        aria-label=\"Default select example\"\r\n        formControlName=\"state\"\r\n      >\r\n        <option selected hidden>Select</option>\r\n              <option value=\"NSW\">NSW</option>\r\n              <option value=\"ACT\">ACT</option>\r\n              <option value=\"QLD\">QLD</option>\r\n              <option value=\"NT\">NT</option>\r\n              <option value=\"SA\">SA</option>\r\n              <option value=\"NZ\">NZ</option>\r\n              <option value=\"TAS\">TAS</option>\r\n              <option value=\"VIC\">VIC</option>\r\n              <option value=\"WA\">WA</option>\r\n      </select>\r\n    \r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"my-3 col\">\r\n        <p for=\"exampleFormControlInput1\" class=\"form-Label\">Customer Name</p>\r\n        <select\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          formControlName=\"customerName\"\r\n          id=\"siteName\"\r\n        >\r\n          <option [value]=\"item|json\" *ngFor=\"let item of allCustomers \">{{item.customerName}}</option>\r\n        </select>\r\n      </div>\r\n      <div class=\"my-3 col\">\r\n        <p for=\"exampleFormControlInput1\" class=\"form-Label\">Customer Contact</p>\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          id=\"siteName\"\r\n          formControlName=\"customerContact\"\r\n        />\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"my-3 col\">\r\n        <p for=\"exampleFormControlInput1\" class=\"form-Label\">Customer Contact Phone</p>\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          id=\"siteName\"\r\n          formControlName=\"customerContactPhone\"\r\n        />\r\n      </div>\r\n      <div class=\"my-3 col\">\r\n        <p for=\"exampleFormControlInput1\" class=\"form-Label\">Customer Email</p>\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          id=\"siteName\"\r\n          formControlName=\"customerEmail\"\r\n        />\r\n      </div>\r\n    </div> \r\n  <div >\r\n    <button class=\"btn btn-primary\" (click)=\"onSubmit()\">\r\n      Create\r\n    </button>\r\n  </div>\r\n    <!-- <div class=\"row\">\r\n      <div class=\"my-3 col\">\r\n        <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n          Customer Contact Phone\r\n        </p>\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          formControlName=\"customerContactPhone\"\r\n          id=\"siteName\"\r\n        />\r\n      </div>\r\n      <div class=\"my-3 col\">\r\n        <p for=\"exampleFormControlInput1\" class=\"form-Label\">Project Manager</p>\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          formControlName=\"projectManager\"\r\n          id=\"siteName\"\r\n        />\r\n      </div>\r\n    </div> -->\r\n  </div>\r\n  </section>\r\n  \r\n ","\r\nimport {\r\n  Component,\r\n  OnInit,\r\n  QueryList,\r\n  ViewChildren,\r\n  AfterViewInit,\r\n} from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormArray } from '@angular/forms';\r\nimport Swal from 'sweetalert2';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { SetTitleService } from 'src/app/utils/services/set-title.service';\r\nimport { ViewChild } from '@angular/core';\r\n\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-set-logic',\r\n  templateUrl: './set-logic.component.html',\r\n  styleUrls: ['./set-logic.component.scss'],\r\n})\r\nexport class SetLogicComponent implements AfterViewInit, OnInit {\r\n  JobTaskDetail!: FormGroup;\r\n  allHazards=[];\r\n  allContrlActReq=[];\r\n  jobTaskData: any = [];\r\n  highRiskData: any = [];\r\n  PPESelectionData: any = [];\r\n  codeOfPract: any = [];\r\n  licenseAndQual: any = [];\r\n  licenseAndQualificationData: any = [];\r\n  licenceCatAll: any = [];\r\n  highRiskConstructionData: any = [];\r\n  task: any = [];\r\n  riskLevel='';\r\n  residuleRiskL='';\r\n  PPEselection = [\r\n    { label: 'Disposable dust mask', value: '' },\r\n    { label: 'Dust Mas', value: '' },\r\n    { label: 'Face shield', value: '' },\r\n    { label: 'Full face respirator', value: '' },\r\n    { label: 'Gttors', value: '' },\r\n    { label: 'Half face respirator', value: '' },\r\n    { label: 'Hard Hat', value: '' },\r\n    { label: 'Hearing protection', value: '' },\r\n    { label: 'High-Vis Clothing', value: '' },\r\n    { label: 'Lock Out Tags', value: '' },\r\n    { label: 'Long sleeve/Long pants', value: '' },\r\n    { label: 'Out of Service Tags', value: '' },\r\n    { label: 'Protective gloves', value: '' },\r\n    { label: 'Rescue kit', value: '' },\r\n    { label: 'Safety boots', value: '' },\r\n    { label: 'Safety glasses', value: '' },\r\n    { label: 'Sun Screen', value: '' },\r\n    { label: 'torch', value: '' },\r\n    { label: 'Wide Brim Hat', value: '' },\r\n  ];\r\n\r\n  licenseAndQualification = [\r\n    { label: 'Open Cable Licence', value: '' },\r\n    { label: 'White Card', value: '' },\r\n    { label: 'EWP Licence', value: '' },\r\n    { label: 'Working At Heights', value: '' },\r\n    { label: 'Security Licence', value: '' },\r\n    { label: 'Asbestos Awarness', value: '' },\r\n    { label: 'Working In Confined Space', value: '' },\r\n  ];\r\n\r\n  highRiskConstruction2 = [\r\n    {\r\n      label: 'Working in or near trenches or shafts deeper than 1.5metres',\r\n      value: '',\r\n    },\r\n    { label: 'Work in or near a confined space', value: '' },\r\n    {\r\n      label:\r\n        'Work in an area that may have a contaminated or flammable atmosphere',\r\n      value: '',\r\n    },\r\n    { label: 'Working around or near mobile plant', value: '' },\r\n    { label: 'Work with near or near asbestos', value: '' },\r\n    { label: 'Working with hazardous substances', value: '' },\r\n    { label: 'Working with or near tilt-up/precast concrete', value: '' },\r\n    { label: 'Risk of falls higher than 2 metres', value: '' },\r\n    {\r\n      label: 'Working near on or adjacent to a road or rail corridor',\r\n      value: '',\r\n    },\r\n    { label: 'Working on or near telecommunication tower', value: '' },\r\n    { label: 'Working on or near telecommunication tower', value: '' },\r\n    { label: 'Work near explosives', value: '' },\r\n    {\r\n      label:\r\n        'Work in or near water or other liquid that involves a risk of drowning',\r\n      value: '',\r\n    },\r\n    { label: 'Demolition of load-bearing structure', value: '' },\r\n    { label: 'Diving work', value: '' },\r\n  ];\r\n\r\n  PPEselection2 = [\r\n    { label: 'Disposable dust mask', value: '' },\r\n    { label: 'Dust Mas', value: '' },\r\n    { label: 'Face shield', value: '' },\r\n    { label: 'Full face respirator', value: '' },\r\n    { label: 'Gttors', value: '' },\r\n    { label: 'Half face respirator', value: '' },\r\n    { label: 'Hard Hat', value: '' },\r\n    { label: 'Hearing protection', value: '' },\r\n    { label: 'High-Vis Clothing', value: '' },\r\n    { label: 'Lock Out Tags', value: '' },\r\n    { label: 'Long sleeve/Long pants', value: '' },\r\n    { label: 'Out of Service Tags', value: '' },\r\n    { label: 'Protective gloves', value: '' },\r\n    { label: 'Rescue kit', value: '' },\r\n    { label: 'Safety boots', value: '' },\r\n    { label: 'Safety glasses', value: '' },\r\n    { label: 'Sun Screen', value: '' },\r\n    { label: 'torch', value: '' },\r\n    { label: 'Wide Brim Hat', value: '' },\r\n  ];\r\n  ELEMENT_DATA = [];\r\n  /////////////mat table////////////////\r\n  displayedColumns: string[] = ['index', 'title', 'edit'];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n  // @ViewChild('risk') risk: any;\r\n  @ViewChildren('risk') Risk: QueryList<any>;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    private setTitle: SetTitleService,\r\n    public router: Router,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.setTitle.setTitle('WHS-Set Relation');\r\n \r\n    this.JobTaskDetail = this.fb.group({\r\n      highRiskConstr: this.fb.array([]),\r\n      PPE: this.fb.array([]),\r\n      LicenceCat: this.fb.array([]),\r\n      identifyHazrds: this.fb.array([]),\r\n      contrActReq: this.fb.array([]),\r\n      riskLevel: this.fb.array([]),\r\n      residualRisk: this.fb.array([]),\r\n    });\r\n\r\n    this.getJobTask();\r\n    // this.getAllHighRisk();\r\n    // this.getAllLicence();\r\n    // this.getAllCategories();\r\n    // this.getAllPPE();\r\n    // this.getAllHazard();\r\n    // this.getAllContrActReq();\r\n  }\r\n\r\n  \r\n\r\n  addActionHighRisk() {\r\n    {\r\n      this.highRiskFA().push(this.highRiskFG());\r\n    }\r\n  }\r\n  addActionPPE() {\r\n    {\r\n      this.PPE_FA().push(this.PPE_FG());\r\n    }\r\n  }\r\n  addActionLicnCat() {\r\n    {\r\n      this.licenceCatFA().push(this.licenceCatFG());\r\n    }\r\n  }\r\n  addActionContrActReq() {\r\n    {\r\n      this.contrActReqFA().push(this.contrActReqFG());\r\n    }\r\n  }\r\n  addActionIdentifyHazrds() {\r\n    {\r\n      this.identifyHazrdsFA().push(this.identifyHazrdsFG());\r\n    }\r\n  }\r\n  addActionRiskLevel() {\r\n    {\r\n      this.riskLevelFA().push(this.riskLevelFG());\r\n    }\r\n  }\r\n  addActionResiRiskLevel() {\r\n    {\r\n      this.residlRiskLevelFA().push(this.residlRiskLevelFG());\r\n    }\r\n  }\r\n  addActionCOP() {\r\n    {\r\n      this.addCOP().push(this.newActionCOP());\r\n    }\r\n  }\r\n  highRiskFA(): FormArray {\r\n    return this.JobTaskDetail.get('highRiskConstr') as FormArray;\r\n  }\r\n  PPE_FA(): FormArray {\r\n    return this.JobTaskDetail.get('PPE') as FormArray;\r\n  }\r\n  licenceCatFA(): FormArray {\r\n    return this.JobTaskDetail.get('LicenceCat') as FormArray;\r\n  }\r\n  identifyHazrdsFA(): FormArray {\r\n    return this.JobTaskDetail.get('identifyHazrds') as FormArray;\r\n  }\r\n  contrActReqFA(): FormArray {\r\n    return this.JobTaskDetail.get('contrActReq') as FormArray;\r\n  }\r\n  addCOP(): FormArray {\r\n    return this.JobTaskDetail.get('codeOfPract') as FormArray;\r\n  }\r\n  riskLevelFA(): FormArray {\r\n    return this.JobTaskDetail.get('riskLevel') as FormArray;\r\n  }\r\n  residlRiskLevelFA(): FormArray {\r\n    return this.JobTaskDetail.get('residualRisk') as FormArray;\r\n  }\r\n  highRiskFG(): FormGroup {\r\n    return this.fb.group({\r\n      highRiskArr: [''],\r\n    });\r\n  }\r\n  PPE_FG(): FormGroup {\r\n    return this.fb.group({\r\n      ppeArr: [''],\r\n    });\r\n  }\r\n  licenceCatFG(): FormGroup {\r\n    return this.fb.group({\r\n      licenceArr: [''],\r\n    });\r\n  }\r\n  identifyHazrdsFG(): FormGroup {\r\n    return this.fb.group({\r\n      hazardsArr: [''],\r\n    });\r\n  }\r\n  contrActReqFG(): FormGroup {\r\n    return this.fb.group({\r\n      contrActReqArr: [''],\r\n    });\r\n  }\r\n  riskLevelFG(): FormGroup {\r\n    return this.fb.group({\r\n      riskLevel: [''],\r\n    });\r\n  }\r\n  residlRiskLevelFG(): FormGroup {\r\n    return this.fb.group({\r\n      resiRiskLevel: [''],\r\n    });\r\n  }\r\n  newActionCOP(): FormGroup {\r\n    //code of practice\r\n    return this.fb.group({\r\n      copArr: [''],\r\n    });\r\n  }\r\n\r\n  onFormSubmit() {\r\n    console.log(this.JobTaskDetail);\r\n  }\r\n  getJobTask() {\r\n    this.logicalFormInfo.getAllJobtask().subscribe((res: any) => {\r\n      console.log('jobTaskDetails=>', res);\r\n      this.jobTaskData = res.data;\r\n      \r\n      this.jobTaskData.forEach((element, index) => {\r\n        element.index = index + 1; //adding index\r\n      });\r\n\r\n      this.ELEMENT_DATA =  this.jobTaskData;\r\n      this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n      this.dataSource.paginator = this.paginator;\r\n      // this.jobTaskData.forEach((item,i) => {\r\n      //   this.addActionHighRisk();\r\n      //   this.addActionPPE();\r\n      //   this.addActionLicnCat();\r\n      //   this.addActionContrActReq();\r\n      //   this.addActionIdentifyHazrds(); \r\n      //   this.addActionRiskLevel(); \r\n      //   this.addActionResiRiskLevel();   \r\n      //   this.highRiskFA().controls[i].get('highRiskArr').setValue(item.risk);\r\n      //   this.PPE_FA().controls[i].get('ppeArr').setValue(item.PPE);\r\n      //   this.licenceCatFA().controls[i].get('licenceArr').setValue(item.licence);  \r\n      //   this.identifyHazrdsFA().controls[i].get('hazardsArr').setValue(item.identifyHazard);\r\n      //   this.contrActReqFA().controls[i].get('contrActReqArr').setValue(item.controlActionRequired);\r\n      //   this.riskLevelFA().controls[i].get('riskLevel').setValue(item.riskLevel);\r\n      //   this.residlRiskLevelFA().controls[i].get('resiRiskLevel').setValue(item.residualRisk);\r\n\r\n      //   });\r\n\r\n    });\r\n  }\r\n  getAllHighRisk() {\r\n    this.logicalFormInfo.getAllRisk().subscribe((res: any) => {\r\n      console.log('Risk=>', res);\r\n      this.highRiskConstructionData = res.data;\r\n    });\r\n  }\r\n  getAllPPE() {\r\n    this.logicalFormInfo.getAllPPE().subscribe((res: any) => {\r\n      console.log('PPE=>', res);\r\n      this.PPESelectionData = res.data;\r\n    });\r\n  }\r\n\r\n  getAllLicence() {\r\n    this.logicalFormInfo.getAllLicence().subscribe((res) => {\r\n      console.log('Licence=>', res);\r\n      this.licenseAndQual = res.data;\r\n    });\r\n  }\r\n  getAllHazard() {\r\n    this.logicalFormInfo.getAllHazards().subscribe((res:any) => {\r\n      console.log('getAllHazards=>', res);\r\n      this.allHazards = res.data;\r\n    });\r\n  }\r\n  getAllContrActReq()  {\r\n    this.logicalFormInfo.getAllContrlActReq().subscribe((res:any) => {\r\n      console.log('getAllHazards=>', res);\r\n      this.allContrlActReq = res.data;\r\n    });\r\n  }\r\n  getAllCategories() {\r\n    this.logicalFormInfo.getAllLicenceCat().subscribe((res) => {\r\n      console.log('getAllLicenceCat=>', res);\r\n      this.licenceCatAll = res.data;\r\n    });\r\n  }\r\n  setRelation_2(id){\r\n   this.router.navigate(['/admin/confiLogi/setRelation'],\r\n\r\n      {queryParams: { id:id}});\r\n  }\r\n  setRelation(title, id,i) {\r\n\r\n    console.log('index', title);\r\n    console.log('id', id);\r\n    console.log('id', i);\r\nlet risk = [],\r\nppe=[],\r\nlicence=[],\r\nidentifyHazard=[],\r\ncontrolActionRequired=[];\r\n  if(this.highRiskFA().controls[i].get('highRiskArr').value){\r\n    this.highRiskFA().controls[i].get('highRiskArr').value.forEach(element => {\r\n      risk.push(element._id)\r\n    });\r\n  }\r\n  if(this.PPE_FA().controls[i].get('ppeArr').value){\r\n    this.PPE_FA().controls[i].get('ppeArr').value.forEach(element => {\r\n      ppe.push(element._id)\r\n    });\r\n  }\r\n  if(this.licenceCatFA().controls[i].get('licenceArr').value){\r\n    this.licenceCatFA().controls[i].get('licenceArr').value.forEach(element => {\r\n      licence.push(element._id)\r\n    });\r\n  }\r\n  if(this.identifyHazrdsFA().controls[i].get('hazardsArr').value){\r\n    this.identifyHazrdsFA().controls[i].get('hazardsArr').value.forEach(element => {\r\n      identifyHazard.push(element._id)\r\n    });\r\n  }\r\n  if(this.contrActReqFA().controls[i].get('contrActReqArr').value){\r\n    this.contrActReqFA().controls[i].get('contrActReqArr').value.forEach(element => {\r\n      controlActionRequired.push(element._id)\r\n    });\r\n  }\r\n\r\n    let data = {\r\n      title: title,\r\n      risk: this.highRiskFA().controls[i].get('highRiskArr').value,\r\n      PPE: this.PPE_FA().controls[i].get('ppeArr').value,\r\n      licence: this.licenceCatFA().controls[i].get('licenceArr').value,\r\n      identifyHazard:this.identifyHazrdsFA().controls[i].get('hazardsArr').value,\r\n      controlActionRequired: this.contrActReqFA().controls[i].get('contrActReqArr').value,\r\n      riskLevel:this.riskLevelFA().controls[i].get('riskLevel').value ,\r\n      residualRisk: this.residlRiskLevelFA().controls[i].get('resiRiskLevel').value,\r\n      set:true      \r\n    };\r\n    console.log(data);\r\n\r\n    this.logicalFormInfo.updateJobTask(data,id).subscribe((res) => {\r\n      console.log('resJob Task=>', res);\r\n      this.getJobTask();\r\n\r\n      Swal.fire({\r\n        title: 'Relation set successfully',\r\n        showConfirmButton: false,\r\n        timer: 1200,\r\n      });\r\n    });\r\n  }\r\n  categorySel(catArr) {\r\n    this.licenseAndQualificationData = [];\r\n\r\n    console.log(catArr);\r\n    catArr.forEach((element) => {\r\n      this.licenseAndQual.forEach((item) => {\r\n        if (element === item.licenceCategoryId._id) {\r\n          this.licenseAndQualificationData.push(item);\r\n        }\r\n      });\r\n    });\r\n    console.log(\r\n      ' this.licenseAndQualificationData',\r\n      this.licenseAndQualificationData\r\n    );\r\n  }\r\n}\r\n","<!-- <section class=\"content\" [formGroup]=\"JobTaskDetail\">\r\n    <div class=\"container-fluid\">\r\n      <div class=\"text-center\">\r\n        <h1 > Job Task List</h1>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-12\">\r\n          <div class=\"card\">\r\n            <div class=\"card-body p-0 overflow-auto\">\r\n              <table class=\"table table-hover text-wrap\">\r\n                <thead>\r\n                  <tr>\r\n                    <th style=\"width: 1%\">Index</th>\r\n                    <th style=\"width: 20%\">Job Task List </th>\r\n                    <th style=\"width: 15%\">High Risk Construction </th>\r\n                    <th style=\"width: 15%\">PPE</th>\r\n                    <th style=\"width: 15%\">Licence Category</th>\r\n                    <th style=\"width: 15%\">Identify Hazards</th>\r\n                    <th style=\"width: 15%\">Risk</th>\r\n                    <th style=\"width: 15%\">Control Action Required</th>\r\n                    <th style=\"width: 15%\">Residule Risk</th>\r\n                    <th style=\"width: 15%\">Action</th>\r\n  \r\n                  </tr>\r\n                </thead>\r\n                <tbody >\r\n                  <tr *ngFor=\"let task of  jobTaskData; let i = index\">\r\n                    <td>{{i+1}}</td>\r\n                    <td>{{ task.title }}</td>\r\n                    <ng-container formArrayName=\"highRiskConstr\">\r\n                      <td [formGroupName]=\"i\">\r\n                        <mat-form-field appearance=\"fill\">\r\n                          <mat-label>HighRiskConstruction</mat-label>\r\n                          <mat-select formControlName=\"highRiskArr\" multiple >\r\n                            <mat-select-trigger>\r\n                              <span *ngIf=\"!highRiskFA().controls[i].get('highRiskArr').value?.length\" class=\"example-additional-selection\">\r\n                              </span>\r\n                              <span *ngIf=\"highRiskFA().controls[i].get('highRiskArr').value?.length == 1\" class=\"example-additional-selection\">\r\n                                One Item selected\r\n                              </span>\r\n                              <span *ngIf=\"highRiskFA().controls[i].get('highRiskArr').value?.length > 1\" class=\"example-additional-selection\">\r\n                                More than one selected\r\n                              </span>\r\n                            </mat-select-trigger>\r\n                            <mat-option *ngFor=\"let parameter of highRiskConstructionData\" [value]=\"parameter._id\">\r\n                              {{parameter.title}}</mat-option>\r\n                          </mat-select>\r\n                        </mat-form-field>\r\n                      </td>\r\n                    </ng-container >                \r\n                    <ng-container formArrayName=\"PPE\">\r\n                      <td [formGroupName]=\"i\">\r\n                        <mat-form-field appearance=\"fill\">\r\n                          <mat-label>PPE selection</mat-label>\r\n                          <mat-select formControlName=\"ppeArr\" multiple >\r\n                            <mat-select-trigger>\r\n                              <span *ngIf=\"!PPE_FA().controls[i].get('ppeArr').value?.length \" class=\"example-additional-selection\">\r\n                               \r\n                              </span>\r\n                              <span *ngIf=\"PPE_FA().controls[i].get('ppeArr').value?.length == 1\" class=\"example-additional-selection\">\r\n                               One Item selected\r\n                              </span>\r\n                              <span *ngIf=\"PPE_FA().controls[i].get('ppeArr').value?.length > 1\" class=\"example-additional-selection\">\r\n                                More than one selected\r\n                              </span>\r\n                            </mat-select-trigger>\r\n                            <mat-option *ngFor=\"let parameter of PPESelectionData\" [value]=\"parameter._id\">{{parameter.title}}\r\n                            </mat-option>\r\n                          </mat-select>\r\n                        </mat-form-field>\r\n                      </td>\r\n                    </ng-container>\r\n                    <ng-container formArrayName=\"LicenceCat\">\r\n                      <td [formGroupName]=\"i\">\r\n                        <mat-form-field appearance=\"fill\">\r\n                          <mat-label>Licence Categories</mat-label>\r\n                          <mat-select formControlName=\"licenceArr\" multiple >\r\n                            <mat-select-trigger>\r\n                              <span *ngIf=\"!licenceCatFA().controls[i].get('licenceArr').value?.length\" class=\"example-additional-selection\">\r\n                              </span>\r\n                              <span *ngIf=\"licenceCatFA().controls[i].get('licenceArr').value?.length == 1\" class=\"example-additional-selection\">\r\n                                One Item selected\r\n                              </span>\r\n                              <span *ngIf=\"licenceCatFA().controls[i].get('licenceArr').value?.length > 1\" class=\"example-additional-selection\">\r\n                                More than one selected\r\n                              </span>\r\n                            </mat-select-trigger>\r\n                            <mat-option *ngFor=\"let parameter of licenceCatAll\" [value]=\"parameter._id\">{{parameter.title}}\r\n                            </mat-option>\r\n                          </mat-select>\r\n                        </mat-form-field>\r\n                      </td>\r\n                    </ng-container>\r\n                    <ng-container formArrayName=\"identifyHazrds\">\r\n                      <td [formGroupName]=\"i\">\r\n                        <mat-form-field appearance=\"fill\">\r\n                          <mat-label>Identify Hazards</mat-label>\r\n                          <mat-select formControlName=\"hazardsArr\" multiple >\r\n                            <mat-select-trigger>\r\n                              <span *ngIf=\"!identifyHazrdsFA().controls[i].get('hazardsArr').value?.length\" class=\"example-additional-selection\">\r\n                              </span>\r\n                              <span *ngIf=\"identifyHazrdsFA().controls[i].get('hazardsArr').value?.length == 1\" class=\"example-additional-selection\">\r\n                                One Item selected\r\n                              </span>\r\n                              <span *ngIf=\"identifyHazrdsFA().controls[i].get('hazardsArr').value?.length > 1\" class=\"example-additional-selection\">\r\n                                More than one selected\r\n                              </span>\r\n                            </mat-select-trigger>\r\n                            <mat-option *ngFor=\"let parameter of allHazards\" ngValue=\"parameter\">{{parameter.title}}\r\n                            </mat-option>\r\n                          </mat-select>\r\n                        </mat-form-field>\r\n                      </td>\r\n                    </ng-container>\r\n                  <ng-container formArrayName=\"riskLevel\">\r\n                    <td [formGroupName]=\"i\">\r\n                      <mat-form-field appearance=\"fill\">\r\n                      <mat-label>Risk</mat-label>\r\n                      <mat-select formControlName=\"riskLevel\" >\r\n                        <mat-option value=\"L1\">L1</mat-option>\r\n                        <mat-option value=\"L2\">L2</mat-option>\r\n                        <mat-option value=\"L3\">L3</mat-option>\r\n                        <mat-option value=\"L4\">L4</mat-option>\r\n                        <mat-option value=\"L5\">L5</mat-option>                        \r\n                      </mat-select>\r\n                    </mat-form-field>\r\n                    </td>\r\n                  </ng-container>\r\n                   \r\n                    <ng-container formArrayName=\"contrActReq\">\r\n                      <td [formGroupName]=\"i\">\r\n                        <mat-form-field appearance=\"fill\">\r\n                          <mat-label>Control Actions Required</mat-label>\r\n                          <mat-select formControlName=\"contrActReqArr\" multiple >\r\n                            <mat-select-trigger>\r\n                              <span *ngIf=\"!contrActReqFA().controls[i].get('contrActReqArr').value?.length\" class=\"example-additional-selection\">\r\n                              </span>\r\n                              <span *ngIf=\"contrActReqFA().controls[i].get('contrActReqArr').value?.length == 1\" class=\"example-additional-selection\">\r\n                                One Item selected\r\n                              </span>\r\n                              <span *ngIf=\"contrActReqFA().controls[i].get('contrActReqArr').value?.length > 1\" class=\"example-additional-selection\">\r\n                                More than one selected\r\n                              </span>\r\n                            </mat-select-trigger>\r\n                            <mat-option *ngFor=\"let parameter of allContrlActReq\" [value]=\"parameter\">{{parameter.title}}\r\n                            </mat-option>\r\n                          </mat-select>\r\n                        </mat-form-field>\r\n                      </td>\r\n                    </ng-container>\r\n\r\n                    <ng-container formArrayName=\"residualRisk\">\r\n                      <td [formGroupName]=\"i\">\r\n                        <mat-form-field appearance=\"fill\">\r\n                        <mat-label>Residule Risk</mat-label>\r\n                        <mat-select formControlName=\"resiRiskLevel\" >\r\n                          <mat-option value=\"L1\">L1</mat-option>\r\n                          <mat-option value=\"L2\">L2</mat-option>\r\n                          <mat-option value=\"L3\">L3</mat-option>\r\n                          <mat-option value=\"L4\">L4</mat-option>\r\n                          <mat-option value=\"L5\">L5</mat-option>                        \r\n                        </mat-select>\r\n                      </mat-form-field>\r\n                      </td>\r\n                    </ng-container>\r\n                 \r\n                 \r\n                 <td *ngIf=\"!task.set\"><button class=\"btn btn-primary\" (click)=\"setRelation(task.title,task._id,i)\">Set</button></td>\r\n                    <td *ngIf=\"task.set\"><button class=\"btn btn-primary\" (click)=\"setRelation(task.title,task._id,i)\">Update</button></td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section> -->\r\n\r\n  <!-- stepper logic -->\r\n  \r\n<h2 class=\"ml-2\"> Set Relation</h2>\r\n<!-- <div class=\"col ml-2 mb-2\">\r\n  \r\n  <button  class=\"btn btn-outline-primary mt-1 mr-2 float-right\"[routerLink]=\"['/admin/siteInfo/addJobTask']\">\r\n    <i class=\"fas fa-folder-plus mr-2\"></i>Add Job Task \r\n  </button>\r\n</div> -->\r\n<div class=\"\">\r\n  <table mat-table [dataSource]=\"dataSource\">\r\n\r\n    <!-- Position Column -->\r\n    <ng-container matColumnDef=\"index\">\r\n      <th mat-header-cell *matHeaderCellDef> No. </th>\r\n      <td mat-cell *matCellDef=\"let element\">{{element.index}}</td>\r\n    </ng-container>\r\n\r\n    <!-- Name Column -->\r\n   \r\n<!-- Name Column -->\r\n<ng-container matColumnDef=\"title\">\r\n  <th mat-header-cell *matHeaderCellDef> Name </th>\r\n  <td mat-cell *matCellDef=\"let element\"> {{element.title}} </td>\r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"edit\">\r\n  <th mat-header-cell *matHeaderCellDef> Set </th>\r\n  <td  mat-cell *matCellDef=\"let element\"(click)=\"setRelation_2(element._id)\"> <button *ngIf=\"!element.set\" class=\"myBtn\" mat-stroked-button color=\"primary\">Set</button> <button  *ngIf=\"element.set\"  class=\"myBtn\" mat-stroked-button color=\"primary\">Update</button>\r\n  </td>\r\n</ng-container>\r\n<!-- <ng-container matColumnDef=\"delete\">\r\n  <th mat-header-cell *matHeaderCellDef> Delete </th>\r\n  <td mat-cell *matCellDef=\"let element\"(click)=\"delete(element)\"> <i class=\"fas fa-trash \"></i> \r\n  </td>\r\n</ng-container> -->\r\n\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n  </table>\r\n\r\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\"\r\n                 showFirstLastButtons \r\n                 aria-label=\"Select page of periodic elements\">\r\n  </mat-paginator>\r\n</div>\r\n","import { SetRelationComponent } from './set-logic/set-relation/set-relation.component';\r\nimport { JobNumberComponent } from './job-number/job-number.component';\r\nimport { SetLogicComponent } from './set-logic/set-logic.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ConfiLogiComponent } from './confi-logi.component';\r\nimport { TestLogicComponent } from './set-logic/test-logic/test-logic.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: ConfiLogiComponent },\r\n  { path: 'setLogic', component: SetLogicComponent },\r\n  { path: 'setJobNumber', component: JobNumberComponent },\r\n  { path: 'setRelation', component: SetRelationComponent },\r\n  { path: 'testRelation', component: TestLogicComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ConfiLogiRoutingModule { }\r\n","import { Component, OnInit,Inject } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport Swal from 'sweetalert2';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\n@Component({\r\n  selector: 'app-add-item',\r\n  templateUrl: './add-item.component.html',\r\n  styleUrls: ['./add-item.component.scss']\r\n})\r\nexport class AddItemComponent implements OnInit {\r\n  addItem!: FormGroup;\r\n  dataRec: any;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    public dialogRef: MatDialogRef<AddItemComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.dataRec = data;\r\n  }\r\n  ngOnInit(): void {\r\n    console.log(this.dataRec);\r\n    \r\n    this.addItem = this.fb.group({\r\n      title: ['', Validators.required],\r\n    });\r\n  }\r\n  onFormSubmit() {\r\n     \r\n    let data={\r\n      title :this.addItem.get('title').value\r\n    }\r\n\r\n    switch (this.dataRec.type) {\r\n      case 'highRisk': {\r\n       this.addHighRisk(data);\r\n        break;\r\n      }\r\n      case 'ppe': {\r\n       this.addPPE(data);\r\n        break;\r\n      }\r\n      case 'licence': {\r\n       this.addLicence(data);\r\n        break;\r\n      }\r\n      case 'identifyHazards': {\r\n       this.addHazard(data);\r\n        break;\r\n      }\r\n      case 'codeOfPract': {\r\n       this.addCOP(data);\r\n        break;\r\n      }\r\n      case 'riskLevel': {\r\n       this.addRiskLevel(data);\r\n        break;\r\n      }\r\n      case 'ctrlActreq': {\r\n       this.addControlActReq(data);\r\n        break;\r\n      }\r\n      case 'resRiskLevel': {\r\n       this.addResidRiskLevel(data);\r\n        break;\r\n      }\r\n      case 'perResbl': {\r\n       this.addStaff(data);\r\n        break;\r\n      }\r\n    \r\n    }\r\n\r\n  }\r\n  closeDialog(){\r\n    this.dialogRef.close('false');\r\n\r\n  }\r\n\r\n  addHighRisk(data){\r\n    this.logicalFormInfo\r\n    .addRisk(data)\r\n    .subscribe((resData) => {\r\n      console.log('resData', resData);\r\n\r\n      this.dialogRef.close('highRisk');\r\n      Swal.fire({\r\n        title: 'Item  Added successfully',\r\n        showConfirmButton: false,\r\n        timer: 1200,\r\n      });     \r\n     });\r\n  }\r\n  addPPE(data){\r\n    this.logicalFormInfo\r\n    .addPPE(data)\r\n    .subscribe((resData) => {\r\n      console.log('resData', resData);\r\n\r\n      this.dialogRef.close('ppe');\r\n      Swal.fire({\r\n        title: 'Item  Added successfully',\r\n        showConfirmButton: false,\r\n        timer: 1200,\r\n      });     \r\n     });\r\n  }\r\n  addRiskLevel(data){\r\n    this.logicalFormInfo\r\n    .addRiskLevel(data)\r\n    .subscribe((resData) => {\r\n      console.log('resData', resData);\r\n\r\n      this.dialogRef.close('riskLevel');\r\n      Swal.fire({\r\n        title: 'Item  Added successfully',\r\n        showConfirmButton: false,\r\n        timer: 1200,\r\n      });     \r\n     });\r\n  }\r\n  addResidRiskLevel(data){\r\n    this.logicalFormInfo\r\n    .addResidual(data)\r\n    .subscribe((resData) => {\r\n      console.log('resData', resData);\r\n\r\n      this.dialogRef.close('resRiskLevel');\r\n      Swal.fire({\r\n        title: 'Item  Added successfully',\r\n        showConfirmButton: false,\r\n        timer: 1200,\r\n      });     \r\n     });\r\n  }\r\n  addHazard(data){\r\n    this.logicalFormInfo\r\n    .addHazards(data)\r\n    .subscribe((resData) => {\r\n      console.log('resData', resData);\r\n\r\n      this.dialogRef.close('identifyHazards');\r\n      Swal.fire({\r\n        title: 'Item  Added successfully',\r\n        showConfirmButton: false,\r\n        timer: 1200,\r\n      });     \r\n     });\r\n  }\r\n  addLicence(data){\r\n let dataTemp={\r\n    title:data.title,\r\n    tradeCategoryId:this.dataRec.tradeCategoryId\r\n  }\r\n    this.logicalFormInfo\r\n    .addLicence(dataTemp)\r\n    .subscribe((resData) => {\r\n      console.log('resData', resData);\r\n\r\n      this.dialogRef.close('licence');\r\n      Swal.fire({\r\n        title: 'Item  Added successfully',\r\n        showConfirmButton: false,\r\n        timer: 1200,\r\n      });     \r\n     });\r\n  }\r\n  addControlActReq(data){\r\n    this.logicalFormInfo\r\n    .addContrlActReq(data)\r\n    .subscribe((resData) => {\r\n      console.log('resData', resData);\r\n\r\n      this.dialogRef.close('ctrlActreq');\r\n      Swal.fire({\r\n        title: 'Item  Added successfully',\r\n        showConfirmButton: false,\r\n        timer: 1200,\r\n      });     \r\n     });\r\n  }\r\n  addStaff(data){\r\n    this.logicalFormInfo\r\n    .addStaff(data)\r\n    .subscribe((resData) => {\r\n      console.log('resData', resData);\r\n\r\n      this.dialogRef.close('perResbl');\r\n      Swal.fire({\r\n        title: 'Item  Added successfully',\r\n        showConfirmButton: false,\r\n        timer: 1200,\r\n      });     \r\n     });\r\n  }\r\n  addCOP(data){\r\n    this.logicalFormInfo\r\n    .addCode(data)\r\n    .subscribe((resData) => {\r\n      console.log('resData', resData);\r\n\r\n      this.dialogRef.close('codeOfPract');\r\n      Swal.fire({\r\n        title: 'Item  Added successfully',\r\n        showConfirmButton: false,\r\n        timer: 1200,\r\n      });     \r\n     });\r\n  }\r\n}\r\n","<form [formGroup]=\"addItem\" >\r\n    <h2 *ngIf=\"dataRec.type==='highRisk'\"> Add High Risk Construction parameter</h2>\r\n    <h2 *ngIf=\"dataRec.type==='ppe'\"> Add PPE</h2>\r\n    <h2 *ngIf=\"dataRec.type==='licence'\"> Add Licence </h2>\r\n    <h2 *ngIf=\"dataRec.type==='identifyHazards'\"> Add Identify Hazards </h2>\r\n    <h2 *ngIf=\"dataRec.type==='riskLevel'\"> Add Risk Level</h2>\r\n    <h2 *ngIf=\"dataRec.type==='ctrlActreq'\"> Add Control Action Required</h2>\r\n    <h2 *ngIf=\"dataRec.type==='resRiskLevel'\"> Add Residual Risk</h2>\r\n    <h2 *ngIf=\"dataRec.type==='perResbl'\"> Add Person Responsible </h2>\r\n    <h2 *ngIf=\"dataRec.type==='codeOfPract'\"> Add Code of Practice </h2>\r\n    <mat-form-field appearance=\"legacy\"\r\n    class=\"example-full-width\" style=\"width: 498px;\">\r\n    <input matInput  formControlName=\"title\" style=\"text-transform: capitalize !important;\">\r\n    </mat-form-field>\r\n    <br>\r\n    \r\n    <div class=\"row\">\r\n        <div class=\"col-sm-2 offset-8 \">\r\n            <button mat-raised-button (click)=\"closeDialog()\">Close</button>\r\n        </div>\r\n        <div class=\"col-sm-2  \">\r\n            <button mat-raised-button  [disabled]=\"!addItem.valid\"(click)=\"onFormSubmit()\">Add</button>\r\n        </div>\r\n    </div>\r\n</form>   \r\n\r\n","import Swal from 'sweetalert2';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { CreateJobNoComponent } from './create-job-no/create-job-no.component';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { AddSiteComponent } from 'src/app/site-info/add-site-info/add-site/add-site.component';\r\nimport { EditSiteComponent } from 'src/app/site-info/add-site-info/edit-site/edit-site.component';\r\nimport { SetTitleService } from 'src/app/utils/services/set-title.service';\r\n\r\n@Component({\r\n  selector: 'app-job-number',\r\n  templateUrl: './job-number.component.html',\r\n  styleUrls: ['./job-number.component.scss'],\r\n})\r\nexport class JobNumberComponent implements OnInit {\r\n  mode: any;\r\n  jobTaskData: any = [];\r\n  ELEMENT_DATA = [];\r\n  /////////////mat table////////////////\r\n  displayedColumns: string[] = [\r\n    'jobNumber',\r\n    'siteName',\r\n    'streetNumber',\r\n    'streetAddress',\r\n    'suburb',\r\n    'state',\r\n    'customerName',\r\n    'customerContact',\r\n    //'customerContactPhone',\r\n   // 'customerEmail',\r\n    /* 'edit', */\r\n    'delete',\r\n  ];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n  /////////////mat table end////////////////\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private setTitle: SetTitleService,\r\n    private logicalFormInfoService: LogicalFormInfoService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.setTitle.setTitle('WHS-Add Site Info');\r\n    this.getAllJobNumber();\r\n  }\r\n  getAllJobNumber() {\r\n    this.logicalFormInfoService.getAllJobNumber().subscribe((res: any) => {\r\n      console.log(res);\r\n      this.dataSource.data = res.data;\r\n      console.log(\"getAllJobNumber\",res.data);\r\n      \r\n      this.dataSource.paginator = this.paginator;\r\n    });\r\n  }\r\n\r\n  getAllJobTask() {\r\n    // this.logicalFormInfo.getAllJobtask().subscribe((res: any) => {\r\n    //   console.log('jobTaskDetails=>', res);\r\n    //   // this.jobTaskData = res.data[0].subComponents;\r\n    //   let data = res.data\r\n    //   data.forEach((element, index) => {\r\n    //     element.index = index + 1; //adding index\r\n    //   });\r\n    //   this.ELEMENT_DATA = data;\r\n    //   this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n    //   this.dataSource.paginator = this.paginator;\r\n    //   //  this.task = res.data.subComponents;\r\n    // });\r\n  }\r\n\r\n  openDialog(id) {\r\n    let dialogRef = this.dialog.open(CreateJobNoComponent, {\r\n      height: '80%',\r\n      data: {\r\n        action: 'new',\r\n        userId: id,\r\n      },\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      console.log('CustomerInfoComponent -> openDialog -> result', result);\r\n     console.log(\"result\",result);\r\n     if(result ===\"success\"){\r\n      this.getAllJobNumber();\r\n      Swal.fire({\r\n        title: 'Job Number created successfully',\r\n        showConfirmButton: false,\r\n        timer: 1200,\r\n      });\r\n     }\r\n      console.log('The dialog was closed');\r\n    });\r\n  }\r\n  edit(element) {\r\n    const dialogRef = this.dialog.open(EditSiteComponent, {\r\n      width: '550px',\r\n      data: element,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result == 'true') {\r\n        this.getAllJobTask();\r\n      }\r\n      console.log('The dialog was closed');\r\n    });\r\n  }\r\n  delete(item) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: `Do you want to delete \"${item.jobNumber}\"?`,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#00B96F',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Delete!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.logicalFormInfoService\r\n          .deleteJobNumber(item._id)\r\n          .subscribe((res) => {\r\n            Swal.fire({\r\n              title: 'Job Number Deleted successfully',\r\n              showConfirmButton: false,\r\n              timer: 1200,\r\n            });\r\n            console.log('deleted res', res);\r\n            this.getAllJobNumber();\r\n          });\r\n      }\r\n    });\r\n  }\r\n}\r\n","\r\n\r\n<h2>\r\n  Job Number List\r\n  <button (click)=\"openDialog('abcd')\" _ngcontent-hqi-c400=\"\" type=\"button\" class=\"btn btn-outline-primary mt-1 mr-2 float-right\"><i _ngcontent-hqi-c400=\"\" class=\"fas fa-plus\"></i> Create </button>\r\n\r\n</h2>\r\n<!-- <div class=\"col ml-2 mb-2\">\r\n  \r\n  <div class=\"col-sm-9\" style=\"display: flex; justify-content: flex-end\">\r\n    <button _ngcontent-tdm-c400=\"\" (click)=\"openDialog('id')\" type=\"button\" class=\"btn btn-outline-primary mt-1 mr-2 float-right\"><i _ngcontent-tdm-c400=\"\" class=\"fas fa-plus\"></i> Add Job Number </button>\r\n</div>\r\n</div> -->\r\n<div class=\"\">\r\n  <table mat-table [dataSource]=\"dataSource\">\r\n\r\n    <!-- Position Column -->\r\n    <ng-container matColumnDef=\"index\">\r\n      <th mat-header-cell *matHeaderCellDef> No. </th>\r\n      <td mat-cell *matCellDef=\"let element;let i = index\">{{i+1}}</td>\r\n    </ng-container>\r\n\r\n    <!-- Name Column -->\r\n   \r\n<!-- Name Column -->\r\n<ng-container matColumnDef=\"jobNumber\">\r\n  <th mat-header-cell *matHeaderCellDef> Job Number </th>\r\n  <td mat-cell *matCellDef=\"let element\"> {{element.jobNumber}} </td>\r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"siteName\">\r\n  <th mat-header-cell *matHeaderCellDef> Site Name </th>\r\n  <td mat-cell *matCellDef=\"let element\"> {{element.siteName}} </td>\r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"streetNumber\">\r\n  <th mat-header-cell *matHeaderCellDef> Street Number </th>\r\n  <td mat-cell *matCellDef=\"let element\"> {{element.streetNumber}} </td>\r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"streetAddress\">\r\n  <th mat-header-cell *matHeaderCellDef> Street Address </th>\r\n  <td mat-cell *matCellDef=\"let element\"> {{element.streetAddress}} </td>\r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"suburb\">\r\n  <th mat-header-cell *matHeaderCellDef> Suburb </th>\r\n  <td mat-cell *matCellDef=\"let element\"> {{element.suburb}} </td>\r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"state\">\r\n  <th mat-header-cell *matHeaderCellDef> State </th>\r\n  <td mat-cell *matCellDef=\"let element\"> {{element.state}} </td>\r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"customerName\">\r\n  <th mat-header-cell *matHeaderCellDef> Customer Name </th>\r\n  <td mat-cell *matCellDef=\"let element\"> {{element.customerName}} </td>\r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"customerContact\">\r\n  <th mat-header-cell *matHeaderCellDef> Customer Contact </th>\r\n  <td mat-cell *matCellDef=\"let element\"> {{element.customerContact}} </td>\r\n</ng-container>\r\n\r\n<!-- <ng-container matColumnDef=\"customerContactPhone\">\r\n  <th mat-header-cell *matHeaderCellDef> Customer Contact Phone </th>\r\n  <td mat-cell *matCellDef=\"let element\"> {{element.customerContactPhone}} </td>\r\n</ng-container> -->\r\n\r\n<!-- <ng-container matColumnDef=\"customerEmail\">\r\n  <th mat-header-cell *matHeaderCellDef> Customer Email </th>\r\n  <td mat-cell *matCellDef=\"let element\"> {{element.customerEmail}} </td>\r\n</ng-container> -->\r\n\r\n\r\n\r\n<ng-container matColumnDef=\"edit\">\r\n  <th mat-header-cell *matHeaderCellDef> Edit </th>\r\n  <td mat-cell *matCellDef=\"let element\"(click)=\"edit(element)\"> <i class=\"fas fa-pencil-alt \"></i> \r\n  </td>\r\n</ng-container>\r\n<ng-container matColumnDef=\"delete\">\r\n  <th mat-header-cell *matHeaderCellDef> Delete </th>\r\n  <td mat-cell *matCellDef=\"let element\"(click)=\"delete(element)\"> <i class=\"fas fa-trash \"></i> \r\n  </td>\r\n</ng-container>\r\n\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n  </table>\r\n\r\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\"\r\n                 showFirstLastButtons \r\n                 aria-label=\"Select page of periodic elements\">\r\n  </mat-paginator>\r\n</div>\r\n"]}