{"version":3,"sources":["./src/app/role-management/role-management.component.ts","./src/app/role-management/role-management.component.html","./src/app/role-management/role-management-routing.module.ts","./src/app/utils/services/role-management.service.ts","./src/app/role-management/add-role/add-role.component.ts","./src/app/role-management/add-role/add-role.component.html","./src/app/role-management/checkbox/checkbox.component.ts","./src/app/role-management/checkbox/checkbox.component.html","./src/app/role-management/role-management.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAGe;;;;;AAM1D,MAAM,uBAAuB;IAElC,YACU,QAAyB,EACzB,MAAiB;QADjB,aAAQ,GAAR,QAAQ,CAAiB;QACzB,WAAM,GAAN,MAAM,CAAW;IACvB,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,qBAAqB,CAAC,CAAC;IAEhD,CAAC;IACD,UAAU,CAAC,EAAE;QACb,IAAI,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,6EAAgB,EAAE;YAC/C,MAAM,EAAC,KAAK;YACb,KAAK,EAAC,OAAO;YAEf,IAAI,EAAE;gBACL,MAAM,EAAE,KAAK;gBACb,MAAM,EAAE,EAAE;aACV;SACD,CAAC,CAAC;QACH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE;YACzC,IAAG,MAAM,KAAK,MAAM,EAAE;aAErB;YACJ,OAAO,CAAC,GAAG,CAAC,0CAA0C,EAAE,MAAM,CAAC,CAAC;YAEhE,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;IACJ,CAAC;;8FA7BW,uBAAuB;uGAAvB,uBAAuB;QCTpC,yEACE;QAAA,yEACI;QAAA,4EAC0D;QADlD,+IAAS,eAAW,EAAE,CAAC,IAAC;QAC0B,kEAAkD;QAAC,qEAC3G;QAAA,4DAAS;QACX,4DAAM;QACV,4DAAM;QACN,0EAA6B;;6FDElB,uBAAuB;cALnC,uDAAS;eAAC;gBACT,QAAQ,EAAE,qBAAqB;gBAC/B,WAAW,EAAE,kCAAkC;gBAC/C,SAAS,EAAE,CAAC,kCAAkC,CAAC;aAChD;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AAEe;;;AAEtE,MAAM,MAAM,GAAW;IACrB,EAAC,IAAI,EAAC,EAAE,EAAC,SAAS,EAAC,kFAAuB,EAAC;CAC5C,CAAC;AAMK,MAAM,2BAA2B;;0GAA3B,2BAA2B;gLAA3B,2BAA2B,kBAH7B,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAEX,2BAA2B,uFAF5B,4DAAY;6FAEX,2BAA2B;cAJvC,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACZD;AAAA;AAAA;AAAA;AAAA;AAA2C;AAEqB;;;AAKzD,MAAM,qBAAqB;IAGhC,YAAoB,KAAiB;QAAjB,UAAK,GAAL,KAAK,CAAY;QAFrC,WAAM,GAAG,qEAAW,CAAC,MAAM,CAAC;IAEa,CAAC;IAG1C,qBAAqB;IACrB,OAAO,CAAC,IAAI;QACV,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,UAAU,EAAE,IAAI,CAAC,CAAC;IACzD,CAAC;IACD,0BAA0B;IAC1B,qEAAqE;IACrE,IAAI;IACJ,UAAU,CAAC,EAAE,EAAC,IAAI;QAChB,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,cAAc,GAAG,EAAE,EAAE,IAAI,CAAC,CAAC;IACjE,CAAC;IACD,mBAAmB;IACnB,gEAAgE;IAChE,IAAI;IACJ,UAAU;QACR,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,aAAa,CAAC;IACpD,CAAC;;0FArBU,qBAAqB;wGAArB,qBAAqB,WAArB,qBAAqB,mBAFpB,MAAM;6FAEP,qBAAqB;cAHjC,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;AAEvB;AACH;AAOP;;;;;;;ICLhB,wEAA0D;IAAA,+EAAmB;IAAA,4DAAI;;;IACjF,wEAA4D;IAAA,kFAAsB;IAAA,4DAAI;;;;IA8BlF,6EACE;IAD+B,uTAAoB;IACnD,mEACF;IAAA,4DAAS;;;IAF6C,4FAA6B;;;;IAGnF,6EACE;IAD+B,uTAAoB;IACnD,mEACF;IAAA,4DAAS;;;IAF6C,4FAA6B;;ADvBxF,MAAM,gBAAgB;IAE3B,YACU,EAAe,EACf,WAAmC,EACpC,SAAyC,EAChB,IAAS;QAHjC,OAAE,GAAF,EAAE,CAAa;QACf,gBAAW,GAAX,WAAW,CAAwB;QACpC,cAAS,GAAT,SAAS,CAAgC;QAChB,SAAI,GAAJ,IAAI,CAAK;QAEzC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAE3B,IAAI,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAGhC,CAAC,CAAC;QACH,OAAO,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;IACxB,CAAC;IAGD,QAAQ;QACP,IAAG,IAAI,CAAC,IAAI,CAAC,MAAM,KAAG,MAAM,EAAC;YAC5B,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;SACxD;IACF,CAAC;IACD,QAAQ;QACN,IAAG,IAAI,CAAC,IAAI,CAAC,MAAM,KAAG,KAAK,EAAC;YAC5B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;YAE7B,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,EAAC,EAAE;gBAC5D,OAAO,CAAC,GAAG,CAAC,KAAK,EAAC,GAAG,CAAC,CAAC;gBAEvB,kDAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC;gBAC/B,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACzB,CAAC,CAAC;SACH;QACA,IAAG,IAAI,CAAC,IAAI,CAAC,MAAM,KAAG,MAAM,EAAC;YAC5B,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,EAAC,EAAE;gBAClF,OAAO,CAAC,GAAG,CAAC,KAAK,EAAC,GAAG,CAAC,CAAC;gBAEvB,kDAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC;gBAChC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YAC/B,CAAC,CAAC;SACH;QAED,kCAAkC;QAClC,0BAA0B;IAC5B,CAAC;IACD,KAAK;QACH,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;;gFAhDU,gBAAgB,ueAMjB,wEAAe;gGANd,gBAAgB;QCf7B,0EACI;QAAA,0EACE;QAAA,yEACA;QAAA,wEACE;QAAA,wGAAiF;QACjF,wGAAsF;QACxF,4DAAK;QACL,4EAIA;QADF,wIAAS,WAAO,IAAC;QACf,0EAAyB;QAAA,iEAAC;QAAA,4DAAO;QACnC,4DAAS;QACP,4DAAM;QACN,gEACA;QAAA,uEACE;QAAA,0EACE;QAAA,0EACE;QAAA,wEAAqD;QAAA,gEAAI;QAAA,4DAAI;QAC7D,uEAOF;QAAA,4DAAM;QACT,4DAAM;QACN,iEAEC;QAAA,4DAAM;QAEN,iEACA;QAAA,0EACE;QAAA,2EACE;QAAA,qHAES;QACT,qHAES;QACX,4DAAM;QACR,4DAAM;QAEV,4DAAO;QACV,4DAAU;;QA5CD,0DAAqB;QAArB,kFAAqB;QAGO,0DAAyB;QAAzB,2FAAyB;QACxB,0DAA0B;QAA1B,4FAA0B;QA8BgC,2DAAyB;QAAzB,2FAAyB;QAGzB,0DAA0B;QAA1B,4FAA0B;;6FDvB9G,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;sBAOI,oDAAM;uBAAC,wEAAe;;;;;;;;;;;;;;AEtB3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4E;AAE3B;AACW;AACkD;AAI5C;;;;;;;;;;ICe1D,yEAA0F;IAAA,iEAAK;IAAA,4DAAK;;IAAhG,0IAA+B;IAAmC,uEAAkB;;;;IACxF,yEAAyC;IAAA,wEAAkB;IAAA,uDAAiB;IAAA,2EAC5E;IADqI,oXAA6B;IAClK,iEACF;IAAA,4DAAO;IAAA,4DAAI;IAAC,4DAAK;;;IAF4C,0DAAiB;IAAjB,2FAAiB;;;IAU1E,yEAAoD;IAAA,mEAAO;IAAA,4DAAK;;;;IAChE,yEAAqD;IAAA,4EAGvD;IAFI,0VAAkC;IADiB,4DAGvD;IAAA,4DAAK;;;;IADD,0DAA0D;IAA1D,iLAA0D;IAFgB,uEAAc;;;IAO1F,yEAAqD;IAAA,iEAAK;IAAA,4DAAK;;;;IAC/D,yEAAgF;IAAA,4EAEhB;IAD9D,2VAAkC;IAD4C,4DAEhB;IAAA,4DAAK;;;;IAAnE,0DAAwD;IAAxD,+KAAwD;IAF6C,uEAAc;;;IAOvH,yEAAoD;IAAA,mEAAO;IAAA,4DAAK;;;;IAChE,yEAAsD;IAAA,4EAEY;IAD9D,8VAAkC;IADgB,4DAEY;IAAA,4DAAK;;;;IAAnE,0DAA4D;IAA5D,qLAA4D;IAFa,uEAAc;;;IAM3F,yEAAoD;IAAA,iEAAK;IAAA,4DAAK;;;;IAC9D,yEAAgF;IAAA,4EAEhB;IAD5D,8VAAkC;IAD0C,4DAEhB;IAAA,4DAAK;;;;IAAjE,0DAA0D;IAA1D,qLAA0D;IAFyC,uEAAc;;;IAMrH,yEAAmD;IAAA,mEAAO;IAAA,4DAAK;;;;IAC/D,yEAAqD;IAAA,4EAEa;IAD9D,8VAAkC;IADe,4DAEa;IAAA,4DAAK;;;;IAAnE,0DAA4D;IAA5D,uLAA4D;IAFY,uEAAc;;;IAM1F,yEAAmD;IAAA,mEAAO;IAAA,4DAAK;;;;IAC/D,yEAAgF;IAAA,4EAEd;IAD9D,8VAAkC;IAD0C,4DAEd;IAAA,4DAAK;;;;IAAnE,0DAA4D;IAA5D,uLAA4D;IAFuC,uEAAc;;;IAMrH,yEAAmD;IAAA,gEAAI;IAAA,4DAAK;;;;IAC5D,yEAAqD;IAAA,4EAEU;IAD3D,8VAAkC;IADe,4DAEU;IAAA,4DAAK;;;;IAAhE,0DAAyD;IAAzD,oLAAyD;IAFe,uEAAc;;;IAQ1F,yEAAoD;IAAA,mEAAO;IAAA,4DAAK;;;;IAChE,yEAAsD;IAAA,4EAEa;IAD/D,8VAAkC;IADgB,4DAEa;IAAA,4DAAK;;;;IAApE,0DAA6D;IAA7D,wLAA6D;IAFY,uEAAc;;;IAM3F,yEAAoD;IAAA,iEAAK;IAAA,4DAAK;;;;IAC9D,yEAAgF;IAAA,4EAEf;IAD7D,8VAAkC;IAD0C,4DAEf;IAAA,4DAAK;;;;IAAlE,0DAA2D;IAA3D,sLAA2D;IAFwC,uEAAc;;;IAMrH,yEAAoD;IAAA,mEAAO;IAAA,4DAAK;;;;IAChE,yEAAqD;IAAA,4EAEc;IAD/D,8VAAkC;IADe,4DAEc;IAAA,4DAAK;;;;IAApE,0DAA6D;IAA7D,wLAA6D;IAFW,uEAAc;;;IAM1F,yEAAoD;IAAA,mEAAO;IAAA,4DAAK;;;;IAChE,yEAAgF;IAAA,4EAEb;IAD/D,8VAAkC;IAD0C,4DAEb;IAAA,4DAAK;;;;IAApE,0DAA6D;IAA7D,wLAA6D;IAFsC,uEAAc;;;IAMrH,yEAAoD;IAAA,gEAAI;IAAA,4DAAK;;;;IAC7D,yEAAqD;IAAA,4EAEW;IAD5D,8VAAkC;IADe,4DAEW;IAAA,4DAAK;;;;IAAjE,0DAA0D;IAA1D,qLAA0D;IAFc,uEAAc;;;IAQxF,yEAAoD;IAAA,mEAAO;IAAA,4DAAK;;;;IAChE,yEAAsD;IAAA,4EAEgB;IADpE,8VAAkC;IADkB,4DAEgB;IAAA,4DAAK;;;;IAAzE,0DAA8D;IAA9D,yLAA8D;IAFa,uEAAc;;;IAM3F,yEAAoD;IAAA,iEAAK;IAAA,4DAAK;;;;IAC9D,yEAAgF;IAAA,4EAEZ;IADlE,8VAAkC;IAD4C,4DAEZ;IAAA,4DAAK;;;;IAAvE,0DAA4D;IAA5D,uLAA4D;IAFyC,uEAAc;;;IAMrH,yEAAoD;IAAA,mEAAO;IAAA,4DAAK;;;;IAChE,yEAAqD;IAAA,4EAEiB;IADpE,8VAAkC;IADiB,4DAEiB;IAAA,4DAAK;;;;IAAzE,0DAA8D;IAA9D,yLAA8D;IAFY,uEAAc;;;IAM1F,yEAAoD;IAAA,mEAAO;IAAA,4DAAK;;;;IAChE,yEAAgF;IAAA,4EAEV;IADpE,8VAAkC;IAD4C,4DAEV;IAAA,4DAAK;;;;IAAzE,0DAA8D;IAA9D,yLAA8D;IAFuC,uEAAc;;;IAMrH,yEAAoD;IAAA,gEAAI;IAAA,4DAAK;;;;IAC7D,yEAAqD;IAAA,4EAEc;IADjE,8VAAkC;IADiB,4DAEc;IAAA,4DAAK;;;;IAAtE,0DAA2D;IAA3D,sLAA2D;IAFe,uEAAc;;;IAQtF,yEAAoD;IAAA,mEAAO;IAAA,4DAAK;;;;IAChE,yEAAqD;IAAA,4EAGvD;IAFA,8VAAkC;IADqB,4DAGvD;IAAA,4DAAK;;;;IADL,0DAAkE;IAAlE,6LAAkE;IAFY,uEAAc;;;IAO1F,yEAAoD;IAAA,iEAAK;IAAA,4DAAK;;;;IAC9D,yEAA+E;IAAA,4EAGjF;IAFA,8VAAkC;IAD+C,4DAGjF;IAAA,4DAAK;;;;IADL,0DAAgE;IAAhE,2LAAgE;IAFwC,uEAAc;;;IAOpH,yEAAoD;IAAA,mEAAO;IAAA,4DAAK;;;;IAChE,yEAAoD;IAAA,4EAGtD;IAFA,8VAAkC;IADoB,4DAGtD;IAAA,4DAAK;;;;IADL,0DAAkE;IAAlE,6LAAkE;IAFW,uEAAc;;;IAOzF,yEAAoD;IAAA,mEAAO;IAAA,4DAAK;;;;IAChE,yEAA+E;IAAA,4EAGjF;IAFA,8VAAkC;IAD+C,4DAGjF;IAAA,4DAAK;;;;IADL,0DAAkE;IAAlE,6LAAkE;IAFsC,uEAAc;;;IAOpH,yEAAoD;IAAA,gEAAI;IAAA,4DAAK;;;;IAC7D,yEAAoD;IAAA,4EAGtD;IAFA,8VAAkC;IADoB,4DAGtD;IAAA,4DAAK;;;;IADL,0DAA+D;IAA/D,0LAA+D;IAFc,uEAAc;;;IAUzF,yEAAoD;IAAA,mEAAO;IAAA,4DAAK;;;;IAChE,yEAAqD;IAAA,4EAGvD;IAFA,8VAAkC;IADqB,4DAGvD;IAAA,4DAAK;;;;IADL,0DAAgE;IAAhE,2LAAgE;IAFc,uEAAc;;;IAO1F,yEAAqD;IAAA,iEAAK;IAAA,4DAAK;;;;IAC/D,yEAA+E;IAAA,4EAGjF;IAFA,8VAAkC;IAD+C,4DAGjF;IAAA,4DAAK;;;;IADL,0DAA8D;IAA9D,yLAA8D;IAF0C,uEAAc;;;IAOpH,yEAAoD;IAAA,mEAAO;IAAA,4DAAK;;;;IAChE,yEAAoD;IAAA,4EAGtD;IAFA,8VAAkC;IADoB,4DAGtD;IAAA,4DAAK;;;;IADL,0DAAgE;IAAhE,2LAAgE;IAFa,uEAAc;;;IAOzF,yEAAoD;IAAA,mEAAO;IAAA,4DAAK;;;;IAChE,yEAA+E;IAAA,4EAGjF;IAFA,8VAAkC;IAD+C,4DAGjF;IAAA,4DAAK;;;;IADL,0DAAgE;IAAhE,2LAAgE;IAFwC,uEAAc;;;IAOpH,yEAAoD;IAAA,gEAAI;IAAA,4DAAK;;;;IAC7D,yEAAoD;IAAA,4EAGtD;IAFA,8VAAkC;IADoB,4DAGtD;IAAA,4DAAK;;;;IADL,0DAA6D;IAA7D,wLAA6D;IAFgB,uEAAc;;;IASzF,yEAAoD;IAAA,mEAAO;IAAA,4DAAK;;;;IAChE,yEAAqD;IAAA,4EAGvD;IAFA,8VAAkC;IADqB,4DAGvD;IAAA,4DAAK;;;;IADL,0DAAoD;IAApD,+KAAoD;IAF0B,uEAAc;;;IAO1F,yEAAqD;IAAA,iEAAK;IAAA,4DAAK;;;;IAC/D,yEAA+E;IAAA,4EAGjF;IAFA,8VAAkC;IAD+C,4DAGjF;IAAA,4DAAK;;;;IADL,0DAAkD;IAAlD,6KAAkD;IAFsD,uEAAc;;;IAOpH,yEAAoD;IAAA,mEAAO;IAAA,4DAAK;;;;IAChE,yEAAoD;IAAA,4EAGtD;IAFA,8VAAkC;IADoB,4DAGtD;IAAA,4DAAK;;;;IADL,0DAAoD;IAApD,+KAAoD;IAFyB,uEAAc;;;IAOzF,yEAAoD;IAAA,mEAAO;IAAA,4DAAK;;;;IAChE,yEAA+E;IAAA,4EAGjF;IAFA,8VAAkC;IAD+C,4DAGjF;IAAA,4DAAK;;;;IADL,0DAAoD;IAApD,+KAAoD;IAFoD,uEAAc;;;IAOpH,yEAAoD;IAAA,gEAAI;IAAA,4DAAK;;;;IAC7D,yEAAoD;IAAA,4EAGtD;IAFA,+VAAkC;IADoB,4DAGtD;IAAA,4DAAK;;;;IADL,0DAAiD;IAAjD,4KAAiD;IAF4B,uEAAc;;;IAUzF,yEAAoD;IAAA,mEAAO;IAAA,4DAAK;;;;IAChE,yEAAqD;IAAA,4EAGvD;IAFA,+VAAkC;IADqB,4DAGvD;IAAA,4DAAK;;;;IADL,0DAA8D;IAA9D,yLAA8D;IAFgB,uEAAc;;;IAO1F,yEAAqD;IAAA,iEAAK;IAAA,4DAAK;;;;IAC/D,yEAA+E;IAAA,4EAGjF;IAFA,+VAAkC;IAD+C,4DAGjF;IAAA,4DAAK;;;;IADL,0DAA4D;IAA5D,uLAA4D;IAF4C,uEAAc;;;IAOpH,yEAAoD;IAAA,mEAAO;IAAA,4DAAK;;;;IAChE,yEAAoD;IAAA,4EAGtD;IAFA,+VAAkC;IADoB,4DAGtD;IAAA,4DAAK;;;;IADL,0DAA8D;IAA9D,yLAA8D;IAFe,uEAAc;;;IAOzF,yEAAoD;IAAA,mEAAO;IAAA,4DAAK;;;;IAChE,yEAA+E;IAAA,4EAGjF;IAFA,+VAAkC;IAD+C,4DAGjF;IAAA,4DAAK;;;;IADL,0DAA8D;IAA9D,yLAA8D;IAF0C,uEAAc;;;IAOpH,yEAAoD;IAAA,gEAAI;IAAA,4DAAK;;;;IAC7D,yEAAoD;IAAA,4EAGtD;IAFA,+VAAkC;IADoB,4DAGtD;IAAA,4DAAK;;;;IADL,0DAA2D;IAA3D,sLAA2D;IAFkB,uEAAc;;;IAU/F,yEACA;IAAA,iEACA;IAAA,4DAAK;;IAFsD,uEAAkB;;;IAK7E,yEACE;IAAA,sEACF;IAAA,4DAAK;;IAFkC,uEAAkB;;;IAKzD,yEACE;IAAA,yEACF;IAAA,4DAAK;;IAFkC,uEAAkB;;;IAKzD,yEACE;IAAA,0EACF;IAAA,4DAAK;;IAFkC,uEAAkB;;;IAKzD,yEACE;IAAA,2EACF;IAAA,4DAAK;;IAFkC,uEAAkB;;;IAKzD,yEACE;IAAA,+EACF;IAAA,4DAAK;;IAFkC,uEAAkB;;;IAMzD,yEACE;IAAA,8EACF;IAAA,4DAAK;;IAFkC,uEAAkB;;;IAMzD,yEACE;IAAA,gEACF;IAAA,4DAAK;;IAFkC,uEAAkB;;;IAMzD,yEACE;IAAA,2EACF;IAAA,4DAAK;;IAFkC,uEAAkB;;;IAO3D,oEAEK;;;IACL,oEAAwE;;;;IACxE,yEAAqF;IAAvB,8WAAsB;IAAC,4DAAK;;;;IA/W5F,wEAEA;IAAA,2EACE;IAAA,2EACE;IAAA,0HAAoG;IACpG,0HAEe;IACjB,qEAAe;IAMb,4EACE;IAAA,2HAAgE;IAChE,0HAGG;IACL,qEAAe;IAEf,4EACE;IAAA,2HAA+D;IAC/D,6HAEqE;IACvE,qEAAe;IAGjB,6EACE;IAAA,6HAAgE;IAChE,4HAEuE;IACzE,qEAAe;IAEf,6EACE;IAAA,6HAA8D;IAC9D,6HAEqE;IACvE,qEAAe;IAEf,6EACE;IAAA,6HAA+D;IAC/D,4HAEuE;IACzE,qEAAe;IAEf,6EACE;IAAA,6HAA+D;IAC/D,6HAEuE;IACzE,qEAAe;IAEf,6EACE;IAAA,6HAA4D;IAC5D,4HAEoE;IACtE,qEAAe;IAIf,6EACE;IAAA,6HAAgE;IAChE,4HAEwE;IAC1E,qEAAe;IAEf,6EACE;IAAA,6HAA8D;IAC9D,6HAEsE;IACxE,qEAAe;IAEf,6EACE;IAAA,6HAAgE;IAChE,4HAEwE;IAC1E,qEAAe;IAEf,6EACE;IAAA,6HAAgE;IAChE,6HAEwE;IAC1E,qEAAe;IAEf,6EACE;IAAA,6HAA6D;IAC7D,4HAEqE;IACvE,qEAAe;IAIZ,6EACC;IAAA,6HAAgE;IAChE,4HAE2E;IAC7E,qEAAe;IAEf,6EACE;IAAA,6HAA8D;IAC9D,6HAEyE;IAC3E,qEAAe;IAEf,6EACE;IAAA,6HAAgE;IAChE,4HAE2E;IAC7E,qEAAe;IAEf,6EACE;IAAA,6HAAgE;IAChE,6HAE2E;IAC7E,qEAAe;IAEf,6EACE;IAAA,6HAA6D;IAC7D,4HAEwE;IAC1E,qEAAe;IAIX,6EACE;IAAA,6HAAgE;IAChE,4HAGG;IACL,qEAAe;IAEf,6EACE;IAAA,6HAA8D;IAC9D,6HAGG;IACL,qEAAe;IAEf,6EACE;IAAA,6HAAgE;IAChE,4HAGG;IACL,qEAAe;IAEf,6EACE;IAAA,6HAAgE;IAChE,6HAGG;IACL,qEAAe;IAEf,6EACE;IAAA,6HAA6D;IAC7D,4HAGG;IACL,qEAAe;IAKf,6EACE;IAAA,6HAAgE;IAChE,4HAGG;IACL,qEAAe;IAEf,6EACE;IAAA,6HAA+D;IAC/D,6HAGG;IACL,qEAAe;IAEf,6EACE;IAAA,6HAAgE;IAChE,4HAGG;IACL,qEAAe;IAEf,6EACE;IAAA,6HAAgE;IAChE,6HAGG;IACL,qEAAe;IAEf,6EACE;IAAA,6HAA6D;IAC7D,4HAGG;IACL,qEAAe;IAId,6EACC;IAAA,6HAAgE;IAChE,4HAGG;IACL,qEAAe;IAEf,6EACE;IAAA,6HAA+D;IAC/D,6HAGG;IACL,qEAAe;IAEf,6EACE;IAAA,6HAAgE;IAChE,4HAGG;IACL,qEAAe;IAEf,6EACE;IAAA,6HAAgE;IAChE,6HAGG;IACL,qEAAe;IAEf,6EACE;IAAA,6HAA6D;IAC7D,8HAGG;IACL,qEAAe;IAKd,8EACC;IAAA,+HAAgE;IAChE,8HAGG;IACL,qEAAe;IAEf,8EACE;IAAA,+HAA+D;IAC/D,+HAGG;IACL,qEAAe;IAEf,8EACE;IAAA,+HAAgE;IAChE,8HAGG;IACL,qEAAe;IAEf,8EACE;IAAA,+HAAgE;IAChE,+HAGG;IACL,qEAAe;IAEf,8EACE;IAAA,+HAA6D;IAC7D,8HAGG;IACL,qEAAe;IAKrB,8EACE;IAAA,+HAEK;IACP,qEAAe;IACf,8EACE;IAAA,+HAEK;IACP,qEAAe;IACf,8EACE;IAAA,+HAEK;IACP,qEAAe;IACf,8EACE;IAAA,+HAEK;IACP,qEAAe;IACf,8EACE;IAAA,+HAEK;IACP,qEAAe;IACf,8EACE;IAAA,+HAEK;IACP,qEAAe;IAEf,8EACE;IAAA,+HAEK;IACP,qEAAe;IAEf,8EACE;IAAA,+HAEK;IACP,qEAAe;IAEf,8EACE;IAAA,+HAEK;IACP,qEAAe;IAIf,+HAEK;IACL,+HAAwE;IACxE,+HAA0F;IAC5F,4DAAQ;IAEV,qEAAe;;;IAhXI,0DAAwB;IAAxB,wFAAwB;IA0WpC,4DAAoJ;IAApJ,kJAAoJ;IAEnI,0DAAkC;IAAlC,oGAAkC;IACpB,0DAA0B;IAA1B,qGAA0B;;ADnX3D,MAAM,iBAAiB;IAe5B,YACU,EAAe,EACf,WAAkC,EAClC,MAAiB;QAFjB,OAAE,GAAF,EAAE,CAAa;QACf,gBAAW,GAAX,WAAW,CAAuB;QAClC,WAAM,GAAN,MAAM,CAAW;QAN3B,YAAO,GAAG,KAAK,CAAC;QAchB,gBAAW,GAAG;YACZ,WAAW;YACX,aAAa;YACb,cAAc;YACd,eAAe;YACf,mBAAmB;YACnB,iBAAiB;YACjB,KAAK;YACL,eAAe;SAChB;QACD,qBAAgB,GAAa;YAC3B,MAAM;YAEN,kBAAkB;YAClB,gBAAgB;YAEhB,oBAAoB;YACpB,iBAAiB;YACjB,oBAAoB;YACpB,oBAAoB;YACpB,kBAAkB;YAElB,qBAAqB;YACrB,kBAAkB;YAClB,qBAAqB;YACrB,qBAAqB;YACrB,mBAAmB;YAEnB,sBAAsB;YACtB,mBAAmB;YACnB,sBAAsB;YACtB,sBAAsB;YACtB,oBAAoB;YAEpB,0BAA0B;YAC1B,uBAAuB;YACvB,0BAA0B;YAC1B,0BAA0B;YAC1B,wBAAwB;YAExB,wBAAwB;YACxB,qBAAqB;YACrB,wBAAwB;YACxB,wBAAwB;YACxB,sBAAsB;YAEtB,YAAY;YACZ,SAAS;YACT,YAAY;YACZ,YAAY;YACZ,UAAU;YAEV,sBAAsB;YACtB,mBAAmB;YACnB,sBAAsB;YACtB,sBAAsB;YACtB,oBAAoB;SACrB,CAAC;QA/DA,IAAI,CAAC,UAAU,EAAE;QACjB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAElC,CAAC,CAAC;IACL,CAAC;IA8DD,QAAQ;QAEN,IAAI,CAAC,UAAU,EAAE;QACjB,2CAA2C;QAC3C,oCAAoC;QACpC,oBAAoB;QACpB,qEAAqE;QACrE,yEAAyE;QAGzE,+DAA+D;QAE/D,6BAA6B;QAC7B,mCAAmC;QAGnC,8BAA8B;QAC9B,4DAA4D;QAC5D,uJAAuJ;QAEvJ,yDAAyD;QAEzD,8JAA8J;QAC9J,oKAAoK;QACpK,oKAAoK;QACpK,oKAAoK;QACpK,8JAA8J;QAC9J,iBAAiB;QACjB,kKAAkK;QAClK,8JAA8J;QAE9J,qBAAqB;QAGrB,aAAa;QAEb,YAAY;QAEZ,UAAU;QAGV,SAAS;IACX,CAAC;IACD,eAAe,CAAC,CAAC;QACf,0DAA0D;QAC1D,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;QACxB,6DAA6D;IAG/D,CAAC;IACD,WAAW,CAAC,MAAM;IAElB,CAAC;IACD,WAAW,CAAC,OAAY;IAGxB,CAAC;IACD,OAAO,CAAC,GAAG;QACT,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;IAE1B,CAAC;IACD,UAAU;QACR,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,CAAC,GAAQ,EAAE,EAAE;YAEnD,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,IAAI;YACvB,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;YACjC,IAAI,CAAC,SAAS,GAAG,IAAI,0EAAkB,CAAM,IAAI,CAAC,OAAO,CAAC,CAAC;YAC3D,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;YAEhC,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;gBACxD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAChD,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,mBAAmB,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;oBACxH,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,iBAAiB,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;oBACtH,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;oBACrI,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;oBACnI,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;oBACrI,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;oBACrI,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;iBACnI;aACF;YACD,IAAI,CAAC,QAAQ,EAAE;QAEjB,CAAC,CAAC;IACJ,CAAC;IACD,IAAI;QACF,OAAO,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,WAAW,CAAc,CAAC;IAC1D,CAAC;IACD,UAAU,CAAC,KAAK;QACd,OAAO,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACnB,CAAC,mBAAmB,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAC5E,CAAC,CAAC;IACL,CAAC;IACD,QAAQ;QACN,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAChD,IAAI,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC;QAC/C,IAAI,SAAS,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,CAAS,EAAE,EAAE;YACpC,IAAI,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC;YACtB,IAAI,GAAG;YACP,GAAG,GAAG;gBACJ,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;gBACZ,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;aACb;YACD,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK;YAC7F,OAAO,GAAG;QACZ,CAAC,CAAC;QACF,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;QAC/B,IAAI,SAAS;QACb,IAAI,IAAI;QACR,IAAI,MAAM,GAAG,EAAE;QAEf,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;YACxD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAChD,IAAI,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE;oBAC5B,OAAO,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,IAAI;gBAC9E,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;gBAC/C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;aAClB;SAEF;QACD,IAAI,MAAM,GAAG,EAAE;QACf,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;YACxD,IAAI,GAAG,GAAG,EAAE;YACZ,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC;YAC/D,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE;gBACf,OAAO,CAAC,CAAC,IAAI;YACf,CAAC,CAAC,CAAC;YACH,IAAI,GAAG,GAAG;gBACR,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,IAAI;gBAC9B,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,GAAG;aAC7B;YACD,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;SACjB;QAED,kEAAkE;QAClE,iCAAiC;QAGjC,2DAA2D;QAC3D,oBAAoB;QACpB,kCAAkC;QAClC,kCAAkC;QAClC,gCAAgC;QAChC,sCAAsC;QACtC,sCAAsC;QACtC,MAAM;QACN,2BAA2B;QAC3B,IAAI;QACJ,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;IAE/B,CAAC;IACD,QAAQ;QACN,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;YACxD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAG1D,IAAI,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gBAEpD,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;gBAChB,GAAG,CAAC,OAAO,CAAC,CAAC,CAAM,EAAE,CAAC,EAAE,EAAE;;oBAIxB,OAAO,CAAC,GAAG,CAAC,+BAA+B,CAAE,CAAC;oBAC9C,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,OAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,0CAAE,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE;oBAE5I,2CAA2C;oBAE3C,8IAA8I;oBAC9I,oJAAoJ;oBACpJ,oJAAoJ;oBACpJ,oJAAoJ;oBACpJ,8IAA8I;oBAC9I,IAAI;oBACJ,kJAAkJ;oBAClJ,8IAA8I;gBAEhJ,CAAC,CAAC;aAEH;SAGF;QACD,IAAI,CAAC,OAAO,GAAG,IAAI;IACrB,CAAC;IACD,UAAU,CAAC,IAAI;QACf,IAAI,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,6EAAgB,EAAE;YAC/C,MAAM,EAAC,KAAK;YACb,KAAK,EAAC,OAAO;YAEf,IAAI,EAAE;gBACL,MAAM,EAAC,MAAM;gBACb,IAAI,EAAE,IAAI;aACV;SACD,CAAC,CAAC;QACH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE;YACzC,IAAG,MAAM,KAAK,MAAM,EAAE;gBACrB,IAAI,CAAC,QAAQ,EAAE;aACf;YACJ,OAAO,CAAC,GAAG,CAAC,0CAA0C,EAAE,MAAM,CAAC,CAAC;YAEhE,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;IACJ,CAAC;;kFAjSW,iBAAiB;iGAAjB,iBAAiB;kEAQjB,8DAAO;;;;;QCtBpB,yEACE;QAAA,yEACE;QAAA,qEAAI;QAAA,+EAAoB;QAAA,4DAAK;QAC/B,4DAAM;QAEJ,yEACI;QAAA,4EAC2E;QAAtB,yIAAS,cAAU,IAAC;QAAE,mEACzE;QAAA,4DAAS;QACX,4DAAM;QACV,4DAAM;QAOR,yEACE;QAAA,iIAkXa;QACf,4DAAM;;QApXuD,0DAA2B;QAA3B,wFAA2B;QACvE,0DAAa;QAAb,6EAAa;;6FDJnB,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;iSASqB,IAAI;kBAAvB,uDAAS;mBAAC,8DAAO;YACT,IAAI;kBAAZ,mDAAK;YACI,KAAK;kBAAd,oDAAM;;;;;;;;;;;;;;AEzBT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACU;AACZ;AACQ;AAC0B;AACT;AACJ;AACD;;AAc1D,MAAM,oBAAoB;;mGAApB,oBAAoB;kKAApB,oBAAoB,kBARtB;YACP,4DAAY;YACZ,2FAA2B;YAC3B,kEAAY;YACZ,0DAAW;YACX,kEAAmB;SACpB;mIAEU,oBAAoB,mBAThB,kFAAuB,EAAE,8EAAiB,EAAE,6EAAgB,aAEzE,4DAAY;QACZ,2FAA2B;QAC3B,kEAAY;QACZ,0DAAW;QACX,kEAAmB;6FAGV,oBAAoB;cAVhC,sDAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,kFAAuB,EAAE,8EAAiB,EAAE,6EAAgB,CAAC;gBAC5E,OAAO,EAAE;oBACP,4DAAY;oBACZ,2FAA2B;oBAC3B,kEAAY;oBACZ,0DAAW;oBACX,kEAAmB;iBACpB;aACF","file":"role-management-role-management-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { SetTitleService } from 'src/app/utils/services/set-title.service';\r\nimport { AddRoleComponent } from './add-role/add-role.component';\r\n@Component({\r\n  selector: 'app-role-management',\r\n  templateUrl: './role-management.component.html',\r\n  styleUrls: ['./role-management.component.scss']\r\n})\r\nexport class RoleManagementComponent implements OnInit {\r\n\r\n  constructor(\r\n    private setTitle: SetTitleService, \r\n    private dialog: MatDialog,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.setTitle.setTitle('WHS-Role Management');\r\n    \r\n  }\r\n  openDialog(id) {\r\n\t\tlet dialogRef = this.dialog.open(AddRoleComponent, {\r\n      height:'50%',\r\n     width:'500px',\r\n    \r\n\t\t\tdata: {\r\n\t\t\t\taction: \"new\",\r\n\t\t\t\tuserId: id,\r\n\t\t\t},\r\n\t\t});\r\n\t\tdialogRef.afterClosed().subscribe((result) => {\r\n      if(result === 'true' ){\r\n       \r\n      }\r\n\t\t\tconsole.log(\"AddRoleComponent -> openDialog -> result\", result);\r\n\t\t\t\r\n\t\t\tconsole.log(\"The dialog was closed\");\r\n\t\t});\r\n\t}\r\n\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col mt-2 mb-2\">\r\n      <button (click)=\"openDialog('')\" _ngcontent-hqi-c400=\"\" type=\"button\"\r\n          class=\"btn btn-outline-primary mt-1 mr-2 float-right\"><i _ngcontent-hqi-c400=\"\" class=\"fas fa-plus\"></i> Add Role\r\n        </button>\r\n      </div> \r\n  </div>\r\n  <app-checkbox></app-checkbox>\r\n<!-- <mat-tab-group mat-align-tabs=\"start\">\r\n    <mat-tab label=\"Content-1\"><app-checkbox></app-checkbox></mat-tab>\r\n    <mat-tab label=\"Content-2\">Content-2</mat-tab>\r\n    <mat-tab label=\"Content-3\">Content-3</mat-tab>\r\n    <mat-tab label=\"Content-4\">Content-4</mat-tab>\r\n  </mat-tab-group> -->\r\n  \r\n  \r\n\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CheckboxComponent } from './checkbox/checkbox.component';\r\nimport { RoleManagementComponent } from './role-management.component';\r\n\r\nconst routes: Routes = [\r\n  {path:'',component:RoleManagementComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class RoleManagementRoutingModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RoleManagementService {\r\n  apiUrl = environment.apiUrl;\r\n\r\n  constructor(private https: HttpClient) { }\r\n\r\n\r\n  ///role management///\r\n  addRole(data) {\r\n    return this.https.post(this.apiUrl + 'role/add', data);\r\n  }\r\n  // addMultipleRisk(data) {\r\n  //   return this.https.post(this.apiUrl + 'risk/add/multiple', data);\r\n  // }\r\n  updateRole(id,data) {\r\n    return this.https.put(this.apiUrl + 'role/update/' + id, data);\r\n  }\r\n  // deleteRisk(id) {\r\n  //   return this.https.delete(this.apiUrl + 'risk/delete/' + id)\r\n  // }\r\n  getAllRole() {\r\n    return this.https.get(this.apiUrl + 'role/getAll')\r\n  }\r\n  // getRiskById(id) {\r\n  //   return this.https.get(this.apiUrl + 'risk/get/' + id)\r\n  // }\r\n}\r\n","import { Component, OnInit,Inject } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA,\r\n} from '@angular/material/dialog';\r\nimport Swal from 'sweetalert2';\r\nimport {RoleManagementService}from'../../utils/services/role-management.service';\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n\r\n} from '@angular/forms';\r\n@Component({\r\n  selector: 'app-add-role',\r\n  templateUrl: './add-role.component.html',\r\n  styleUrls: ['./add-role.component.scss']\r\n})\r\nexport class AddRoleComponent implements OnInit {\r\n  addRole!: FormGroup;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private roleService : RoleManagementService,\r\n    public dialogRef: MatDialogRef<AddRoleComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.addRole = this.fb.group({\r\n    \r\n      role: ['', Validators.required],\r\n    \r\n     \r\n    });\r\n    console.log('', data);\r\n  }\r\n  \r\n\r\n  ngOnInit(): void {\r\n   if(this.data.action===\"edit\"){\r\n    this.addRole.get(\"role\").patchValue(this.data.role.role)\r\n   }\r\n  }\r\n  onSubmit() {\r\n    if(this.data.action===\"new\"){\r\n    console.log(this.addRole.value)\r\n    \r\n      this.roleService.addRole(this.addRole.value).subscribe((res)=>{\r\n        console.log(\"res\",res);\r\n        \r\n        Swal.fire('Added Successfully')\r\n        this.dialogRef.close();\r\n      })\r\n    } \r\n     if(this.data.action===\"edit\"){\r\n      this.roleService.updateRole(this.data.role._id,this.addRole.value).subscribe((res)=>{\r\n        console.log(\"res\",res);\r\n        \r\n        Swal.fire('Update Successfully')\r\n        this.dialogRef.close(\"true\");\r\n      })\r\n    }\r\n  \r\n    // Swal.fire('Added Successfully')\r\n    // this.dialogRef.close();\r\n  }\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","\r\n<section>\r\n    <form [formGroup]=\"addRole\">\r\n      <div mat-dialog-title class=\"dialog-title\">\r\n      <h2 class=\"text-center pt-2\">\r\n        <p style=\"text-align: center\"*ngIf=\"data.action==='new'\"> Add Role Management</p>\r\n        <p style=\"text-align: center\" *ngIf=\"data.action==='edit'\"> Update Role Management</p>\r\n      </h2>\r\n      <button type=\"button\" class=\"close\" \r\n      style=\"font-size: 30px;\"\r\n    \r\n    (click)=\"close()\" aria-label=\"Close\">\r\n      <span aria-hidden=\"true\">×</span>\r\n    </button>\r\n      </div>\r\n      <hr />\r\n      <div>\r\n        <div class=\"row\">\r\n          <div class=\"col-12 mt-2 mb-2\">\r\n            <p for=\"exampleFormControlInput1\" class=\"form-Label\">Role</p>\r\n            <input\r\n              type=\"text\"\r\n              formControlName=\"role\"\r\n              style=\"height: 50px\"\r\n              class=\"form-control\"\r\n              id=\"heading\"\r\n            />\r\n          </div>\r\n       </div>\r\n       <br>\r\n       \r\n        </div>\r\n      \r\n        <br>\r\n        <div class=\"row\">\r\n          <div class=\"col d-flex justify-content-center\">\r\n            <button class=\"btn btn-primary \" (click)=\"onSubmit()\" [disabled]=\"addRole.invalid \" *ngIf=\"data.action==='new'\"> \r\n              Submit\r\n            </button>\r\n            <button class=\"btn btn-primary \" (click)=\"onSubmit()\" [disabled]=\"addRole.invalid \" *ngIf=\"data.action==='edit'\"> \r\n              Update\r\n            </button>\r\n          </div>\r\n        </div>\r\n      \r\n    </form>\r\n </section>\r\n  ","import { Component, Input, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table'\r\nimport { FormBuilder, FormGroup, Validators, FormArray, FormControl, FormControlName, } from '@angular/forms';\r\nimport { RoleManagementService } from '../../utils/services/role-management.service'\r\nimport { of } from 'rxjs';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { AddRoleComponent } from '../add-role/add-role.component';\r\n\r\n@Component({\r\n  selector: 'app-checkbox',\r\n  templateUrl: './checkbox.component.html',\r\n  styleUrls: ['./checkbox.component.scss']\r\n})\r\nexport class CheckboxComponent implements OnInit {\r\n  // displayedColumns: string[] = [\"role\",'dynamicform',\"Logicalforms\",\"FormConfigure\",\"SubscriptionRates\",'LogicalFormData','CMS','StateRelation'];\r\n  rolemanagment: FormGroup;\r\n\r\n  \r\n  showDatas: any;\r\n  tempArray: MatTableDataSource<any>;\r\n  // @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @Input() Arry: any;\r\n  @Output() Arry1: any;\r\n  roleArr: any;\r\n  formArr = false;\r\n  roleData: any\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private roleService: RoleManagementService,\r\n    private dialog: MatDialog,\r\n  ) {\r\n    this.getAllRole()\r\n    this.rolemanagment = this.fb.group({\r\n\r\n    });\r\n  }\r\n\r\n  formNameArr = [\r\n    \"dashboard\",\r\n    \"dynamicForm\",\r\n    \"Logicalforms\",\r\n    \"FormConfigure\",\r\n    \"SubscriptionRates\",\r\n    \"LogicalFormData\",\r\n    \"CMS\",\r\n    \"StateRelation\"\r\n  ]\r\n  displayedColumns: string[] = [\r\n    \"role\",\r\n\r\n    \"dashboard.Access\",\r\n    \"dashboard.View\",\r\n\r\n    \"dynamicForm.Access\",\r\n    \"dynamicForm.Add\",\r\n    \"dynamicForm.Delete\",\r\n    \"dynamicForm.Update\",\r\n    \"dynamicForm.View\",\r\n\r\n    \"Logicalforms.Access\",\r\n    \"Logicalforms.Add\",\r\n    \"Logicalforms.Delete\",\r\n    \"Logicalforms.Update\",\r\n    \"Logicalforms.View\",\r\n\r\n    \"FormConfigure.Access\",\r\n    \"FormConfigure.Add\",\r\n    \"FormConfigure.Delete\",\r\n    \"FormConfigure.Update\",\r\n    \"FormConfigure.View\",\r\n\r\n    \"SubscriptionRates.Access\",\r\n    \"SubscriptionRates.Add\",\r\n    \"SubscriptionRates.Delete\",\r\n    \"SubscriptionRates.Update\",\r\n    \"SubscriptionRates.View\",\r\n\r\n    \"LogicalFormData.Access\",\r\n    \"LogicalFormData.Add\",\r\n    \"LogicalFormData.Delete\",\r\n    \"LogicalFormData.Update\",\r\n    \"LogicalFormData.View\",\r\n\r\n    \"CMS.Access\",\r\n    \"CMS.Add\",\r\n    \"CMS.Delete\",\r\n    \"CMS.Update\",\r\n    \"CMS.View\",\r\n\r\n    \"StateRelation.Access\",\r\n    \"StateRelation.Add\",\r\n    \"StateRelation.Delete\",\r\n    \"StateRelation.Update\",\r\n    \"StateRelation.View\",\r\n  ];\r\n\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.getAllRole()\r\n    //     of(this.data).subscribe((res:any)=>{\r\n    //       console.log(\"resdata\",res);\r\n    // this.roleData=res\r\n    //       for (let index = 0; index < this.roleData.length; index++) {\r\n    //         for (let x = 0; x < this.roleData[index].access.length; x++) {\r\n\r\n\r\n    //         let key=Object.keys( this.roleData[index].access[x])\r\n\r\n    //            key.splice(0,1)\r\n    //         key.forEach((z:any,i)=>{\r\n\r\n\r\n    //          setTimeout(() => {\r\n    //           console.log(\"this.roleData[index].access[x]\",);\r\n    //          this.rolemanagment.get(this.roleData[index].access[x].form+`_${z}_`+this.roleData[index].role).setValue(this.roleData[index]?.access[x][z])\r\n\r\n    //           // if(this.roleData[index]?.access[x]?.Add){\r\n\r\n    //           //   this.rolemanagment.get(this.roleData[index].access[x].form+'_Add_'+this.roleData[index].role).setValue(this.roleData[index]?.access[x]?.Add)\r\n    //           //   this.rolemanagment.get(this.roleData[index].access[x].form+'_Delete_'+this.roleData[index].role).setValue(this.roleData[index]?.access[x]?.Delete)\r\n    //           //   this.rolemanagment.get(this.roleData[index].access[x].form+'_Update_'+this.roleData[index].role).setValue(this.roleData[index]?.access[x]?.Update)\r\n    //           //   this.rolemanagment.get(this.roleData[index].access[x].form+'_Access_'+this.roleData[index].role).setValue(this.roleData[index]?.access[x]?.Access)\r\n    //           // this.rolemanagment.get(this.roleData[index].access[x].form+'_View_'+this.roleData[index].role).setValue(this.roleData[index]?.access[x]?.View)\r\n    //           // }\r\n    //           // this.rolemanagment.get(this.roleData[index].access[x].form+'_Access_'+this.roleData[index].role).setValue(this.roleData[index]?.access[x]?.Access)\r\n    //           // this.rolemanagment.get(this.roleData[index].access[x].form+'_View_'+this.roleData[index].role).setValue(this.roleData[index]?.access[x]?.View)\r\n\r\n    //          }, 2000);\r\n\r\n\r\n    //         })\r\n\r\n    //         }\r\n\r\n    //       }\r\n\r\n\r\n    //     })\r\n  }\r\n  doCheckboxCheck(e): void {\r\n    // this.roles[index].checked = !this.roles[index].checked;\r\n    console.log(\"event\", e);\r\n    //console.log(\"aaaa\",this.rolemanagment.get('Access').value);\r\n\r\n\r\n  }\r\n  applyFilter($event) {\r\n\r\n  }\r\n  ngOnChanges(changes: any): void {\r\n\r\n\r\n  }\r\n  getdata(row) {\r\n    console.log(\"row\", row);\r\n\r\n  }\r\n  getAllRole() {\r\n    this.roleService.getAllRole().subscribe((res: any) => {\r\n\r\n      this.roleArr = res.data\r\n      console.log(\"res\", this.roleArr);\r\n      this.tempArray = new MatTableDataSource<any>(this.roleArr);\r\n      this.tempArray.sort = this.sort;\r\n\r\n      for (let index = 0; index < this.roleArr.length; index++) {\r\n        for (let i = 1; i < this.formNameArr.length; i++) {\r\n          this.rolemanagment.addControl('dashboard_Access_' + this.roleArr[index].role, new FormControl('', Validators.required));\r\n          this.rolemanagment.addControl('dashboard_View_' + this.roleArr[index].role, new FormControl('', Validators.required));\r\n          this.rolemanagment.addControl(this.formNameArr[i] + '_Access_' + this.roleArr[index].role, new FormControl('', Validators.required));\r\n          this.rolemanagment.addControl(this.formNameArr[i] + '_View_' + this.roleArr[index].role, new FormControl('', Validators.required));\r\n          this.rolemanagment.addControl(this.formNameArr[i] + '_Delete_' + this.roleArr[index].role, new FormControl('', Validators.required));\r\n          this.rolemanagment.addControl(this.formNameArr[i] + '_Update_' + this.roleArr[index].role, new FormControl('', Validators.required));\r\n          this.rolemanagment.addControl(this.formNameArr[i] + '_Add_' + this.roleArr[index].role, new FormControl('', Validators.required));\r\n        }\r\n      }\r\n      this.setValue()\r\n\r\n    })\r\n  }\r\n  add2(): FormArray {\r\n    return this.rolemanagment.get(\"attendees\") as FormArray;\r\n  }\r\n  newAction2(index): FormGroup {\r\n    return this.fb.group({\r\n      [\"dashboard_Access_\" + this.roleArr[index].role]: ['', Validators.required],\r\n    });\r\n  }\r\n  onSubmit() {\r\n    console.log(\"submit\", this.rolemanagment.value);\r\n    let key = Object.keys(this.rolemanagment.value)\r\n    let checkeBox = key.map((x: string) => {\r\n      let arr = x.split(\"_\")\r\n      let obj\r\n      obj = {\r\n        form: arr[0],\r\n        role: arr[2],\r\n      }\r\n      obj[arr[1]] = this.rolemanagment.get(x).value == \"\" ? false : this.rolemanagment.get(x).value\r\n      return obj\r\n    })\r\n    console.log(\"form\", checkeBox);\r\n    let filterArr\r\n    let obj3\r\n    let access = []\r\n\r\n    for (let index = 0; index < this.roleArr.length; index++) {\r\n      for (let i = 0; i < this.formNameArr.length; i++) {\r\n        obj3 = checkeBox.filter((x) => {\r\n          return x.form === this.formNameArr[i] && x.role === this.roleArr[index].role\r\n        }).reduce(((r, c) => Object.assign(r, c)), {});\r\n        access.push(obj3)\r\n      }\r\n\r\n    }\r\n    let objArr = []\r\n    for (let index = 0; index < this.roleArr.length; index++) {\r\n      let arr = []\r\n      arr = access.filter((x => x.role === this.roleArr[index].role))\r\n      arr.forEach((x => {\r\n        delete x.role\r\n      }))\r\n      let obj = {\r\n        access: arr,\r\n        role: this.roleArr[index].role,\r\n        _id: this.roleArr[index]._id\r\n      }\r\n      objArr.push(obj)\r\n    }\r\n\r\n    // let obj2=filterArr.reduce(((r, c) => Object.assign(r, c)), {});\r\n    // console.log(\"filterArr\",obj2);\r\n\r\n\r\n    // for (let index = 0; index < checkeBox.length; index++) {\r\n    //   let accessObj={\r\n    //     form:checkeBox[index].form,\r\n    //     view:checkeBox[index].View,\r\n    //     add:checkeBox[index].Add,\r\n    //     update:checkeBox[index].Update,\r\n    //     delete:checkeBox[index].Delete,\r\n    //   }\r\n    //   access.push(accessObj)\r\n    // }\r\n    console.log(\"acess\", objArr);\r\n\r\n  }\r\n  setValue() {\r\n    for (let index = 0; index < this.roleArr.length; index++) {\r\n      for (let x = 0; x < this.roleArr[index].access.length; x++) {\r\n\r\n\r\n        let key = Object.keys(this.roleArr[index].access[x])\r\n\r\n        key.splice(0, 1)\r\n        key.forEach((z: any, i) => {\r\n\r\n\r\n\r\n          console.log(\"this.roleArr[index].access[x]\",);\r\n          this.rolemanagment.get(this.roleArr[index].access[x].form + `_${z}_` + this.roleArr[index].role).setValue(this.roleArr[index]?.access[x][z])\r\n\r\n          // if(this.roleArr[index]?.access[x]?.Add){\r\n\r\n          //   this.rolemanagment.get(this.roleArr[index].access[x].form+'_Add_'+this.roleArr[index].role).setValue(this.roleArr[index]?.access[x]?.Add)\r\n          //   this.rolemanagment.get(this.roleArr[index].access[x].form+'_Delete_'+this.roleArr[index].role).setValue(this.roleArr[index]?.access[x]?.Delete)\r\n          //   this.rolemanagment.get(this.roleArr[index].access[x].form+'_Update_'+this.roleArr[index].role).setValue(this.roleArr[index]?.access[x]?.Update)\r\n          //   this.rolemanagment.get(this.roleArr[index].access[x].form+'_Access_'+this.roleArr[index].role).setValue(this.roleArr[index]?.access[x]?.Access)\r\n          // this.rolemanagment.get(this.roleArr[index].access[x].form+'_View_'+this.roleArr[index].role).setValue(this.roleArr[index]?.access[x]?.View)\r\n          // }\r\n          // this.rolemanagment.get(this.roleArr[index].access[x].form+'_Access_'+this.roleArr[index].role).setValue(this.roleArr[index]?.access[x]?.Access)\r\n          // this.rolemanagment.get(this.roleArr[index].access[x].form+'_View_'+this.roleArr[index].role).setValue(this.roleArr[index]?.access[x]?.View)\r\n\r\n        })\r\n\r\n      }\r\n\r\n\r\n    }\r\n    this.formArr = true\r\n  }\r\n  openDialog(role) {\r\n\t\tlet dialogRef = this.dialog.open(AddRoleComponent, {\r\n      height:'50%',\r\n     width:'500px',\r\n    \r\n\t\t\tdata: {\r\n\t\t\t\taction:\"edit\",\r\n\t\t\t\trole: role,\r\n\t\t\t},\r\n\t\t});\r\n\t\tdialogRef.afterClosed().subscribe((result) => {\r\n      if(result === 'true' ){\r\n       this.ngOnInit()\r\n      }\r\n\t\t\tconsole.log(\"AddRoleComponent -> openDialog -> result\", result);\r\n\t\t\t\r\n\t\t\tconsole.log(\"The dialog was closed\");\r\n\t\t});\r\n\t}\r\n}\r\n","\r\n<div class=\"row\">\r\n  <div class=\"col ml-2 pt-3\">\r\n    <h1>Role Management List</h1>\r\n  </div>\r\n  \r\n    <div class=\"col mt-2 mb-2\">\r\n        <button  _ngcontent-hqi-c400=\"\" type=\"button\"\r\n            class=\"btn btn-primary mt-1 mr-5 float-md-right\" (click)=\"onSubmit()\"> Submit\r\n          </button>\r\n        </div> \r\n    </div>\r\n  <!-- <div class=\"col-6\">\r\n    <mat-form-field>\r\n      <input matInput #input placeholder=\"Search\" (keyup)=\"applyFilter($event)\" />\r\n    </mat-form-field>\r\n  </div> -->\r\n\r\n  <div class=\"example-container mat-elevation-z8 overflow-auto\"[formGroup]=\"rolemanagment\">\r\n    <ng-container *ngIf=\"formArr\">\r\n \r\n    <table mat-table [dataSource]=\"tempArray\" class=\"mat-elevation-z8\" >\r\n      <ng-container matColumnDef=\"role\" sticky>\r\n        <th [ngStyle]=\"{'display': 'none'}\" mat-header-cell *matHeaderCellDef [attr.rowspan]=\"2\"> Role </th>\r\n        <td mat-cell *matCellDef=\"let element\"  ><p class=\"d-flex\">{{element.role}} <span class=\"material-icons ml-2 col\" matTooltip=\"Edit\"  (click)=\"openDialog(element)\"  >\r\n        edit\r\n      </span></p> </td>\r\n      </ng-container>\r\n\r\n\r\n        <!-- ////////////// -->\r\n \r\n  \r\n        <ng-container matColumnDef=\"dashboard.Access\">\r\n          <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Access </th>\r\n          <td mat-cell *matCellDef=\"let element; let i=index\"> <input type=\"checkbox\" [value]=\"true\"\r\n            (change)=\"doCheckboxCheck($event)\"\r\n            formControlName=\"{{'dashboard_Access_'+roleArr[i]?.role}}\"> \r\n        </td>\r\n        </ng-container>\r\n    \r\n        <ng-container matColumnDef=\"dashboard.View\">\r\n          <th mat-header-cell *matHeaderCellDef  class=\"p-2\" > View </th>\r\n          <td mat-cell *matCellDef=\"let element; let i=index\" class=\"similar-cell-width\"> <input type=\"checkbox\" [value]=\"true\"\r\n            (change)=\"doCheckboxCheck($event)\"\r\n            formControlName=\"{{'dashboard_View_'+roleArr[i]?.role}}\">     </td>\r\n        </ng-container>\r\n  \r\n    <!-- ////////////// -->\r\n      <ng-container matColumnDef=\"dynamicForm.Access\">\r\n        <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Access </th>\r\n        <td mat-cell *matCellDef=\"let element; let i=index\">  <input type=\"checkbox\" [value]=\"true\"\r\n            (change)=\"doCheckboxCheck($event)\"\r\n            formControlName=\"{{'dynamicForm_Access_'+roleArr[i]?.role}}\"> </td>\r\n      </ng-container>\r\n  \r\n      <ng-container matColumnDef=\"dynamicForm.View\">\r\n        <th mat-header-cell *matHeaderCellDef class=\"p-2\" > View </th>\r\n        <td mat-cell *matCellDef=\"let element; let i=index\" class=\"similar-cell-width\"> <input type=\"checkbox\" [value]=\"true\"\r\n            (change)=\"doCheckboxCheck($event)\"\r\n            formControlName=\"{{'dynamicForm_View_'+roleArr[i]?.role}}\"> </td>\r\n      </ng-container>\r\n  \r\n      <ng-container matColumnDef=\"dynamicForm.Delete\">\r\n        <th mat-header-cell *matHeaderCellDef class=\"p-2\"> Delete </th>\r\n        <td mat-cell *matCellDef=\"let element; let i=index\"> <input type=\"checkbox\" [value]=\"true\"\r\n            (change)=\"doCheckboxCheck($event)\"\r\n            formControlName=\"{{'dynamicForm_Delete_'+roleArr[i]?.role}}\"> </td>\r\n      </ng-container>\r\n  \r\n      <ng-container matColumnDef=\"dynamicForm.Update\">\r\n        <th mat-header-cell *matHeaderCellDef class=\"p-2\"> Update </th>\r\n        <td mat-cell *matCellDef=\"let element; let i=index\" class=\"similar-cell-width\"> <input type=\"checkbox\" [value]=\"true\"\r\n            (change)=\"doCheckboxCheck($event)\"\r\n            formControlName=\"{{'dynamicForm_Update_'+roleArr[i]?.role}}\"> </td>\r\n      </ng-container>\r\n  \r\n      <ng-container matColumnDef=\"dynamicForm.Add\">\r\n        <th mat-header-cell *matHeaderCellDef class=\"p-2\"> Add </th>\r\n        <td mat-cell *matCellDef=\"let element; let i=index\"> <input type=\"checkbox\" [value]=\"true\"\r\n            (change)=\"doCheckboxCheck($event)\"\r\n            formControlName=\"{{'dynamicForm_Add_'+roleArr[i]?.role}}\"> </td>\r\n      </ng-container>\r\n\r\n      <!-- ////////////// -->\r\n  \r\n      <ng-container matColumnDef=\"Logicalforms.Access\">\r\n        <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Access </th>\r\n        <td mat-cell *matCellDef=\"let element; let i=index\">  <input type=\"checkbox\" [value]=\"true\"\r\n            (change)=\"doCheckboxCheck($event)\"\r\n            formControlName=\"{{'Logicalforms_Access_'+roleArr[i]?.role}}\"> </td>\r\n      </ng-container>\r\n  \r\n      <ng-container matColumnDef=\"Logicalforms.View\">\r\n        <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> View </th>\r\n        <td mat-cell *matCellDef=\"let element; let i=index\" class=\"similar-cell-width\"> <input type=\"checkbox\" [value]=\"true\"\r\n            (change)=\"doCheckboxCheck($event)\"\r\n            formControlName=\"{{'Logicalforms_View_'+roleArr[i]?.role}}\"> </td>\r\n      </ng-container>\r\n  \r\n      <ng-container matColumnDef=\"Logicalforms.Delete\">\r\n        <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Delete </th>\r\n        <td mat-cell *matCellDef=\"let element; let i=index\"> <input type=\"checkbox\" [value]=\"true\"\r\n            (change)=\"doCheckboxCheck($event)\"\r\n            formControlName=\"{{'Logicalforms_Delete_'+roleArr[i]?.role}}\"> </td>\r\n      </ng-container>\r\n  \r\n      <ng-container matColumnDef=\"Logicalforms.Update\">\r\n        <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Update </th>\r\n        <td mat-cell *matCellDef=\"let element; let i=index\" class=\"similar-cell-width\"> <input type=\"checkbox\" [value]=\"true\"\r\n            (change)=\"doCheckboxCheck($event)\"\r\n            formControlName=\"{{'Logicalforms_Update_'+roleArr[i]?.role}}\"> </td>\r\n      </ng-container>\r\n  \r\n      <ng-container matColumnDef=\"Logicalforms.Add\">\r\n        <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Add </th>\r\n        <td mat-cell *matCellDef=\"let element; let i=index\"> <input type=\"checkbox\" [value]=\"true\"\r\n            (change)=\"doCheckboxCheck($event)\"\r\n            formControlName=\"{{'Logicalforms_Add_'+roleArr[i]?.role}}\"> </td>\r\n      </ng-container>\r\n\r\n         <!-- ////////////// -->\r\n  \r\n         <ng-container matColumnDef=\"FormConfigure.Access\">\r\n          <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Access </th>\r\n          <td mat-cell *matCellDef=\"let element; let i=index\">  <input type=\"checkbox\" [value]=\"true\"\r\n            (change)=\"doCheckboxCheck($event)\"\r\n            formControlName=\"{{'FormConfigure_Access_'+roleArr[i]?.role}}\">     </td>\r\n        </ng-container>\r\n    \r\n        <ng-container matColumnDef=\"FormConfigure.View\">\r\n          <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> View </th>\r\n          <td mat-cell *matCellDef=\"let element; let i=index\" class=\"similar-cell-width\"> <input type=\"checkbox\" [value]=\"true\"\r\n            (change)=\"doCheckboxCheck($event)\"\r\n            formControlName=\"{{'FormConfigure_View_'+roleArr[i]?.role}}\">     </td>\r\n        </ng-container>\r\n    \r\n        <ng-container matColumnDef=\"FormConfigure.Delete\">\r\n          <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Delete </th>\r\n          <td mat-cell *matCellDef=\"let element; let i=index\"> <input type=\"checkbox\" [value]=\"true\"\r\n            (change)=\"doCheckboxCheck($event)\"\r\n            formControlName=\"{{'FormConfigure_Delete_'+roleArr[i]?.role}}\">     </td>\r\n        </ng-container>\r\n    \r\n        <ng-container matColumnDef=\"FormConfigure.Update\">\r\n          <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Update </th>\r\n          <td mat-cell *matCellDef=\"let element; let i=index\" class=\"similar-cell-width\"> <input type=\"checkbox\" [value]=\"true\"\r\n            (change)=\"doCheckboxCheck($event)\"\r\n            formControlName=\"{{'FormConfigure_Update_'+roleArr[i]?.role}}\">     </td>\r\n        </ng-container>\r\n    \r\n        <ng-container matColumnDef=\"FormConfigure.Add\">\r\n          <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Add </th>\r\n          <td mat-cell *matCellDef=\"let element; let i=index\"> <input type=\"checkbox\" [value]=\"true\"\r\n            (change)=\"doCheckboxCheck($event)\"\r\n            formControlName=\"{{'FormConfigure_Add_'+roleArr[i]?.role}}\">     </td>\r\n        </ng-container>\r\n\r\n            <!-- ////////////// -->\r\n  \r\n            <ng-container matColumnDef=\"SubscriptionRates.Access\">\r\n              <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Access </th>\r\n              <td mat-cell *matCellDef=\"let element; let i=index\"> <input type=\"checkbox\" [value]=\"true\"\r\n            (change)=\"doCheckboxCheck($event)\"\r\n            formControlName=\"{{'SubscriptionRates_Access_'+roleArr[i]?.role}}\">\r\n            </td>\r\n            </ng-container>\r\n        \r\n            <ng-container matColumnDef=\"SubscriptionRates.View\">\r\n              <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> View </th>\r\n              <td mat-cell *matCellDef=\"let element; let i=index\" class=\"similar-cell-width\"><input type=\"checkbox\" [value]=\"true\"\r\n            (change)=\"doCheckboxCheck($event)\"\r\n            formControlName=\"{{'SubscriptionRates_View_'+roleArr[i]?.role}}\">\r\n            </td>\r\n            </ng-container>\r\n        \r\n            <ng-container matColumnDef=\"SubscriptionRates.Delete\">\r\n              <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Delete </th>\r\n              <td mat-cell *matCellDef=\"let element; let i=index\"><input type=\"checkbox\" [value]=\"true\"\r\n            (change)=\"doCheckboxCheck($event)\"\r\n            formControlName=\"{{'SubscriptionRates_Delete_'+roleArr[i]?.role}}\">\r\n            </td>\r\n            </ng-container>\r\n        \r\n            <ng-container matColumnDef=\"SubscriptionRates.Update\">\r\n              <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Update </th>\r\n              <td mat-cell *matCellDef=\"let element; let i=index\" class=\"similar-cell-width\"><input type=\"checkbox\" [value]=\"true\"\r\n            (change)=\"doCheckboxCheck($event)\"\r\n            formControlName=\"{{'SubscriptionRates_Update_'+roleArr[i]?.role}}\">\r\n            </td>\r\n            </ng-container>\r\n        \r\n            <ng-container matColumnDef=\"SubscriptionRates.Add\">\r\n              <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Add </th>\r\n              <td mat-cell *matCellDef=\"let element; let i=index\"><input type=\"checkbox\" [value]=\"true\"\r\n            (change)=\"doCheckboxCheck($event)\"\r\n            formControlName=\"{{'SubscriptionRates_Add_'+roleArr[i]?.role}}\">\r\n            </td>\r\n            </ng-container>\r\n\r\n            \r\n            <!-- ////////////// -->\r\n  \r\n            <ng-container matColumnDef=\"LogicalFormData.Access\">\r\n              <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Access </th>\r\n              <td mat-cell *matCellDef=\"let element; let i=index\"> <input type=\"checkbox\" [value]=\"true\"\r\n            (change)=\"doCheckboxCheck($event)\"\r\n            formControlName=\"{{'LogicalFormData_Access_'+roleArr[i]?.role}}\">\r\n            </td>\r\n            </ng-container>\r\n        \r\n            <ng-container matColumnDef=\"LogicalFormData.View\">\r\n              <th mat-header-cell *matHeaderCellDef  class=\"p-2\" > View </th>\r\n              <td mat-cell *matCellDef=\"let element; let i=index\" class=\"similar-cell-width\"><input type=\"checkbox\" [value]=\"true\"\r\n            (change)=\"doCheckboxCheck($event)\"\r\n            formControlName=\"{{'LogicalFormData_View_'+roleArr[i]?.role}}\">\r\n            </td>\r\n            </ng-container>\r\n        \r\n            <ng-container matColumnDef=\"LogicalFormData.Delete\">\r\n              <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Delete </th>\r\n              <td mat-cell *matCellDef=\"let element; let i=index\"><input type=\"checkbox\" [value]=\"true\"\r\n            (change)=\"doCheckboxCheck($event)\"\r\n            formControlName=\"{{'LogicalFormData_Delete_'+roleArr[i]?.role}}\">\r\n            </td>\r\n            </ng-container>\r\n        \r\n            <ng-container matColumnDef=\"LogicalFormData.Update\">\r\n              <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Update </th>\r\n              <td mat-cell *matCellDef=\"let element; let i=index\" class=\"similar-cell-width\"><input type=\"checkbox\" [value]=\"true\"\r\n            (change)=\"doCheckboxCheck($event)\"\r\n            formControlName=\"{{'LogicalFormData_Update_'+roleArr[i]?.role}}\">\r\n            </td>\r\n            </ng-container>\r\n        \r\n            <ng-container matColumnDef=\"LogicalFormData.Add\">\r\n              <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Add </th>\r\n              <td mat-cell *matCellDef=\"let element; let i=index\"><input type=\"checkbox\" [value]=\"true\"\r\n            (change)=\"doCheckboxCheck($event)\"\r\n            formControlName=\"{{'LogicalFormData_Add_'+roleArr[i]?.role}}\">\r\n            </td>\r\n            </ng-container>\r\n\r\n             <!-- ////////////// -->\r\n  \r\n             <ng-container matColumnDef=\"CMS.Access\">\r\n              <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Access </th>\r\n              <td mat-cell *matCellDef=\"let element; let i=index\"> <input type=\"checkbox\" [value]=\"true\"\r\n            (change)=\"doCheckboxCheck($event)\"\r\n            formControlName=\"{{'CMS_Access_'+roleArr[i]?.role}}\">\r\n            </td>\r\n            </ng-container>\r\n        \r\n            <ng-container matColumnDef=\"CMS.View\">\r\n              <th mat-header-cell *matHeaderCellDef  class=\"p-2\" > View </th>\r\n              <td mat-cell *matCellDef=\"let element; let i=index\" class=\"similar-cell-width\"><input type=\"checkbox\" [value]=\"true\"\r\n            (change)=\"doCheckboxCheck($event)\"\r\n            formControlName=\"{{'CMS_View_'+roleArr[i]?.role}}\">\r\n            </td>\r\n            </ng-container>\r\n        \r\n            <ng-container matColumnDef=\"CMS.Delete\">\r\n              <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Delete </th>\r\n              <td mat-cell *matCellDef=\"let element; let i=index\"><input type=\"checkbox\" [value]=\"true\"\r\n            (change)=\"doCheckboxCheck($event)\"\r\n            formControlName=\"{{'CMS_Delete_'+roleArr[i]?.role}}\">\r\n            </td>\r\n            </ng-container>\r\n        \r\n            <ng-container matColumnDef=\"CMS.Update\">\r\n              <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Update </th>\r\n              <td mat-cell *matCellDef=\"let element; let i=index\" class=\"similar-cell-width\"><input type=\"checkbox\" [value]=\"true\"\r\n            (change)=\"doCheckboxCheck($event)\"\r\n            formControlName=\"{{'CMS_Update_'+roleArr[i]?.role}}\">\r\n            </td>\r\n            </ng-container>\r\n        \r\n            <ng-container matColumnDef=\"CMS.Add\">\r\n              <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Add </th>\r\n              <td mat-cell *matCellDef=\"let element; let i=index\"><input type=\"checkbox\" [value]=\"true\"\r\n            (change)=\"doCheckboxCheck($event)\"\r\n            formControlName=\"{{'CMS_Add_'+roleArr[i]?.role}}\">\r\n            </td>\r\n            </ng-container>\r\n   \r\n\r\n             <!-- ////////////// -->\r\n  \r\n             <ng-container matColumnDef=\"StateRelation.Access\">\r\n              <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Access </th>\r\n              <td mat-cell *matCellDef=\"let element; let i=index\"> <input type=\"checkbox\" [value]=\"true\"\r\n            (change)=\"doCheckboxCheck($event)\"\r\n            formControlName=\"{{'StateRelation_Access_'+roleArr[i]?.role}}\">\r\n            </td>\r\n            </ng-container>\r\n        \r\n            <ng-container matColumnDef=\"StateRelation.View\">\r\n              <th mat-header-cell *matHeaderCellDef  class=\"p-2\" > View </th>\r\n              <td mat-cell *matCellDef=\"let element; let i=index\" class=\"similar-cell-width\"><input type=\"checkbox\" [value]=\"true\"\r\n            (change)=\"doCheckboxCheck($event)\"\r\n            formControlName=\"{{'StateRelation_View_'+roleArr[i]?.role}}\">\r\n            </td>\r\n            </ng-container>\r\n        \r\n            <ng-container matColumnDef=\"StateRelation.Delete\">\r\n              <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Delete </th>\r\n              <td mat-cell *matCellDef=\"let element; let i=index\"><input type=\"checkbox\" [value]=\"true\"\r\n            (change)=\"doCheckboxCheck($event)\"\r\n            formControlName=\"{{'StateRelation_Delete_'+roleArr[i]?.role}}\">\r\n            </td>\r\n            </ng-container>\r\n        \r\n            <ng-container matColumnDef=\"StateRelation.Update\">\r\n              <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Update </th>\r\n              <td mat-cell *matCellDef=\"let element; let i=index\" class=\"similar-cell-width\"><input type=\"checkbox\" [value]=\"true\"\r\n            (change)=\"doCheckboxCheck($event)\"\r\n            formControlName=\"{{'StateRelation_Update_'+roleArr[i]?.role}}\">\r\n            </td>\r\n            </ng-container>\r\n        \r\n            <ng-container matColumnDef=\"StateRelation.Add\">\r\n              <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Add </th>\r\n              <td mat-cell *matCellDef=\"let element; let i=index\"><input type=\"checkbox\" [value]=\"true\"\r\n            (change)=\"doCheckboxCheck($event)\"\r\n            formControlName=\"{{'StateRelation_Add_'+roleArr[i]?.role}}\">\r\n            </td>\r\n            </ng-container>\r\n  \r\n   \r\n  \r\n  \r\n      <ng-container matColumnDef=\"roleheader\"   sticky>\r\n        <th mat-header-cell *matHeaderCellDef  class=\"roleZIndex\"  [attr.rowspan]=\"2\">\r\n        Role\r\n        </th>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"dashboard\">\r\n        <th mat-header-cell *matHeaderCellDef  [attr.colspan]=\"2\">\r\n          Dashboard\r\n        </th>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"dynamicForm\">\r\n        <th mat-header-cell *matHeaderCellDef  [attr.colspan]=\"5\">\r\n          Dynamic Form\r\n        </th>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"logicalForms\">\r\n        <th mat-header-cell *matHeaderCellDef  [attr.colspan]=\"5\">\r\n          Logical Forms\r\n        </th>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"formConfigure\">\r\n        <th mat-header-cell *matHeaderCellDef  [attr.colspan]=\"5\">\r\n          Form Configure\r\n        </th>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"subscriptionRates\">\r\n        <th mat-header-cell *matHeaderCellDef  [attr.colspan]=\"5\">\r\n          Subscription Rates\r\n        </th>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"logicalFormData\">\r\n        <th mat-header-cell *matHeaderCellDef  [attr.colspan]=\"5\">\r\n          Logical Form Data\r\n        </th>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"cms\">\r\n        <th mat-header-cell *matHeaderCellDef  [attr.colspan]=\"5\">\r\n          CMS\r\n        </th>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"stateRelation\">\r\n        <th mat-header-cell *matHeaderCellDef  [attr.colspan]=\"5\">\r\n          State Relation\r\n        </th>\r\n      </ng-container>\r\n  \r\n  \r\n  \r\n      <tr mat-header-row\r\n        *matHeaderRowDef=\"['roleheader','dashboard','dynamicForm','logicalForms','formConfigure','subscriptionRates','logicalFormData','cms','stateRelation']\">\r\n      </tr>\r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns;sticky:true\"></tr>\r\n      <tr mat-row *matRowDef=\"let row ; columns: displayedColumns;\" (click)=\"getdata(row)\"></tr>\r\n    </table>\r\n\r\n  </ng-container>\r\n  </div>\r\n \r\n  \r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SharedModule } from './../shared/shared.module';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { RoleManagementRoutingModule } from './role-management-routing.module';\r\nimport { RoleManagementComponent } from './role-management.component';\r\nimport { CheckboxComponent } from './checkbox/checkbox.component';\r\nimport { AddRoleComponent } from './add-role/add-role.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [RoleManagementComponent, CheckboxComponent, AddRoleComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RoleManagementRoutingModule,\r\n    SharedModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ]\r\n})\r\nexport class RoleManagementModule { }\r\n"],"sourceRoot":"webpack:///"}