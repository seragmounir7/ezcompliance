{"version":3,"sources":["./src/app/role-management/role-management.component.ts","./src/app/role-management/role-management.component.html","./src/app/role-management/role-management-routing.module.ts","./src/app/utils/services/role-management.service.ts","./src/app/role-management/add-role/add-role.component.ts","./src/app/role-management/add-role/add-role.component.html","./src/app/role-management/checkbox/checkbox.component.ts","./src/app/role-management/checkbox/checkbox.component.html","./src/app/role-management/role-management.module.ts"],"names":[],"mappings":"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","file":"role-management-role-management-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { SetTitleService } from 'src/app/utils/services/set-title.service';\r\nimport { AddRoleComponent } from './add-role/add-role.component';\r\n@Component({\r\n  selector: 'app-role-management',\r\n  templateUrl: './role-management.component.html',\r\n  styleUrls: ['./role-management.component.scss']\r\n})\r\nexport class RoleManagementComponent implements OnInit {\r\n\r\n  constructor(\r\n    private setTitle: SetTitleService, \r\n    private dialog: MatDialog,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.setTitle.setTitle('WHS-Role Management');\r\n    \r\n  }\r\n  openDialog(id) {\r\n\t\tlet dialogRef = this.dialog.open(AddRoleComponent, {\r\n      height:'50%',\r\n     width:'500px',\r\n    \r\n\t\t\tdata: {\r\n\t\t\t\taction: \"new\",\r\n\t\t\t\tuserId: id,\r\n\t\t\t},\r\n\t\t});\r\n\t\tdialogRef.afterClosed().subscribe((result) => {\r\n      if(result === 'true' ){\r\n       \r\n      }\r\n\t\t\tconsole.log(\"AddRoleComponent -> openDialog -> result\", result);\r\n\t\t\t\r\n\t\t\tconsole.log(\"The dialog was closed\");\r\n\t\t});\r\n\t}\r\n\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col mt-2 mb-2\">\r\n      <button (click)=\"openDialog('')\" _ngcontent-hqi-c400=\"\" type=\"button\"\r\n          class=\"btn btn-outline-primary mt-1 mr-2 float-right\"><i _ngcontent-hqi-c400=\"\" class=\"fas fa-plus\"></i> Add Role\r\n        </button>\r\n      </div> \r\n  </div>\r\n  <app-checkbox></app-checkbox>\r\n<!-- <mat-tab-group mat-align-tabs=\"start\">\r\n    <mat-tab label=\"Content-1\"><app-checkbox></app-checkbox></mat-tab>\r\n    <mat-tab label=\"Content-2\">Content-2</mat-tab>\r\n    <mat-tab label=\"Content-3\">Content-3</mat-tab>\r\n    <mat-tab label=\"Content-4\">Content-4</mat-tab>\r\n  </mat-tab-group> -->\r\n  \r\n  \r\n\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CheckboxComponent } from './checkbox/checkbox.component';\r\nimport { RoleManagementComponent } from './role-management.component';\r\n\r\nconst routes: Routes = [\r\n  {path:'',component:RoleManagementComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class RoleManagementRoutingModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RoleManagementService {\r\n  apiUrl = environment.apiUrl;\r\n\r\n  constructor(private https: HttpClient) { }\r\n\r\n\r\n  ///role management///\r\n  addRole(data) {\r\n    return this.https.post(this.apiUrl + 'role/add', data);\r\n  }\r\n  // addMultipleRisk(data) {\r\n  //   return this.https.post(this.apiUrl + 'risk/add/multiple', data);\r\n  // }\r\n  // updateRisk(data, id) {\r\n  //   return this.https.put(this.apiUrl + 'risk/update/' + id, data);\r\n  // }\r\n  // deleteRisk(id) {\r\n  //   return this.https.delete(this.apiUrl + 'risk/delete/' + id)\r\n  // }\r\n  getAllRole() {\r\n    return this.https.get(this.apiUrl + 'role/getAll')\r\n  }\r\n  // getRiskById(id) {\r\n  //   return this.https.get(this.apiUrl + 'risk/get/' + id)\r\n  // }\r\n}\r\n","import { Component, OnInit,Inject } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA,\r\n} from '@angular/material/dialog';\r\nimport Swal from 'sweetalert2';\r\nimport {RoleManagementService}from'../../utils/services/role-management.service';\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n\r\n} from '@angular/forms';\r\n@Component({\r\n  selector: 'app-add-role',\r\n  templateUrl: './add-role.component.html',\r\n  styleUrls: ['./add-role.component.scss']\r\n})\r\nexport class AddRoleComponent implements OnInit {\r\n  addRole!: FormGroup;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private roleService : RoleManagementService,\r\n    public dialogRef: MatDialogRef<AddRoleComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.addRole = this.fb.group({\r\n    \r\n      role: ['', Validators.required],\r\n    \r\n     \r\n    });\r\n    console.log('', data);\r\n  }\r\n  \r\n\r\n  ngOnInit(): void {\r\n   \r\n  }\r\n  onSubmit() {\r\n    console.log(this.addRole.value)\r\n    \r\n      this.roleService.addRole(this.addRole.value).subscribe((res)=>{\r\n        console.log(\"res\",res);\r\n        \r\n        Swal.fire('Added Successfully')\r\n        this.dialogRef.close();\r\n      })\r\n  \r\n    // Swal.fire('Added Successfully')\r\n    // this.dialogRef.close();\r\n  }\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","\r\n<section>\r\n    <form [formGroup]=\"addRole\">\r\n      <div mat-dialog-title class=\"dialog-title\">\r\n      <h2 class=\"text-center pt-2\">\r\n        <p style=\"text-align: center\"> Add Role Management</p>\r\n      </h2>\r\n      <button type=\"button\" class=\"close\" \r\n      style=\"font-size: 30px;\"\r\n    \r\n    (click)=\"close()\" aria-label=\"Close\">\r\n      <span aria-hidden=\"true\">×</span>\r\n    </button>\r\n      </div>\r\n      <hr />\r\n      <div>\r\n        <div class=\"row\">\r\n          <div class=\"col-12 mt-2 mb-2\">\r\n            <p for=\"exampleFormControlInput1\" class=\"form-Label\">Role</p>\r\n            <input\r\n              type=\"text\"\r\n              formControlName=\"role\"\r\n              style=\"height: 50px\"\r\n              class=\"form-control\"\r\n              id=\"heading\"\r\n            />\r\n          </div>\r\n       </div>\r\n       <br>\r\n       \r\n        </div>\r\n      \r\n        <br>\r\n        <div class=\"row\">\r\n          <div class=\"col d-flex justify-content-center\">\r\n            <button class=\"btn btn-primary \" (click)=\"onSubmit()\" [disabled]=\"addRole.invalid \" > \r\n              Submit\r\n            </button>\r\n          </div>\r\n        </div>\r\n      \r\n    </form>\r\n </section>\r\n  ","import { Component, Input, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table'\r\nimport {FormBuilder,FormGroup,Validators,FormArray,FormControl,} from '@angular/forms';\r\nimport{RoleManagementService}from '../../utils/services/role-management.service'\r\n@Component({\r\n  selector: 'app-checkbox',\r\n  templateUrl: './checkbox.component.html',\r\n  styleUrls: ['./checkbox.component.scss']\r\n})\r\nexport class CheckboxComponent implements OnInit {\r\n // displayedColumns: string[] = [\"role\",'dynamicform',\"Logicalforms\",\"FormConfigure\",\"SubscriptionRates\",'LogicalFormData','CMS','StateRelation'];\r\n rolemanagment: FormGroup;\r\n \r\n displayedColumns: string[] = [\r\n  \"role\",\r\n\r\n  \"dashboard.Access\",\r\n  \"dashboard.View\",\r\n\r\n  \"dynamicForm.Access\",\r\n  \"dynamicForm.Add\",\r\n  \"dynamicForm.Delete\",\r\n  \"dynamicForm.Update\",\r\n  \"dynamicForm.View\",\r\n\r\n  \"Logicalforms.Access\",\r\n  \"Logicalforms.Add\",\r\n  \"Logicalforms.Delete\",\r\n  \"Logicalforms.Update\",\r\n  \"Logicalforms.View\",\r\n\r\n  \"FormConfigure.Access\",\r\n  \"FormConfigure.Add\",\r\n  \"FormConfigure.Delete\",\r\n  \"FormConfigure.Update\",\r\n  \"FormConfigure.View\",\r\n\r\n  \"SubscriptionRates.Access\",\r\n  \"SubscriptionRates.Add\",\r\n  \"SubscriptionRates.Delete\",\r\n  \"SubscriptionRates.Update\",\r\n  \"SubscriptionRates.View\",\r\n\r\n  \"LogicalFormData.Access\",\r\n  \"LogicalFormData.Add\",\r\n  \"LogicalFormData.Delete\",\r\n  \"LogicalFormData.Update\",\r\n  \"LogicalFormData.View\",\r\n\r\n  \"CMS.Access\",\r\n  \"CMS.Add\",\r\n  \"CMS.Delete\",\r\n  \"CMS.Update\",\r\n  \"CMS.View\",\r\n\r\n  \"StateRelation.Access\",\r\n  \"StateRelation.Add\",\r\n  \"StateRelation.Delete\",\r\n  \"StateRelation.Update\",\r\n  \"StateRelation.View\",\r\n\r\n  \r\n];\r\n showDatas: any;\r\n  tempArray: MatTableDataSource <any>;\r\n  // @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @Input()Arry:any;\r\n  @Output()Arry1:any;\r\n  roleArr:any;\r\n  formArr=false;\r\n\r\n  constructor(\r\n    private fb:FormBuilder,\r\n    private roleService :RoleManagementService,\r\n    \r\n    ) { \r\n      //this.getAllRole()\r\n    // this.rolemanagment = this.fb.group({\r\n    \r\n    // [this.roleArr[0].role+\"form\"]:[''],\r\n    // [this.roleArr[0].role+\"view\"]:[''],\r\n    // [this.roleArr[0].role+\"add\"]:[''],\r\n    // [this.roleArr[0].role+\"update\"]:[''],\r\n    // [this.roleArr[0].role+\"delete\"]:[''],\r\n       \r\n    // });\r\n  }\r\n  // roles = [\r\n  //   { value: \"SuperAdmin\",name:\"SuperAdmin\", Dynamicform:false,Logicalforms:false,FormConfigure:false,SubscriptionRates:false,LogicalFormData:false,CMS:false,StateRelation:false},\r\n  //   { value: \"Admin\", name:\"Admin\",Dynamicform:false,Logicalforms:false,FormConfigure:false,SubscriptionRates:false,LogicalFormData:false,CMS:false,StateRelation:false },\r\n  //   { value: \"Employee\", name:\"Employee\",Logicalforms:false,FormConfigure:false,SubscriptionRates:false,LogicalFormData:false,CMS:false,StateRelation:false },\r\n  //   { value: \"Adminstration\",name:\"Adminstration\",Logicalforms:false,FormConfigure:false,SubscriptionRates:false,LogicalFormData:false,CMS:false,StateRelation:false },\r\n  //   { value: \"Worker\",name:\"Worker\",Logicalforms:false,FormConfigure:false,SubscriptionRates:false,LogicalFormData:false,CMS:false,StateRelation:false },\r\n  // ];\r\n  // chickbox:string[]=[\r\n  //   'view','add','delete','update'\r\n  // ]\r\n  // titel:string[]=[\r\n  //   'view','add','delete','update'\r\n  // ]\r\n\r\n\r\n  ELEMENT_DATA: any[] = [\r\n    {\r\n      role: \"SuperAdmin\",\r\n      id: 1\r\n    },\r\n    {\r\n      role: \"Admin\",\r\n      id: 2\r\n    },\r\n    {\r\n      role: \"Employee\",\r\n      id: 3\r\n    },\r\n    {\r\n      role: \"Adminstration\",\r\n      id:4\r\n    },\r\n    {\r\n      role: \"Worker\",\r\n      id:5\r\n    },\r\n    \r\n  ];\r\n\r\n  ngOnInit(): void {\r\n   \r\n    this.getAllRole()\r\n  }\r\n  ngAfterViewInit() {\r\n    // this.tempArray.paginator = this.paginator;\r\n  }\r\n\r\n  doCheckboxCheck(e): void {\r\n   // this.roles[index].checked = !this.roles[index].checked;\r\n   console.log(\"event\",e);\r\n   //console.log(\"aaaa\",this.rolemanagment.get('Access').value);\r\n   \r\n   \r\n  }\r\n  applyFilter($event){\r\n\r\n  } \r\n  ngOnChanges(changes: any): void {\r\n\r\n    \r\n  }\r\n  getdata( row){\r\n    console.log(\"row\",row);\r\n    \r\n  }\r\n  getAllRole(){\r\n    this.roleService.getAllRole().subscribe((res:any)=>{\r\n      \r\n      this.roleArr=res.data\r\n      console.log(\"res\", this.roleArr);\r\n      this.tempArray = new MatTableDataSource<any>(this.roleArr);\r\n      // this.tempArray.paginator = this.paginator;\r\n      this.tempArray.sort = this.sort; \r\n     \r\n    //   for (let index = 0; index < this.roleArr.length; index++) {\r\n    //     this.rolemanagment.addControl( this.roleArr[index].role ,new FormArray([]))\r\n\r\n    //     console.log(this.rolemanagment.value);\r\n    //     // console.log(\"index\",index);\r\n      \r\n    //     this.add2(index).push(this.newAction2()); \r\n    //     this.formArr=true\r\n    // }\r\n\r\n    this.rolemanagment = this.fb.group({\r\n    \r\n      [this.roleArr[0].role+\"form\"]:[''],\r\n      [this.roleArr[0].role+\"view\"]:[''],\r\n      [this.roleArr[0].role+\"add\"]:[''],\r\n      [this.roleArr[0].role+\"update\"]:[''],\r\n      [this.roleArr[0].role+\"delete\"]:[''],\r\n         \r\n      });\r\n\r\n    })\r\n  }\r\n  add2(index): FormArray {\r\n    return this.rolemanagment.get( this.roleArr[index].role) as FormArray;\r\n  }\r\n  newAction2(): FormGroup {\r\n    return this.fb.group({\r\n      dashboardAccess: ['', Validators.required],\r\n    });\r\n  }\r\n  onSubmit(){\r\n    console.log(\"submit\",this.rolemanagment.value);\r\n    \r\n  }\r\n}\r\n","\r\n<div class=\"row\">\r\n  <div class=\"col ml-2 pt-3\">\r\n    <h1>Role Management List</h1>\r\n  </div>\r\n  \r\n    <div class=\"col mt-2 mb-2\">\r\n        <button  _ngcontent-hqi-c400=\"\" type=\"button\"\r\n            class=\"btn btn-primary mt-1 mr-5 float-md-right\" (click)=\"onSubmit()\"> Submit\r\n          </button>\r\n        </div> \r\n    </div>\r\n  <!-- <div class=\"col-6\">\r\n    <mat-form-field>\r\n      <input matInput #input placeholder=\"Search\" (keyup)=\"applyFilter($event)\" />\r\n    </mat-form-field>\r\n  </div> -->\r\n  <div class=\"\" *ngIf=\"false\">\r\n    <table mat-table [dataSource]=\"tempArray\" matSort>\r\n      <!-- Position Column -->\r\n      <ng-container matColumnDef=\"role\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Role</th>\r\n        <td mat-cell *matCellDef=\"let element; let i = index\"><span class=\"flex-start pl-0\">{{ element.value }}</span></td>\r\n      </ng-container>\r\n  \r\n      <!-- Name Column -->\r\n  \r\n      <!-- Name Column -->\r\n      <ng-container matColumnDef=\"Dynamicform\">\r\n        <th mat-header-cell *matHeaderCellDef >Dynamic form</th>\r\n        <td mat-cell *matCellDef=\"let element\">\r\n          <!-- <span class=\"flex-start\">{{ element.value }}</span> -->\r\n          <mat-checkbox class=\"example-margin\"(change)=\"doCheckboxCheck($event)\"></mat-checkbox>\r\n        </td>\r\n      </ng-container>\r\n  \r\n      <ng-container matColumnDef=\"Logicalforms\">\r\n        <th mat-header-cell *matHeaderCellDef>Logical forms</th>\r\n        <td mat-cell *matCellDef=\"let element\">\r\n          <mat-checkbox class=\"example-margin\"(change)=\"doCheckboxCheck($event)\"></mat-checkbox>\r\n      \r\n        </td>\r\n          <!-- <button\r\n            mat-icon-button\r\n            class=\"mr-2\"\r\n            aria-label=\"Example icon button with a delete icon\"\r\n            (click)=\"edit(element)\"\r\n          >\r\n            <mat-icon>edit</mat-icon>\r\n          </button>\r\n          <button\r\n            mat-icon-button\r\n            aria-label=\"Example icon button with a delete icon\"\r\n            (click)=\"delete(element)\"\r\n          >\r\n            <mat-icon>delete</mat-icon>\r\n          </button>\r\n          <button\r\n            mat-icon-button\r\n            class=\"mr-2\"\r\n            aria-label=\"Example icon button with a delete icon\"\r\n            [routerLink]=\"['/admin/siteInfo/siteinspectiontopic/' + element._id]\"\r\n          >\r\n            <mat-icon>launch</mat-icon>\r\n          </button> -->\r\n        \r\n      </ng-container>\r\n        <ng-container matColumnDef=\"FormConfigure\">\r\n        <th mat-header-cell *matHeaderCellDef>Form Configure</th>\r\n        <td mat-cell *matCellDef=\"let element\">\r\n          <mat-checkbox class=\"example-margin\" (change)=\"doCheckboxCheck($event)\"></mat-checkbox>\r\n        \r\n        </td>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"SubscriptionRates\">\r\n        <th mat-header-cell *matHeaderCellDef>Subscription Rates</th>\r\n        <td mat-cell *matCellDef=\"let element\">\r\n          <mat-checkbox class=\"example-margin\" (change)=\"doCheckboxCheck($event)\"></mat-checkbox>\r\n        \r\n        </td>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"LogicalFormData\">\r\n        <th mat-header-cell *matHeaderCellDef>Logical Form Data</th>\r\n        <td mat-cell *matCellDef=\"let element\">\r\n          <mat-checkbox class=\"example-margin\" (change)=\"doCheckboxCheck($event)\"></mat-checkbox>\r\n        \r\n        </td>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"CMS\">\r\n        <th mat-header-cell *matHeaderCellDef>CMS</th>\r\n        <td mat-cell *matCellDef=\"let element\">\r\n          <mat-checkbox    class=\"example-margin\" (change)=\"doCheckboxCheck($event)\"></mat-checkbox>\r\n        \r\n        </td>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"StateRelation\">\r\n        <th mat-header-cell *matHeaderCellDef>State Relation</th>\r\n        <td mat-cell *matCellDef=\"let element\">\r\n          <mat-checkbox    class=\"example-margin\" (change)=\"doCheckboxCheck($event)\"></mat-checkbox>\r\n        \r\n    \r\n        </td>\r\n      </ng-container>\r\n      \r\n  \r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n      <!-- <tr class=\"mat-row\" *matNoDataRow>\r\n        <td class=\"mat-cell\" colspan=\"4\">Data Not Found \"{{ input.value }}\"</td>\r\n      </tr> -->\r\n    </table>\r\n  \r\n    <!-- <mat-paginator\r\n      [pageSizeOptions]=\"[5,10,20]\"\r\n      showFirstLastButtons\r\n      aria-label=\"Select page of periodic elements\"\r\n    >\r\n    </mat-paginator>\r\n   -->\r\n<!-- /////////////////////////////////// -->\r\n\r\n  </div>\r\n\r\n  <div class=\"example-container mat-elevation-z8 overflow-auto\">\r\n    <table mat-table [dataSource]=\"tempArray\" class=\"mat-elevation-z8 \">\r\n  \r\n      <ng-container matColumnDef=\"role\" sticky>\r\n        <th [ngStyle]=\"{'display': 'none'}\" mat-header-cell *matHeaderCellDef [attr.rowspan]=\"2\"> Role </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.role}} </td>\r\n      </ng-container>\r\n\r\n\r\n        <!-- ////////////// -->\r\n  \r\n        <ng-container matColumnDef=\"dashboard.Access\">\r\n          <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Access </th>\r\n          <td mat-cell *matCellDef=\"let element\">  <mat-checkbox class=\"example-margin\" (change)=\"doCheckboxCheck($event)\">  \r\n          </mat-checkbox>\r\n        </td>\r\n        </ng-container>\r\n    \r\n        <ng-container matColumnDef=\"dashboard.View\">\r\n          <th mat-header-cell *matHeaderCellDef  class=\"p-2\" > View </th>\r\n          <td mat-cell *matCellDef=\"let element\" class=\"similar-cell-width\"> <mat-checkbox class=\"example-margin\" (change)=\"doCheckboxCheck($event)\">  \r\n          </mat-checkbox>\r\n        </td>\r\n        </ng-container>\r\n  \r\n    <!-- ////////////// -->\r\n      <ng-container matColumnDef=\"dynamicForm.Access\">\r\n        <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Access </th>\r\n        <td mat-cell *matCellDef=\"let element\">  <mat-checkbox class=\"example-margin\" (change)=\"doCheckboxCheck($event)\">  \r\n        </mat-checkbox>\r\n      </td>\r\n      </ng-container>\r\n  \r\n      <ng-container matColumnDef=\"dynamicForm.View\">\r\n        <th mat-header-cell *matHeaderCellDef class=\"p-2\" > View </th>\r\n        <td mat-cell *matCellDef=\"let element\" class=\"similar-cell-width\"> <mat-checkbox class=\"example-margin\" (change)=\"doCheckboxCheck($event)\">  \r\n        </mat-checkbox>\r\n      </td>\r\n      </ng-container>\r\n  \r\n      <ng-container matColumnDef=\"dynamicForm.Delete\">\r\n        <th mat-header-cell *matHeaderCellDef class=\"p-2\"> Delete </th>\r\n        <td mat-cell *matCellDef=\"let element\"> <mat-checkbox class=\"example-margin\" (change)=\"doCheckboxCheck($event)\">  \r\n        </mat-checkbox>\r\n      </td>\r\n      </ng-container>\r\n  \r\n      <ng-container matColumnDef=\"dynamicForm.Update\">\r\n        <th mat-header-cell *matHeaderCellDef class=\"p-2\"> Update </th>\r\n        <td mat-cell *matCellDef=\"let element\" class=\"similar-cell-width\"> <mat-checkbox class=\"example-margin\" (change)=\"doCheckboxCheck($event)\">  \r\n        </mat-checkbox>\r\n      </td>\r\n      </ng-container>\r\n  \r\n      <ng-container matColumnDef=\"dynamicForm.Add\">\r\n        <th mat-header-cell *matHeaderCellDef class=\"p-2\"> Add </th>\r\n        <td mat-cell *matCellDef=\"let element\"> <mat-checkbox class=\"example-margin\" (change)=\"doCheckboxCheck($event)\">  \r\n        </mat-checkbox>\r\n      </td>\r\n      </ng-container>\r\n\r\n      <!-- ////////////// -->\r\n  \r\n      <ng-container matColumnDef=\"Logicalforms.Access\">\r\n        <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Access </th>\r\n        <td mat-cell *matCellDef=\"let element\">  <mat-checkbox class=\"example-margin\" (change)=\"doCheckboxCheck($event)\">  \r\n        </mat-checkbox>\r\n      </td>\r\n      </ng-container>\r\n  \r\n      <ng-container matColumnDef=\"Logicalforms.View\">\r\n        <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> View </th>\r\n        <td mat-cell *matCellDef=\"let element\" class=\"similar-cell-width\"> <mat-checkbox class=\"example-margin\" (change)=\"doCheckboxCheck($event)\">  \r\n        </mat-checkbox>\r\n      </td>\r\n      </ng-container>\r\n  \r\n      <ng-container matColumnDef=\"Logicalforms.Delete\">\r\n        <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Delete </th>\r\n        <td mat-cell *matCellDef=\"let element\"> <mat-checkbox class=\"example-margin\" (change)=\"doCheckboxCheck($event)\">  \r\n        </mat-checkbox>\r\n      </td>\r\n      </ng-container>\r\n  \r\n      <ng-container matColumnDef=\"Logicalforms.Update\">\r\n        <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Update </th>\r\n        <td mat-cell *matCellDef=\"let element\" class=\"similar-cell-width\"> <mat-checkbox class=\"example-margin\" (change)=\"doCheckboxCheck($event)\">  \r\n        </mat-checkbox>\r\n      </td>\r\n      </ng-container>\r\n  \r\n      <ng-container matColumnDef=\"Logicalforms.Add\">\r\n        <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Add </th>\r\n        <td mat-cell *matCellDef=\"let element\"> <mat-checkbox class=\"example-margin\" (change)=\"doCheckboxCheck($event)\">  \r\n        </mat-checkbox>\r\n      </td>\r\n      </ng-container>\r\n\r\n         <!-- ////////////// -->\r\n  \r\n         <ng-container matColumnDef=\"FormConfigure.Access\">\r\n          <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Access </th>\r\n          <td mat-cell *matCellDef=\"let element\">  <mat-checkbox class=\"example-margin\" (change)=\"doCheckboxCheck($event)\">  \r\n          </mat-checkbox>\r\n        </td>\r\n        </ng-container>\r\n    \r\n        <ng-container matColumnDef=\"FormConfigure.View\">\r\n          <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> View </th>\r\n          <td mat-cell *matCellDef=\"let element\" class=\"similar-cell-width\"> <mat-checkbox class=\"example-margin\" (change)=\"doCheckboxCheck($event)\">  \r\n          </mat-checkbox>\r\n        </td>\r\n        </ng-container>\r\n    \r\n        <ng-container matColumnDef=\"FormConfigure.Delete\">\r\n          <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Delete </th>\r\n          <td mat-cell *matCellDef=\"let element\"> <mat-checkbox class=\"example-margin\" (change)=\"doCheckboxCheck($event)\">  \r\n          </mat-checkbox>\r\n        </td>\r\n        </ng-container>\r\n    \r\n        <ng-container matColumnDef=\"FormConfigure.Update\">\r\n          <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Update </th>\r\n          <td mat-cell *matCellDef=\"let element\" class=\"similar-cell-width\"> <mat-checkbox class=\"example-margin\" (change)=\"doCheckboxCheck($event)\">  \r\n          </mat-checkbox>\r\n        </td>\r\n        </ng-container>\r\n    \r\n        <ng-container matColumnDef=\"FormConfigure.Add\">\r\n          <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Add </th>\r\n          <td mat-cell *matCellDef=\"let element\"> <mat-checkbox class=\"example-margin\" (change)=\"doCheckboxCheck($event)\">  \r\n          </mat-checkbox>\r\n        </td>\r\n        </ng-container>\r\n\r\n            <!-- ////////////// -->\r\n  \r\n            <ng-container matColumnDef=\"SubscriptionRates.Access\">\r\n              <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Access </th>\r\n              <td mat-cell *matCellDef=\"let element\">  <mat-checkbox class=\"example-margin\" (change)=\"doCheckboxCheck($event)\">  \r\n              </mat-checkbox>\r\n            </td>\r\n            </ng-container>\r\n        \r\n            <ng-container matColumnDef=\"SubscriptionRates.View\">\r\n              <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> View </th>\r\n              <td mat-cell *matCellDef=\"let element\" class=\"similar-cell-width\"> <mat-checkbox class=\"example-margin\" (change)=\"doCheckboxCheck($event)\">  \r\n              </mat-checkbox>\r\n            </td>\r\n            </ng-container>\r\n        \r\n            <ng-container matColumnDef=\"SubscriptionRates.Delete\">\r\n              <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Delete </th>\r\n              <td mat-cell *matCellDef=\"let element\"> <mat-checkbox class=\"example-margin\" (change)=\"doCheckboxCheck($event)\">  \r\n              </mat-checkbox>\r\n            </td>\r\n            </ng-container>\r\n        \r\n            <ng-container matColumnDef=\"SubscriptionRates.Update\">\r\n              <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Update </th>\r\n              <td mat-cell *matCellDef=\"let element\" class=\"similar-cell-width\"> <mat-checkbox class=\"example-margin\" (change)=\"doCheckboxCheck($event)\">  \r\n              </mat-checkbox>\r\n            </td>\r\n            </ng-container>\r\n        \r\n            <ng-container matColumnDef=\"SubscriptionRates.Add\">\r\n              <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Add </th>\r\n              <td mat-cell *matCellDef=\"let element\"> <mat-checkbox class=\"example-margin\" (change)=\"doCheckboxCheck($event)\">  \r\n              </mat-checkbox>\r\n            </td>\r\n            </ng-container>\r\n\r\n            \r\n            <!-- ////////////// -->\r\n  \r\n            <ng-container matColumnDef=\"LogicalFormData.Access\">\r\n              <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Access </th>\r\n              <td mat-cell *matCellDef=\"let element\">  <mat-checkbox class=\"example-margin\" (change)=\"doCheckboxCheck($event)\">  \r\n              </mat-checkbox>\r\n            </td>\r\n            </ng-container>\r\n        \r\n            <ng-container matColumnDef=\"LogicalFormData.View\">\r\n              <th mat-header-cell *matHeaderCellDef  class=\"p-2\" > View </th>\r\n              <td mat-cell *matCellDef=\"let element\" class=\"similar-cell-width\"> <mat-checkbox class=\"example-margin\" (change)=\"doCheckboxCheck($event)\">  \r\n              </mat-checkbox>\r\n            </td>\r\n            </ng-container>\r\n        \r\n            <ng-container matColumnDef=\"LogicalFormData.Delete\">\r\n              <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Delete </th>\r\n              <td mat-cell *matCellDef=\"let element\"> <mat-checkbox class=\"example-margin\" (change)=\"doCheckboxCheck($event)\">  \r\n              </mat-checkbox>\r\n            </td>\r\n            </ng-container>\r\n        \r\n            <ng-container matColumnDef=\"LogicalFormData.Update\">\r\n              <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Update </th>\r\n              <td mat-cell *matCellDef=\"let element\" class=\"similar-cell-width\"> <mat-checkbox class=\"example-margin\" (change)=\"doCheckboxCheck($event)\">  \r\n              </mat-checkbox>\r\n            </td>\r\n            </ng-container>\r\n        \r\n            <ng-container matColumnDef=\"LogicalFormData.Add\">\r\n              <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Add </th>\r\n              <td mat-cell *matCellDef=\"let element\"> <mat-checkbox class=\"example-margin\" (change)=\"doCheckboxCheck($event)\">  \r\n              </mat-checkbox>\r\n            </td>\r\n            </ng-container>\r\n\r\n             <!-- ////////////// -->\r\n  \r\n             <ng-container matColumnDef=\"CMS.Access\">\r\n              <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Access </th>\r\n              <td mat-cell *matCellDef=\"let element\">  <mat-checkbox class=\"example-margin\" (change)=\"doCheckboxCheck($event)\">  \r\n              </mat-checkbox>\r\n            </td>\r\n            </ng-container>\r\n        \r\n            <ng-container matColumnDef=\"CMS.View\">\r\n              <th mat-header-cell *matHeaderCellDef  class=\"p-2\" > View </th>\r\n              <td mat-cell *matCellDef=\"let element\" class=\"similar-cell-width\"> <mat-checkbox class=\"example-margin\" (change)=\"doCheckboxCheck($event)\">  \r\n              </mat-checkbox>\r\n            </td>\r\n            </ng-container>\r\n        \r\n            <ng-container matColumnDef=\"CMS.Delete\">\r\n              <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Delete </th>\r\n              <td mat-cell *matCellDef=\"let element\"> <mat-checkbox class=\"example-margin\" (change)=\"doCheckboxCheck($event)\">  \r\n              </mat-checkbox>\r\n            </td>\r\n            </ng-container>\r\n        \r\n            <ng-container matColumnDef=\"CMS.Update\">\r\n              <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Update </th>\r\n              <td mat-cell *matCellDef=\"let element\" class=\"similar-cell-width\"> <mat-checkbox class=\"example-margin\" (change)=\"doCheckboxCheck($event)\">  \r\n              </mat-checkbox>\r\n            </td>\r\n            </ng-container>\r\n        \r\n            <ng-container matColumnDef=\"CMS.Add\">\r\n              <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Add </th>\r\n              <td mat-cell *matCellDef=\"let element\"> <mat-checkbox class=\"example-margin\" (change)=\"doCheckboxCheck($event)\">  \r\n              </mat-checkbox>\r\n            </td>\r\n            </ng-container>\r\n   \r\n\r\n             <!-- ////////////// -->\r\n  \r\n             <ng-container matColumnDef=\"StateRelation.Access\">\r\n              <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Access </th>\r\n              <td mat-cell *matCellDef=\"let element\">  <mat-checkbox class=\"example-margin\" (change)=\"doCheckboxCheck($event)\">  \r\n              </mat-checkbox>\r\n            </td>\r\n            </ng-container>\r\n        \r\n            <ng-container matColumnDef=\"StateRelation.View\">\r\n              <th mat-header-cell *matHeaderCellDef  class=\"p-2\" > View </th>\r\n              <td mat-cell *matCellDef=\"let element\" class=\"similar-cell-width\"> <mat-checkbox class=\"example-margin\" (change)=\"doCheckboxCheck($event)\">  \r\n              </mat-checkbox>\r\n            </td>\r\n            </ng-container>\r\n        \r\n            <ng-container matColumnDef=\"StateRelation.Delete\">\r\n              <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Delete </th>\r\n              <td mat-cell *matCellDef=\"let element\"> <mat-checkbox class=\"example-margin\" (change)=\"doCheckboxCheck($event)\">  \r\n              </mat-checkbox>\r\n            </td>\r\n            </ng-container>\r\n        \r\n            <ng-container matColumnDef=\"StateRelation.Update\">\r\n              <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Update </th>\r\n              <td mat-cell *matCellDef=\"let element\" class=\"similar-cell-width\"> <mat-checkbox class=\"example-margin\" (change)=\"doCheckboxCheck($event)\">  \r\n              </mat-checkbox>\r\n            </td>\r\n            </ng-container>\r\n        \r\n            <ng-container matColumnDef=\"StateRelation.Add\">\r\n              <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Add </th>\r\n              <td mat-cell *matCellDef=\"let element\"> <mat-checkbox class=\"example-margin\" (change)=\"doCheckboxCheck($event)\">  \r\n              </mat-checkbox>\r\n            </td>\r\n            </ng-container>\r\n  \r\n   \r\n  \r\n  \r\n      <ng-container matColumnDef=\"roleheader\"   sticky>\r\n        <th mat-header-cell *matHeaderCellDef  class=\"roleZIndex\"  [attr.rowspan]=\"2\">\r\n        Role\r\n        </th>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"dashboard\">\r\n        <th mat-header-cell *matHeaderCellDef  [attr.colspan]=\"2\">\r\n          Dashboard\r\n        </th>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"dynamicForm\">\r\n        <th mat-header-cell *matHeaderCellDef  [attr.colspan]=\"5\">\r\n          Dynamic Form\r\n        </th>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"logicalForms\">\r\n        <th mat-header-cell *matHeaderCellDef  [attr.colspan]=\"5\">\r\n          Logical Forms\r\n        </th>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"formConfigure\">\r\n        <th mat-header-cell *matHeaderCellDef  [attr.colspan]=\"5\">\r\n          Form Configure\r\n        </th>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"subscriptionRates\">\r\n        <th mat-header-cell *matHeaderCellDef  [attr.colspan]=\"5\">\r\n          Subscription Rates\r\n        </th>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"logicalFormData\">\r\n        <th mat-header-cell *matHeaderCellDef  [attr.colspan]=\"5\">\r\n          Logical Form Data\r\n        </th>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"cms\">\r\n        <th mat-header-cell *matHeaderCellDef  [attr.colspan]=\"5\">\r\n          CMS\r\n        </th>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"stateRelation\">\r\n        <th mat-header-cell *matHeaderCellDef  [attr.colspan]=\"5\">\r\n          State Relation\r\n        </th>\r\n      </ng-container>\r\n  \r\n  \r\n  \r\n      <tr mat-header-row\r\n        *matHeaderRowDef=\"['roleheader','dashboard','dynamicForm','logicalForms','formConfigure','subscriptionRates','logicalFormData','cms','stateRelation']\">\r\n      </tr>\r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns;sticky:true\"></tr>\r\n      <tr mat-row *matRowDef=\"let row ; columns: displayedColumns;\" (click)=\"getdata(row)\"></tr>\r\n    </table>\r\n  \r\n  </div>\r\n \r\n  \r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SharedModule } from './../shared/shared.module';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { RoleManagementRoutingModule } from './role-management-routing.module';\r\nimport { RoleManagementComponent } from './role-management.component';\r\nimport { CheckboxComponent } from './checkbox/checkbox.component';\r\nimport { AddRoleComponent } from './add-role/add-role.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [RoleManagementComponent, CheckboxComponent, AddRoleComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RoleManagementRoutingModule,\r\n    SharedModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ]\r\n})\r\nexport class RoleManagementModule { }\r\n"],"sourceRoot":"webpack:///"}