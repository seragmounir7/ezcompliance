{"version":3,"sources":["./src/app/views/confi-logi/confi-logi.module.ts","./src/app/views/confi-logi/set-logic/set-relation/set-relation.component.ts","./src/app/views/confi-logi/set-logic/set-relation/set-relation.component.html","./src/app/views/confi-logi/hazard-treatment/add-hazard-relation/add-hazard-relation.component.ts","./src/app/views/confi-logi/hazard-treatment/add-hazard-relation/add-hazard-relation.component.html","./src/app/views/confi-logi/set-logic/add-job-task/add-job-task.component.ts","./src/app/views/confi-logi/set-logic/add-job-task/add-job-task.component.html","./src/app/views/confi-logi/set-logic/test-logic/test-logic.component.ts","./src/app/views/confi-logi/set-logic/test-logic/test-logic.component.html","./src/app/views/confi-logi/hazard-treatment/hazard-treatment.component.ts","./src/app/views/confi-logi/hazard-treatment/hazard-treatment.component.html","./src/app/views/confi-logi/confi-logi.component.ts","./src/app/views/confi-logi/confi-logi.component.html","./src/app/views/confi-logi/job-number/create-job-no/create-job-no.component.ts","./src/app/views/confi-logi/job-number/create-job-no/create-job-no.component.html","./src/app/views/confi-logi/set-logic/set-logic.component.ts","./src/app/views/confi-logi/set-logic/set-logic.component.html","./src/app/views/confi-logi/confi-logi-routing.module.ts","./src/app/views/confi-logi/set-logic/set-relation/add-item/add-item.component.ts","./src/app/views/confi-logi/set-logic/set-relation/add-item/add-item.component.html","./src/app/views/confi-logi/job-number/job-number.component.ts","./src/app/views/confi-logi/job-number/job-number.component.html"],"names":[],"mappings":"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","file":"views-confi-logi-confi-logi-module-es2015.js","sourcesContent":["import { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { ConfiLogiRoutingModule } from './confi-logi-routing.module';\r\nimport { ConfiLogiComponent } from './confi-logi.component';\r\nimport { SetLogicComponent } from './set-logic/set-logic.component';\r\nimport { JobNumberComponent } from './job-number/job-number.component';\r\nimport { CreateJobNoComponent } from './job-number/create-job-no/create-job-no.component';\r\nimport { SetRelationComponent } from './set-logic/set-relation/set-relation.component';\r\nimport {AutosizeModule} from 'ngx-autosize';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport { AddItemComponent } from './set-logic/set-relation/add-item/add-item.component';\r\nimport { TestLogicComponent } from './set-logic/test-logic/test-logic.component';\r\nimport { AddJobTaskComponent } from './set-logic/add-job-task/add-job-task.component';\r\nimport { HazardTreatmentComponent } from './hazard-treatment/hazard-treatment.component';\r\nimport { AddHazardRelationComponent } from './hazard-treatment/add-hazard-relation/add-hazard-relation.component';\r\n\r\n@NgModule({\r\n  declarations: [ConfiLogiComponent, SetLogicComponent, JobNumberComponent, CreateJobNoComponent, SetRelationComponent, AddItemComponent, TestLogicComponent, AddJobTaskComponent, HazardTreatmentComponent, AddHazardRelationComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ConfiLogiRoutingModule,SharedModule,FormsModule,\r\n    ReactiveFormsModule,MatStepperModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    AutosizeModule\r\n  ]\r\n})\r\nexport class ConfiLogiModule { }\r\n","import { AddItemComponent } from './add-item/add-item.component';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport Swal from 'sweetalert2';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-set-relation',\r\n  templateUrl: './set-relation.component.html',\r\n  styleUrls: ['./set-relation.component.scss'],\r\n})\r\nexport class SetRelationComponent implements OnInit {\r\n  JobTaskDetail!: FormGroup;\r\n  jobTask = null;\r\n  highRiskConstructionData = [];\r\n  PPESelectionData = [];\r\n  licenseAndQual = [];\r\n  allHazards = [];\r\n  allContrlActReq = [];\r\n  licenceByTradecat = [];\r\n  resiRiskLevelData = [];\r\n  riskLevelData = [];\r\n  staff = [];\r\n  allCodeOfPract = [];\r\n  isLinear = false;\r\n  jobTaskId = null;\r\n  stepperList:any[]=[\r\n    {\r\n      name:'HighRisk Construction',\r\n      i:1,\r\n      code:'highRisk'\r\n\r\n    },\r\n    {\r\n      name:'PPE',\r\n      i:0,\r\n      code:'ppe'\r\n    },\r\n    {\r\n      name:'Licence',\r\n      i:0,\r\n       code:'licence'\r\n    },\r\n    {\r\n      name:'Identify Hazards',\r\n      i:0,\r\n       code:'identifyHazards'\r\n    },\r\n    {\r\n      name:'Risk Level',\r\n      i:0,\r\n       code:'riskLevel'\r\n    },\r\n    {\r\n      name:'Control Action Required',\r\n      i:0,\r\n       code:'ctrlActreq'\r\n    },\r\n    {\r\n      name:'Code of Practice',\r\n      i:0,\r\n       code:'codeOfPract'\r\n    },\r\n    {\r\n      name:'Residule Risk Level',\r\n      i:0,\r\n       code:'resRiskLevel'\r\n    },\r\n    // {\r\n    //   name:'Code of Practice',\r\n    //   i:0,\r\n    //    code:'codeOfPract'\r\n    // },\r\n    {\r\n      name:'Chemical related Task',\r\n      i:0,\r\n       code:''\r\n    },\r\n    {\r\n      name:'Person Responsible',\r\n      i:0,\r\n       code:'perResbl'\r\n    }\r\n  ]\r\n\r\n  count:number=0\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private dialog: MatDialog,\r\n    private router: Router,\r\n    private fb: FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.JobTaskDetail = this.fb.group({\r\n      highRiskConstr: [],\r\n      PPE: [],\r\n      codeOfPract: [],\r\n      LicenceCat: [],\r\n      identifyHazrds: [],\r\n      contrActReq: [],\r\n      riskLevel: [],\r\n      residualRiskL: [],\r\n      personResp: [],\r\n      chemical: [],\r\n    });\r\n\r\n    this.route.queryParams.subscribe((id) => {\r\n      console.log(id);\r\n      this.jobTaskId = id.id;\r\n      this.logicalFormInfo.getJobtaskById(id.id).subscribe((res: any) => {\r\n        this.jobTask = res.data;\r\n        console.log(\r\n          'this.jobTask ',\r\n          this.jobTask \r\n        );\r\n        this.getLicenceByTradeCat(this.jobTask.tradeCategoryId);\r\n\r\n        if (this.jobTask.set == true) {\r\n          this.JobTaskDetail.patchValue({\r\n            highRiskConstr: this.jobTask.risk,\r\n            PPE: this.jobTask.PPE,\r\n            codeOfPract: this.jobTask.codeOfPractice,\r\n           LicenceCat: this.jobTask.licence,\r\n            identifyHazrds: this.jobTask.identifyHazard,\r\n            contrActReq: this.jobTask.controlActionRequired,\r\n            riskLevel: this.jobTask.riskLevel,\r\n            residualRiskL: this.jobTask.residualRisk,\r\n            personResp: this.jobTask.staff,\r\n            chemical: this.jobTask.chemical,\r\n          });\r\n        }\r\n        if (this.jobTask?.chemical === 'YES')\r\n          this.JobTaskDetail.get('chemical').setValue('YES');\r\n        else this.JobTaskDetail.get('chemical').setValue('NO');\r\n      });\r\n    });\r\n\r\n    this.getAllHighRisk();\r\n    this.getAllPPE();\r\n    this.getAllHazard();\r\n    this.getAllContrActReq();\r\n    this.getAllStaff();\r\n    this.getAllResidualRiskLevel();\r\n    this.getAllRiskLevel();\r\n    this.getAllCodeOfPractice();\r\n  }\r\n\r\n  getAllResidualRiskLevel() {\r\n    this.logicalFormInfo.getAllResidual().subscribe((res: any) => {\r\n    //  console.log('this.resiRiskLevelData', res.data);\r\n      this.resiRiskLevelData = res.data;\r\n    });\r\n  }\r\n  getAllRiskLevel() {\r\n    this.logicalFormInfo.getAllRiskLevel().subscribe((res: any) => {\r\n//console.log('this.riskLevelData', res.data);\r\n      this.riskLevelData = res.data;\r\n    });\r\n  }\r\n  getAllStaff() {\r\n    this.logicalFormInfo.getAllStaff().subscribe((res: any) => {\r\n      console.log(res);\r\n      this.staff = res.data;\r\n    });\r\n  }\r\n  getAllHighRisk() {\r\n    this.logicalFormInfo.getAllRisk().subscribe((res: any) => {\r\n//console.log('Risk=>', res);\r\n      this.highRiskConstructionData = res.data;\r\n    });\r\n  }\r\n  getAllPPE() {\r\n    this.logicalFormInfo.getAllPPE().subscribe((res: any) => {\r\n    //  console.log('PPE=>', res);\r\n      this.PPESelectionData = res.data;\r\n    });\r\n  }\r\n  getAllCodeOfPractice() {\r\n   \r\n    this.logicalFormInfo.getAllCOP().subscribe((res:any) => {\r\n      //console.log('codeOfPractice=>', res);\r\n   this.allCodeOfPract=res.data;\r\n    });\r\n \r\n  }\r\n\r\n  getAllHazard() {\r\n    this.logicalFormInfo.getAllHazards().subscribe((res: any) => {\r\n   //   console.log('getAllHazards=>', res);\r\n      this.allHazards = res.data;\r\n    });\r\n  }\r\n  getAllContrActReq() {\r\n    this.logicalFormInfo.getAllContrlActReq().subscribe((res: any) => {\r\n    //  console.log('getAllHazards=>', res);\r\n      this.allContrlActReq = res.data;\r\n    });\r\n  }\r\n  getLicenceByTradeCat(id) {\r\n    console.log('getLicenceByTradeCat', id);\r\n\r\n    this.logicalFormInfo.getLicenceByTradeCat(id).subscribe((res) => {\r\n   //   console.log('getAllLicenceCat=>', res);\r\n      this.licenceByTradecat = res.data.licenceData;\r\n    });\r\n  }\r\n  setRelation() {\r\n    console.log(this.JobTaskDetail.value);\r\n    let allContrlActReqTitle=[];\r\n    let temp1=this.JobTaskDetail.get('contrActReq').value;\r\n    if(temp1!=null){\r\n      this.allContrlActReq.forEach(element1 => {\r\n        temp1.forEach(element2 => {\r\n          if(element1._id===element2){\r\n            let data={\r\n              title:element1.title,\r\n              id:element1._id\r\n            }\r\n            allContrlActReqTitle.push(data)\r\n          }\r\n        });\r\n      });\r\n    }\r\n  \r\n \r\n   \r\n    let allHazardsTitle=[];\r\n    let temp2=this.JobTaskDetail.get('identifyHazrds').value;\r\n    if(temp2!=null){\r\n      this.allHazards.forEach(element1 => {\r\n        temp2.forEach(element2 => {\r\n          if(element1._id===element2){\r\n            let data={\r\n              title:element1.title,\r\n              id:element1._id\r\n            }\r\n            allHazardsTitle.push(data)\r\n          }\r\n        });\r\n      });\r\n    }\r\n  \r\n    let allCOPTitle=[];\r\n    let temp3=this.JobTaskDetail.get('codeOfPract').value;\r\n    if(temp3!=null){\r\n      this.allCodeOfPract.forEach(element1 => {\r\n        temp3.forEach(element2 => {\r\n          if(element1._id===element2){\r\n            let data={\r\n              title:element1.title,\r\n              id:element1._id\r\n            }\r\n            allCOPTitle.push(data)\r\n          }\r\n        });\r\n      })\r\n    }\r\n    let staffTitle=[];\r\n    let temp4=this.JobTaskDetail.get('personResp').value;\r\n    if(temp4!=null){\r\n      console.log(temp4);\r\n      \r\n      this.staff.forEach(element1 => {\r\n        temp4.forEach(element2 => {\r\n          if(element1._id===element2){\r\n            let data={\r\n              title:element1.title,\r\n              id:element1._id\r\n            }\r\n            staffTitle.push(data)\r\n          }\r\n        });\r\n      })\r\n    }\r\n  ;\r\n    let data = {\r\n      title: this.jobTask.title,\r\n      risk: this.JobTaskDetail.get('highRiskConstr').value||[],\r\n      codeOfPractice: this.JobTaskDetail.get('codeOfPract').value||[],\r\n      PPE: this.JobTaskDetail.get('PPE').value||[],\r\n      tradeCategoryId:this.jobTask.tradeCategoryId,\r\n      licence: this.JobTaskDetail.get('LicenceCat').value||[],\r\n      identifyHazard: this.JobTaskDetail.get('identifyHazrds').value||[],\r\n      controlActionRequired: this.JobTaskDetail.get('contrActReq').value||[],\r\n      riskLevel: this.JobTaskDetail.get('riskLevel').value,\r\n      residualRisk: this.JobTaskDetail.get('residualRiskL').value,\r\n      staff: this.JobTaskDetail.get('personResp').value,\r\n      chemical: this.JobTaskDetail.get('chemical').value,\r\n      allHazardsTitle:allHazardsTitle,\r\n      allContrlActReqTitle:allContrlActReqTitle,\r\n      allCOPTitle:allCOPTitle,\r\n      staffTitle:staffTitle,\r\n      set: true,\r\n    };\r\n\r\n    console.log('send data', data);\r\n\r\n    this.logicalFormInfo\r\n      .updateJobTask(data, this.jobTaskId)\r\n      .subscribe((res) => {\r\n        console.log('resJob Task=>', res);\r\n\r\n        Swal.fire({\r\n          title: 'Relation set successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });\r\n        this.router.navigate(['/admin/confiLogi/setLogic']);\r\n      });\r\n  }\r\n  addItem(type) {\r\n    let temp = {\r\n      type: type,\r\n      tradeCategoryId: this.jobTask.tradeCategoryId,\r\n    };\r\n    if (type === 'licence') {\r\n      temp = {\r\n        type: type,\r\n        tradeCategoryId: this.jobTask.tradeCategoryId,\r\n      };\r\n    } else {\r\n      temp = {\r\n        type: type,\r\n        tradeCategoryId: '',\r\n      };\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(AddItemComponent, {\r\n      width: '550px',\r\n      // height:'50%',\r\n      data: temp,\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      switch (result) {\r\n        case 'highRisk': {\r\n          let data = this.JobTaskDetail.get('highRiskConstr').value;\r\n          this.getAllHighRisk();\r\n          this.JobTaskDetail.get('highRiskConstr').patchValue(data);\r\n          break;\r\n        }\r\n        case 'ppe': {\r\n          let data = this.JobTaskDetail.get('PPE').value;\r\n          this.getAllPPE();\r\n          this.JobTaskDetail.get('PPE').patchValue(data);\r\n          break;\r\n        }\r\n        case 'codeOfPract': {\r\n          let data = this.JobTaskDetail.get('codeOfPract').value;\r\n          this.getAllCodeOfPractice();\r\n          this.JobTaskDetail.get('codeOfPract').patchValue(data);\r\n          break;\r\n        }\r\n        case 'licence': {\r\n          let data = this.JobTaskDetail.get('LicenceCat').value;\r\n          this.getLicenceByTradeCat(this.jobTask.tradeCategoryId);\r\n          this.JobTaskDetail.get('LicenceCat').patchValue(data);\r\n          break;\r\n        }\r\n        case 'identifyHazards': {\r\n          let data = this.JobTaskDetail.get('identifyHazrds').value;\r\n          this.getAllHazard();\r\n          this.JobTaskDetail.get('identifyHazrds').patchValue(data);\r\n          break;\r\n        }\r\n        case 'riskLevel': {\r\n          let data = this.JobTaskDetail.get('riskLevel').value;\r\n          this.getAllRiskLevel();\r\n          this.JobTaskDetail.get('riskLevel').patchValue(data);\r\n          break;\r\n        }\r\n        case 'ctrlActreq': {\r\n          let data = this.JobTaskDetail.get('contrActReq').value;\r\n          this.getAllContrActReq();\r\n          this.JobTaskDetail.get('contrActReq').patchValue(data);\r\n          break;\r\n        }\r\n        case 'resRiskLevel': {\r\n          let data = this.JobTaskDetail.get('residualRiskL').value;\r\n          this.getAllResidualRiskLevel();\r\n          this.JobTaskDetail.get('residualRiskL').patchValue(data);\r\n          break;\r\n        }\r\n        case 'perResbl': {\r\n          let data = this.JobTaskDetail.get('personResp').value;\r\n          this.getAllStaff();\r\n          this.JobTaskDetail.get('personResp').patchValue(data);\r\n          break;\r\n        }\r\n      }\r\n      console.log('The dialog was closed');\r\n    });\r\n  }\r\n  prev(){\r\n    \r\n    if(this.count != this.stepperList.length+1 && this.count !=0){\r\n      this.count--\r\n      this.stepperList.map(x => {\r\n        x.i = 0\r\n      }) \r\n      this.stepperList[this.count].i = 1\r\n      \r\n    }\r\n  }\r\n  next(){\r\n    if(this.count != this.stepperList.length-1){\r\n      this.count++\r\n      this.stepperList.map(x => {\r\n        x.i = 0\r\n      }) \r\n      this.stepperList[this.count].i = 1\r\n      \r\n    }\r\n  }\r\n  handleClick(index){\r\n    console.log(index)\r\n    this.count = index\r\n    this.stepperList.map(x => {\r\n      x.i = 0\r\n    }) \r\n    this.stepperList[this.count].i = 1\r\n  }\r\n  // addItem(type) {\r\n  //   switch (type) {\r\n  //     case 'highRisk': {\r\n  //       this.openDialogBox(type);\r\n  //       break;\r\n  //     }\r\n  //     case 'ppe': {\r\n  //       this.openDialogBox(type);\r\n  //       break;\r\n  //     }\r\n  //     case 'licence': {\r\n  //       this.openDialogBox(type);\r\n  //       break;\r\n  //     }\r\n  //     case 'identifyHazards': {\r\n  //       this.openDialogBox(type);\r\n  //       break;\r\n  //     }\r\n  //     case 'riskLevel': {\r\n  //       this.openDialogBox(type);\r\n  //       break;\r\n  //     }\r\n  //     case 'ctrlActreq': {\r\n  //       this.openDialogBox(type);\r\n  //       break;\r\n  //     }\r\n  //     case 'resRiskLevel': {\r\n  //       this.openDialogBox(type);\r\n  //       break;\r\n  //     }\r\n  //     case 'perResbl': {\r\n  //       this.openDialogBox(type);\r\n  //       break;\r\n  //     }\r\n\r\n  //   }\r\n  // }\r\n}\r\n","<div class=\"btn btn-outline-primary\" [routerLink]=\"['/admin/confiLogi/setLogic']\">\r\n  <i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i> \r\n\r\n</div>\r\n<div class=\"ml-2\">\r\n  <h2>Job Task :&nbsp;{{ jobTask?.title }}</h2>\r\n</div>\r\n<!-- <mat-horizontal-stepper [formGroup]=\"JobTaskDetail\" style=\"height: 500px;\">\r\n  \r\n  <mat-step >\r\n    <ng-template matStepLabel>HighRisk Construction</ng-template>\r\n    <h2 class=\"text-center mt-3\">HighRisk Construction<span class=\"material-icons ml-3\"(click)=\"addItem('highRisk')\" >add_circle_outline</span></h2> \r\n    <div class=\"row justify-content-center\">\r\n        <div class=\"col-1 my-auto\"> \r\n        </div>\r\n        <div class=\"col-7\">\r\n            <mat-form-field class=\"container\" appearance=\"fill\">\r\n                <mat-label class=\"text-center \">HighRiskConstruction</mat-label>\r\n                <mat-select formControlName=\"highRiskConstr\" multiple >\r\n                  <mat-select-trigger>\r\n                    <span\r\n                      *ngIf=\"!JobTaskDetail.get('highRiskConstr').value?.length\"\r\n                      class=\"example-additional-selection\"\r\n                    >\r\n                    </span>\r\n                    <span\r\n                      *ngIf=\"JobTaskDetail.get('highRiskConstr').value?.length == 1\"\r\n                      class=\"example-additional-selection\"\r\n                    >\r\n                      One Item selected\r\n                    </span>\r\n                    <span\r\n                      *ngIf=\"JobTaskDetail.get('highRiskConstr').value?.length > 1\"\r\n                      class=\"example-additional-selection\"\r\n                    >\r\n                      More than one selected\r\n                    </span>\r\n                  </mat-select-trigger>\r\n                  <mat-option\r\n                    *ngFor=\"let parameter of highRiskConstructionData\"\r\n                    [value]=\"parameter._id\"\r\n                  >\r\n                    {{ parameter.title }}</mat-option\r\n                  >\r\n                </mat-select>\r\n              </mat-form-field>\r\n        </div>\r\n        <div class=\"col-1 my-auto\">\r\n            <button class=\"btn\" matStepperNext><i class=\"fas fa-arrow-right\"></i></button>\r\n        </div>\r\n    </div>\r\n \r\n\r\n  </mat-step>\r\n  <mat-step >\r\n    <ng-template matStepLabel>PPE</ng-template>\r\n    <h2 class=\"text-center mt-3\">PPE<span class=\"material-icons ml-3\"(click)=\"addItem('ppe')\" >add_circle_outline</span></h2>\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-1 my-auto\"><button class=\"btn\" matStepperPrevious><i class=\"fas fa-arrow-left\"></i></button></div>\r\n      <div class=\"col-7\">\r\n        <mat-form-field class=\"container\" appearance=\"fill\">\r\n          <mat-label>PPE selection</mat-label>\r\n          <mat-select formControlName=\"PPE\" multiple>\r\n            <mat-select-trigger>\r\n              <span\r\n                *ngIf=\"!JobTaskDetail.get('PPE').value?.length\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n              </span>\r\n              <span\r\n                *ngIf=\"JobTaskDetail.get('PPE').value?.length == 1\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n                One Item selected\r\n              </span>\r\n              <span\r\n                *ngIf=\"JobTaskDetail.get('PPE').value?.length > 1\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n                More than one selected\r\n              </span>\r\n            </mat-select-trigger>\r\n            <mat-option\r\n              *ngFor=\"let parameter of PPESelectionData\"\r\n              [value]=\"parameter._id\"\r\n              >{{ parameter.title }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n      <div class=\"col-1 my-auto\"><button class=\"btn\" matStepperNext><i class=\"fas fa-arrow-right\"></i></button></div>\r\n    </div>\r\n   \r\n  </mat-step>\r\n  <mat-step >\r\n    <ng-template matStepLabel>Licence </ng-template>\r\n    <h2 class=\"text-center mt-3\">Licences <span class=\"material-icons ml-3\"(click)=\"addItem('licence')\" >add_circle_outline</span> </h2>\r\n    <div class=\"row justify-content-center\">\r\n        <div class=\"col-1 my-auto\"> \r\n            <button class=\"btn\" matStepperPrevious><i class=\"fas fa-arrow-left\"></i></button>\r\n        </div>\r\n        <div class=\"col-7\">\r\n            <mat-form-field class=\"container\" appearance=\"fill\">\r\n                <mat-label>Licences</mat-label>                \r\n                <mat-select formControlName=\"LicenceCat\" multiple>\r\n                  <mat-select-trigger>\r\n                    <span\r\n                      *ngIf=\"!JobTaskDetail.get('LicenceCat').value?.length\"\r\n                      class=\"example-additional-selection\"\r\n                    >\r\n                    </span>\r\n                    <span\r\n                      *ngIf=\"JobTaskDetail.get('LicenceCat').value?.length == 1\"\r\n                      class=\"example-additional-selection\"\r\n                    >\r\n                      One Item selected\r\n                    </span>\r\n                    <span\r\n                      *ngIf=\"JobTaskDetail.get('LicenceCat').value?.length > 1\"\r\n                      class=\"example-additional-selection\"\r\n                    >\r\n                      More than one selected\r\n                    </span>\r\n                  </mat-select-trigger>\r\n                  <mat-option\r\n                    *ngFor=\"let parameter of licenceByTradecat\"\r\n                    [value]=\"parameter._id\"\r\n                    >{{ parameter.title }}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n        </div>\r\n        <div class=\"col-1 my-auto\">\r\n            <button class=\"btn\" matStepperNext><i class=\"fas fa-arrow-right\"></i></button>\r\n        </div>\r\n    </div>\r\n   \r\n  \r\n  </mat-step>\r\n\r\n  <mat-step >\r\n    <ng-template matStepLabel>Identify Hazards</ng-template>\r\n    <h2 class=\"text-center mt-3\">Identify Hazards<span class=\"material-icons ml-3\"(click)=\"addItem('identifyHazards')\" >add_circle_outline</span></h2>\r\n    <div class=\"row justify-content-center\">\r\n        <div class=\"col-1 my-auto\"> \r\n            <button class=\"btn\" matStepperPrevious><i class=\"fas fa-arrow-left\"></i></button>\r\n        </div>\r\n        <div class=\"col-7\">\r\n            <mat-form-field class=\"container\" appearance=\"fill\">\r\n                <mat-label>Identify Hazards</mat-label>\r\n                <mat-select formControlName=\"identifyHazrds\" multiple>\r\n                  <mat-select-trigger>\r\n                    <span\r\n                      *ngIf=\"!JobTaskDetail.get('identifyHazrds').value?.length\"\r\n                      class=\"example-additional-selection\"\r\n                    >\r\n                    </span>\r\n                    <span\r\n                      *ngIf=\"JobTaskDetail.get('identifyHazrds').value?.length == 1\"\r\n                      class=\"example-additional-selection\"\r\n                    >\r\n                      One Item selected\r\n                    </span>\r\n                    <span\r\n                      *ngIf=\"JobTaskDetail.get('identifyHazrds').value?.length > 1\"\r\n                      class=\"example-additional-selection\"\r\n                    >\r\n                      More than one selected\r\n                    </span>\r\n                  </mat-select-trigger>\r\n                  <mat-option *ngFor=\"let parameter of allHazards\" [value]=\"parameter._id\"\r\n                    >{{ parameter.title }}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n        </div>\r\n        <div class=\"col-1 my-auto\">\r\n            <button class=\"btn\" matStepperNext><i class=\"fas fa-arrow-right\"></i></button>\r\n        </div>\r\n    </div>\r\n  \r\n\r\n  </mat-step>\r\n  <mat-step > \r\n    <ng-template matStepLabel>Risk Level</ng-template>\r\n    <h2 class=\"text-center mt-3\">Risk Level<span class=\"material-icons ml-3\"(click)=\"addItem('riskLevel')\" >add_circle_outline</span></h2>\r\n    <div class=\"row justify-content-center\">\r\n        <div class=\"col-1 my-auto\"> \r\n            <button class=\"btn\" matStepperPrevious><i class=\"fas fa-arrow-left\"></i></button>\r\n        </div>\r\n        <div class=\"col-7\">\r\n              <mat-form-field class=\"container\" appearance=\"fill\">\r\n                <mat-label>Risk Level</mat-label>\r\n                <mat-select formControlName=\"riskLevel\">\r\n                  <mat-option *ngFor=\"let parameter of riskLevelData\" [value]=\"parameter._id\">\r\n                    {{parameter.title}}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n        <div class=\"col-1 my-auto\">\r\n            <button class=\"btn\" matStepperNext><i class=\"fas fa-arrow-right\"></i></button>\r\n        </div>\r\n    </div>\r\n  \r\n \r\n  </mat-step>\r\n  <mat-step >\r\n    <ng-template matStepLabel>Control Action Required</ng-template>\r\n    <h2 class=\"text-center mt-3\">Control Action Required<span class=\"material-icons ml-3\"(click)=\"addItem('ctrlActreq')\" >add_circle_outline</span></h2>\r\n    <div class=\"row justify-content-center\">\r\n        <div class=\"col-1 my-auto\"> \r\n            <button class=\"btn\" matStepperPrevious><i class=\"fas fa-arrow-left\"></i></button>\r\n        </div>\r\n        <div class=\"col-7\">\r\n            <mat-form-field class=\"container\" appearance=\"fill\">\r\n                <mat-label>Control Action Required</mat-label>\r\n                <mat-select formControlName=\"contrActReq\" multiple>\r\n                  <mat-select-trigger>\r\n                    <span\r\n                      *ngIf=\"!JobTaskDetail.get('contrActReq').value?.length\"\r\n                      class=\"example-additional-selection\"\r\n                    >\r\n                    </span>\r\n                    <span\r\n                      *ngIf=\"JobTaskDetail.get('contrActReq').value?.length == 1\"\r\n                      class=\"example-additional-selection\"\r\n                    >\r\n                      One Item selected\r\n                    </span>\r\n                    <span\r\n                      *ngIf=\"JobTaskDetail.get('contrActReq').value?.length > 1\"\r\n                      class=\"example-additional-selection\"\r\n                    >\r\n                      More than one selected\r\n                    </span>\r\n                  </mat-select-trigger>\r\n                  <mat-option\r\n                    *ngFor=\"let parameter of allContrlActReq\"\r\n                    [value]=\"parameter._id\"\r\n                    >{{ parameter.title }}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n        </div>\r\n        <div class=\"col-1 my-auto\">\r\n            <button class=\"btn\" matStepperNext><i class=\"fas fa-arrow-right\"></i></button>\r\n        </div>\r\n    </div>\r\n   \r\n\r\n  </mat-step>\r\n  <mat-step >\r\n    <ng-template matStepLabel>Code of Practice</ng-template>\r\n    <h2 class=\"text-center mt-3\">Code of Practice<span class=\"material-icons ml-3\"(click)=\"addItem('codeOfPract')\" >add_circle_outline</span></h2>\r\n    <div class=\"row justify-content-center\">\r\n        <div class=\"col-1 my-auto\"> \r\n            <button class=\"btn\" matStepperPrevious><i class=\"fas fa-arrow-left\"></i></button>\r\n        </div>\r\n        <div class=\"col-7\">\r\n            <mat-form-field class=\"container\" appearance=\"fill\">\r\n                <mat-label>Code of Practice</mat-label>\r\n                <mat-select formControlName=\"codeOfPract\" multiple>\r\n                  <mat-select-trigger>\r\n                    <span\r\n                      *ngIf=\"!JobTaskDetail.get('codeOfPract').value?.length\"\r\n                      class=\"example-additional-selection\"\r\n                    >\r\n                    </span>\r\n                    <span\r\n                      *ngIf=\"JobTaskDetail.get('codeOfPract').value?.length == 1\"\r\n                      class=\"example-additional-selection\"\r\n                    >\r\n                      One Item selected\r\n                    </span>\r\n                    <span\r\n                      *ngIf=\"JobTaskDetail.get('codeOfPract').value?.length > 1\"\r\n                      class=\"example-additional-selection\"\r\n                    >\r\n                      More than one selected\r\n                    </span>\r\n                  </mat-select-trigger>\r\n                  <mat-option\r\n                    *ngFor=\"let parameter of allCodeOfPract\"\r\n                    [value]=\"parameter._id\"\r\n                    >{{ parameter.title }}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n        </div>\r\n        <div class=\"col-1 my-auto\">\r\n            <button class=\"btn\" matStepperNext><i class=\"fas fa-arrow-right\"></i></button>\r\n        </div>\r\n    </div>\r\n   \r\n\r\n  </mat-step>\r\n  <mat-step >\r\n    <ng-template matStepLabel>Residule Risk Level</ng-template>\r\n    <h2 class=\"text-center mt-3\">Residule Risk Level<span class=\"material-icons ml-3\"(click)=\"addItem('resRiskLevel')\" >add_circle_outline</span></h2>\r\n    <div class=\"row justify-content-center\">\r\n        <div class=\"col-1 my-auto\"> \r\n            <button class=\"btn\" matStepperPrevious><i class=\"fas fa-arrow-left\"></i></button>\r\n        </div>\r\n        <div class=\"col-7\">\r\n             <mat-form-field class=\"container\" appearance=\"fill\">\r\n                <mat-label>Residule Risk Level</mat-label>\r\n                <mat-select formControlName=\"residualRiskL\">\r\n                  <mat-option *ngFor=\"let parameter of resiRiskLevelData\" [value]=\"parameter._id\">\r\n                    {{parameter.title}}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n        </div>\r\n        <div class=\"col-1 my-auto\">\r\n            <button class=\"btn\" matStepperNext><i class=\"fas fa-arrow-right\"></i></button>\r\n        </div>\r\n    </div>\r\n \r\n\r\n  </mat-step>\r\n  <mat-step >\r\n    <ng-template matStepLabel>Chemical related Task</ng-template>\r\n    <h2 class=\"text-center mt-3\">Is this Job Task includes Chemicals?</h2>\r\n    <div class=\"row justify-content-center\">\r\n        <div class=\"col-1 my-auto\"> \r\n            <button class=\"btn\" matStepperPrevious><i class=\"fas fa-arrow-left\"></i></button>\r\n        </div>\r\n        <div class=\"col-7 text-center\">\r\n            <div class=\"form-check form-check-inline\">\r\n                <input class=\"form-check-input\" type=\"radio\" value=\"YES\" formControlName=\"chemical\">\r\n                <label class=\"form-check-label\" for=\"inlineRadio1\">Yes</label>\r\n              </div>\r\n              <div class=\"form-check form-check-inline\">\r\n                <input class=\"form-check-input\" type=\"radio\"  value=\"NO\" formControlName=\"chemical\">\r\n                <label class=\"form-check-label\" for=\"inlineRadio2\">No</label>\r\n              </div>\r\n        </div>\r\n        <div class=\"col-1 my-auto\">\r\n            <button class=\"btn\" matStepperNext><i class=\"fas fa-arrow-right\"></i></button>\r\n        </div>\r\n    </div>\r\n \r\n\r\n  </mat-step>\r\n\r\n  <mat-step >\r\n    <ng-template matStepLabel>Person Responsible</ng-template>\r\n    <h2 class=\"text-center mt-3\">Person Responsible<span class=\"material-icons ml-3\"(click)=\"addItem('perResbl')\" >add_circle_outline</span></h2>\r\n    <div class=\"row justify-content-center mt-3\">\r\n        <div class=\"col-1 my-auto\"> \r\n            <button class=\"btn\" matStepperPrevious><i class=\"fas fa-arrow-left\"></i></button>\r\n        </div>\r\n        <div class=\"col-6\">\r\n          \r\n            <mat-form-field class=\"container\" appearance=\"fill\">\r\n              <mat-label>Person Responsible</mat-label>\r\n              <mat-select formControlName=\"personResp\">\r\n                <mat-option *ngFor=\"let person of staff\" [value]=\"person._id\">\r\n                  {{person.title}}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n        </div>\r\n        <div class=\"col-1 my-auto\">\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"text-center mt-3\">\r\n      <button *ngIf=\"!jobTask?.set\" class=\"btn btn-primary\"(click)=\"setRelation()\">Set</button>\r\n      <button *ngIf=\"jobTask?.set\" class=\"btn btn-primary\"(click)=\"setRelation()\">Update</button>\r\n    </div>\r\n  </mat-step>\r\n</mat-horizontal-stepper> -->\r\n\r\n\r\n<section class=\"\">\r\n  <div class=\"\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-3\">\r\n        <!-- Tabs nav -->\r\n        <div\r\n          class=\"nav flex-column nav-pills nav-pills-custom\"\r\n          id=\"v-pills-tab\"\r\n          role=\"tablist\"\r\n          aria-orientation=\"vertical\"\r\n        >\r\n          <p\r\n            *ngFor=\"let item of stepperList; let i = index\"\r\n            (click)=\"handleClick(i)\"\r\n            class=\"nav-link mb-3 p-3 shadow\"\r\n            [class.active]=\"stepperList[i].i\"\r\n            id=\"v-pills-home-tab\"\r\n            data-toggle=\"pill\"\r\n            role=\"tab\"\r\n            aria-controls=\"v-pills-home\"\r\n            aria-selected=\"true\"\r\n          >\r\n            <i class=\"fa fa-user-circle-o mr-2\"></i>\r\n            <span class=\"font-weight-bold small text-uppercase\">{{\r\n              item.name\r\n            }}</span>\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"col-md-9\">\r\n        <!-- Tabs content -->\r\n        <div class=\"tab-content\" id=\"v-pills-tabContent\">\r\n          <div\r\n            *ngFor=\"let item of stepperList; let i = index\"\r\n            class=\"tab-pane fade shadow rounded bg-white p-5\"\r\n            [class.active]=\"stepperList[i].i\"\r\n            [class.show]=\"stepperList[i].i\"\r\n            id=\"v-pills-home\"\r\n            role=\"tabpanel\"\r\n            aria-labelledby=\"v-pills-home-tab\"\r\n          >\r\n            <h2 class=\"font-italic mb-4\">{{ item.name }}<span *ngIf=\"item.code\" class=\"material-icons ml-3 my-auto p-0\"(click)=\"addItem(item.code)\" >add_circle_outline</span></h2>\r\n            <p class=\"font-italic text-muted mb-2\">\r\n              <ng-container\r\n                *ngTemplateOutlet=\"test; context: { name: item.name }\"\r\n              ></ng-container>\r\n            </p>\r\n            <div>\r\n              <!-- <div class=\"buttons\">\r\n                                <button mat-icon-button (click)=\"prev(1)\"><i  style=\"font-size: 25px;\" class=\"fas fa-arrow-left\"></i></button> <button mat-icon-button (click)=\"next(1)\"><i style=\"font-size: 25px;\" class=\"fas fa-arrow-right\"></i></button>\r\n                            </div> -->\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- <div class=\"buttons\">\r\n                            <button mat-icon-button (click)=\"prev(1)\"><i  style=\"font-size: 25px;\" class=\"fas fa-arrow-left\"></i></button> <button mat-icon-button (click)=\"next(1)\"><i style=\"font-size: 25px;\" class=\"fas fa-arrow-right\"></i></button>\r\n                        </div> -->\r\n  </div>\r\n</section>\r\n\r\n<ng-template\r\n  [formGroup]=\"JobTaskDetail\"\r\n  let\r\n  #test\r\n  let-name=\"name\"\r\n  class=\"my-auto\"\r\n>\r\n  <ng-container\r\n    *ngIf=\"name.toLowerCase() == 'HighRisk Construction'.toLowerCase()\"\r\n  >\r\n    <div class=\"row justify-content-center\" style=\"margin-top: auto\">\r\n      \r\n      <div class=\"col-7\">\r\n        <mat-form-field class=\"container\" appearance=\"fill\">\r\n          <mat-label class=\"text-center\">HighRiskConstruction</mat-label>\r\n          <mat-select formControlName=\"highRiskConstr\" multiple>\r\n            <mat-select-trigger>\r\n              <span\r\n                *ngIf=\"!JobTaskDetail.get('highRiskConstr').value?.length\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n              </span>\r\n              <span\r\n                *ngIf=\"JobTaskDetail.get('highRiskConstr').value?.length == 1\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n                One Item selected\r\n              </span>\r\n              <span\r\n                *ngIf=\"JobTaskDetail.get('highRiskConstr').value?.length > 1\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n                More than one selected\r\n              </span>\r\n            </mat-select-trigger>\r\n            <mat-option\r\n              *ngFor=\"let parameter of highRiskConstructionData\"\r\n              [value]=\"parameter._id\"\r\n            >\r\n              {{ parameter.title }}</mat-option\r\n            >\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n      \r\n    </div>\r\n  </ng-container>\r\n  <ng-container *ngIf=\"name.toLowerCase() == 'PPE'.toLowerCase()\">\r\n    <div class=\"row justify-content-center\">\r\n      \r\n      <div class=\"col-7\">\r\n        <mat-form-field class=\"container\" appearance=\"fill\">\r\n          <mat-label>PPE selection</mat-label>\r\n          <mat-select formControlName=\"PPE\" multiple>\r\n            <mat-select-trigger>\r\n              <span\r\n                *ngIf=\"!JobTaskDetail.get('PPE').value?.length\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n              </span>\r\n              <span\r\n                *ngIf=\"JobTaskDetail.get('PPE').value?.length == 1\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n                One Item selected\r\n              </span>\r\n              <span\r\n                *ngIf=\"JobTaskDetail.get('PPE').value?.length > 1\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n                More than one selected\r\n              </span>\r\n            </mat-select-trigger>\r\n            <mat-option\r\n              *ngFor=\"let parameter of PPESelectionData\"\r\n              [value]=\"parameter._id\"\r\n              >{{ parameter.title }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n      \r\n    </div>\r\n  </ng-container>\r\n  <ng-container *ngIf=\"name.toLowerCase() == 'Licence'.toLowerCase()\">\r\n    <div class=\"row justify-content-center\">\r\n      \r\n      <div class=\"col-7\">\r\n        <mat-form-field class=\"container\" appearance=\"fill\">\r\n          <mat-label>Licences</mat-label>\r\n          <mat-select formControlName=\"LicenceCat\" multiple>\r\n            <mat-select-trigger>\r\n              <span\r\n                *ngIf=\"!JobTaskDetail.get('LicenceCat').value?.length\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n              </span>\r\n              <span\r\n                *ngIf=\"JobTaskDetail.get('LicenceCat').value?.length == 1\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n                One Item selected\r\n              </span>\r\n              <span\r\n                *ngIf=\"JobTaskDetail.get('LicenceCat').value?.length > 1\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n                More than one selected\r\n              </span>\r\n            </mat-select-trigger>\r\n            <mat-option\r\n              *ngFor=\"let parameter of licenceByTradecat\"\r\n              [value]=\"parameter._id\"\r\n              >{{ parameter.title }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n      \r\n    </div>\r\n  </ng-container>\r\n  <ng-container *ngIf=\"name.toLowerCase() == 'Identify Hazards'.toLowerCase()\">\r\n    <div class=\"row justify-content-center\">\r\n      \r\n      <div class=\"col-7\">\r\n        <mat-form-field class=\"container\" appearance=\"fill\">\r\n          <mat-label>Identify Hazards</mat-label>\r\n          <mat-select formControlName=\"identifyHazrds\" multiple>\r\n            <mat-select-trigger>\r\n              <span\r\n                *ngIf=\"!JobTaskDetail.get('identifyHazrds').value?.length\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n              </span>\r\n              <span\r\n                *ngIf=\"JobTaskDetail.get('identifyHazrds').value?.length == 1\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n                One Item selected\r\n              </span>\r\n              <span\r\n                *ngIf=\"JobTaskDetail.get('identifyHazrds').value?.length > 1\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n                More than one selected\r\n              </span>\r\n            </mat-select-trigger>\r\n            <mat-option\r\n              *ngFor=\"let parameter of allHazards\"\r\n              [value]=\"parameter._id\"\r\n              >{{ parameter.title }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n      \r\n    </div>\r\n  </ng-container>\r\n  <ng-container *ngIf=\"name.toLowerCase() == 'Risk Level'.toLowerCase()\">\r\n    <div class=\"row justify-content-center\">\r\n      \r\n      <div class=\"col-7\">\r\n        <mat-form-field class=\"container\" appearance=\"fill\">\r\n          <mat-label>Risk Level</mat-label>\r\n          <mat-select formControlName=\"riskLevel\">\r\n            <mat-option\r\n              *ngFor=\"let parameter of riskLevelData\"\r\n              [value]=\"parameter._id\"\r\n            >\r\n              {{ parameter.title }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n      \r\n    </div>\r\n  </ng-container>\r\n  <ng-container\r\n    *ngIf=\"name.toLowerCase() == 'Control Action Required'.toLowerCase()\"\r\n  >\r\n    <div class=\"row justify-content-center\">\r\n      \r\n      <div class=\"col-7\">\r\n        <mat-form-field class=\"container\" appearance=\"fill\">\r\n          <mat-label>Control Action Required</mat-label>\r\n          <mat-select formControlName=\"contrActReq\" multiple>\r\n            <mat-select-trigger>\r\n              <span\r\n                *ngIf=\"!JobTaskDetail.get('contrActReq').value?.length\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n              </span>\r\n              <span\r\n                *ngIf=\"JobTaskDetail.get('contrActReq').value?.length == 1\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n                One Item selected\r\n              </span>\r\n              <span\r\n                *ngIf=\"JobTaskDetail.get('contrActReq').value?.length > 1\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n                More than one selected\r\n              </span>\r\n            </mat-select-trigger>\r\n            <mat-option\r\n              *ngFor=\"let parameter of allContrlActReq\"\r\n              [value]=\"parameter._id\"\r\n              >{{ parameter.title }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n      \r\n    </div>\r\n  </ng-container>\r\n  <ng-container *ngIf=\"name.toLowerCase() == 'Code of Practice'.toLowerCase()\">\r\n    <div class=\"row justify-content-center\">\r\n      \r\n      <div class=\"col-7\">\r\n        <mat-form-field class=\"container\" appearance=\"fill\">\r\n          <mat-label>Code of Practice</mat-label>\r\n          <mat-select formControlName=\"codeOfPract\" multiple>\r\n            <mat-select-trigger>\r\n              <span\r\n                *ngIf=\"!JobTaskDetail.get('codeOfPract').value?.length\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n              </span>\r\n              <span\r\n                *ngIf=\"JobTaskDetail.get('codeOfPract').value?.length == 1\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n                One Item selected\r\n              </span>\r\n              <span\r\n                *ngIf=\"JobTaskDetail.get('codeOfPract').value?.length > 1\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n                More than one selected\r\n              </span>\r\n            </mat-select-trigger>\r\n            <mat-option\r\n              *ngFor=\"let parameter of allCodeOfPract\"\r\n              [value]=\"parameter._id\"\r\n              >{{ parameter.title }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n      \r\n    </div>\r\n  </ng-container>\r\n  <ng-container\r\n    *ngIf=\"name.toLowerCase() == 'Residule Risk Level'.toLowerCase()\"\r\n  >\r\n    <div class=\"row justify-content-center\">\r\n      \r\n      <div class=\"col-7\">\r\n        <mat-form-field class=\"container\" appearance=\"fill\">\r\n          <mat-label>Residule Risk Level</mat-label>\r\n          <mat-select formControlName=\"residualRiskL\">\r\n            <mat-option\r\n              *ngFor=\"let parameter of resiRiskLevelData\"\r\n              [value]=\"parameter._id\"\r\n            >\r\n              {{ parameter.title }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n      \r\n    </div>\r\n  </ng-container>\r\n  <ng-container\r\n    *ngIf=\"name.toLowerCase() == 'Chemical related Task'.toLowerCase()\"\r\n  >\r\n    <div class=\"row justify-content-center\">\r\n      \r\n      <div class=\"col-7 text-center\">\r\n        <div class=\"form-check form-check-inline\">\r\n          <input\r\n            class=\"form-check-input\"\r\n            type=\"radio\"\r\n            value=\"YES\"\r\n            formControlName=\"chemical\"\r\n          />\r\n          <label class=\"form-check-label\" for=\"inlineRadio1\">Yes</label>\r\n        </div>\r\n        <div class=\"form-check form-check-inline\">\r\n          <input\r\n            class=\"form-check-input\"\r\n            type=\"radio\"\r\n            value=\"NO\"\r\n            formControlName=\"chemical\"\r\n          />\r\n          <label class=\"form-check-label\" for=\"inlineRadio2\">No</label>\r\n        </div>\r\n      </div>\r\n      \r\n    </div>\r\n  </ng-container>\r\n  <ng-container\r\n    *ngIf=\"name.toLowerCase() == 'Person Responsible'.toLowerCase()\"\r\n  >\r\n    <div class=\"row justify-content-center mt-3\">\r\n      \r\n      <div class=\"col-6\">\r\n        <mat-form-field class=\"container\" appearance=\"fill\">\r\n          <mat-label>Person Responsible</mat-label>\r\n          <mat-select formControlName=\"personResp\" multiple>\r\n            <mat-select-trigger>\r\n              <span\r\n                *ngIf=\"!JobTaskDetail.get('personResp').value?.length\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n              </span>\r\n              <span\r\n                *ngIf=\"JobTaskDetail.get('personResp').value?.length == 1\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n                One Item selected\r\n              </span>\r\n              <span\r\n                *ngIf=\"JobTaskDetail.get('personResp').value?.length > 1\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n                More than one selected\r\n              </span>\r\n            </mat-select-trigger>\r\n            <mat-option\r\n              *ngFor=\"let parameter of staff\"\r\n              [value]=\"parameter._id\"\r\n              >{{ parameter.title }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n        <!-- <mat-form-field class=\"container\" appearance=\"fill\">\r\n          <mat-label>Person Responsible</mat-label>\r\n          <mat-select formControlName=\"personResp\">\r\n            <mat-option *ngFor=\"let person of staff\" [value]=\"person._id\">\r\n              {{ person.title }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field> -->\r\n      </div>\r\n      <div class=\"col-1 my-auto\">\r\n        <!--  -->\r\n      </div>\r\n    </div>\r\n    <div class=\"text-center mt-3\">\r\n      <button\r\n        *ngIf=\"!jobTask?.set\"\r\n        class=\"btn btn-primary\"\r\n        (click)=\"setRelation()\"\r\n      >\r\n        Set\r\n      </button>\r\n      <button\r\n        *ngIf=\"jobTask?.set\"\r\n        class=\"btn btn-primary\"\r\n        (click)=\"setRelation()\"\r\n      >\r\n        Update\r\n      </button>\r\n    </div>\r\n  </ng-container>\r\n  <div class=\"buttons\">\r\n    <button mat-icon-button (click)=\"prev()\">\r\n      <i style=\"font-size: 25px\" class=\"fas fa-arrow-left\"></i>\r\n    </button>\r\n    <button mat-icon-button (click)=\"next()\">\r\n      <i style=\"font-size: 25px\" class=\"fas fa-arrow-right\"></i>\r\n    </button>\r\n  </div>\r\n</ng-template>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { LandingPageInfoServiceService } from 'src/app/utils/services/landing-page-info-service.service';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-add-hazard-relation',\r\n  templateUrl: './add-hazard-relation.component.html',\r\n  styleUrls: ['./add-hazard-relation.component.scss']\r\n})\r\nexport class AddHazardRelationComponent implements OnInit {\r\n  setHazard!: FormGroup;\r\n  hazard = null;\r\n  hazardId = null;\r\n  JurisdictionData: [];\r\n  safety: [];\r\n  codeData: [];\r\n  regulatorData: [];\r\n  isLinear = false;\r\n  constructor(private route: ActivatedRoute, private fb: FormBuilder, private logicalFormInfo: LogicalFormInfoService,\r\n    public router: Router,) { }\r\n\r\n\r\n    ngOnInit(): void {\r\n      this.setHazard = this.fb.group({\r\n        // Consequence: ['', Validators.required],\r\n        // Likelihood: ['', Validators.required],\r\n        riskRating: ['', Validators.required],\r\n        actionRequired: ['', Validators.required],\r\n  \r\n      });\r\n      this.route\r\n        .queryParams\r\n        .subscribe((id) => {\r\n          console.log(id);\r\n          this.hazardId = id.id;\r\n          this.logicalFormInfo.getHazardTreatmentById(this.hazardId).subscribe((res: any) => {\r\n            console.log(\"getHazardTreatmentById=>\", res);\r\n            this.hazard = res.data;\r\n            console.log(\"hazard\", this.hazard);\r\n            if (this.hazard.set == true) {\r\n              this.setHazard.patchValue({\r\n                riskRating: this.hazard.riskRating,\r\n                actionRequired: this.hazard.actionRequired,\r\n                \r\n  \r\n              });\r\n            }\r\n          \r\n          })\r\n        });\r\n  \r\n  \r\n  \r\n    }\r\n    Consequences: Array<any> = [\r\n      { name: '1-Insignificant',value:1 },\r\n      { name: '2-Moderate',value:2 },\r\n      { name: '4-Minor',value:4},\r\n      { name: '3-Major',value:3 },\r\n      { name: '5-Catastrophic',value:5 },\r\n    ];\r\n  \r\n  \r\n    Likelihood: Array<any> = [\r\n      { name: '1-Insignificant',value:1 },\r\n      { name: '3-Moderate',value:3},\r\n      { name: '2-Minor',value:2 },\r\n      { name: '4-Major',value:4 },\r\n      { name: '5-Catastrophic',value:5 }\r\n    ];\r\n    RiskRating: Array<any> = [\r\n  \r\n      { name: 'Low',value:'low'  },\r\n      { name: 'Medium',value: 'medium'},\r\n      { name: 'High',value:'high' },\r\n    \r\n  \r\n    ];\r\n    ActionRequired: Array<any> = [\r\n  \r\n      { name: 'Immediately',value:'immediately'  },\r\n      { name: 'Today',value:'today'  },\r\n      { name: 'This week',value:'thisWeek' },\r\n      { name: 'This Month',value:'thisMonth'  },\r\n  \r\n    ];\r\n  \r\n    setRelation() {\r\n      console.log(this.setHazard.value)\r\n      let data = {\r\n        set: true,\r\n        title: this.hazard.title,\r\n        // Consequence: this.setHazard.get('Consequence').value,\r\n        // Likelihood: this.setHazard.get('Likelihood').value,\r\n        riskRating: this.setHazard.get('riskRating').value,\r\n        actionRequired: this.setHazard.get('actionRequired').value,\r\n       \r\n      }\r\n      console.log(\"data=>\", data)\r\n      console.log(\"hazardId=>\", this.hazardId)\r\n      this.logicalFormInfo.updateHazardTreatmentRelation(this.hazardId,data).subscribe((res: any) => {\r\n        console.log('updateStates=>', res);\r\n  \r\n        Swal.fire({\r\n          title: 'Updated successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });\r\n        this.router.navigate(['/admin/confiLogi/setHazard'])\r\n      });\r\n  \r\n    }\r\n}\r\n","<div class=\"btn btn-outline-primary\" [routerLink]=\"['/admin/confiLogi/setHazard']\">\r\n    <i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\r\n  </div>\r\n  <div class=\"ml-2\">\r\n    <h2>Hazrad Treatment Relation :&nbsp;{{ hazard?.title }}</h2>\r\n  </div>\r\n \r\n  <div class=\"row\" [formGroup]=\"setHazard\">\r\n       \r\n    <!-- <div class=\"col-3\">\r\n      <select class=\"form-select form-control\" aria-label=\"Default select example\" formControlName=\"Consequence\" >\r\n         <option value=\"\" selected hidden> Select consequence</option>\r\n         <option *ngFor=\"let consequence of Consequences\"  [value]=\"consequence._id\"  >{{consequence.name}}</option>\r\n      \r\n      </select>\r\n      </div>\r\n      <div class=\"col-3\">\r\n        <select class=\"form-select form-control\" aria-label=\"Default select example\" formControlName=\"Likelihood\"  >\r\n           <option value=\"\" selected hidden> Select  Likelihood</option>\r\n           <option *ngFor=\"let likelihood of Likelihood\"  [value]=\"likelihood._id\" >{{likelihood.name}}</option>\r\n        \r\n        </select>\r\n        </div> -->\r\n        <div class=\"col-6\">\r\n          <select class=\"form-select form-control\" aria-label=\"Default select example\" formControlName=\"riskRating\" >\r\n             <option value=\"\" selected hidden> Select Rating</option>\r\n             <option *ngFor=\"let rating of RiskRating\"  [value]=\"rating.value\">{{rating.name}}</option>\r\n          </select>\r\n          </div>\r\n          <div class=\"col-6\">\r\n            <select class=\"form-select form-control\" aria-label=\"Default select example\" formControlName=\"actionRequired\" >\r\n               <option value=\"\" selected hidden> Action Required</option>\r\n               <option *ngFor=\"let action of ActionRequired\"  [value]=\"action.value\">{{action.name}}</option>\r\n            </select>\r\n            </div>\r\n          \r\n          <div class=\"ml-3 mt-3\">\r\n            <button *ngIf=\"!hazard?.set\"  class=\"btn btn-primary\" (click)=\"setRelation()\" >Set</button>\r\n            <button *ngIf=\"hazard?.set\" class=\"btn btn-primary\"(click)=\" setRelation() \">Update</button>\r\n          </div>\r\n</div>\r\n","import { Component, OnInit,Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n  FormArray,\r\n  \r\n} from '@angular/forms';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-add-job-task',\r\n  templateUrl: './add-job-task.component.html',\r\n  styleUrls: ['./add-job-task.component.scss']\r\n})\r\nexport class AddJobTaskComponent implements OnInit {\r\n  dataRec: any;\r\n  jobTaskDetails!: FormGroup;\r\n  addjob!:FormGroup;\r\n  formData: any;\r\n  Edit=false;\r\n  Add=true;\r\n  licenceCatAll=[];\r\n  Id:any;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private router: Router,\r\n    private logicalFormInfo:LogicalFormInfoService,\r\n    private dialogRef: MatDialogRef<AddJobTaskComponent>,\r\n\t\t@Inject(MAT_DIALOG_DATA) public data: any,\r\n  ) { \r\n    this.dataRec = data;\r\n    \r\n    console.log(\"datarec\",this.dataRec)\r\n    this.addjob=this.fb.group({\r\n      title:['',Validators.required],\r\n      tradeCategory: ['', Validators.required],      \r\n    });\r\n  }\r\n\r\n  ngOnInit(): void { \r\n   \r\n \r\n    this.getAllCategories();\r\n    if (this.Id != \"\") {\r\n      this.Eddit();\r\n    }\r\n    else {\r\n      this.Added();\r\n\r\n\r\n    }\r\n  }\r\n  \r\n  Added() {\r\n    if (this.Edit == true) {\r\n      this.Edit = false;\r\n      this.Add = true;\r\n      this.addjob=this.fb.group({\r\n        title:['',Validators.required],\r\n        tradeCategory: ['', Validators.required],      \r\n      });\r\n\r\n    }\r\n    else {\r\n      this.Add = true;\r\n    }\r\n  }\r\n\r\n  Eddit() {\r\n    if (this.Add == true) {\r\n      this.Add = false;\r\n      this.Edit = true;\r\n      this.jobTaskDetails=this.fb.group({\r\n\r\n        title:[this.dataRec.title,Validators.required],\r\n        tradeCategoryId: [this.dataRec.tradeCategoryId._id, Validators.required],      \r\n      });\r\n    }\r\n    else {\r\n      this.Edit = true;\r\n    }\r\n  }\r\n  getAllCategories() {\r\n    this.logicalFormInfo.getAllLicenceCat().subscribe((res) => {\r\n      console.log('getAllLicenceCat=>', res);\r\n      this.licenceCatAll = res.data;\r\n    });\r\n  }\r\n  onFormSubmit() {\r\n    console.log(this.jobTaskDetails.get('title').value);\r\n    let data = {\r\n      title: this.jobTaskDetails.get('title').value,\r\n      tradeCategoryId:  this.jobTaskDetails.get('tradeCategoryId').value\r\n    };\r\n    console.log(\"edit\",data)\r\n    this.logicalFormInfo.updateJobTask(data, this.dataRec._id).subscribe((data) => {\r\n      console.log('JOBTask=>', data);\r\n      this.dialogRef.close('true');\r\n      Swal.fire({\r\n        title: 'JobTask Updated successfully',\r\n        showConfirmButton: false,\r\n        timer: 1200,\r\n      }); \r\n          \r\n    },(err)=>{console.error(err);} \r\n  \r\n    );\r\n    \r\n  }\r\n  addForm() {\r\n    // let data = {\r\n    //   title: this.addjob.get('title').value,\r\n    //   tradeCategoryId:this.addjob.get('tradeCategoryId').value\r\n    // };\r\n    console.log(\"addForm\",this.addjob.value)\r\n    this.logicalFormInfo.addJobTask(this.addjob.value).subscribe((data) => {\r\n      console.log('JOBTask=>', data);\r\n      this.dialogRef.close('true');\r\n      Swal.fire({\r\n        title: 'Parameter Added successfully',\r\n        showConfirmButton: false,\r\n        timer: 1200,\r\n      }); \r\n          \r\n    },(err)=>{console.error(err);} \r\n  \r\n    );\r\n  }\r\n  close() {\r\n    this.dialogRef.close();\r\n}\r\n}\r\n","<div class=\"container px-4 py-4 bg-white\">\r\n \r\n    <div mat-dialog-title class=\"dialog-title\">\r\n        <!-- <h2>Add Job Task</h2> -->\r\n        <h2 *ngIf=\"!dataRec\">Add Job Task </h2>\r\n        <h2 *ngIf=\"dataRec\">Edit Job Task</h2>\r\n     <button type=\"button\" class=\"close\"  style=\"font-size: 30px;\"\r\n      (click)=\"close()\" aria-label=\"Close\">\r\n    <span aria-hidden=\"true\">×</span>\r\n</button>\r\n    \r\n   </div>\r\n    <br />\r\n\r\n     <div class=\"row \" *ngIf=\"Add\"  [formGroup]=\"addjob\">\r\n     <div class=\"col-6\">\r\n        <input type=\"text\" formControlName=\"title\" class=\"form-control sign\" id=\"title\" />\r\n      </div>\r\n      <div class=\"col-6\">\r\n        <select class=\"form-select form-control\" aria-label=\"Default select example\" formControlName=\"tradeCategoryId\">\r\n          <option value=\"\" selected hidden>Select category</option>\r\n          <option *ngFor=\"let tradeCat of licenceCatAll\" [value]=\"tradeCat._id\">{{tradeCat.title}}</option>\r\n         </select>\r\n      </div>\r\n\r\n    </div>\r\n    <div class=\"row \"*ngIf=\"Edit\" [formGroup]=\"jobTaskDetails\" >\r\n      <div class=\"col-6\">\r\n         <input type=\"text\" formControlName=\"title\" class=\"form-control sign\" id=\"title\" />\r\n       </div>\r\n       <div class=\"col-6\">\r\n         <select class=\"form-select form-control\" aria-label=\"Default select example\" formControlName=\"tradeCategoryId\">\r\n           <option value=\"\" selected hidden>Select category</option>\r\n           <option *ngFor=\"let tradeCat of licenceCatAll\" [value]=\"tradeCat._id\">{{tradeCat.title}}</option>\r\n          </select>\r\n       </div>\r\n \r\n     </div>\r\n    <br />\r\n   <hr>\r\n    <div class=\"col-md-2\">\r\n      <button mat-raised-button color=\"primary\"*ngIf=\"Edit\" [disabled]=\"!jobTaskDetails.valid\"(click)=\"onFormSubmit()\">Update</button>\r\n      <button mat-raised-button color=\"primary\"  *ngIf=\"Add\" [disabled]=\"!addjob.valid\" (click)=\"addForm()\">Add</button>\r\n    </div>\r\n  \r\n</div>","import { AddItemComponent } from './../set-relation/add-item/add-item.component';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport Swal from 'sweetalert2';\r\n@Component({\r\n  selector: 'app-test-logic',\r\n  templateUrl: './test-logic.component.html',\r\n  styleUrls: ['./test-logic.component.scss']\r\n})\r\nexport class TestLogicComponent implements OnInit {\r\n\r\n  JobTaskDetail!: FormGroup;\r\n  jobTask = null;\r\n  highRiskConstructionData = [];\r\n  PPESelectionData = [];\r\n  licenseAndQual = [];\r\n  allHazards = [];\r\n  allContrlActReq = [];\r\n  licenceByTradecat = [];\r\n  resiRiskLevelData = [];\r\n  riskLevelData = [];\r\n  staff = [];\r\n  allCodeOfPract = [];\r\n  isLinear = false;\r\n  jobTaskId = null;\r\n  stepperList:any[]=[\r\n    {\r\n      name:'HighRisk Construction',\r\n      i:1,\r\n      ref:'test'\r\n    },\r\n    {\r\n      name:'PPE',\r\n      i:0,\r\n      ref:'test2'\r\n    },\r\n    {\r\n      name:'Licence',\r\n      i:0,\r\n    },\r\n    {\r\n      name:'Identify Hazards',\r\n      i:0,\r\n    },\r\n    {\r\n      name:'Risk Level',\r\n      i:0,\r\n    },\r\n    {\r\n      name:'Control Action Required',\r\n      i:0,\r\n    },\r\n    {\r\n      name:'Code of Practice',\r\n      i:0,\r\n    },\r\n    {\r\n      name:'Residule Risk Level',\r\n      i:0,\r\n    },\r\n    {\r\n      name:'Code of Practice',\r\n      i:0,\r\n    },\r\n    {\r\n      name:'Chemical related Task',\r\n      i:0,\r\n    },\r\n    {\r\n      name:'Person Responsible',\r\n      i:0,\r\n    }\r\n  ]\r\n\r\n  count:number=0\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private dialog: MatDialog,\r\n    private router: Router,\r\n    private fb: FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService\r\n  ) {}\r\n  \r\n  ngOnInit(): void {\r\n    this.JobTaskDetail = this.fb.group({\r\n      highRiskConstr: [''],\r\n      PPE: [''],\r\n      codeOfPract: [''],\r\n      LicenceCat: [''],\r\n      identifyHazrds: [''],\r\n      contrActReq: [''],\r\n      riskLevel: [''],\r\n      residualRiskL: [''],\r\n      personResp: [''],\r\n      chemical: [],\r\n    });\r\n\r\n    this.route.queryParams.subscribe((id) => {\r\n      console.log(id);\r\n      this.jobTaskId = id.id;\r\n      this.logicalFormInfo.getJobtaskById(id.id).subscribe((res: any) => {\r\n        this.jobTask = res.data;\r\n        console.log(\r\n          'this.jobTask ',\r\n          this.jobTask \r\n        );\r\n        this.getLicenceByTradeCat(this.jobTask.tradeCategoryId);\r\n\r\n        if (this.jobTask.set == true) {\r\n          this.JobTaskDetail.patchValue({\r\n            highRiskConstr: this.jobTask.risk,\r\n            PPE: this.jobTask.PPE,\r\n            codeOfPract: this.jobTask.PPE,\r\n           LicenceCat: this.jobTask.licence,\r\n            identifyHazrds: this.jobTask.identifyHazard,\r\n            contrActReq: this.jobTask.controlActionRequired,\r\n            riskLevel: this.jobTask.riskLevel,\r\n            residualRiskL: this.jobTask.residualRisk,\r\n            personResp: this.jobTask.staffId,\r\n            chemical: this.jobTask.chemical,\r\n          });\r\n        }\r\n        if (this.jobTask?.chemical === 'YES')\r\n          this.JobTaskDetail.get('chemical').setValue('YES');\r\n        else this.JobTaskDetail.get('chemical').setValue('NO');\r\n      });\r\n    });\r\n\r\n    this.getAllHighRisk();\r\n    this.getAllPPE();\r\n    this.getAllHazard();\r\n    this.getAllContrActReq();\r\n    this.getAllStaff();\r\n    this.getAllResidualRiskLevel();\r\n    this.getAllRiskLevel();\r\n    this.getAllCodeOfPractice();\r\n  }\r\n\r\n  getAllResidualRiskLevel() {\r\n    this.logicalFormInfo.getAllResidual().subscribe((res: any) => {\r\n      console.log('this.resiRiskLevelData', res.data);\r\n      this.resiRiskLevelData = res.data;\r\n    });\r\n  }\r\n  getAllRiskLevel() {\r\n    this.logicalFormInfo.getAllRiskLevel().subscribe((res: any) => {\r\n      console.log('this.riskLevelData', res.data);\r\n      this.riskLevelData = res.data;\r\n    });\r\n  }\r\n  getAllStaff() {\r\n    this.logicalFormInfo.getAllStaff().subscribe((res: any) => {\r\n      console.log(res);\r\n      this.staff = res.data;\r\n    });\r\n  }\r\n  getAllHighRisk() {\r\n    this.logicalFormInfo.getAllRisk().subscribe((res: any) => {\r\n      console.log('Risk=>', res);\r\n      this.highRiskConstructionData = res.data;\r\n    });\r\n  }\r\n  getAllPPE() {\r\n    this.logicalFormInfo.getAllPPE().subscribe((res: any) => {\r\n      console.log('PPE=>', res);\r\n      this.PPESelectionData = res.data;\r\n    });\r\n  }\r\n  getAllCodeOfPractice() {\r\n   \r\n    this.logicalFormInfo.getAllCOP().subscribe((res:any) => {\r\n      console.log('codeOfPractice=>', res);\r\n   this.allCodeOfPract=res.data;\r\n    });\r\n \r\n  }\r\n\r\n  getAllHazard() {\r\n    this.logicalFormInfo.getAllHazards().subscribe((res: any) => {\r\n      console.log('getAllHazards=>', res);\r\n      this.allHazards = res.data;\r\n    });\r\n  }\r\n  getAllContrActReq() {\r\n    this.logicalFormInfo.getAllContrlActReq().subscribe((res: any) => {\r\n      console.log('getAllHazards=>', res);\r\n      this.allContrlActReq = res.data;\r\n    });\r\n  }\r\n  getLicenceByTradeCat(id) {\r\n    console.log('getLicenceByTradeCat', id);\r\n\r\n    this.logicalFormInfo.getLicenceByTradeCat(id).subscribe((res) => {\r\n      console.log('getAllLicenceCat=>', res);\r\n      this.licenceByTradecat = res.data.licenceData;\r\n    });\r\n  }\r\n  setRelation() {\r\n    console.log(this.JobTaskDetail.value);\r\n    let allContrlActReqTitle=[];\r\n    let temp1=this.JobTaskDetail.get('contrActReq').value;\r\n    this.allContrlActReq.forEach(element1 => {\r\n      temp1.forEach(element2 => {\r\n        if(element1._id===element2){\r\n          allContrlActReqTitle.push(element1.title)\r\n        }\r\n      });\r\n    });\r\n    let allHazardsTitle=[];\r\n    let temp2=this.JobTaskDetail.get('identifyHazrds').value;\r\n    this.allHazards.forEach(element1 => {\r\n      temp2.forEach(element2 => {\r\n        if(element1._id===element2){\r\n          allHazardsTitle.push(element1.title)\r\n        }\r\n      });\r\n    });\r\n    let allCOPTitle=[];\r\n    let temp3=this.JobTaskDetail.get('codeOfPract').value;\r\n    this.allCodeOfPract.forEach(element1 => {\r\n      temp3.forEach(element2 => {\r\n        if(element1._id===element2){\r\n          allCOPTitle.push(element1.title)\r\n        }\r\n      });\r\n    });\r\n    let data = {\r\n      title: this.jobTask.title,\r\n      risk: this.JobTaskDetail.get('highRiskConstr').value,\r\n      PPE: this.JobTaskDetail.get('PPE').value,\r\n      tradeCategoryId:this.jobTask.tradeCategoryId,\r\n      licence: this.JobTaskDetail.get('LicenceCat').value,\r\n      identifyHazard: this.JobTaskDetail.get('identifyHazrds').value,\r\n      controlActionRequired: this.JobTaskDetail.get('contrActReq').value,\r\n      riskLevel: this.JobTaskDetail.get('riskLevel').value,\r\n      residualRisk: this.JobTaskDetail.get('residualRiskL').value,\r\n      staffId: this.JobTaskDetail.get('personResp').value,\r\n      chemical: this.JobTaskDetail.get('chemical').value,\r\n      set: true,\r\n    };\r\n\r\n    console.log('send data', data);\r\n\r\n    this.logicalFormInfo\r\n      .updateJobTask(data, this.jobTaskId)\r\n      .subscribe((res) => {\r\n        console.log('resJob Task=>', res);\r\n\r\n        Swal.fire({\r\n          title: 'Relation set successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });\r\n        this.router.navigate(['/admin/confiLogi/setLogic']);\r\n      });\r\n  }\r\n  addItem(type) {\r\n    let temp = {\r\n      type: type,\r\n      tradeCategoryId: this.jobTask.tradeCategoryId,\r\n    };\r\n    if (type === 'licence') {\r\n      temp = {\r\n        type: type,\r\n        tradeCategoryId: this.jobTask.tradeCategoryId,\r\n      };\r\n    } else {\r\n      temp = {\r\n        type: type,\r\n        tradeCategoryId: '',\r\n      };\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(AddItemComponent, {\r\n      width: '550px',\r\n      // height:'50%',\r\n      data: temp,\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      switch (result) {\r\n        case 'highRisk': {\r\n          let data = this.JobTaskDetail.get('highRiskConstr').value;\r\n          this.getAllHighRisk();\r\n          this.JobTaskDetail.get('highRiskConstr').patchValue(data);\r\n          break;\r\n        }\r\n        case 'ppe': {\r\n          let data = this.JobTaskDetail.get('PPE').value;\r\n          this.getAllPPE();\r\n          this.JobTaskDetail.get('PPE').patchValue(data);\r\n          break;\r\n        }\r\n        case 'codeOfPract': {\r\n          let data = this.JobTaskDetail.get('codeOfPract').value;\r\n          this.getAllCodeOfPractice();\r\n          this.JobTaskDetail.get('codeOfPract').patchValue(data);\r\n          break;\r\n        }\r\n        case 'licence': {\r\n          let data = this.JobTaskDetail.get('LicenceCat').value;\r\n          this.getLicenceByTradeCat(this.jobTask.tradeCategoryId);\r\n          this.JobTaskDetail.get('LicenceCat').patchValue(data);\r\n          break;\r\n        }\r\n        case 'identifyHazards': {\r\n          let data = this.JobTaskDetail.get('identifyHazrds').value;\r\n          this.getAllHazard();\r\n          this.JobTaskDetail.get('identifyHazrds').patchValue(data);\r\n          break;\r\n        }\r\n        case 'riskLevel': {\r\n          let data = this.JobTaskDetail.get('riskLevel').value;\r\n          this.getAllRiskLevel();\r\n          this.JobTaskDetail.get('riskLevel').patchValue(data);\r\n          break;\r\n        }\r\n        case 'ctrlActreq': {\r\n          let data = this.JobTaskDetail.get('contrActReq').value;\r\n          this.getAllContrActReq();\r\n          this.JobTaskDetail.get('contrActReq').patchValue(data);\r\n          break;\r\n        }\r\n        case 'resRiskLevel': {\r\n          let data = this.JobTaskDetail.get('residualRiskL').value;\r\n          this.getAllResidualRiskLevel();\r\n          this.JobTaskDetail.get('residualRiskL').patchValue(data);\r\n          break;\r\n        }\r\n        case 'perResbl': {\r\n          let data = this.JobTaskDetail.get('personResp').value;\r\n          this.getAllStaff();\r\n          this.JobTaskDetail.get('personResp').patchValue(data);\r\n          break;\r\n        }\r\n      }\r\n      console.log('The dialog was closed');\r\n    });\r\n  }\r\n\r\n  prev(item){\r\n    if(this.count != this.stepperList.length+1){\r\n      this.count--\r\n      this.stepperList.map(x => {\r\n        x.i = 0\r\n      }) \r\n      this.stepperList[this.count].i = 1\r\n      \r\n    }\r\n  }\r\n  next(item){\r\n    if(this.count != this.stepperList.length-1){\r\n      this.count++\r\n      this.stepperList.map(x => {\r\n        x.i = 0\r\n      }) \r\n      this.stepperList[this.count].i = 1\r\n      \r\n    }\r\n  }\r\n  handleClick(index){\r\n    console.log(index)\r\n    this.count = index\r\n    this.stepperList.map(x => {\r\n      x.i = 0\r\n    }) \r\n    this.stepperList[this.count].i = 1\r\n  }\r\n\r\nctx = {estimate: 'this.totalEstimate'};\r\n}\r\n","<section class=\"\">\r\n  <div class=\"\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-3\">\r\n        <!-- Tabs nav -->\r\n        <div\r\n          class=\"nav flex-column nav-pills nav-pills-custom\"\r\n          id=\"v-pills-tab\"\r\n          role=\"tablist\"\r\n          aria-orientation=\"vertical\"\r\n        >\r\n          <p\r\n            *ngFor=\"let item of stepperList; let i = index\"\r\n            (click)=\"handleClick(i)\"\r\n            class=\"nav-link mb-3 p-3 shadow\"\r\n            [class.active]=\"stepperList[i].i\"\r\n            id=\"v-pills-home-tab\"\r\n            data-toggle=\"pill\"\r\n            role=\"tab\"\r\n            aria-controls=\"v-pills-home\"\r\n            aria-selected=\"true\"\r\n          >\r\n            <i class=\"fa fa-user-circle-o mr-2\"></i>\r\n            <span class=\"font-weight-bold small text-uppercase\">{{\r\n              item.name\r\n            }}</span>\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"col-md-9\">\r\n        <!-- Tabs content -->\r\n        <div class=\"tab-content\" id=\"v-pills-tabContent\">\r\n          <div\r\n            *ngFor=\"let item of stepperList; let i = index\"\r\n            class=\"tab-pane fade shadow rounded bg-white p-5\"\r\n            [class.active]=\"stepperList[i].i\"\r\n            [class.show]=\"stepperList[i].i\"\r\n            id=\"v-pills-home\"\r\n            role=\"tabpanel\"\r\n            aria-labelledby=\"v-pills-home-tab\"\r\n          >\r\n            <h4 class=\"font-italic mb-4\">{{ item.name }}</h4>\r\n            <p class=\"font-italic text-muted mb-2\">\r\n              <ng-container\r\n                *ngTemplateOutlet=\"test; context: { name: item.name }\"\r\n              ></ng-container>\r\n            </p>\r\n            <div>\r\n              <!-- <div class=\"buttons\">\r\n                                <button mat-icon-button (click)=\"prev(1)\"><i  style=\"font-size: 25px;\" class=\"fas fa-arrow-left\"></i></button> <button mat-icon-button (click)=\"next(1)\"><i style=\"font-size: 25px;\" class=\"fas fa-arrow-right\"></i></button>\r\n                            </div> -->\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- <div class=\"buttons\">\r\n                            <button mat-icon-button (click)=\"prev(1)\"><i  style=\"font-size: 25px;\" class=\"fas fa-arrow-left\"></i></button> <button mat-icon-button (click)=\"next(1)\"><i style=\"font-size: 25px;\" class=\"fas fa-arrow-right\"></i></button>\r\n                        </div> -->\r\n  </div>\r\n</section>\r\n\r\n<ng-template\r\n  [formGroup]=\"JobTaskDetail\"\r\n  let\r\n  #test\r\n  let-name=\"name\"\r\n  class=\"my-auto\"\r\n>\r\n  <ng-container\r\n    *ngIf=\"name.toLowerCase() == 'HighRisk Construction'.toLowerCase()\"\r\n  >\r\n    <div class=\"row justify-content-center\" style=\"margin-top: auto\">\r\n      <div class=\"col-1 my-auto\"></div>\r\n      <div class=\"col-7\">\r\n        <mat-form-field class=\"container\" appearance=\"fill\">\r\n          <mat-label class=\"text-center\">HighRiskConstruction</mat-label>\r\n          <mat-select formControlName=\"highRiskConstr\" multiple>\r\n            <mat-select-trigger>\r\n              <span\r\n                *ngIf=\"!JobTaskDetail.get('highRiskConstr').value?.length\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n              </span>\r\n              <span\r\n                *ngIf=\"JobTaskDetail.get('highRiskConstr').value?.length == 1\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n                One Item selected\r\n              </span>\r\n              <span\r\n                *ngIf=\"JobTaskDetail.get('highRiskConstr').value?.length > 1\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n                More than one selected\r\n              </span>\r\n            </mat-select-trigger>\r\n            <mat-option\r\n              *ngFor=\"let parameter of highRiskConstructionData\"\r\n              [value]=\"parameter._id\"\r\n            >\r\n              {{ parameter.title }}</mat-option\r\n            >\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n      <div class=\"col-1 my-auto\"></div>\r\n    </div>\r\n  </ng-container>\r\n  <ng-container *ngIf=\"name.toLowerCase() == 'PPE'.toLowerCase()\">\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-1 my-auto\"></div>\r\n      <div class=\"col-7\">\r\n        <mat-form-field class=\"container\" appearance=\"fill\">\r\n          <mat-label>PPE selection</mat-label>\r\n          <mat-select formControlName=\"PPE\" multiple>\r\n            <mat-select-trigger>\r\n              <span\r\n                *ngIf=\"!JobTaskDetail.get('PPE').value?.length\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n              </span>\r\n              <span\r\n                *ngIf=\"JobTaskDetail.get('PPE').value?.length == 1\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n                One Item selected\r\n              </span>\r\n              <span\r\n                *ngIf=\"JobTaskDetail.get('PPE').value?.length > 1\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n                More than one selected\r\n              </span>\r\n            </mat-select-trigger>\r\n            <mat-option\r\n              *ngFor=\"let parameter of PPESelectionData\"\r\n              [value]=\"parameter._id\"\r\n              >{{ parameter.title }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n      <div class=\"col-1 my-auto\"></div>\r\n    </div>\r\n  </ng-container>\r\n  <ng-container *ngIf=\"name.toLowerCase() == 'Licence'.toLowerCase()\">\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-1 my-auto\"></div>\r\n      <div class=\"col-7\">\r\n        <mat-form-field class=\"container\" appearance=\"fill\">\r\n          <mat-label>Licences</mat-label>\r\n          <mat-select formControlName=\"LicenceCat\" multiple>\r\n            <mat-select-trigger>\r\n              <span\r\n                *ngIf=\"!JobTaskDetail.get('LicenceCat').value?.length\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n              </span>\r\n              <span\r\n                *ngIf=\"JobTaskDetail.get('LicenceCat').value?.length == 1\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n                One Item selected\r\n              </span>\r\n              <span\r\n                *ngIf=\"JobTaskDetail.get('LicenceCat').value?.length > 1\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n                More than one selected\r\n              </span>\r\n            </mat-select-trigger>\r\n            <mat-option\r\n              *ngFor=\"let parameter of licenceByTradecat\"\r\n              [value]=\"parameter._id\"\r\n              >{{ parameter.title }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n      <div class=\"col-1 my-auto\"></div>\r\n    </div>\r\n  </ng-container>\r\n  <ng-container *ngIf=\"name.toLowerCase() == 'Identify Hazards'.toLowerCase()\">\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-1 my-auto\"></div>\r\n      <div class=\"col-7\">\r\n        <mat-form-field class=\"container\" appearance=\"fill\">\r\n          <mat-label>Identify Hazards</mat-label>\r\n          <mat-select formControlName=\"identifyHazrds\" multiple>\r\n            <mat-select-trigger>\r\n              <span\r\n                *ngIf=\"!JobTaskDetail.get('identifyHazrds').value?.length\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n              </span>\r\n              <span\r\n                *ngIf=\"JobTaskDetail.get('identifyHazrds').value?.length == 1\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n                One Item selected\r\n              </span>\r\n              <span\r\n                *ngIf=\"JobTaskDetail.get('identifyHazrds').value?.length > 1\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n                More than one selected\r\n              </span>\r\n            </mat-select-trigger>\r\n            <mat-option\r\n              *ngFor=\"let parameter of allHazards\"\r\n              [value]=\"parameter._id\"\r\n              >{{ parameter.title }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n      <div class=\"col-1 my-auto\"></div>\r\n    </div>\r\n  </ng-container>\r\n  <ng-container *ngIf=\"name.toLowerCase() == 'Risk Level'.toLowerCase()\">\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-1 my-auto\"></div>\r\n      <div class=\"col-7\">\r\n        <mat-form-field class=\"container\" appearance=\"fill\">\r\n          <mat-label>Risk Level</mat-label>\r\n          <mat-select formControlName=\"riskLevel\">\r\n            <mat-option\r\n              *ngFor=\"let parameter of riskLevelData\"\r\n              [value]=\"parameter._id\"\r\n            >\r\n              {{ parameter.title }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n      <div class=\"col-1 my-auto\"></div>\r\n    </div>\r\n  </ng-container>\r\n  <ng-container\r\n    *ngIf=\"name.toLowerCase() == 'Control Action Required'.toLowerCase()\"\r\n  >\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-1 my-auto\"></div>\r\n      <div class=\"col-7\">\r\n        <mat-form-field class=\"container\" appearance=\"fill\">\r\n          <mat-label>Control Action Required</mat-label>\r\n          <mat-select formControlName=\"contrActReq\" multiple>\r\n            <mat-select-trigger>\r\n              <span\r\n                *ngIf=\"!JobTaskDetail.get('contrActReq').value?.length\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n              </span>\r\n              <span\r\n                *ngIf=\"JobTaskDetail.get('contrActReq').value?.length == 1\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n                One Item selected\r\n              </span>\r\n              <span\r\n                *ngIf=\"JobTaskDetail.get('contrActReq').value?.length > 1\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n                More than one selected\r\n              </span>\r\n            </mat-select-trigger>\r\n            <mat-option\r\n              *ngFor=\"let parameter of allContrlActReq\"\r\n              [value]=\"parameter._id\"\r\n              >{{ parameter.title }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n      <div class=\"col-1 my-auto\"></div>\r\n    </div>\r\n  </ng-container>\r\n  <ng-container *ngIf=\"name.toLowerCase() == 'Code of Practice'.toLowerCase()\">\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-1 my-auto\"></div>\r\n      <div class=\"col-7\">\r\n        <mat-form-field class=\"container\" appearance=\"fill\">\r\n          <mat-label>Code of Practice</mat-label>\r\n          <mat-select formControlName=\"codeOfPract\" multiple>\r\n            <mat-select-trigger>\r\n              <span\r\n                *ngIf=\"!JobTaskDetail.get('codeOfPract').value?.length\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n              </span>\r\n              <span\r\n                *ngIf=\"JobTaskDetail.get('codeOfPract').value?.length == 1\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n                One Item selected\r\n              </span>\r\n              <span\r\n                *ngIf=\"JobTaskDetail.get('codeOfPract').value?.length > 1\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n                More than one selected\r\n              </span>\r\n            </mat-select-trigger>\r\n            <mat-option\r\n              *ngFor=\"let parameter of allCodeOfPract\"\r\n              [value]=\"parameter._id\"\r\n              >{{ parameter.title }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n      <div class=\"col-1 my-auto\"></div>\r\n    </div>\r\n  </ng-container>\r\n  <ng-container\r\n    *ngIf=\"name.toLowerCase() == 'Residule Risk Level'.toLowerCase()\"\r\n  >\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-1 my-auto\"></div>\r\n      <div class=\"col-7\">\r\n        <mat-form-field class=\"container\" appearance=\"fill\">\r\n          <mat-label>Residule Risk Level</mat-label>\r\n          <mat-select formControlName=\"residualRiskL\">\r\n            <mat-option\r\n              *ngFor=\"let parameter of resiRiskLevelData\"\r\n              [value]=\"parameter._id\"\r\n            >\r\n              {{ parameter.title }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n      <div class=\"col-1 my-auto\"></div>\r\n    </div>\r\n  </ng-container>\r\n  <ng-container *ngIf=\"name.toLowerCase() == 'Code of Practice'.toLowerCase()\">\r\n    <ng-template matStepLabel>Code of Practice</ng-template>\r\n    <h2 class=\"text-center mt-3\">\r\n      Code of Practice<span\r\n        class=\"material-icons ml-3\"\r\n        (click)=\"addItem('codeOfPract')\"\r\n        >add_circle_outline</span\r\n      >\r\n    </h2>\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-1 my-auto\">\r\n        <button class=\"btn\" matStepperPrevious>\r\n          <i class=\"fas fa-arrow-left\"></i>\r\n        </button>\r\n      </div>\r\n      <div class=\"col-7\">\r\n        <mat-form-field class=\"container\" appearance=\"fill\">\r\n          <mat-label>Code of Practice</mat-label>\r\n          <mat-select formControlName=\"codeOfPract\" multiple>\r\n            <mat-select-trigger>\r\n              <span\r\n                *ngIf=\"!JobTaskDetail.get('codeOfPract').value?.length\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n              </span>\r\n              <span\r\n                *ngIf=\"JobTaskDetail.get('codeOfPract').value?.length == 1\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n                One Item selected\r\n              </span>\r\n              <span\r\n                *ngIf=\"JobTaskDetail.get('codeOfPract').value?.length > 1\"\r\n                class=\"example-additional-selection\"\r\n              >\r\n                More than one selected\r\n              </span>\r\n            </mat-select-trigger>\r\n            <mat-option\r\n              *ngFor=\"let parameter of allCodeOfPract\"\r\n              [value]=\"parameter._id\"\r\n              >{{ parameter.title }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n      <div class=\"col-1 my-auto\">\r\n        <button class=\"btn\" matStepperNext>\r\n          <i class=\"fas fa-arrow-right\"></i>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </ng-container>\r\n  <ng-container\r\n    *ngIf=\"name.toLowerCase() == 'Chemical related Task'.toLowerCase()\"\r\n  >\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-1 my-auto\"></div>\r\n      <div class=\"col-7 text-center\">\r\n        <div class=\"form-check form-check-inline\">\r\n          <input\r\n            class=\"form-check-input\"\r\n            type=\"radio\"\r\n            value=\"YES\"\r\n            formControlName=\"chemical\"\r\n          />\r\n          <label class=\"form-check-label\" for=\"inlineRadio1\">Yes</label>\r\n        </div>\r\n        <div class=\"form-check form-check-inline\">\r\n          <input\r\n            class=\"form-check-input\"\r\n            type=\"radio\"\r\n            value=\"NO\"\r\n            formControlName=\"chemical\"\r\n          />\r\n          <label class=\"form-check-label\" for=\"inlineRadio2\">No</label>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-1 my-auto\"></div>\r\n    </div>\r\n  </ng-container>\r\n  <ng-container\r\n    *ngIf=\"name.toLowerCase() == 'Person Responsible'.toLowerCase()\"\r\n  >\r\n    <div class=\"row justify-content-center mt-3\">\r\n      <div class=\"col-1 my-auto\"></div>\r\n      <div class=\"col-6\">\r\n        <mat-form-field class=\"container\" appearance=\"fill\">\r\n          <mat-label>Person Responsible</mat-label>\r\n          <mat-select formControlName=\"personResp\">\r\n            <mat-option *ngFor=\"let person of staff\" [value]=\"person._id\">\r\n              {{ person.title }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n      <div class=\"col-1 my-auto\">\r\n        <!--  -->\r\n      </div>\r\n    </div>\r\n    <div class=\"text-center mt-3\">\r\n      <button\r\n        *ngIf=\"!jobTask?.set\"\r\n        class=\"btn btn-primary\"\r\n        (click)=\"setRelation()\"\r\n      >\r\n        Set\r\n      </button>\r\n      <button\r\n        *ngIf=\"jobTask?.set\"\r\n        class=\"btn btn-primary\"\r\n        (click)=\"setRelation()\"\r\n      >\r\n        Update\r\n      </button>\r\n    </div>\r\n  </ng-container>\r\n  <div class=\"buttons\">\r\n    <button mat-icon-button (click)=\"prev(1)\">\r\n      <i style=\"font-size: 25px\" class=\"fas fa-arrow-left\"></i>\r\n    </button>\r\n    <button mat-icon-button (click)=\"next(1)\">\r\n      <i style=\"font-size: 25px\" class=\"fas fa-arrow-right\"></i>\r\n    </button>\r\n  </div>\r\n</ng-template>\r\n","import { Component, OnInit, QueryList, ViewChild, ViewChildren } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport {MatSort, Sort} from '@angular/material/sort';\r\nimport { Router } from '@angular/router';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { SetTitleService } from 'src/app/utils/services/set-title.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-hazard-treatment',\r\n  templateUrl: './hazard-treatment.component.html',\r\n  styleUrls: ['./hazard-treatment.component.scss']\r\n})\r\nexport class HazardTreatmentComponent implements OnInit {\r\n  setStatesDetail!: FormGroup;\r\n  hazardData:any=[]\r\n \r\n  ELEMENT_DATA = [];\r\n  displayedColumns: string[] = ['index', 'title', 'edit'];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n  \r\n  @ViewChildren('risk') Risk: QueryList<any>;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    private setTitle: SetTitleService,\r\n    public router: Router,\r\n  ) {}\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.setTitle.setTitle('WHS-Set Hazard Relation');\r\n this.getAllHazardTreatmentRelation();\r\n  }\r\n  onFormSubmit() {\r\n    console.log(this.setStatesDetail);\r\n  }\r\n  getAllHazardTreatmentRelation() {\r\n    this.logicalFormInfo.getAllHazardTreatmentRelation().subscribe((res: any) => {\r\n      console.log('getAllHazardTreatmentRelation=>', res);\r\n      this.hazardData = res.data;\r\n      \r\n      this.hazardData.forEach((element, index) => {\r\n        element.index = index + 1; //adding index\r\n      });\r\n\r\n      this.ELEMENT_DATA =  this.hazardData;\r\n      this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n     \r\n\r\n    });\r\n  }\r\n  setRelation_2(id){\r\n    this.router.navigate(['/admin/confiLogi/setHazardRelation'],\r\n     \r\n       {queryParams: { id:id}});\r\n   }\r\n}\r\n","  <!-- stepper logic -->\r\n  \r\n  <h2 class=\"ml-2\"> Set Hazard's Relation</h2>\r\n \r\n  <div class=\"\">\r\n    <table mat-table [dataSource]=\"dataSource\" matSort >\r\n  \r\n      <!-- Position Column -->\r\n      <ng-container matColumnDef=\"index\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> No. </th>\r\n        <td mat-cell *matCellDef=\"let element\">{{element.index}}</td>\r\n      </ng-container>\r\n  \r\n     \r\n\r\n  <ng-container matColumnDef=\"title\">\r\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> Title </th>\r\n    <td mat-cell *matCellDef=\"let element\"> {{element.title}} </td>\r\n  </ng-container>\r\n  \r\n  <ng-container matColumnDef=\"edit\">\r\n    <th mat-header-cell *matHeaderCellDef> Set </th>\r\n    <td  mat-cell *matCellDef=\"let element\"(click)=\"setRelation_2(element._id)\"> <button *ngIf=\"!element.set\" mat-stroked-button color=\"primary\" class=\"myBtn\">Set</button> <button  *ngIf=\"element.set\" mat-stroked-button color=\"primary\" class=\"myBtn\">Update</button>\r\n    </td>\r\n  </ng-container>\r\n \r\n  \r\n  \r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n    </table>\r\n  \r\n    <mat-paginator [pageSizeOptions]=\"[20]\"\r\n                   showFirstLastButtons \r\n                   aria-label=\"Select page of periodic elements\">\r\n    </mat-paginator>\r\n  </div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-confi-logi',\r\n  templateUrl: './confi-logi.component.html',\r\n  styleUrls: ['./confi-logi.component.scss']\r\n})\r\nexport class ConfiLogiComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<router-outlet></router-outlet>","import { JobNumber } from './../../../../utils/services/logical-form-info.service';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Component, OnInit, Inject, AfterViewInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-create-job-no',\r\n  templateUrl: './create-job-no.component.html',\r\n  styleUrls: ['./create-job-no.component.scss']\r\n})\r\nexport class CreateJobNoComponent implements OnInit, AfterViewInit {\r\n  allSites: any[] = []\r\n  addJobNumberForm: FormGroup\r\n  addCustomerForm: FormGroup;\r\n  allCustomers: any[] = [];\r\n  allState: any = [];\r\n  constructor(\r\n    private dialogRef: MatDialogRef<CreateJobNoComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private logicalFormInfoService: LogicalFormInfoService,\r\n    private fb: FormBuilder\r\n  ) { }\r\n  ngAfterViewInit(): void {\r\n    this.addJobNumberForm.get('siteName').valueChanges.subscribe(res => {\r\n      // console.log(JSON.parse(res))\r\n      res = JSON.parse(res)\r\n      this.addJobNumberForm.get('streetNumber').setValue(res.streetNumber)\r\n      this.addJobNumberForm.get('streetAddress').setValue(res.streetAddress)\r\n      this.addJobNumberForm.get('suburb').setValue(res.suburb)\r\n      this.addJobNumberForm.get('state').setValue(res.stateId._id)\r\n    })\r\n    this.addJobNumberForm.get('customerName').valueChanges.subscribe(res => {\r\n      // console.log(JSON.parse(res))\r\n      res = JSON.parse(res)\r\n      this.addJobNumberForm.get('customerContact').setValue(res.customerContact)\r\n      this.addJobNumberForm.get('customerContactPhone').setValue(res.contacts[0]?.phone)\r\n      this.addJobNumberForm.get('customerEmail').setValue(res.contacts[0]?.email)\r\n      // this.addJobNumberForm.get('customerEmail').setValue(res.ABN)\r\n    })\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.addJobNumberForm = this.fb.group({\r\n      siteName: ['',Validators.required],\r\n      streetNumber: [{ value: '', disabled: true },Validators.required],\r\n      streetAddress: [{ value: '', disabled: true },Validators.required],\r\n      suburb: [{ value: '', disabled: true },Validators.required],\r\n      state: [{ value: '', disabled: true },Validators.required],\r\n      customerName: ['',Validators.required],\r\n      customerContact: [{ value: '', disabled: true },Validators.required],\r\n      customerContactPhone: [{ value: '', disabled: true },Validators.required],\r\n      customerEmail: [{ value: '', disabled: true },Validators.required],\r\n    })\r\n    this.logicalFormInfoService.getAllSite().subscribe((res: any) => {\r\n      this.allSites = res.data;\r\n      console.log(res.data);\r\n      \r\n    })\r\n    this.logicalFormInfoService.getAllCustomer().subscribe((res: any) => {\r\n      this.allCustomers = res.data\r\n    })\r\n    this.getAllStates();\r\n  }\r\n  get f(){\r\n    return this.addJobNumberForm.controls\r\n  }\r\n  onSubmit() {\r\n    console.log(this.addJobNumberForm.value)\r\n    let data : JobNumber\r\n    data = {\r\n      arrObj:[{\r\n        customerContact:this.f.customerContact.value,\r\n        customerContactPhone:this.f.customerContactPhone.value,\r\n        customerEmail:this.f.customerEmail.value,\r\n        customerName:JSON.parse(this.f.customerName.value).customerName,\r\n        siteName:JSON.parse(this.f.siteName.value).siteName,\r\n        stateId:this.f.state.value,\r\n        streetAddress:this.f.streetAddress.value,\r\n        streetNumber:this.f.streetNumber.value,\r\n        suburb:this.f.suburb.value,\r\n      }]\r\n    }\r\n    console.log(data)\r\n    this.logicalFormInfoService.addJobNumber(data).subscribe((res:any)=>{\r\n      console.log(res)\r\n      this.dialogRef.close('success')\r\n    })\r\n  }\r\n  setSite(item) {\r\n    console.log(item)\r\n    this.addJobNumberForm.get('streetNumber').setValue(item.streetNumber)\r\n    this.addJobNumberForm.get('streetAddress').setValue(item.streetAddress)\r\n    this.addJobNumberForm.get('suburb').setValue(item.suburb)\r\n    this.addJobNumberForm.get('state').setValue(item.stateId._id)\r\n  }\r\n  setCustomer(item) {\r\n    this.addJobNumberForm.get('customerContact').setValue(item.customerContact)\r\n    this.addJobNumberForm.get('customerContactPhone').setValue(item.contacts[0]?.phone)\r\n    this.addJobNumberForm.get('customerEmail').setValue(item.contacts[0]?.email)\r\n  //   this.addJobNumberForm.get('customerEmail').setValue(item.ABN)\r\n   }\r\n  close() {\r\n    this.dialogRef.close();\r\n}\r\ngetAllStates() {\r\n  this.logicalFormInfoService.getAllStates().subscribe((res) => {\r\n    console.log('getAllStates=>', res);\r\n    this.allState = res.data;\r\n  });\r\n\r\n}\r\n}\r\n","<section [formGroup]=\"addJobNumberForm\" >\r\n  <div>\r\n    <div mat-dialog-title class=\"dialog-title\">\r\n    <h1>Create Job Number</h1>\r\n    <button type=\"button\" class=\"close\" \r\n    style=\"font-size: 25px;\"\r\n      (click)=\"close()\" aria-label=\"Close\">\r\n    <span aria-hidden=\"true\">×</span>\r\n  </button>\r\n  </div>\r\n    <div class=\"row\">\r\n  \r\n      <div class=\"my-3 col-6\">\r\n        <p for=\"exampleFormControlInput1\" class=\"form-Label\">Site Name</p>\r\n        <select\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          formControlName=\"siteName\"\r\n          id=\"siteName\"\r\n        >\r\n          <option [value]=\"item|json\" *ngFor=\"let item of allSites \">{{item.siteName}}</option>\r\n        </select>\r\n      </div>\r\n    \r\n    </div>\r\n  \r\n    \r\n    <div class=\"row\">\r\n      <div class=\"my-3 col-2\">\r\n        <p for=\"exampleFormControlInput1\" class=\"form-Label\">Street Number</p>\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          formControlName=\"streetNumber\"\r\n          id=\"siteName\"\r\n        />\r\n      </div>\r\n      <div class=\"my-3 col-4\">\r\n        <p for=\"exampleFormControlInput1\" class=\"form-Label\">Street Address</p>\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          formControlName=\"streetAddress\"\r\n          id=\"siteName\"\r\n        />\r\n      </div>\r\n      <div class=\"my-3 col-2\">\r\n        <p for=\"exampleFormControlInput1\" class=\"form-Label\">Suburb</p>\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          formControlName=\"suburb\"\r\n          id=\"siteName\"\r\n        />\r\n      </div>\r\n      <div class=\"my-3 col-4\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-label\"\r\n          >State</p\r\n        >\r\n\r\n          <select\r\n        class=\"form-select form-control col\"\r\n        aria-label=\"Default select example\"\r\n        formControlName=\"state\"\r\n      >\r\n      <option selected hidden>Select</option>\r\n      <option *ngFor =\"let item of allState\" [value]=\"item._id\">{{item.title}}</option>\r\n        <!-- <option selected hidden>Select</option>\r\n              <option value=\"NSW\">NSW</option>\r\n              <option value=\"ACT\">ACT</option>\r\n              <option value=\"QLD\">QLD</option>\r\n              <option value=\"NT\">NT</option>\r\n              <option value=\"SA\">SA</option>\r\n              <option value=\"NZ\">NZ</option>\r\n              <option value=\"TAS\">TAS</option>\r\n              <option value=\"VIC\">VIC</option>\r\n              <option value=\"WA\">WA</option> -->\r\n      </select>\r\n    \r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"my-3 col\">\r\n        <p for=\"exampleFormControlInput1\" class=\"form-Label\">Customer Name</p>\r\n        <select\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          formControlName=\"customerName\"\r\n          id=\"siteName\"\r\n        >\r\n          <option [value]=\"item|json\" *ngFor=\"let item of allCustomers \">{{item.customerName}}</option>\r\n        </select>\r\n      </div>\r\n      <div class=\"my-3 col\">\r\n        <p for=\"exampleFormControlInput1\" class=\"form-Label\">Customer Contact</p>\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          id=\"siteName\"\r\n          formControlName=\"customerContact\"\r\n        />\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"my-3 col\">\r\n        <p for=\"exampleFormControlInput1\" class=\"form-Label\">Customer Contact Phone</p>\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          id=\"siteName\"\r\n          formControlName=\"customerContactPhone\"\r\n        />\r\n      </div>\r\n      <div class=\"my-3 col\">\r\n        <p for=\"exampleFormControlInput1\" class=\"form-Label\">Customer Email</p>\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          id=\"siteName\"\r\n          formControlName=\"customerEmail\"\r\n        />\r\n      </div>\r\n    </div> \r\n  <div >\r\n    <button class=\"btn btn-primary\" (click)=\"onSubmit()\" [disabled]=\"addJobNumberForm.invalid \" >\r\n      Create\r\n    </button>\r\n  </div>\r\n    <!-- <div class=\"row\">\r\n      <div class=\"my-3 col\">\r\n        <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n          Customer Contact Phone\r\n        </p>\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          formControlName=\"customerContactPhone\"\r\n          id=\"siteName\"\r\n        />\r\n      </div>\r\n      <div class=\"my-3 col\">\r\n        <p for=\"exampleFormControlInput1\" class=\"form-Label\">Project Manager</p>\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          formControlName=\"projectManager\"\r\n          id=\"siteName\"\r\n        />\r\n      </div>\r\n    </div> -->\r\n  </div>\r\n  </section>\r\n  \r\n ","\r\nimport {\r\n  Component,\r\n  OnInit,\r\n  QueryList,\r\n  ViewChildren,\r\n  AfterViewInit,\r\n} from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormArray } from '@angular/forms';\r\nimport Swal from 'sweetalert2';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { SetTitleService } from 'src/app/utils/services/set-title.service';\r\nimport { ViewChild } from '@angular/core';\r\n\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { AddItemComponent } from './set-relation/add-item/add-item.component';\r\nimport { AddJobTaskComponent } from './add-job-task/add-job-task.component';\r\nimport { MatSort } from '@angular/material/sort';\r\n@Component({\r\n  selector: 'app-set-logic',\r\n  templateUrl: './set-logic.component.html',\r\n  styleUrls: ['./set-logic.component.scss'],\r\n})\r\nexport class SetLogicComponent implements AfterViewInit, OnInit {\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  JobTaskDetail!: FormGroup;\r\n  allHazards=[];\r\n  allContrlActReq=[];\r\n  jobTaskData: any = [];\r\n  highRiskData: any = [];\r\n  PPESelectionData: any = [];\r\n  codeOfPract: any = [];\r\n  licenseAndQual: any = [];\r\n  licenseAndQualificationData: any = [];\r\n  licenceCatAll: any = [];\r\n  highRiskConstructionData: any = [];\r\n  task: any = [];\r\n  riskLevel='';\r\n  residuleRiskL='';\r\n  PPEselection = [\r\n    { label: 'Disposable dust mask', value: '' },\r\n    { label: 'Dust Mas', value: '' },\r\n    { label: 'Face shield', value: '' },\r\n    { label: 'Full face respirator', value: '' },\r\n    { label: 'Gttors', value: '' },\r\n    { label: 'Half face respirator', value: '' },\r\n    { label: 'Hard Hat', value: '' },\r\n    { label: 'Hearing protection', value: '' },\r\n    { label: 'High-Vis Clothing', value: '' },\r\n    { label: 'Lock Out Tags', value: '' },\r\n    { label: 'Long sleeve/Long pants', value: '' },\r\n    { label: 'Out of Service Tags', value: '' },\r\n    { label: 'Protective gloves', value: '' },\r\n    { label: 'Rescue kit', value: '' },\r\n    { label: 'Safety boots', value: '' },\r\n    { label: 'Safety glasses', value: '' },\r\n    { label: 'Sun Screen', value: '' },\r\n    { label: 'torch', value: '' },\r\n    { label: 'Wide Brim Hat', value: '' },\r\n  ];\r\n\r\n  licenseAndQualification = [\r\n    { label: 'Open Cable Licence', value: '' },\r\n    { label: 'White Card', value: '' },\r\n    { label: 'EWP Licence', value: '' },\r\n    { label: 'Working At Heights', value: '' },\r\n    { label: 'Security Licence', value: '' },\r\n    { label: 'Asbestos Awarness', value: '' },\r\n    { label: 'Working In Confined Space', value: '' },\r\n  ];\r\n\r\n  highRiskConstruction2 = [\r\n    {\r\n      label: 'Working in or near trenches or shafts deeper than 1.5metres',\r\n      value: '',\r\n    },\r\n    { label: 'Work in or near a confined space', value: '' },\r\n    {\r\n      label:\r\n        'Work in an area that may have a contaminated or flammable atmosphere',\r\n      value: '',\r\n    },\r\n    { label: 'Working around or near mobile plant', value: '' },\r\n    { label: 'Work with near or near asbestos', value: '' },\r\n    { label: 'Working with hazardous substances', value: '' },\r\n    { label: 'Working with or near tilt-up/precast concrete', value: '' },\r\n    { label: 'Risk of falls higher than 2 metres', value: '' },\r\n    {\r\n      label: 'Working near on or adjacent to a road or rail corridor',\r\n      value: '',\r\n    },\r\n    { label: 'Working on or near telecommunication tower', value: '' },\r\n    { label: 'Working on or near telecommunication tower', value: '' },\r\n    { label: 'Work near explosives', value: '' },\r\n    {\r\n      label:\r\n        'Work in or near water or other liquid that involves a risk of drowning',\r\n      value: '',\r\n    },\r\n    { label: 'Demolition of load-bearing structure', value: '' },\r\n    { label: 'Diving work', value: '' },\r\n  ];\r\n\r\n  PPEselection2 = [\r\n    { label: 'Disposable dust mask', value: '' },\r\n    { label: 'Dust Mas', value: '' },\r\n    { label: 'Face shield', value: '' },\r\n    { label: 'Full face respirator', value: '' },\r\n    { label: 'Gttors', value: '' },\r\n    { label: 'Half face respirator', value: '' },\r\n    { label: 'Hard Hat', value: '' },\r\n    { label: 'Hearing protection', value: '' },\r\n    { label: 'High-Vis Clothing', value: '' },\r\n    { label: 'Lock Out Tags', value: '' },\r\n    { label: 'Long sleeve/Long pants', value: '' },\r\n    { label: 'Out of Service Tags', value: '' },\r\n    { label: 'Protective gloves', value: '' },\r\n    { label: 'Rescue kit', value: '' },\r\n    { label: 'Safety boots', value: '' },\r\n    { label: 'Safety glasses', value: '' },\r\n    { label: 'Sun Screen', value: '' },\r\n    { label: 'torch', value: '' },\r\n    { label: 'Wide Brim Hat', value: '' },\r\n  ];\r\n  ELEMENT_DATA = [];\r\n  /////////////mat table////////////////\r\n  displayedColumns: string[] = ['index', 'title', 'edit'];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n  // @ViewChild('risk') risk: any;\r\n  @ViewChildren('risk') Risk: QueryList<any>;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,    private dialog: MatDialog,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    private setTitle: SetTitleService,\r\n    public router: Router,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.setTitle.setTitle('WHS-Set Relation');\r\n \r\n    // this.JobTaskDetail = this.fb.group({\r\n    //   highRiskConstr: this.fb.array([]),\r\n    //   PPE: this.fb.array([]),\r\n    //   LicenceCat: this.fb.array([]),\r\n    //   identifyHazrds: this.fb.array([]),\r\n    //   contrActReq: this.fb.array([]),\r\n    //   riskLevel: this.fb.array([]),\r\n    //   residualRisk: this.fb.array([]),\r\n    // });\r\n\r\n    this.getJobTask();\r\n    // this.getAllHighRisk();\r\n    // this.getAllLicence();\r\n    // this.getAllCategories();\r\n    // this.getAllPPE();\r\n    // this.getAllHazard();\r\n    // this.getAllContrActReq();\r\n  }\r\n\r\n  \r\n\r\n  // addActionHighRisk() {\r\n  //   {\r\n  //     this.highRiskFA().push(this.highRiskFG());\r\n  //   }\r\n  // }\r\n  // addActionPPE() {\r\n  //   {\r\n  //     this.PPE_FA().push(this.PPE_FG());\r\n  //   }\r\n  // }\r\n  // addActionLicnCat() {\r\n  //   {\r\n  //     this.licenceCatFA().push(this.licenceCatFG());\r\n  //   }\r\n  // }\r\n  // addActionContrActReq() {\r\n  //   {\r\n  //     this.contrActReqFA().push(this.contrActReqFG());\r\n  //   }\r\n  // }\r\n  // addActionIdentifyHazrds() {\r\n  //   {\r\n  //     this.identifyHazrdsFA().push(this.identifyHazrdsFG());\r\n  //   }\r\n  // }\r\n  // addActionRiskLevel() {\r\n  //   {\r\n  //     this.riskLevelFA().push(this.riskLevelFG());\r\n  //   }\r\n  // }\r\n  // addActionResiRiskLevel() {\r\n  //   {\r\n  //     this.residlRiskLevelFA().push(this.residlRiskLevelFG());\r\n  //   }\r\n  // }\r\n  // addActionCOP() {\r\n  //   {\r\n  //     this.addCOP().push(this.newActionCOP());\r\n  //   }\r\n  // }\r\n  // highRiskFA(): FormArray {\r\n  //   return this.JobTaskDetail.get('highRiskConstr') as FormArray;\r\n  // }\r\n  // PPE_FA(): FormArray {\r\n  //   return this.JobTaskDetail.get('PPE') as FormArray;\r\n  // }\r\n  // licenceCatFA(): FormArray {\r\n  //   return this.JobTaskDetail.get('LicenceCat') as FormArray;\r\n  // }\r\n  // identifyHazrdsFA(): FormArray {\r\n  //   return this.JobTaskDetail.get('identifyHazrds') as FormArray;\r\n  // }\r\n  // contrActReqFA(): FormArray {\r\n  //   return this.JobTaskDetail.get('contrActReq') as FormArray;\r\n  // }\r\n  // addCOP(): FormArray {\r\n  //   return this.JobTaskDetail.get('codeOfPract') as FormArray;\r\n  // }\r\n  // riskLevelFA(): FormArray {\r\n  //   return this.JobTaskDetail.get('riskLevel') as FormArray;\r\n  // }\r\n  // residlRiskLevelFA(): FormArray {\r\n  //   return this.JobTaskDetail.get('residualRisk') as FormArray;\r\n  // }\r\n  // highRiskFG(): FormGroup {\r\n  //   return this.fb.group({\r\n  //     highRiskArr: [''],\r\n  //   });\r\n  // }\r\n  // PPE_FG(): FormGroup {\r\n  //   return this.fb.group({\r\n  //     ppeArr: [''],\r\n  //   });\r\n  // }\r\n  // licenceCatFG(): FormGroup {\r\n  //   return this.fb.group({\r\n  //     licenceArr: [''],\r\n  //   });\r\n  // }\r\n  // identifyHazrdsFG(): FormGroup {\r\n  //   return this.fb.group({\r\n  //     hazardsArr: [''],\r\n  //   });\r\n  // }\r\n  // contrActReqFG(): FormGroup {\r\n  //   return this.fb.group({\r\n  //     contrActReqArr: [''],\r\n  //   });\r\n  // }\r\n  // riskLevelFG(): FormGroup {\r\n  //   return this.fb.group({\r\n  //     riskLevel: [''],\r\n  //   });\r\n  // }\r\n  // residlRiskLevelFG(): FormGroup {\r\n  //   return this.fb.group({\r\n  //     resiRiskLevel: [''],\r\n  //   });\r\n  // }\r\n  // newActionCOP(): FormGroup {\r\n  //   //code of practice\r\n  //   return this.fb.group({\r\n  //     copArr: [''],\r\n  //   });\r\n  // }\r\n\r\n  onFormSubmit() {\r\n    console.log(this.JobTaskDetail);\r\n  }\r\n  getJobTask() {\r\n    this.logicalFormInfo.getAllJobtask().subscribe((res: any) => {\r\n      console.log('jobTaskDetails=>', res);\r\n      this.jobTaskData = res.data;\r\n      \r\n      this.jobTaskData.forEach((element, index) => {\r\n        element.index = index + 1; //adding index\r\n      });\r\n\r\n      this.ELEMENT_DATA =  this.jobTaskData;\r\n      this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n      // this.jobTaskData.forEach((item,i) => {\r\n      //   this.addActionHighRisk();\r\n      //   this.addActionPPE();\r\n      //   this.addActionLicnCat();\r\n      //   this.addActionContrActReq();\r\n      //   this.addActionIdentifyHazrds(); \r\n      //   this.addActionRiskLevel(); \r\n      //   this.addActionResiRiskLevel();   \r\n      //   this.highRiskFA().controls[i].get('highRiskArr').setValue(item.risk);\r\n      //   this.PPE_FA().controls[i].get('ppeArr').setValue(item.PPE);\r\n      //   this.licenceCatFA().controls[i].get('licenceArr').setValue(item.licence);  \r\n      //   this.identifyHazrdsFA().controls[i].get('hazardsArr').setValue(item.identifyHazard);\r\n      //   this.contrActReqFA().controls[i].get('contrActReqArr').setValue(item.controlActionRequired);\r\n      //   this.riskLevelFA().controls[i].get('riskLevel').setValue(item.riskLevel);\r\n      //   this.residlRiskLevelFA().controls[i].get('resiRiskLevel').setValue(item.residualRisk);\r\n\r\n      //   });\r\n\r\n    });\r\n  }\r\n  getAllHighRisk() {\r\n    this.logicalFormInfo.getAllRisk().subscribe((res: any) => {\r\n      console.log('Risk=>', res);\r\n      this.highRiskConstructionData = res.data;\r\n    });\r\n  }\r\n  getAllPPE() {\r\n    this.logicalFormInfo.getAllPPE().subscribe((res: any) => {\r\n      console.log('PPE=>', res);\r\n      this.PPESelectionData = res.data;\r\n    });\r\n  }\r\n\r\n  getAllLicence() {\r\n    this.logicalFormInfo.getAllLicence().subscribe((res) => {\r\n      console.log('Licence=>', res);\r\n      this.licenseAndQual = res.data;\r\n    });\r\n  }\r\n  getAllHazard() {\r\n    this.logicalFormInfo.getAllHazards().subscribe((res:any) => {\r\n      console.log('getAllHazards=>', res);\r\n      this.allHazards = res.data;\r\n    });\r\n  }\r\n  getAllContrActReq()  {\r\n    this.logicalFormInfo.getAllContrlActReq().subscribe((res:any) => {\r\n      console.log('getAllHazards=>', res);\r\n      this.allContrlActReq = res.data;\r\n    });\r\n  }\r\n  getAllCategories() {\r\n    this.logicalFormInfo.getAllLicenceCat().subscribe((res) => {\r\n      console.log('getAllLicenceCat=>', res);\r\n      this.licenceCatAll = res.data;\r\n    });\r\n  }\r\n  setRelation_2(id){\r\n   this.router.navigate(['/admin/confiLogi/setRelation'],\r\n\r\n      {queryParams: { id:id}});\r\n  }\r\n /* setRelation(title, id,i) {\r\n\r\n    console.log('index', title);\r\n    console.log('id', id);\r\n    console.log('id', i);\r\nlet risk = [],\r\nppe=[],\r\nlicence=[],\r\nidentifyHazard=[],\r\ncontrolActionRequired=[];\r\n  if(this.highRiskFA().controls[i].get('highRiskArr').value){\r\n    this.highRiskFA().controls[i].get('highRiskArr').value.forEach(element => {\r\n      risk.push(element._id)\r\n    });\r\n  }\r\n  if(this.PPE_FA().controls[i].get('ppeArr').value){\r\n    this.PPE_FA().controls[i].get('ppeArr').value.forEach(element => {\r\n      ppe.push(element._id)\r\n    });\r\n  }\r\n  if(this.licenceCatFA().controls[i].get('licenceArr').value){\r\n    this.licenceCatFA().controls[i].get('licenceArr').value.forEach(element => {\r\n      licence.push(element._id)\r\n    });\r\n  }\r\n  if(this.identifyHazrdsFA().controls[i].get('hazardsArr').value){\r\n    this.identifyHazrdsFA().controls[i].get('hazardsArr').value.forEach(element => {\r\n      identifyHazard.push(element._id)\r\n    });\r\n  }\r\n  if(this.contrActReqFA().controls[i].get('contrActReqArr').value){\r\n    this.contrActReqFA().controls[i].get('contrActReqArr').value.forEach(element => {\r\n      controlActionRequired.push(element._id)\r\n    });\r\n  }\r\n\r\n    let data = {\r\n      title: title,\r\n      risk: this.highRiskFA().controls[i].get('highRiskArr').value,\r\n      PPE: this.PPE_FA().controls[i].get('ppeArr').value,\r\n      licence: this.licenceCatFA().controls[i].get('licenceArr').value,\r\n      identifyHazard:this.identifyHazrdsFA().controls[i].get('hazardsArr').value,\r\n      controlActionRequired: this.contrActReqFA().controls[i].get('contrActReqArr').value,\r\n      riskLevel:this.riskLevelFA().controls[i].get('riskLevel').value ,\r\n      residualRisk: this.residlRiskLevelFA().controls[i].get('resiRiskLevel').value,\r\n      set:true      \r\n    };\r\n    console.log(data);\r\n\r\n    this.logicalFormInfo.updateJobTask(data,id).subscribe((res) => {\r\n      console.log('resJob Task=>', res);\r\n      this.getJobTask();\r\n\r\n      Swal.fire({\r\n        title: 'Relation set successfully',\r\n        showConfirmButton: false,\r\n        timer: 1200,\r\n      });\r\n    });\r\n  } */\r\n  categorySel(catArr) {\r\n    this.licenseAndQualificationData = [];\r\n\r\n    console.log(catArr);\r\n    catArr.forEach((element) => {\r\n      this.licenseAndQual.forEach((item) => {\r\n        if (element === item.licenceCategoryId._id) {\r\n          this.licenseAndQualificationData.push(item);\r\n        }\r\n      });\r\n    });\r\n    console.log(\r\n      ' this.licenseAndQualificationData',\r\n      this.licenseAndQualificationData\r\n    );\r\n  }\r\n\r\n \r\n  // openDialog(element) {\r\n  \r\n  //   const dialogRef = this.dialog.open(AddJobTaskComponent, {\r\n  //     width: \"800px\",\r\n  //     data: element,\r\n  //   });\r\n  //   console.log(element)\r\n  //   dialogRef.afterClosed().subscribe((result) => {\r\n  //     if ((result == \"true\")) {\r\n  //       this.getJobTask();\r\n  //     }\r\n  //     console.log(\"The dialog was closed\");\r\n  //   });\r\n  // }\r\n  // delete(item) {\r\n  //   Swal.fire({\r\n  //     title: 'Are you sure?',\r\n  //     text: `Do you want to delete \"${item.title}\"?`,\r\n  //     icon: 'warning',\r\n  //     showCancelButton: true,\r\n  //     confirmButtonColor: '#00B96F',\r\n  //     cancelButtonColor: '#d33',\r\n  //     confirmButtonText: 'Yes, Delete!',\r\n  //   }).then((result) => {\r\n  //     if (result.value) {\r\n  //       this.logicalFormInfo\r\n  //         .deleteJobTask(item._id)\r\n  //         .subscribe((res) => {\r\n  //           Swal.fire({\r\n  //             title: 'Parameter Deleted successfully',\r\n  //             showConfirmButton: false,\r\n  //             timer: 1200,\r\n  //           }); console.log('deleted res', res);\r\n  //           this.getJobTask();\r\n\r\n  //         });\r\n  //     }\r\n  //   });\r\n  // }\r\n\r\n}\r\n","<!-- <section class=\"content\" [formGroup]=\"JobTaskDetail\">\r\n    <div class=\"container-fluid\">\r\n      <div class=\"text-center\">\r\n        <h1 > Job Task List</h1>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-12\">\r\n          <div class=\"card\">\r\n            <div class=\"card-body p-0 overflow-auto\">\r\n              <table class=\"table table-hover text-wrap\">\r\n                <thead>\r\n                  <tr>\r\n                    <th style=\"width: 1%\">Index</th>\r\n                    <th style=\"width: 20%\">Job Task List </th>\r\n                    <th style=\"width: 15%\">High Risk Construction </th>\r\n                    <th style=\"width: 15%\">PPE</th>\r\n                    <th style=\"width: 15%\">Licence Category</th>\r\n                    <th style=\"width: 15%\">Identify Hazards</th>\r\n                    <th style=\"width: 15%\">Risk</th>\r\n                    <th style=\"width: 15%\">Control Action Required</th>\r\n                    <th style=\"width: 15%\">Residule Risk</th>\r\n                    <th style=\"width: 15%\">Action</th>\r\n  \r\n                  </tr>\r\n                </thead>\r\n                <tbody >\r\n                  <tr *ngFor=\"let task of  jobTaskData; let i = index\">\r\n                    <td>{{i+1}}</td>\r\n                    <td>{{ task.title }}</td>\r\n                    <ng-container formArrayName=\"highRiskConstr\">\r\n                      <td [formGroupName]=\"i\">\r\n                        <mat-form-field appearance=\"fill\">\r\n                          <mat-label>HighRiskConstruction</mat-label>\r\n                          <mat-select formControlName=\"highRiskArr\" multiple >\r\n                            <mat-select-trigger>\r\n                              <span *ngIf=\"!highRiskFA().controls[i].get('highRiskArr').value?.length\" class=\"example-additional-selection\">\r\n                              </span>\r\n                              <span *ngIf=\"highRiskFA().controls[i].get('highRiskArr').value?.length == 1\" class=\"example-additional-selection\">\r\n                                One Item selected\r\n                              </span>\r\n                              <span *ngIf=\"highRiskFA().controls[i].get('highRiskArr').value?.length > 1\" class=\"example-additional-selection\">\r\n                                More than one selected\r\n                              </span>\r\n                            </mat-select-trigger>\r\n                            <mat-option *ngFor=\"let parameter of highRiskConstructionData\" [value]=\"parameter._id\">\r\n                              {{parameter.title}}</mat-option>\r\n                          </mat-select>\r\n                        </mat-form-field>\r\n                      </td>\r\n                    </ng-container >                \r\n                    <ng-container formArrayName=\"PPE\">\r\n                      <td [formGroupName]=\"i\">\r\n                        <mat-form-field appearance=\"fill\">\r\n                          <mat-label>PPE selection</mat-label>\r\n                          <mat-select formControlName=\"ppeArr\" multiple >\r\n                            <mat-select-trigger>\r\n                              <span *ngIf=\"!PPE_FA().controls[i].get('ppeArr').value?.length \" class=\"example-additional-selection\">\r\n                               \r\n                              </span>\r\n                              <span *ngIf=\"PPE_FA().controls[i].get('ppeArr').value?.length == 1\" class=\"example-additional-selection\">\r\n                               One Item selected\r\n                              </span>\r\n                              <span *ngIf=\"PPE_FA().controls[i].get('ppeArr').value?.length > 1\" class=\"example-additional-selection\">\r\n                                More than one selected\r\n                              </span>\r\n                            </mat-select-trigger>\r\n                            <mat-option *ngFor=\"let parameter of PPESelectionData\" [value]=\"parameter._id\">{{parameter.title}}\r\n                            </mat-option>\r\n                          </mat-select>\r\n                        </mat-form-field>\r\n                      </td>\r\n                    </ng-container>\r\n                    <ng-container formArrayName=\"LicenceCat\">\r\n                      <td [formGroupName]=\"i\">\r\n                        <mat-form-field appearance=\"fill\">\r\n                          <mat-label>Licence Categories</mat-label>\r\n                          <mat-select formControlName=\"licenceArr\" multiple >\r\n                            <mat-select-trigger>\r\n                              <span *ngIf=\"!licenceCatFA().controls[i].get('licenceArr').value?.length\" class=\"example-additional-selection\">\r\n                              </span>\r\n                              <span *ngIf=\"licenceCatFA().controls[i].get('licenceArr').value?.length == 1\" class=\"example-additional-selection\">\r\n                                One Item selected\r\n                              </span>\r\n                              <span *ngIf=\"licenceCatFA().controls[i].get('licenceArr').value?.length > 1\" class=\"example-additional-selection\">\r\n                                More than one selected\r\n                              </span>\r\n                            </mat-select-trigger>\r\n                            <mat-option *ngFor=\"let parameter of licenceCatAll\" [value]=\"parameter._id\">{{parameter.title}}\r\n                            </mat-option>\r\n                          </mat-select>\r\n                        </mat-form-field>\r\n                      </td>\r\n                    </ng-container>\r\n                    <ng-container formArrayName=\"identifyHazrds\">\r\n                      <td [formGroupName]=\"i\">\r\n                        <mat-form-field appearance=\"fill\">\r\n                          <mat-label>Identify Hazards</mat-label>\r\n                          <mat-select formControlName=\"hazardsArr\" multiple >\r\n                            <mat-select-trigger>\r\n                              <span *ngIf=\"!identifyHazrdsFA().controls[i].get('hazardsArr').value?.length\" class=\"example-additional-selection\">\r\n                              </span>\r\n                              <span *ngIf=\"identifyHazrdsFA().controls[i].get('hazardsArr').value?.length == 1\" class=\"example-additional-selection\">\r\n                                One Item selected\r\n                              </span>\r\n                              <span *ngIf=\"identifyHazrdsFA().controls[i].get('hazardsArr').value?.length > 1\" class=\"example-additional-selection\">\r\n                                More than one selected\r\n                              </span>\r\n                            </mat-select-trigger>\r\n                            <mat-option *ngFor=\"let parameter of allHazards\" ngValue=\"parameter\">{{parameter.title}}\r\n                            </mat-option>\r\n                          </mat-select>\r\n                        </mat-form-field>\r\n                      </td>\r\n                    </ng-container>\r\n                  <ng-container formArrayName=\"riskLevel\">\r\n                    <td [formGroupName]=\"i\">\r\n                      <mat-form-field appearance=\"fill\">\r\n                      <mat-label>Risk</mat-label>\r\n                      <mat-select formControlName=\"riskLevel\" >\r\n                        <mat-option value=\"L1\">L1</mat-option>\r\n                        <mat-option value=\"L2\">L2</mat-option>\r\n                        <mat-option value=\"L3\">L3</mat-option>\r\n                        <mat-option value=\"L4\">L4</mat-option>\r\n                        <mat-option value=\"L5\">L5</mat-option>                        \r\n                      </mat-select>\r\n                    </mat-form-field>\r\n                    </td>\r\n                  </ng-container>\r\n                   \r\n                    <ng-container formArrayName=\"contrActReq\">\r\n                      <td [formGroupName]=\"i\">\r\n                        <mat-form-field appearance=\"fill\">\r\n                          <mat-label>Control Actions Required</mat-label>\r\n                          <mat-select formControlName=\"contrActReqArr\" multiple >\r\n                            <mat-select-trigger>\r\n                              <span *ngIf=\"!contrActReqFA().controls[i].get('contrActReqArr').value?.length\" class=\"example-additional-selection\">\r\n                              </span>\r\n                              <span *ngIf=\"contrActReqFA().controls[i].get('contrActReqArr').value?.length == 1\" class=\"example-additional-selection\">\r\n                                One Item selected\r\n                              </span>\r\n                              <span *ngIf=\"contrActReqFA().controls[i].get('contrActReqArr').value?.length > 1\" class=\"example-additional-selection\">\r\n                                More than one selected\r\n                              </span>\r\n                            </mat-select-trigger>\r\n                            <mat-option *ngFor=\"let parameter of allContrlActReq\" [value]=\"parameter\">{{parameter.title}}\r\n                            </mat-option>\r\n                          </mat-select>\r\n                        </mat-form-field>\r\n                      </td>\r\n                    </ng-container>\r\n\r\n                    <ng-container formArrayName=\"residualRisk\">\r\n                      <td [formGroupName]=\"i\">\r\n                        <mat-form-field appearance=\"fill\">\r\n                        <mat-label>Residule Risk</mat-label>\r\n                        <mat-select formControlName=\"resiRiskLevel\" >\r\n                          <mat-option value=\"L1\">L1</mat-option>\r\n                          <mat-option value=\"L2\">L2</mat-option>\r\n                          <mat-option value=\"L3\">L3</mat-option>\r\n                          <mat-option value=\"L4\">L4</mat-option>\r\n                          <mat-option value=\"L5\">L5</mat-option>                        \r\n                        </mat-select>\r\n                      </mat-form-field>\r\n                      </td>\r\n                    </ng-container>\r\n                 \r\n                 \r\n                 <td *ngIf=\"!task.set\"><button class=\"btn btn-primary\" (click)=\"setRelation(task.title,task._id,i)\">Set</button></td>\r\n                    <td *ngIf=\"task.set\"><button class=\"btn btn-primary\" (click)=\"setRelation(task.title,task._id,i)\">Update</button></td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section> -->\r\n\r\n  <!-- stepper logic -->\r\n  \r\n<h2 class=\"ml-2\"> Set Relation</h2>\r\n<!-- <div class=\"col ml-2 mb-2\">\r\n  \r\n  <button  class=\"btn btn-outline-primary mt-1 mr-2 float-right\"  (click)=\"openDialog('')\" >\r\n    <i class=\"fas fa-folder-plus mr-2\"></i>Add Job Task \r\n  </button>\r\n</div> -->\r\n<div class=\"\">\r\n  <table mat-table [dataSource]=\"dataSource\" matSort>\r\n\r\n    <!-- Position Column -->\r\n    <ng-container matColumnDef=\"index\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> No. </th>\r\n      <td mat-cell *matCellDef=\"let element\">{{element.index}}</td>\r\n    </ng-container>\r\n\r\n    <!-- Name Column -->\r\n   \r\n<!-- Name Column -->\r\n<ng-container matColumnDef=\"title\">\r\n  <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\r\n  <td mat-cell *matCellDef=\"let element\"> <span class=\"flex-start\"><pre  style=\" font-family: Roboto, Helvetica Neue, sans-serif; font-size: 14px;\">{{element.title}} </pre>  </span> </td>\r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"edit\">\r\n  <th mat-header-cell *matHeaderCellDef> Set </th>\r\n  <td  mat-cell *matCellDef=\"let element\"(click)=\"setRelation_2(element._id)\"> <button *ngIf=\"!element.set\" class=\"myBtn\" mat-stroked-button color=\"primary\">Set</button> <button  *ngIf=\"element.set\"  class=\"myBtn\" mat-stroked-button color=\"primary\">Update</button>\r\n  </td>\r\n</ng-container>\r\n<!-- <ng-container matColumnDef=\"action\">\r\n  <th mat-header-cell *matHeaderCellDef> Action </th>\r\n  <td mat-cell *matCellDef=\"let element\">\r\n\r\n     <button mat-icon-button class=\"mr-2\" aria-label=\"Example icon button with a delete icon\">\r\n      <mat-icon (click)=\"openDialog(element)\">edit</mat-icon>\r\n    </button>\r\n    <button mat-icon-button aria-label=\"Example icon button with a delete icon\"(click)=\"delete(element)\">\r\n      <mat-icon >delete</mat-icon>\r\n    </button>\r\n  </td>\r\n</ng-container> -->\r\n<!-- <ng-container matColumnDef=\"delete\">\r\n  <th mat-header-cell *matHeaderCellDef> Delete </th>\r\n  <td mat-cell *matCellDef=\"let element\"(click)=\"delete(element)\"> <i class=\"fas fa-trash \"></i> \r\n  </td>\r\n</ng-container> -->\r\n\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n  </table>\r\n\r\n  <mat-paginator [pageSizeOptions]=\"[20]\"\r\n                 showFirstLastButtons \r\n                 aria-label=\"Select page of periodic elements\">\r\n  </mat-paginator>\r\n</div>\r\n","import { SetRelationComponent } from './set-logic/set-relation/set-relation.component';\r\nimport { JobNumberComponent } from './job-number/job-number.component';\r\nimport { SetLogicComponent } from './set-logic/set-logic.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ConfiLogiComponent } from './confi-logi.component';\r\nimport { TestLogicComponent } from './set-logic/test-logic/test-logic.component';\r\nimport { AddJobTaskComponent } from './set-logic/add-job-task/add-job-task.component';\r\nimport { HazardReportComponent } from '../forms/hazard-report/hazard-report.component';\r\nimport { HazardTreatmentComponent } from './hazard-treatment/hazard-treatment.component';\r\nimport { AddHazardRelationComponent } from './hazard-treatment/add-hazard-relation/add-hazard-relation.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: ConfiLogiComponent },\r\n  { path: 'setLogic', component: SetLogicComponent },\r\n  { path: 'setJobNumber', component: JobNumberComponent },\r\n  // { path: 'setRelation', component: TestLogicComponent },\r\n  { path: 'setRelation', component: SetRelationComponent },\r\n  {path:'addTask',component:AddJobTaskComponent},\r\n  {path:'setHazard',component:HazardTreatmentComponent},\r\n  {path:'setHazardRelation',component:AddHazardRelationComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ConfiLogiRoutingModule { }\r\n","import { Component, OnInit,Inject } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport Swal from 'sweetalert2';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\n@Component({\r\n  selector: 'app-add-item',\r\n  templateUrl: './add-item.component.html',\r\n  styleUrls: ['./add-item.component.scss']\r\n})\r\nexport class AddItemComponent implements OnInit {\r\n  addItem!: FormGroup;\r\n  dataRec: any;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    public dialogRef: MatDialogRef<AddItemComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.dataRec = data;\r\n  }\r\n  ngOnInit(): void {\r\n    console.log(this.dataRec);\r\n    \r\n    this.addItem = this.fb.group({\r\n      title: ['', Validators.required],\r\n    });\r\n  }\r\n  onFormSubmit() {\r\n     \r\n    let data={\r\n      title :this.addItem.get('title').value\r\n    }\r\n\r\n    switch (this.dataRec.type) {\r\n      case 'highRisk': {\r\n       this.addHighRisk(data);\r\n        break;\r\n      }\r\n      case 'ppe': {\r\n       this.addPPE(data);\r\n        break;\r\n      }\r\n      case 'licence': {\r\n       this.addLicence(data);\r\n        break;\r\n      }\r\n      case 'identifyHazards': {\r\n       this.addHazard(data);\r\n        break;\r\n      }\r\n      case 'codeOfPract': {\r\n       this.addCOP(data);\r\n        break;\r\n      }\r\n      case 'riskLevel': {\r\n       this.addRiskLevel(data);\r\n        break;\r\n      }\r\n      case 'ctrlActreq': {\r\n       this.addControlActReq(data);\r\n        break;\r\n      }\r\n      case 'resRiskLevel': {\r\n       this.addResidRiskLevel(data);\r\n        break;\r\n      }\r\n      case 'perResbl': {\r\n       this.addStaff(data);\r\n        break;\r\n      }\r\n    \r\n    \r\n    }\r\n\r\n  }\r\n  closeDialog(){\r\n    this.dialogRef.close('false');\r\n\r\n  }\r\n\r\n  addHighRisk(data){\r\n    this.logicalFormInfo\r\n    .addRisk(data)\r\n    .subscribe((resData) => {\r\n      console.log('resData', resData);\r\n\r\n      this.dialogRef.close('highRisk');\r\n      Swal.fire({\r\n        title: 'Item  Added successfully',\r\n        showConfirmButton: false,\r\n        timer: 1200,\r\n      });     \r\n     });\r\n  }\r\n  addPPE(data){\r\n    this.logicalFormInfo\r\n    .addPPE(data)\r\n    .subscribe((resData) => {\r\n      console.log('resData', resData);\r\n\r\n      this.dialogRef.close('ppe');\r\n      Swal.fire({\r\n        title: 'Item  Added successfully',\r\n        showConfirmButton: false,\r\n        timer: 1200,\r\n      });     \r\n     });\r\n  }\r\n  addRiskLevel(data){\r\n    this.logicalFormInfo\r\n    .addRiskLevel(data)\r\n    .subscribe((resData) => {\r\n      console.log('resData', resData);\r\n\r\n      this.dialogRef.close('riskLevel');\r\n      Swal.fire({\r\n        title: 'Item  Added successfully',\r\n        showConfirmButton: false,\r\n        timer: 1200,\r\n      });     \r\n     });\r\n  }\r\n  addResidRiskLevel(data){\r\n    this.logicalFormInfo\r\n    .addResidual(data)\r\n    .subscribe((resData) => {\r\n      console.log('resData', resData);\r\n\r\n      this.dialogRef.close('resRiskLevel');\r\n      Swal.fire({\r\n        title: 'Item  Added successfully',\r\n        showConfirmButton: false,\r\n        timer: 1200,\r\n      });     \r\n     });\r\n  }\r\n  addHazard(data){\r\n    this.logicalFormInfo\r\n    .addHazards(data)\r\n    .subscribe((resData) => {\r\n      console.log('resData', resData);\r\n\r\n      this.dialogRef.close('identifyHazards');\r\n      Swal.fire({\r\n        title: 'Item  Added successfully',\r\n        showConfirmButton: false,\r\n        timer: 1200,\r\n      });     \r\n     });\r\n  }\r\n  addLicence(data){\r\n let dataTemp={\r\n    title:data.title,\r\n    tradeCategoryId:this.dataRec.tradeCategoryId\r\n  }\r\n    this.logicalFormInfo\r\n    .addLicence(dataTemp)\r\n    .subscribe((resData) => {\r\n      console.log('resData', resData);\r\n\r\n      this.dialogRef.close('licence');\r\n      Swal.fire({\r\n        title: 'Item  Added successfully',\r\n        showConfirmButton: false,\r\n        timer: 1200,\r\n      });     \r\n     });\r\n  }\r\n  addControlActReq(data){\r\n    this.logicalFormInfo\r\n    .addContrlActReq(data)\r\n    .subscribe((resData) => {\r\n      console.log('resData', resData);\r\n\r\n      this.dialogRef.close('ctrlActreq');\r\n      Swal.fire({\r\n        title: 'Item  Added successfully',\r\n        showConfirmButton: false,\r\n        timer: 1200,\r\n      });     \r\n     });\r\n  }\r\n  addStaff(data){\r\n    this.logicalFormInfo\r\n    .addStaff(data)\r\n    .subscribe((resData) => {\r\n      console.log('resData', resData);\r\n\r\n      this.dialogRef.close('perResbl');\r\n      Swal.fire({\r\n        title: 'Item  Added successfully',\r\n        showConfirmButton: false,\r\n        timer: 1200,\r\n      });     \r\n     });\r\n  }\r\n  addCOP(data){\r\n    this.logicalFormInfo\r\n    .addCode(data)\r\n    .subscribe((resData) => {\r\n      console.log('resData', resData);\r\n\r\n      this.dialogRef.close('codeOfPract');\r\n      Swal.fire({\r\n        title: 'Item  Added successfully',\r\n        showConfirmButton: false,\r\n        timer: 1200,\r\n      });     \r\n     });\r\n  }\r\n}\r\n","<form [formGroup]=\"addItem\" >\r\n    <h2 *ngIf=\"dataRec.type==='highRisk'\"> Add High Risk Construction parameter</h2>\r\n    <h2 *ngIf=\"dataRec.type==='ppe'\"> Add PPE</h2>\r\n    <h2 *ngIf=\"dataRec.type==='licence'\"> Add Licence </h2>\r\n    <h2 *ngIf=\"dataRec.type==='identifyHazards'\"> Add Identify Hazards </h2>\r\n    <h2 *ngIf=\"dataRec.type==='riskLevel'\"> Add Risk Level</h2>\r\n    <h2 *ngIf=\"dataRec.type==='ctrlActreq'\"> Add Control Action Required</h2>\r\n    <h2 *ngIf=\"dataRec.type==='resRiskLevel'\"> Add Residual Risk</h2>\r\n    <h2 *ngIf=\"dataRec.type==='perResbl'\"> Add Person Responsible </h2>\r\n    <h2 *ngIf=\"dataRec.type==='codeOfPract'\"> Add Code of Practice </h2>\r\n  \r\n    <textarea   autosize \r\n    class=\"form-control sign\" placeholder=\"Enter your text......\" formControlName=\"title\" ></textarea>\r\n  \r\n    <br>\r\n    \r\n    <div class=\"row\">\r\n        <div class=\"col-sm-2 offset-8 \">\r\n            <button mat-raised-button (click)=\"closeDialog()\">Close</button>\r\n        </div>\r\n        <div class=\"col-sm-2  \">\r\n            <button mat-raised-button  [disabled]=\"!addItem.valid\"(click)=\"onFormSubmit()\">Add</button>\r\n        </div>\r\n    </div>\r\n</form>   \r\n\r\n","import Swal from 'sweetalert2';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { CreateJobNoComponent } from './create-job-no/create-job-no.component';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { AddSiteComponent } from 'src/app/site-info/add-site-info/add-site/add-site.component';\r\nimport { EditSiteComponent } from 'src/app/site-info/add-site-info/edit-site/edit-site.component';\r\nimport { SetTitleService } from 'src/app/utils/services/set-title.service';\r\nimport { MatSort } from '@angular/material/sort';\r\n\r\n@Component({\r\n  selector: 'app-job-number',\r\n  templateUrl: './job-number.component.html',\r\n  styleUrls: ['./job-number.component.scss'],\r\n})\r\nexport class JobNumberComponent implements OnInit {\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  mode: any;\r\n  jobTaskData: any = [];\r\n  ELEMENT_DATA = [];\r\n  /////////////mat table////////////////\r\n  displayedColumns: string[] = [\r\n    'jobNumber',\r\n    'siteName',\r\n    'streetNumber',\r\n    'streetAddress',\r\n    'suburb',\r\n    'state',\r\n    'customerName',\r\n    'customerContact',\r\n    //'customerContactPhone',\r\n   // 'customerEmail',\r\n    /* 'edit', */\r\n    'action',\r\n  ];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n  /////////////mat table end////////////////\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private setTitle: SetTitleService,\r\n    private logicalFormInfoService: LogicalFormInfoService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.setTitle.setTitle('WHS-Add Site Info');\r\n    this.getAllJobNumber();\r\n  }\r\n  getAllJobNumber() {\r\n    this.logicalFormInfoService.getAllJobNumber().subscribe((res: any) => {\r\n      console.log(res);\r\n      this.dataSource = res.data;\r\n      console.log(\"getAllJobNumber\",this.dataSource);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    });\r\n  }\r\n\r\n  getAllJobTask() {\r\n    // this.logicalFormInfo.getAllJobtask().subscribe((res: any) => {\r\n    //   console.log('jobTaskDetails=>', res);\r\n    //   // this.jobTaskData = res.data[0].subComponents;\r\n    //   let data = res.data\r\n    //   data.forEach((element, index) => {\r\n    //     element.index = index + 1; //adding index\r\n    //   });\r\n    //   this.ELEMENT_DATA = data;\r\n    //   this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n    //   this.dataSource.paginator = this.paginator;\r\n    //   //  this.task = res.data.subComponents;\r\n    // });\r\n  }\r\n\r\n  openDialog(id) {\r\n    let dialogRef = this.dialog.open(CreateJobNoComponent, {\r\n      height: '80%',\r\n      data: {\r\n        action: 'new',\r\n        userId: id,\r\n      },\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      console.log('CustomerInfoComponent -> openDialog -> result', result);\r\n     console.log(\"result\",result);\r\n     if(result ===\"success\"){\r\n      this.getAllJobNumber();\r\n      Swal.fire({\r\n        title: 'Job Number created successfully',\r\n        showConfirmButton: false,\r\n        timer: 1200,\r\n      });\r\n     }\r\n      console.log('The dialog was closed');\r\n    });\r\n  }\r\n  edit(element) {\r\n    const dialogRef = this.dialog.open(EditSiteComponent, {\r\n      width: '550px',\r\n      data: element,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result == 'true') {\r\n        this.getAllJobTask();\r\n      }\r\n      console.log('The dialog was closed');\r\n    });\r\n  }\r\n  delete(item) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: `Do you want to delete \"${item.jobNumber}\"?`,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#00B96F',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Delete!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.logicalFormInfoService\r\n          .deleteJobNumber(item._id)\r\n          .subscribe((res) => {\r\n            Swal.fire({\r\n              title: 'Job Number Deleted successfully',\r\n              showConfirmButton: false,\r\n              timer: 1200,\r\n            });\r\n            console.log('deleted res', res);\r\n            this.getAllJobNumber();\r\n          });\r\n      }\r\n    });\r\n  }\r\n}\r\n","\r\n\r\n<h2>\r\n  Job Number List\r\n  <button (click)=\"openDialog('abcd')\" _ngcontent-hqi-c400=\"\" type=\"button\" class=\"btn btn-outline-primary mt-1 mr-2 float-right\"><i _ngcontent-hqi-c400=\"\" class=\"fas fa-plus\"></i> Create </button>\r\n\r\n</h2>\r\n<!-- <div class=\"col ml-2 mb-2\">\r\n  \r\n  <div class=\"col-sm-9\" style=\"display: flex; justify-content: flex-end\">\r\n    <button _ngcontent-tdm-c400=\"\" (click)=\"openDialog('id')\" type=\"button\" class=\"btn btn-outline-primary mt-1 mr-2 float-right\"><i _ngcontent-tdm-c400=\"\" class=\"fas fa-plus\"></i> Add Job Number </button>\r\n</div>\r\n</div> -->\r\n<div class=\"\">\r\n  <table mat-table [dataSource]=\"dataSource\" matSort>\r\n\r\n    <!-- Position Column -->\r\n    <ng-container matColumnDef=\"index\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> No. </th>\r\n      <td mat-cell *matCellDef=\"let element;let i = index\">{{i+1}}</td>\r\n    </ng-container>\r\n\r\n    <!-- Name Column -->\r\n   \r\n<!-- Name Column -->\r\n<ng-container matColumnDef=\"jobNumber\">\r\n  <th mat-header-cell *matHeaderCellDef > Job Number </th>\r\n  <td mat-cell *matCellDef=\"let element\"> {{element.jobNumber}} </td>\r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"siteName\">\r\n  <th mat-header-cell *matHeaderCellDef > Site Name </th>\r\n  <td mat-cell *matCellDef=\"let element\"> <span class=\"flex-start\">{{element.siteName}} </span></td>\r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"streetNumber\">\r\n  <th mat-header-cell *matHeaderCellDef > Street Number </th>\r\n  <td mat-cell *matCellDef=\"let element\"> {{element.streetNumber}} </td>\r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"streetAddress\">\r\n  <th mat-header-cell *matHeaderCellDef> Street Address </th>\r\n  <td mat-cell *matCellDef=\"let element\"><span class=\"flex-start\">{{element.streetAddress}}</span>  </td>\r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"suburb\">\r\n  <th mat-header-cell *matHeaderCellDef > Suburb </th>\r\n  <td mat-cell *matCellDef=\"let element\"> {{element.suburb}} </td>\r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"state\">\r\n  <th mat-header-cell *matHeaderCellDef> State </th>\r\n  <td mat-cell *matCellDef=\"let element\" > {{element.stateId?.title}} </td>\r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"customerName\">\r\n  <th mat-header-cell *matHeaderCellDef> Customer Name </th>\r\n  <td mat-cell *matCellDef=\"let element\"><span class=\"flex-start\"> {{element.customerName}}</span> </td>\r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"customerContact\">\r\n  <th mat-header-cell *matHeaderCellDef> Customer Contact </th>\r\n  <td mat-cell *matCellDef=\"let element\"><span class=\"flex-start\">{{element.customerContact}}</span>  </td>\r\n</ng-container>\r\n\r\n<!-- <ng-container matColumnDef=\"customerContactPhone\">\r\n  <th mat-header-cell *matHeaderCellDef> Customer Contact Phone </th>\r\n  <td mat-cell *matCellDef=\"let element\"> {{element.customerContactPhone}} </td>\r\n</ng-container> -->\r\n\r\n<!-- <ng-container matColumnDef=\"customerEmail\">\r\n  <th mat-header-cell *matHeaderCellDef> Customer Email </th>\r\n  <td mat-cell *matCellDef=\"let element\"> {{element.customerEmail}} </td>\r\n</ng-container> -->\r\n\r\n\r\n\r\n<ng-container matColumnDef=\"edit\">\r\n  <th mat-header-cell *matHeaderCellDef> Edit </th>\r\n  <td mat-cell *matCellDef=\"let element\"(click)=\"edit(element)\"> <i class=\"fas fa-pencil-alt \"></i> \r\n  </td>\r\n</ng-container>\r\n<ng-container matColumnDef=\"action\">\r\n  <th mat-header-cell *matHeaderCellDef> Action </th>\r\n  <td mat-cell *matCellDef=\"let element\"> \r\n    <!-- <i class=\"fas fa-trash \"></i> \r\n    <button mat-icon-button class=\"mr-2\" color=\"primary\" aria-label=\"Example icon button with a delete icon\">\r\n      <mat-icon (click)=\"edit(element)\">edit</mat-icon>\r\n    </button> -->\r\n    <button mat-icon-button aria-label=\"Example icon button with a delete icon\" (click)=\"delete(element)\">\r\n      <mat-icon >delete</mat-icon>\r\n    </button>\r\n  </td>\r\n</ng-container>\r\n\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n  </table>\r\n\r\n  <mat-paginator [pageSizeOptions]=\"[20]\"\r\n                 showFirstLastButtons \r\n                 aria-label=\"Select page of periodic elements\">\r\n  </mat-paginator>\r\n</div>\r\n"],"sourceRoot":"webpack:///"}