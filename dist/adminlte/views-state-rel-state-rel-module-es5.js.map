{"version":3,"sources":["webpack:///src/app/views/state-rel/regulator/regulator.component.ts","webpack:///src/app/views/state-rel/regulator/regulator.component.html","webpack:///src/app/views/state-rel/code-of-pract/add-and-edit-code/add-and-edit-code.component.ts","webpack:///src/app/views/state-rel/code-of-pract/add-and-edit-code/add-and-edit-code.component.html","webpack:///src/app/views/state-rel/state-rel-routing.module.ts","webpack:///src/app/views/state-rel/juridiction/add-and-edit-juri/add-and-edit-juri.component.ts","webpack:///src/app/views/state-rel/juridiction/add-and-edit-juri/add-and-edit-juri.component.html","webpack:///src/app/views/state-rel/juridiction/juridiction.component.ts","webpack:///src/app/views/state-rel/juridiction/juridiction.component.html","webpack:///src/app/views/state-rel/safety-legislation/add-and-edit-safety/add-and-edit-safety.component.ts","webpack:///src/app/views/state-rel/safety-legislation/add-and-edit-safety/add-and-edit-safety.component.html","webpack:///src/app/views/state-rel/state-rel.component.ts","webpack:///src/app/views/state-rel/state-rel.component.html","webpack:///src/app/views/state-rel/state-rel.module.ts","webpack:///src/app/views/state-rel/safety-legislation/safety-legislation.component.ts","webpack:///src/app/views/state-rel/safety-legislation/safety-legislation.component.html","webpack:///src/app/views/state-rel/code-of-pract/code-of-pract.component.ts","webpack:///src/app/views/state-rel/code-of-pract/code-of-pract.component.html","webpack:///src/app/views/state-rel/regulator/add-and-edit-reg/add-and-edit-reg.component.ts","webpack:///src/app/views/state-rel/regulator/add-and-edit-reg/add-and-edit-reg.component.html"],"names":["RegulatorComponent","logicalFormInfo","dialog","regData","ELEMENT_DATA","displayedColumns","dataSource","paginator","getAllRegulator","subscribe","res","console","log","data","forEach","element","index","dialogRef","open","width","afterClosed","result","item","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","value","deleteRegulator","_id","showConfirmButton","timer","edit","selector","templateUrl","styleUrls","AddAndEditCodeComponent","fb","dataRec","editTitle","group","required","get","componentId","updateCode","resData","close","addCode","closeDialog","routes","path","component","StateRelRoutingModule","forChild","imports","exports","AddAndEditJuriComponent","updateJurisdiction","addJurisdiction","JuridictionComponent","getAllJurisdiction","deleteJurisdiction","AddAndEditSafetyComponent","act","regulation","updateSafety","addSafety","StateRelComponent","StateRelModule","declarations","SafetyLegislationComponent","getAllSafetyReg","getAllSafety","deleteSafety","CodeOfPractComponent","getAllCode","deleteCode","AddAndEditRegComponent","updateRegulator","addRegulator"],"mappings":"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","file":"views-state-rel-state-rel-module-es5.js","sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport Swal from 'sweetalert2';\r\nimport { AddAndEditRegComponent } from './add-and-edit-reg/add-and-edit-reg.component';\r\n\r\n@Component({\r\n  selector: 'app-regulator',\r\n  templateUrl: './regulator.component.html',\r\n  styleUrls: ['./regulator.component.scss']\r\n})\r\nexport class RegulatorComponent implements OnInit {\r\n  mode: any;\r\n  regData: any = [];\r\n  ELEMENT_DATA = [];\r\n  /////////////mat table////////////////\r\n  displayedColumns: string[] = ['index', 'title' ,'action'];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n  /////////////mat table end////////////////\r\n\r\n  constructor(private logicalFormInfo: LogicalFormInfoService,private dialog:MatDialog) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getAllRegulator()\r\n  }\r\n\r\n  getAllRegulator() {\r\n    this.logicalFormInfo.getAllRegulator().subscribe((res) => {\r\n      console.log('getAllRegulator=>', res);\r\n      // this.jobTaskData = res.data[0].subComponents;\r\n      let data = res.data;\r\n      data.forEach((element, index) => {\r\n        element.index = index + 1; //adding index\r\n      });\r\n\r\n      this.ELEMENT_DATA = data;\r\n      this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n      this.dataSource.paginator = this.paginator;\r\n\r\n      //  this.task = res.data.subComponents;\r\n    });\r\n \r\n  }\r\n  \r\n  edit(element){\r\n    const dialogRef = this.dialog.open(AddAndEditRegComponent, {\r\n      width: \"550px\",\r\n      data: element,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if ((result == \"true\")) {\r\n        this.getAllRegulator();\r\n      }\r\n      console.log(\"The dialog was closed\");\r\n    });\r\n  }\r\n\r\n  delete(item) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: `Do you want to delete \"${item.title}\"?`,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#00B96F',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Delete!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.logicalFormInfo\r\n        .deleteRegulator(item._id)\r\n        .subscribe((res) => {\r\n          Swal.fire({\r\n            title: 'Regulator Deleted successfully',\r\n            showConfirmButton: false,\r\n            timer: 1200,\r\n          });\r\n          console.log('deleted res', res);\r\n          this.getAllRegulator();\r\n            \r\n        });\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"col ml-2 pt-1\">\r\n    <h1> Regulator List</h1>\r\n    </div>\r\n    <div class=\"col ml-2 mb-2\">\r\n      \r\n      <button  class=\"btn btn-outline-primary mt-1 mr-2 float-right\" (click)=\"edit('')\">\r\n        <i class=\"fas fa-folder-plus mr-2\"></i>Add Regulator \r\n      </button>\r\n    </div>\r\n    <div class=\"\">\r\n      <table mat-table [dataSource]=\"dataSource\">\r\n    \r\n        <!-- Position Column -->\r\n        <ng-container matColumnDef=\"index\">\r\n          <th mat-header-cell *matHeaderCellDef> No. </th>\r\n          <td mat-cell *matCellDef=\"let element\">{{element.index}}</td>\r\n        </ng-container>\r\n    \r\n        <!-- Name Column -->\r\n       \r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"title\">\r\n      <th mat-header-cell *matHeaderCellDef> Name </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.title}} </td>\r\n    </ng-container>\r\n    \r\n    <ng-container matColumnDef=\"action\">\r\n      <th mat-header-cell *matHeaderCellDef> Action </th>\r\n      <td mat-cell *matCellDef=\"let element\">  <i class=\"fas fa-pencil-alt mr-2\" (click)=\"edit(element)\" title=\"edit\"></i>  <i  class=\"fas fa-trash ml-2 \" (click)=\"delete(element)\" title=\"delete\"></i>\r\n      </td>\r\n    </ng-container>\r\n    \r\n    \r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n      </table>\r\n    \r\n      <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\"\r\n                     showFirstLastButtons \r\n                     aria-label=\"Select page of periodic elements\">\r\n      </mat-paginator>\r\n    </div>\r\n    ","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-add-and-edit-code',\r\n  templateUrl: './add-and-edit-code.component.html',\r\n  styleUrls: ['./add-and-edit-code.component.scss']\r\n})\r\nexport class AddAndEditCodeComponent implements OnInit {\r\n  editTitle: FormGroup;\r\n  dataRec: any;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    public dialogRef: MatDialogRef<AddAndEditCodeComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.dataRec = data;\r\n  }\r\n  ngOnInit(): void {\r\n    this.editTitle = this.fb.group({\r\n      title: [this.dataRec.title, Validators.required],\r\n    });\r\n  }\r\n\r\n  onFormSubmit() {\r\n    let data = {\r\n      title: this.editTitle.get('title').value,\r\n      componentId: this.dataRec.componentId,\r\n    };\r\n    this.logicalFormInfo\r\n      .updateCode(data, this.dataRec._id)\r\n      .subscribe((resData) => {\r\n        console.log('updateCOP', resData);\r\n\r\n        this.dialogRef.close('true');\r\n        Swal.fire({\r\n          title: 'COP Edited successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });\r\n      });\r\n  }\r\n  addForm() {\r\n    let data = {\r\n      title: this.editTitle.get('title').value,\r\n    };\r\n    this.logicalFormInfo.addCode(data).subscribe((resData) => {\r\n      console.log('addCOP', resData);\r\n\r\n      this.dialogRef.close('true');\r\n      if (this.dataRec) {\r\n        Swal.fire({\r\n          title: 'COP Edited successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });\r\n      } else {\r\n        Swal.fire({\r\n          title: 'COP Added successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });\r\n      }\r\n    });\r\n  }\r\n  closeDialog() {\r\n    this.dialogRef.close('false');\r\n  }\r\n\r\n\r\n}\r\n","<form [formGroup]=\"editTitle\" >\r\n    <h3 *ngIf=\"!dataRec\">Add Code Of Practice</h3>\r\n    <h3 *ngIf=\"dataRec\">Edit Code Of Practice</h3>\r\n    <mat-form-field appearance=\"legacy\"\r\n    class=\"example-full-width\" style=\"width: 498px;\">\r\n   \r\n    <input matInput  formControlName=\"title\" style=\"text-transform: capitalize !important;\">\r\n    </mat-form-field>\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-2 offset-8 \">\r\n            <button mat-raised-button (click)=\"closeDialog()\">Close</button>\r\n        </div>\r\n        <div class=\"col-sm-2  \">\r\n            <button mat-raised-button *ngIf=\"dataRec\" [disabled]=\"!editTitle.valid\"(click)=\"onFormSubmit()\">Update</button>\r\n            <button mat-raised-button  *ngIf=\"!dataRec\"  [disabled]=\"!editTitle.valid\"(click)=\"addForm()\">Add</button>\r\n        </div>\r\n    </div>\r\n</form>","import { RegulatorComponent } from './regulator/regulator.component';\r\nimport { SafetyLegislationComponent } from './safety-legislation/safety-legislation.component';\r\nimport { JuridictionComponent } from './juridiction/juridiction.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { StateRelComponent } from './state-rel.component';\r\nimport { CodeOfPractComponent } from './code-of-pract/code-of-pract.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: StateRelComponent },\r\n  { path: 'juridiction', component: JuridictionComponent },\r\n  { path: 'safetyLegislation', component: SafetyLegislationComponent },\r\n  { path: 'codeOfPract', component: CodeOfPractComponent },\r\n  { path: 'regulator', component: RegulatorComponent },\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class StateRelRoutingModule { }\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-add-and-edit-juri',\r\n  templateUrl: './add-and-edit-juri.component.html',\r\n  styleUrls: ['./add-and-edit-juri.component.scss']\r\n})\r\nexport class AddAndEditJuriComponent implements OnInit {\r\n  editTitle: FormGroup;\r\n  dataRec: any;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    public dialogRef: MatDialogRef<AddAndEditJuriComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.dataRec = data;\r\n  }\r\n  ngOnInit(): void {\r\n    this.editTitle = this.fb.group({\r\n      title: [this.dataRec.title, Validators.required],\r\n    });\r\n  }\r\n\r\n  onFormSubmit() {\r\n    let data = {\r\n      title: this.editTitle.get('title').value,\r\n      componentId: this.dataRec.componentId,\r\n    };\r\n    this.logicalFormInfo\r\n      .updateJurisdiction(data, this.dataRec._id)\r\n      .subscribe((resData) => {\r\n        console.log('addJurisdiction', resData);\r\n\r\n        this.dialogRef.close('true');\r\n        Swal.fire({\r\n          title: 'Jurisdiction Edited successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });\r\n      });\r\n  }\r\n  addForm() {\r\n    let data = {\r\n      title: this.editTitle.get('title').value,\r\n    };\r\n    this.logicalFormInfo.addJurisdiction(data).subscribe((resData) => {\r\n      console.log('addRegulator', resData);\r\n\r\n      this.dialogRef.close('true');\r\n      if (this.dataRec) {\r\n        Swal.fire({\r\n          title: 'Jurisdiction Edited successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });\r\n      } else {\r\n        Swal.fire({\r\n          title: 'Jurisdiction Added successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });\r\n      }\r\n    });\r\n  }\r\n  closeDialog() {\r\n    this.dialogRef.close('false');\r\n  }\r\n\r\n\r\n}\r\n","<form [formGroup]=\"editTitle\" >\r\n    <h3 *ngIf=\"!dataRec\">Add Jurisdiction</h3>\r\n    <h3 *ngIf=\"dataRec\">Edit Jurisdiction</h3>\r\n    <mat-form-field appearance=\"legacy\"\r\n    class=\"example-full-width\" style=\"width: 498px;\">\r\n    <!-- <mat-label >Add Regulator</mat-label> -->\r\n    <!-- <mat-label >Edit Regulator</mat-label> -->\r\n    <input matInput  formControlName=\"title\" style=\"text-transform: capitalize !important;\">\r\n    </mat-form-field>\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-2 offset-8 \">\r\n            <button mat-raised-button (click)=\"closeDialog()\">Close</button>\r\n        </div>\r\n        <div class=\"col-sm-2  \">\r\n            <button mat-raised-button *ngIf=\"dataRec\" [disabled]=\"!editTitle.valid\"(click)=\"onFormSubmit()\">Update</button>\r\n            <button mat-raised-button  *ngIf=\"!dataRec\"  [disabled]=\"!editTitle.valid\"(click)=\"addForm()\">Add</button>\r\n        </div>\r\n    </div>\r\n</form>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport Swal from 'sweetalert2';\r\nimport { AddAndEditJuriComponent } from './add-and-edit-juri/add-and-edit-juri.component';\r\n\r\n@Component({\r\n  selector: 'app-juridiction',\r\n  templateUrl: './juridiction.component.html',\r\n  styleUrls: ['./juridiction.component.scss']\r\n})\r\nexport class JuridictionComponent implements OnInit {\r\n  mode: any;\r\n  regData: any = [];\r\n  ELEMENT_DATA = [];\r\n  /////////////mat table////////////////\r\n  displayedColumns: string[] = ['index', 'title' ,'action'];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n  /////////////mat table end////////////////\r\n\r\n  constructor(private logicalFormInfo: LogicalFormInfoService,private dialog:MatDialog) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getAllJurisdiction();\r\n  }\r\n\r\n  getAllJurisdiction() {\r\n    this.logicalFormInfo.getAllJurisdiction().subscribe((res) => {\r\n      console.log('getAllJurisdiction=>', res);\r\n      // this.jobTaskData = res.data[0].subComponents;\r\n      let data = res.data;\r\n      data.forEach((element, index) => {\r\n        element.index = index + 1; //adding index\r\n      });\r\n\r\n      this.ELEMENT_DATA = data;\r\n      this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n      this.dataSource.paginator = this.paginator;\r\n\r\n      //  this.task = res.data.subComponents;\r\n    });\r\n \r\n  }\r\n  \r\n  edit(element){\r\n    const dialogRef = this.dialog.open(AddAndEditJuriComponent, {\r\n      width: \"550px\",\r\n      data: element,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if ((result == \"true\")) {\r\n        this.getAllJurisdiction();\r\n      }\r\n      console.log(\"The dialog was closed\");\r\n    });\r\n  }\r\n\r\n  delete(item) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: `Do you want to delete \"${item.title}\"?`,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#00B96F',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Delete!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.logicalFormInfo\r\n        .deleteJurisdiction(item._id)\r\n        .subscribe((res) => {\r\n          Swal.fire({\r\n            title: 'Jurisdiction Deleted successfully',\r\n            showConfirmButton: false,\r\n            timer: 1200,\r\n          });\r\n          console.log('deleted res', res);\r\n          this.getAllJurisdiction();\r\n            \r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"col ml-2 pt-1\">\r\n    <h1> Jurisdiction List</h1>\r\n    </div>\r\n    <div class=\"col ml-2 mb-2\">\r\n      \r\n      <button  class=\"btn btn-outline-primary mt-1 mr-2 float-right\" (click)=\"edit('')\">\r\n        <i class=\"fas fa-folder-plus mr-2\"></i>Add Jurisdiction \r\n      </button>\r\n    </div>\r\n    <div class=\"\">\r\n      <table mat-table [dataSource]=\"dataSource\">\r\n    \r\n        <!-- Position Column -->\r\n        <ng-container matColumnDef=\"index\">\r\n          <th mat-header-cell *matHeaderCellDef> No. </th>\r\n          <td mat-cell *matCellDef=\"let element\">{{element.index}}</td>\r\n        </ng-container>\r\n    \r\n        <!-- Name Column -->\r\n       \r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"title\">\r\n      <th mat-header-cell *matHeaderCellDef> Name </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.title}} </td>\r\n    </ng-container>\r\n    \r\n    <ng-container matColumnDef=\"action\">\r\n      <th mat-header-cell *matHeaderCellDef> Action </th>\r\n      <td mat-cell *matCellDef=\"let element\">  <i class=\"fas fa-pencil-alt mr-2\" (click)=\"edit(element)\" title=\"edit\"></i>  <i  class=\"fas fa-trash ml-2 \" (click)=\"delete(element)\" title=\"delete\"></i>\r\n      </td>\r\n    </ng-container>\r\n    \r\n    \r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n      </table>\r\n    \r\n      <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\"\r\n                     showFirstLastButtons \r\n                     aria-label=\"Select page of periodic elements\">\r\n      </mat-paginator>\r\n    </div>\r\n    ","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-add-and-edit-safety',\r\n  templateUrl: './add-and-edit-safety.component.html',\r\n  styleUrls: ['./add-and-edit-safety.component.scss']\r\n})\r\nexport class AddAndEditSafetyComponent implements OnInit {\r\n  editTitle: FormGroup;\r\n  dataRec: any;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    public dialogRef: MatDialogRef<AddAndEditSafetyComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.dataRec = data;\r\n  }\r\n  ngOnInit(): void {\r\n    this.editTitle = this.fb.group({\r\n      act: [this.dataRec.act, Validators.required],\r\n      regulation: [this.dataRec.regulation, Validators.required],\r\n    });\r\n  }\r\n\r\n  \r\n  onFormSubmit() {\r\n    let data = {\r\n      act: this.editTitle.get('act').value,\r\n      regulation: this.editTitle.get('regulation').value,\r\n      componentId: this.dataRec.componentId,\r\n    };\r\n    this.logicalFormInfo\r\n      .updateSafety(data, this.dataRec._id)\r\n      .subscribe((resData) => {\r\n        console.log('SafetyLegislation', resData);\r\n\r\n        this.dialogRef.close('true');\r\n        Swal.fire({\r\n          title: 'Safety Legislation Edited successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });\r\n      });\r\n  }\r\n  addForm() {\r\n    let data = {\r\n      act: this.editTitle.get('act').value,\r\n      regulation: this.editTitle.get('regulation').value,\r\n    };\r\n    this.logicalFormInfo.addSafety(data).subscribe((resData) => {\r\n      console.log('SafetyLegislation', resData);\r\n\r\n      this.dialogRef.close('true');\r\n      if (this.dataRec) {\r\n        Swal.fire({\r\n          title: 'Safety Legislation Edited successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });\r\n      } else {\r\n        Swal.fire({\r\n          title: 'Safety Legislation Added successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });\r\n      }\r\n    });\r\n  }\r\n  closeDialog() {\r\n    this.dialogRef.close('false');\r\n  }\r\n\r\n}\r\n","\r\n<form [formGroup]=\"editTitle\" >\r\n    <h3 *ngIf=\"!dataRec\">Add Safety Legislation</h3>\r\n    <h3 *ngIf=\"dataRec\">Edit Safety Legislation</h3>\r\n    <mat-form-field appearance=\"legacy\"\r\n    class=\"example-full-width\" style=\"width: 498px;\">\r\n    <!-- <mat-label >Add Regulator</mat-label> -->\r\n    <!-- <mat-label >Edit Regulator</mat-label> -->\r\n    <input matInput  placeholder=\"Act\" formControlName=\"act\" style=\"text-transform: capitalize !important;\">\r\n    </mat-form-field>\r\n    <mat-form-field appearance=\"legacy\"\r\n    class=\"example-full-width\" style=\"width: 498px;\">\r\n    <!-- <mat-label >Add Regulator</mat-label> -->\r\n    <!-- <mat-label >Edit Regulator</mat-label> -->\r\n    <input matInput  placeholder=\"Regulation\"  formControlName=\"regulation\" style=\"text-transform: capitalize !important;\">\r\n    </mat-form-field>\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-2 offset-8 \">\r\n            <button mat-raised-button (click)=\"closeDialog()\">Close</button>\r\n        </div>\r\n        <div class=\"col-sm-2  \">\r\n            <button mat-raised-button *ngIf=\"dataRec\" [disabled]=\"!editTitle.valid\"(click)=\"onFormSubmit()\">Update</button>\r\n            <button mat-raised-button  *ngIf=\"!dataRec\"  [disabled]=\"!editTitle.valid\"(click)=\"addForm()\">Add</button>\r\n        </div>\r\n    </div>\r\n</form>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-state-rel',\r\n  templateUrl: './state-rel.component.html',\r\n  styleUrls: ['./state-rel.component.scss']\r\n})\r\nexport class StateRelComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { StateRelRoutingModule } from './state-rel-routing.module';\r\nimport { StateRelComponent } from './state-rel.component';\r\nimport { JuridictionComponent } from './juridiction/juridiction.component';\r\nimport { SafetyLegislationComponent } from './safety-legislation/safety-legislation.component';\r\nimport { RegulatorComponent } from './regulator/regulator.component';\r\nimport { CodeOfPractComponent } from './code-of-pract/code-of-pract.component';\r\nimport { AddAndEditRegComponent } from './regulator/add-and-edit-reg/add-and-edit-reg.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { AddAndEditJuriComponent } from './juridiction/add-and-edit-juri/add-and-edit-juri.component';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { AddAndEditCodeComponent } from './code-of-pract/add-and-edit-code/add-and-edit-code.component';\r\nimport { AddAndEditSafetyComponent } from './safety-legislation/add-and-edit-safety/add-and-edit-safety.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [StateRelComponent, JuridictionComponent, SafetyLegislationComponent, RegulatorComponent, CodeOfPractComponent, AddAndEditRegComponent, AddAndEditJuriComponent, AddAndEditCodeComponent, AddAndEditSafetyComponent],\r\n  imports: [\r\n    CommonModule,\r\n    StateRelRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatPaginatorModule,\r\n    MatTableModule,\r\n    MatFormFieldModule,\r\n    SharedModule\r\n  ]\r\n})\r\nexport class StateRelModule { }\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport Swal from 'sweetalert2';\r\nimport { AddAndEditSafetyComponent } from './add-and-edit-safety/add-and-edit-safety.component';\r\n\r\n@Component({\r\n  selector: 'app-safety-legislation',\r\n  templateUrl: './safety-legislation.component.html',\r\n  styleUrls: ['./safety-legislation.component.scss']\r\n})\r\nexport class SafetyLegislationComponent implements OnInit {\r\n  mode: any;\r\n  regData: any = [];\r\n  ELEMENT_DATA = [];\r\n  /////////////mat table////////////////\r\n  displayedColumns: string[] = ['index', 'act', 'regulation' ,'action'];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n  /////////////mat table end////////////////\r\n\r\n  constructor(private logicalFormInfo: LogicalFormInfoService,private dialog:MatDialog) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getAllSafetyReg()\r\n  }\r\n\r\n  getAllSafetyReg() {\r\n    this.logicalFormInfo.getAllSafety().subscribe((res) => {\r\n      console.log('getAllRegulator=>', res);\r\n      // this.jobTaskData = res.data[0].subComponents;\r\n      let data = res.data;\r\n      data.forEach((element, index) => {\r\n        element.index = index + 1; //adding index\r\n      });\r\n\r\n      this.ELEMENT_DATA = data;\r\n      this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n      this.dataSource.paginator = this.paginator;\r\n\r\n      //  this.task = res.data.subComponents;\r\n    });\r\n \r\n  }\r\n  \r\n  edit(element){\r\n    const dialogRef = this.dialog.open(AddAndEditSafetyComponent, {\r\n      width: \"550px\",\r\n      data: element,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if ((result == \"true\")) {\r\n        this.getAllSafetyReg();\r\n      }\r\n      console.log(\"The dialog was closed\");\r\n    });\r\n  }\r\n\r\n  delete(item) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: `Do you want to delete \"${item.act}\"?`,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#00B96F',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Delete!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.logicalFormInfo\r\n        .deleteSafety(item._id)\r\n        .subscribe((res) => {\r\n          Swal.fire({\r\n            title: 'Safety Legislation Deleted successfully',\r\n            showConfirmButton: false,\r\n            timer: 1200,\r\n          });\r\n          console.log('deleted res', res);\r\n          this.getAllSafetyReg();\r\n            \r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"col ml-2 pt-1\">\r\n    <h1> Safety Legislation List</h1>\r\n    </div>\r\n    <div class=\"col ml-2 mb-2\">\r\n      \r\n      <button  class=\"btn btn-outline-primary mt-1 mr-2 float-right\" (click)=\"edit('')\">\r\n        <i class=\"fas fa-folder-plus mr-2\"></i>Add Regulator \r\n      </button>\r\n    </div>\r\n    <div class=\"\">\r\n      <table mat-table [dataSource]=\"dataSource\">\r\n    \r\n        <!-- Position Column -->\r\n        <ng-container matColumnDef=\"index\">\r\n          <th mat-header-cell *matHeaderCellDef> No. </th>\r\n          <td mat-cell *matCellDef=\"let element\">{{element.index}}</td>\r\n        </ng-container>\r\n    \r\n        <!-- Name Column -->\r\n       \r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"act\">\r\n      <th mat-header-cell *matHeaderCellDef> Act </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.act}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"regulation\">\r\n        <th mat-header-cell *matHeaderCellDef> Regulation </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.regulation}} </td>\r\n      </ng-container>\r\n    \r\n      <ng-container matColumnDef=\"action\">\r\n        <th mat-header-cell *matHeaderCellDef> Action </th>\r\n        <td mat-cell *matCellDef=\"let element\">  <i class=\"fas fa-pencil-alt mr-2\" (click)=\"edit(element)\" title=\"edit\"></i>  <i  class=\"fas fa-trash ml-2 \" (click)=\"delete(element)\" title=\"delete\"></i>\r\n        </td>\r\n      </ng-container>\r\n    \r\n    \r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n      </table>\r\n    \r\n      <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\"\r\n                     showFirstLastButtons \r\n                     aria-label=\"Select page of periodic elements\">\r\n      </mat-paginator>\r\n    </div>\r\n    ","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport Swal from 'sweetalert2';\r\nimport { AddAndEditCodeComponent } from './add-and-edit-code/add-and-edit-code.component';\r\n\r\n@Component({\r\n  selector: 'app-code-of-pract',\r\n  templateUrl: './code-of-pract.component.html',\r\n  styleUrls: ['./code-of-pract.component.scss']\r\n})\r\nexport class CodeOfPractComponent implements OnInit {\r\n  mode: any;\r\n  regData: any = [];\r\n  ELEMENT_DATA = [];\r\n  /////////////mat table////////////////\r\n  displayedColumns: string[] = ['index', 'title' ,'action'];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n  /////////////mat table end////////////////\r\n\r\n  constructor(private logicalFormInfo: LogicalFormInfoService,private dialog:MatDialog) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getAllCode();\r\n  }\r\n\r\n  getAllCode() {\r\n    this.logicalFormInfo.getAllCode().subscribe((res) => {\r\n      console.log('getAllCode=>', res);\r\n      // this.jobTaskData = res.data[0].subComponents;\r\n      let data = res.data;\r\n      data.forEach((element, index) => {\r\n        element.index = index + 1; //adding index\r\n      });\r\n\r\n      this.ELEMENT_DATA = data;\r\n      this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n      this.dataSource.paginator = this.paginator;\r\n\r\n      //  this.task = res.data.subComponents;\r\n    });\r\n \r\n  }\r\n  \r\n  edit(element){\r\n    const dialogRef = this.dialog.open(AddAndEditCodeComponent, {\r\n      width: \"550px\",\r\n      data: element,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if ((result == \"true\")) {\r\n        this.getAllCode();\r\n      }\r\n      console.log(\"The dialog was closed\");\r\n    });\r\n  }\r\n\r\n  delete(item) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: `Do you want to delete \"${item.title}\"?`,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#00B96F',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Delete!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.logicalFormInfo\r\n        .deleteCode(item._id)\r\n        .subscribe((res) => {\r\n          Swal.fire({\r\n            title: 'COP Deleted successfully',\r\n            showConfirmButton: false,\r\n            timer: 1200,\r\n          });\r\n          console.log('deleted res', res);\r\n          this.getAllCode();\r\n            \r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"col ml-2 pt-1\">\r\n    <h1> Code Of Practice List</h1>\r\n    </div>\r\n    <div class=\"col ml-2 mb-2\">\r\n      \r\n      <button  class=\"btn btn-outline-primary mt-1 mr-2 float-right\" (click)=\"edit('')\">\r\n        <i class=\"fas fa-folder-plus mr-2\"></i>Add Code Of Practice \r\n      </button>\r\n    </div>\r\n    <div class=\"\">\r\n      <table mat-table [dataSource]=\"dataSource\">\r\n    \r\n        <!-- Position Column -->\r\n        <ng-container matColumnDef=\"index\">\r\n          <th mat-header-cell *matHeaderCellDef> No. </th>\r\n          <td mat-cell *matCellDef=\"let element\">{{element.index}}</td>\r\n        </ng-container>\r\n    \r\n        <!-- Name Column -->\r\n       \r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"title\">\r\n      <th mat-header-cell *matHeaderCellDef> Name </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.title}} </td>\r\n    </ng-container>\r\n    \r\n    <ng-container matColumnDef=\"action\">\r\n      <th mat-header-cell *matHeaderCellDef> Action </th>\r\n      <td mat-cell *matCellDef=\"let element\">  <i class=\"fas fa-pencil-alt mr-2\" (click)=\"edit(element)\" title=\"edit\"></i>  <i  class=\"fas fa-trash ml-2 \" (click)=\"delete(element)\" title=\"delete\"></i>\r\n      </td>\r\n    </ng-container>\r\n   \r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n      </table>\r\n    \r\n      <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\"\r\n                     showFirstLastButtons \r\n                     aria-label=\"Select page of periodic elements\">\r\n      </mat-paginator>\r\n    </div>\r\n    ","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-add-and-edit-reg',\r\n  templateUrl: './add-and-edit-reg.component.html',\r\n  styleUrls: ['./add-and-edit-reg.component.scss']\r\n})\r\nexport class AddAndEditRegComponent implements OnInit {\r\n  editTitle: FormGroup;\r\n  dataRec: any;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    public dialogRef: MatDialogRef<AddAndEditRegComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.dataRec = data;\r\n  }\r\n  ngOnInit(): void {\r\n    this.editTitle = this.fb.group({\r\n      title: [this.dataRec.title, Validators.required],\r\n    });\r\n  }\r\n\r\n  onFormSubmit() {\r\n    let data = {\r\n      title: this.editTitle.get('title').value,\r\n      componentId: this.dataRec.componentId,\r\n    };\r\n    this.logicalFormInfo\r\n      .updateRegulator(data, this.dataRec._id)\r\n      .subscribe((resData) => {\r\n        console.log('updateRegulator', resData);\r\n\r\n        this.dialogRef.close('true');\r\n        Swal.fire({\r\n          title: 'Regulator Edited successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });\r\n      });\r\n  }\r\n  addForm() {\r\n    let data = {\r\n      title: this.editTitle.get('title').value,\r\n    };\r\n    this.logicalFormInfo.addRegulator(data).subscribe((resData) => {\r\n      console.log('addRegulator', resData);\r\n\r\n      this.dialogRef.close('true');\r\n      if (this.dataRec) {\r\n        Swal.fire({\r\n          title: 'Regulator Edited successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });\r\n      } else {\r\n        Swal.fire({\r\n          title: 'Regulator Added successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });\r\n      }\r\n    });\r\n  }\r\n  closeDialog() {\r\n    this.dialogRef.close('false');\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"editTitle\" >\r\n    <h3 *ngIf=\"!dataRec\">Add Regulator</h3>\r\n    <h3 *ngIf=\"dataRec\">Edit Regulator</h3>\r\n    <mat-form-field appearance=\"legacy\"\r\n    class=\"example-full-width\" style=\"width: 498px;\">\r\n    <!-- <mat-label >Add Regulator</mat-label> -->\r\n    <!-- <mat-label >Edit Regulator</mat-label> -->\r\n    <input matInput  formControlName=\"title\" style=\"text-transform: capitalize !important;\">\r\n    </mat-form-field>\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-2 offset-8 \">\r\n            <button mat-raised-button (click)=\"closeDialog()\">Close</button>\r\n        </div>\r\n        <div class=\"col-sm-2  \">\r\n            <button mat-raised-button *ngIf=\"dataRec\" [disabled]=\"!editTitle.valid\"(click)=\"onFormSubmit()\">Update</button>\r\n            <button mat-raised-button  *ngIf=\"!dataRec\"  [disabled]=\"!editTitle.valid\"(click)=\"addForm()\">Add</button>\r\n        </div>\r\n    </div>\r\n</form>"]}