{"version":3,"sources":["webpack:///src/app/views/state-rel/states/states.component.ts","webpack:///src/app/views/state-rel/states/states.component.html","webpack:///src/app/views/state-rel/regulator/regulator.component.ts","webpack:///src/app/views/state-rel/regulator/regulator.component.html","webpack:///src/app/views/state-rel/code-of-pract/add-and-edit-code/add-and-edit-code.component.ts","webpack:///src/app/views/state-rel/code-of-pract/add-and-edit-code/add-and-edit-code.component.html","webpack:///src/app/views/state-rel/states/add-and-edit-states/add-and-edit-states.component.ts","webpack:///src/app/views/state-rel/states/add-and-edit-states/add-and-edit-states.component.html","webpack:///src/app/views/state-rel/state-rel-routing.module.ts","webpack:///src/app/views/state-rel/juridiction/add-and-edit-juri/add-and-edit-juri.component.ts","webpack:///src/app/views/state-rel/juridiction/add-and-edit-juri/add-and-edit-juri.component.html","webpack:///src/app/views/state-rel/juridiction/juridiction.component.ts","webpack:///src/app/views/state-rel/juridiction/juridiction.component.html","webpack:///src/app/views/state-rel/safety-legislation/add-and-edit-safety/add-and-edit-safety.component.ts","webpack:///src/app/views/state-rel/safety-legislation/add-and-edit-safety/add-and-edit-safety.component.html","webpack:///src/app/views/state-rel/set-state-relation/set-state-relation.component.ts","webpack:///src/app/views/state-rel/set-state-relation/set-state-relation.component.html","webpack:///src/app/views/state-rel/state-rel.component.ts","webpack:///src/app/views/state-rel/state-rel.component.html","webpack:///src/app/views/state-rel/state-rel.module.ts","webpack:///src/app/views/state-rel/safety-legislation/safety-legislation.component.ts","webpack:///src/app/views/state-rel/safety-legislation/safety-legislation.component.html","webpack:///src/app/views/state-rel/code-of-pract/code-of-pract.component.ts","webpack:///src/app/views/state-rel/code-of-pract/code-of-pract.component.html","webpack:///src/app/views/state-rel/regulator/add-and-edit-reg/add-and-edit-reg.component.ts","webpack:///src/app/views/state-rel/regulator/add-and-edit-reg/add-and-edit-reg.component.html","webpack:///src/app/views/state-rel/set-state-relation/add-state-relation/add-state-relation.component.ts","webpack:///src/app/views/state-rel/set-state-relation/add-state-relation/add-state-relation.component.html"],"names":["StatesComponent","logicalFormInfo","dialog","regData","ELEMENT_DATA","displayedColumns","dataSource","paginator","getAllStates","subscribe","res","console","log","data","forEach","element","index","dialogRef","open","width","afterClosed","result","item","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","value","deleteStates","_id","showConfirmButton","timer","edit","selector","templateUrl","styleUrls","RegulatorComponent","getAllRegulator","deleteRegulator","AddAndEditCodeComponent","fb","dataRec","editTitle","group","required","get","componentId","updateCode","resData","close","addCode","closeDialog","AddAndEditStatesComponent","updateStates","addStates","routes","path","component","StateRelRoutingModule","forChild","imports","exports","AddAndEditJuriComponent","updateJurisdiction","addJurisdiction","JuridictionComponent","getAllJurisdiction","deleteJurisdiction","AddAndEditSafetyComponent","act","regulation","updateSafety","addSafety","SetStateRelationComponent","setTitle","router","StatesData","Jurisdiction","COP","SafetyData","regulator","setStatesDetail","jurisdiction","array","safe","getStates","jurisdictionFA","push","jurisdictionFG","COP_FA","COP_FG","safetyFA","safetyFG","regulatorFA","regulatorFG","jurisdictionkArr","ppeArr","licenceArr","contrActReqArr","sort","a","b","localeCompare","getAllSafety","getAllCode","id","navigate","queryParams","i","risk","ppe","licence","identifyHazard","controlActionRequired","controls","safety","set","Risk","StateRelComponent","StateRelModule","declarations","SafetyLegislationComponent","getAllSafetyReg","deleteSafety","CodeOfPractComponent","deleteCode","AddAndEditRegComponent","updateRegulator","addRegulator","AddStateRelationComponent","route","states","stateId","isLinear","SetState","jurisdictionId","safetyLegislationId","regulatorId","getstatesById","patchValue","getAllSafe","regulatorData","JurisdictionData"],"mappings":"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","file":"views-state-rel-state-rel-module-es5.js","sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport Swal from 'sweetalert2';\r\nimport { AddAndEditStatesComponent } from './add-and-edit-states/add-and-edit-states.component';\r\n\r\n@Component({\r\n  selector: 'app-states',\r\n  templateUrl: './states.component.html',\r\n  styleUrls: ['./states.component.scss']\r\n})\r\nexport class StatesComponent implements OnInit {\r\n  mode: any;\r\n  regData: any = [];\r\n  ELEMENT_DATA = [];\r\n  /////////////mat table////////////////\r\n  displayedColumns: string[] = ['index', 'title', 'action'];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n  /////////////mat table end////////////////\r\n\r\n  constructor(private logicalFormInfo: LogicalFormInfoService,private dialog:MatDialog) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getAllStates()\r\n  }\r\n\r\n  getAllStates() {\r\n    this.logicalFormInfo.getAllStates().subscribe((res) => {\r\n      console.log('getAllStates=>', res);\r\n      // this.jobTaskData = res.data[0].subComponents;\r\n      let data = res.data;\r\n      data.forEach((element, index) => {\r\n        element.index = index + 1; //adding index\r\n      });\r\n\r\n      this.ELEMENT_DATA = data;\r\n      this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n      this.dataSource.paginator = this.paginator;\r\n\r\n      //  this.task = res.data.subComponents;\r\n    });\r\n \r\n  }\r\n  \r\n  edit(element){\r\n    const dialogRef = this.dialog.open(AddAndEditStatesComponent, {\r\n      width: \"550px\",\r\n      data: element,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if ((result == \"true\")) {\r\n        this.getAllStates();\r\n      }\r\n      console.log(\"The dialog was closed\");\r\n    });\r\n  }\r\n\r\n  delete(item) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: `Do you want to delete \"${item.title}\"?`,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#00B96F',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Delete!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.logicalFormInfo\r\n        .deleteStates(item._id)\r\n        .subscribe((res) => {\r\n          Swal.fire({\r\n            title: 'States Deleted successfully',\r\n            showConfirmButton: false,\r\n            timer: 1200,\r\n          });\r\n          console.log('deleted res', res);\r\n          this.getAllStates();\r\n            \r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"col ml-2 pt-1\">\r\n    <h1> States List</h1>\r\n    </div>\r\n    <div class=\"col ml-2 mb-2\">\r\n      \r\n      <button  class=\"btn btn-outline-primary mt-1 mr-2 float-right\" (click)=\"edit('')\">\r\n        <i class=\"fas fa-folder-plus mr-2\"></i>Add States \r\n      </button>\r\n    </div>\r\n    <div class=\"\">\r\n      <table mat-table [dataSource]=\"dataSource\">\r\n     <!-- Position Column -->\r\n     <ng-container matColumnDef=\"index\">\r\n        <th mat-header-cell *matHeaderCellDef> No. </th>\r\n        <td mat-cell *matCellDef=\"let element\">{{element.index}}</td>\r\n      </ng-container>\r\n  \r\n      <!-- Name Column -->\r\n     \r\n  <!-- Name Column -->\r\n  <ng-container matColumnDef=\"title\">\r\n    <th mat-header-cell *matHeaderCellDef> Name </th>\r\n    <td mat-cell *matCellDef=\"let element\"> {{element.title}} </td>\r\n  </ng-container>\r\n    \r\n  <ng-container matColumnDef=\"action\">\r\n    <th mat-header-cell *matHeaderCellDef> Action </th>\r\n    <td mat-cell *matCellDef=\"let element\"> \r\n      <!-- <i class=\"fas fa-pencil-alt mr-2 \" (click)=\"edit(element)\" title=\"edit\"></i>  <i  class=\"fas fa-trash ml-2 \" (click)=\"delete(element)\" title=\"delete\"></i>  -->\r\n      <button mat-icon-button class=\"mr-2\" aria-label=\"Example icon button with a delete icon\" (click)=\"edit(element)\">\r\n        <mat-icon >edit</mat-icon>\r\n      </button>\r\n      <button mat-icon-button aria-label=\"Example icon button with a delete icon\" (click)=\"delete(element)\">\r\n        <mat-icon >delete</mat-icon>\r\n      </button>\r\n    </td>\r\n  </ng-container>\r\n    \r\n    \r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n      </table>\r\n    \r\n      <mat-paginator [pageSizeOptions]=\"[20]\"\r\n                     showFirstLastButtons \r\n                     aria-label=\"Select page of periodic elements\">\r\n      </mat-paginator>\r\n    </div>\r\n    ","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport Swal from 'sweetalert2';\r\nimport { AddAndEditRegComponent } from './add-and-edit-reg/add-and-edit-reg.component';\r\n\r\n@Component({\r\n  selector: 'app-regulator',\r\n  templateUrl: './regulator.component.html',\r\n  styleUrls: ['./regulator.component.scss']\r\n})\r\nexport class RegulatorComponent implements OnInit {\r\n  mode: any;\r\n  regData: any = [];\r\n  ELEMENT_DATA = [];\r\n  /////////////mat table////////////////\r\n  displayedColumns: string[] = ['index', 'title' ,'action'];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n  /////////////mat table end////////////////\r\n\r\n  constructor(private logicalFormInfo: LogicalFormInfoService,private dialog:MatDialog) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getAllRegulator()\r\n  }\r\n\r\n  getAllRegulator() {\r\n    this.logicalFormInfo.getAllRegulator().subscribe((res) => {\r\n      console.log('getAllRegulator=>', res);\r\n      // this.jobTaskData = res.data[0].subComponents;\r\n      let data = res.data;\r\n      data.forEach((element, index) => {\r\n        element.index = index + 1; //adding index\r\n      });\r\n\r\n      this.ELEMENT_DATA = data;\r\n      this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n      this.dataSource.paginator = this.paginator;\r\n\r\n      //  this.task = res.data.subComponents;\r\n    });\r\n \r\n  }\r\n  \r\n  edit(element){\r\n    const dialogRef = this.dialog.open(AddAndEditRegComponent, {\r\n      width: \"550px\",\r\n      data: element,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if ((result == \"true\")) {\r\n        this.getAllRegulator();\r\n      }\r\n      console.log(\"The dialog was closed\");\r\n    });\r\n  }\r\n\r\n  delete(item) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: `Do you want to delete \"${item.title}\"?`,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#00B96F',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Delete!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.logicalFormInfo\r\n        .deleteRegulator(item._id)\r\n        .subscribe((res) => {\r\n          Swal.fire({\r\n            title: 'Regulator Deleted successfully',\r\n            showConfirmButton: false,\r\n            timer: 1200,\r\n          });\r\n          console.log('deleted res', res);\r\n          this.getAllRegulator();\r\n            \r\n        });\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"col ml-2 pt-1\">\r\n    <h1> Regulator List</h1>\r\n    </div>\r\n    <div class=\"col ml-2 mb-2\">\r\n      \r\n      <button  class=\"btn btn-outline-primary mt-1 mr-2 float-right\" (click)=\"edit('')\">\r\n        <i class=\"fas fa-folder-plus mr-2\"></i>Add Regulator \r\n      </button>\r\n    </div>\r\n    <div class=\"\">\r\n      <table mat-table [dataSource]=\"dataSource\">\r\n    \r\n        <!-- Position Column -->\r\n        <ng-container matColumnDef=\"index\">\r\n          <th mat-header-cell *matHeaderCellDef> No. </th>\r\n          <td mat-cell *matCellDef=\"let element\">{{element.index}}</td>\r\n        </ng-container>\r\n    \r\n        <!-- Name Column -->\r\n       \r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"title\">\r\n      <th mat-header-cell *matHeaderCellDef> Name </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.title}} </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"action\">\r\n      <th mat-header-cell *matHeaderCellDef> Action </th>\r\n      <td mat-cell *matCellDef=\"let element\"> \r\n        <!-- <i class=\"fas fa-pencil-alt mr-2 \" (click)=\"edit(element)\" title=\"edit\"></i>  <i  class=\"fas fa-trash ml-2 \" (click)=\"delete(element)\" title=\"delete\"></i>  -->\r\n        <button mat-icon-button class=\"mr-2\" aria-label=\"Example icon button with a delete icon\" (click)=\"edit(element)\">\r\n          <mat-icon >edit</mat-icon>\r\n        </button>\r\n        <button mat-icon-button aria-label=\"Example icon button with a delete icon\" (click)=\"delete(element)\">\r\n          <mat-icon >delete</mat-icon>\r\n        </button>\r\n      </td>\r\n    </ng-container>\r\n    \r\n    \r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n      </table>\r\n    \r\n      <mat-paginator [pageSizeOptions]=\"[20]\"\r\n                     showFirstLastButtons \r\n                     aria-label=\"Select page of periodic elements\">\r\n      </mat-paginator>\r\n    </div>\r\n    ","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-add-and-edit-code',\r\n  templateUrl: './add-and-edit-code.component.html',\r\n  styleUrls: ['./add-and-edit-code.component.scss']\r\n})\r\nexport class AddAndEditCodeComponent implements OnInit {\r\n  editTitle: FormGroup;\r\n  dataRec: any;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    public dialogRef: MatDialogRef<AddAndEditCodeComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.dataRec = data;\r\n  }\r\n  ngOnInit(): void {\r\n    this.editTitle = this.fb.group({\r\n      title: [this.dataRec.title, Validators.required],\r\n    });\r\n  }\r\n\r\n  onFormSubmit() {\r\n    let data = {\r\n      title: this.editTitle.get('title').value,\r\n      componentId: this.dataRec.componentId,\r\n    };\r\n    this.logicalFormInfo\r\n      .updateCode(data, this.dataRec._id)\r\n      .subscribe((resData) => {\r\n        console.log('updateCOP', resData);\r\n\r\n        this.dialogRef.close('true');\r\n        Swal.fire({\r\n          title: 'COP Edited successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });\r\n      });\r\n  }\r\n  addForm() {\r\n    let data = {\r\n      title: this.editTitle.get('title').value,\r\n    };\r\n    this.logicalFormInfo.addCode(data).subscribe((resData) => {\r\n      console.log('addCOP', resData);\r\n\r\n      this.dialogRef.close('true');\r\n      if (this.dataRec) {\r\n        Swal.fire({\r\n          title: 'COP Edited successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });\r\n      } else {\r\n        Swal.fire({\r\n          title: 'COP Added successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });\r\n      }\r\n    });\r\n  }\r\n  closeDialog() {\r\n    this.dialogRef.close('false');\r\n  }\r\n\r\n\r\n}\r\n","<form [formGroup]=\"editTitle\" >\r\n    <h3 *ngIf=\"!dataRec\">Add Code Of Practice</h3>\r\n    <h3 *ngIf=\"dataRec\">Edit Code Of Practice</h3>\r\n    <mat-form-field appearance=\"legacy\"\r\n    class=\"example-full-width\" style=\"width: 498px;\">\r\n   \r\n    <input matInput  formControlName=\"title\" >\r\n    </mat-form-field>\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-2 offset-8 \">\r\n            <button mat-raised-button (click)=\"closeDialog()\">Close</button>\r\n        </div>\r\n        <div class=\"col-sm-2  \">\r\n            <button mat-raised-button *ngIf=\"dataRec\" [disabled]=\"!editTitle.valid\"(click)=\"onFormSubmit()\">Update</button>\r\n            <button mat-raised-button  *ngIf=\"!dataRec\"  [disabled]=\"!editTitle.valid\"(click)=\"addForm()\">Add</button>\r\n        </div>\r\n    </div>\r\n</form>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-add-and-edit-states',\r\n  templateUrl: './add-and-edit-states.component.html',\r\n  styleUrls: ['./add-and-edit-states.component.scss']\r\n})\r\nexport class AddAndEditStatesComponent implements OnInit {\r\n  editTitle: FormGroup;\r\n  dataRec: any;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    public dialogRef: MatDialogRef<AddAndEditStatesComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.dataRec = data;\r\n  }\r\n  ngOnInit(): void {\r\n    this.editTitle = this.fb.group({\r\n      title: [this.dataRec.title, Validators.required],\r\n    });\r\n  }\r\n\r\n  onFormSubmit() {\r\n    let data = {\r\n      title: this.editTitle.get('title').value,\r\n      componentId: this.dataRec.componentId,\r\n    };\r\n    this.logicalFormInfo\r\n      .updateStates(data, this.dataRec._id)\r\n      .subscribe((resData) => {\r\n        console.log('updateStates', resData);\r\n\r\n        this.dialogRef.close('true');\r\n        Swal.fire({\r\n          title: 'States Edited successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });\r\n      });\r\n  }\r\n  addForm() {\r\n    let data = {\r\n      title: this.editTitle.get('title').value,\r\n    };\r\n    this.logicalFormInfo.addStates(data).subscribe((resData) => {\r\n      console.log('addStates', resData);\r\n\r\n      this.dialogRef.close('true');\r\n      if (this.dataRec) {\r\n        Swal.fire({\r\n          title: 'States Edited successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });\r\n      } else {\r\n        Swal.fire({\r\n          title: 'States Added successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });\r\n      }\r\n    });\r\n  }\r\n  closeDialog() {\r\n    this.dialogRef.close('false');\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"editTitle\" >\r\n    <h3 *ngIf=\"!dataRec\">Add States</h3>\r\n    <h3 *ngIf=\"dataRec\">Edit States</h3>\r\n    <mat-form-field appearance=\"legacy\"\r\n    class=\"example-full-width\" style=\"width: 498px;\">\r\n    <!-- <mat-label >Add Regulator</mat-label> -->\r\n    <!-- <mat-label >Edit Regulator</mat-label> -->\r\n    <input matInput  formControlName=\"title\" >\r\n    </mat-form-field>\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-2 offset-8 \">\r\n            <button mat-raised-button (click)=\"closeDialog()\">Close</button>\r\n        </div>\r\n        <div class=\"col-sm-2  \">\r\n            <button mat-raised-button *ngIf=\"dataRec\" [disabled]=\"!editTitle.valid\"(click)=\"onFormSubmit()\">Update</button>\r\n            <button mat-raised-button  *ngIf=\"!dataRec\"  [disabled]=\"!editTitle.valid\"(click)=\"addForm()\">Add</button>\r\n        </div>\r\n    </div>\r\n</form>\r\n","import { RegulatorComponent } from './regulator/regulator.component';\r\nimport { SafetyLegislationComponent } from './safety-legislation/safety-legislation.component';\r\nimport { JuridictionComponent } from './juridiction/juridiction.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { StateRelComponent } from './state-rel.component';\r\nimport { CodeOfPractComponent } from './code-of-pract/code-of-pract.component';\r\nimport { StatesComponent } from './states/states.component';\r\nimport { SetStateRelationComponent } from './set-state-relation/set-state-relation.component';\r\nimport { AddStateRelationComponent } from './set-state-relation/add-state-relation/add-state-relation.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: StateRelComponent },\r\n  { path: 'juridiction', component: JuridictionComponent },\r\n  { path: 'safetyLegislation', component: SafetyLegislationComponent },\r\n  { path: 'codeOfPract', component: CodeOfPractComponent },\r\n  { path: 'regulator', component: RegulatorComponent },\r\n  { path: 'states', component: StatesComponent },\r\n  { path: 'setState', component: SetStateRelationComponent },\r\n  { path: 'addState', component: AddStateRelationComponent },\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class StateRelRoutingModule { }\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-add-and-edit-juri',\r\n  templateUrl: './add-and-edit-juri.component.html',\r\n  styleUrls: ['./add-and-edit-juri.component.scss']\r\n})\r\nexport class AddAndEditJuriComponent implements OnInit {\r\n  editTitle: FormGroup;\r\n  dataRec: any;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    public dialogRef: MatDialogRef<AddAndEditJuriComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.dataRec = data;\r\n  }\r\n  ngOnInit(): void {\r\n    this.editTitle = this.fb.group({\r\n      title: [this.dataRec.title, Validators.required],\r\n    });\r\n  }\r\n\r\n  onFormSubmit() {\r\n    let data = {\r\n      title: this.editTitle.get('title').value,\r\n      componentId: this.dataRec.componentId,\r\n    };\r\n    this.logicalFormInfo\r\n      .updateJurisdiction(data, this.dataRec._id)\r\n      .subscribe((resData) => {\r\n        console.log('addJurisdiction', resData);\r\n\r\n        this.dialogRef.close('true');\r\n        Swal.fire({\r\n          title: 'Jurisdiction Edited successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });\r\n      });\r\n  }\r\n  addForm() {\r\n    let data = {\r\n      title: this.editTitle.get('title').value,\r\n    };\r\n    this.logicalFormInfo.addJurisdiction(data).subscribe((resData) => {\r\n      console.log('addRegulator', resData);\r\n\r\n      this.dialogRef.close('true');\r\n      if (this.dataRec) {\r\n        Swal.fire({\r\n          title: 'Jurisdiction Edited successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });\r\n      } else {\r\n        Swal.fire({\r\n          title: 'Jurisdiction Added successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });\r\n      }\r\n    });\r\n  }\r\n  closeDialog() {\r\n    this.dialogRef.close('false');\r\n  }\r\n\r\n\r\n}\r\n","<form [formGroup]=\"editTitle\" >\r\n    <h3 *ngIf=\"!dataRec\">Add Jurisdiction</h3>\r\n    <h3 *ngIf=\"dataRec\">Edit Jurisdiction</h3>\r\n    <mat-form-field appearance=\"legacy\"\r\n    class=\"example-full-width\" style=\"width: 498px;\">\r\n    <!-- <mat-label >Add Regulator</mat-label> -->\r\n    <!-- <mat-label >Edit Regulator</mat-label> -->\r\n    <input matInput  formControlName=\"title\" >\r\n    </mat-form-field>\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-2 offset-8 \">\r\n            <button mat-raised-button (click)=\"closeDialog()\">Close</button>\r\n        </div>\r\n        <div class=\"col-sm-2  \">\r\n            <button mat-raised-button *ngIf=\"dataRec\" [disabled]=\"!editTitle.valid\"(click)=\"onFormSubmit()\">Update</button>\r\n            <button mat-raised-button  *ngIf=\"!dataRec\"  [disabled]=\"!editTitle.valid\"(click)=\"addForm()\">Add</button>\r\n        </div>\r\n    </div>\r\n</form>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport Swal from 'sweetalert2';\r\nimport { AddAndEditJuriComponent } from './add-and-edit-juri/add-and-edit-juri.component';\r\n\r\n@Component({\r\n  selector: 'app-juridiction',\r\n  templateUrl: './juridiction.component.html',\r\n  styleUrls: ['./juridiction.component.scss']\r\n})\r\nexport class JuridictionComponent implements OnInit {\r\n  mode: any;\r\n  regData: any = [];\r\n  ELEMENT_DATA = [];\r\n  /////////////mat table////////////////\r\n  displayedColumns: string[] = ['index', 'title' ,'action'];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n  /////////////mat table end////////////////\r\n\r\n  constructor(private logicalFormInfo: LogicalFormInfoService,private dialog:MatDialog) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getAllJurisdiction();\r\n  }\r\n\r\n  getAllJurisdiction() {\r\n    this.logicalFormInfo.getAllJurisdiction().subscribe((res) => {\r\n      console.log('getAllJurisdiction=>', res);\r\n      // this.jobTaskData = res.data[0].subComponents;\r\n      let data = res.data;\r\n      data.forEach((element, index) => {\r\n        element.index = index + 1; //adding index\r\n      });\r\n\r\n      this.ELEMENT_DATA = data;\r\n      this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n      this.dataSource.paginator = this.paginator;\r\n\r\n      //  this.task = res.data.subComponents;\r\n    });\r\n \r\n  }\r\n  \r\n  edit(element){\r\n    const dialogRef = this.dialog.open(AddAndEditJuriComponent, {\r\n      width: \"550px\",\r\n      data: element,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if ((result == \"true\")) {\r\n        this.getAllJurisdiction();\r\n      }\r\n      console.log(\"The dialog was closed\");\r\n    });\r\n  }\r\n\r\n  delete(item) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: `Do you want to delete \"${item.title}\"?`,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#00B96F',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Delete!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.logicalFormInfo\r\n        .deleteJurisdiction(item._id)\r\n        .subscribe((res) => {\r\n          Swal.fire({\r\n            title: 'Jurisdiction Deleted successfully',\r\n            showConfirmButton: false,\r\n            timer: 1200,\r\n          });\r\n          console.log('deleted res', res);\r\n          this.getAllJurisdiction();\r\n            \r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"col ml-2 pt-1\">\r\n    <h1> Jurisdiction List</h1>\r\n    </div>\r\n    <div class=\"col ml-2 mb-2\">\r\n      \r\n      <button  class=\"btn btn-outline-primary mt-1 mr-2 float-right\" (click)=\"edit('')\">\r\n        <i class=\"fas fa-folder-plus mr-2\"></i>Add Jurisdiction \r\n      </button>\r\n    </div>\r\n    <div class=\"\">\r\n      <table mat-table [dataSource]=\"dataSource\">\r\n    \r\n        <!-- Position Column -->\r\n        <ng-container matColumnDef=\"index\">\r\n          <th mat-header-cell *matHeaderCellDef> No. </th>\r\n          <td mat-cell *matCellDef=\"let element\">{{element.index}}</td>\r\n        </ng-container>\r\n    \r\n        <!-- Name Column -->\r\n       \r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"title\">\r\n      <th mat-header-cell *matHeaderCellDef> Name </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.title}} </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"action\">\r\n      <th mat-header-cell *matHeaderCellDef> Action </th>\r\n      <td mat-cell *matCellDef=\"let element\"> \r\n        <!-- <i class=\"fas fa-pencil-alt mr-2 \" (click)=\"edit(element)\" title=\"edit\"></i>  <i  class=\"fas fa-trash ml-2 \" (click)=\"delete(element)\" title=\"delete\"></i>  -->\r\n        <button mat-icon-button class=\"mr-2\" aria-label=\"Example icon button with a delete icon\" (click)=\"edit(element)\">\r\n          <mat-icon >edit</mat-icon>\r\n        </button>\r\n        <button mat-icon-button aria-label=\"Example icon button with a delete icon\" (click)=\"delete(element)\">\r\n          <mat-icon >delete</mat-icon>\r\n        </button>\r\n      </td>\r\n    </ng-container>\r\n    \r\n    \r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n      </table>\r\n    \r\n      <mat-paginator [pageSizeOptions]=\"[20]\"\r\n                     showFirstLastButtons \r\n                     aria-label=\"Select page of periodic elements\">\r\n      </mat-paginator>\r\n    </div>\r\n    ","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-add-and-edit-safety',\r\n  templateUrl: './add-and-edit-safety.component.html',\r\n  styleUrls: ['./add-and-edit-safety.component.scss']\r\n})\r\nexport class AddAndEditSafetyComponent implements OnInit {\r\n  editTitle: FormGroup;\r\n  dataRec: any;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    public dialogRef: MatDialogRef<AddAndEditSafetyComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.dataRec = data;\r\n  }\r\n  ngOnInit(): void {\r\n    this.editTitle = this.fb.group({\r\n      act: [this.dataRec.act, Validators.required],\r\n      regulation: [this.dataRec.regulation, Validators.required],\r\n    });\r\n  }\r\n\r\n  \r\n  onFormSubmit() {\r\n    let data = {\r\n      act: this.editTitle.get('act').value,\r\n      regulation: this.editTitle.get('regulation').value,\r\n      componentId: this.dataRec.componentId,\r\n    };\r\n    this.logicalFormInfo\r\n      .updateSafety(data, this.dataRec._id)\r\n      .subscribe((resData) => {\r\n        console.log('SafetyLegislation', resData);\r\n\r\n        this.dialogRef.close('true');\r\n        Swal.fire({\r\n          title: 'Safety Legislation Edited successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });\r\n      });\r\n  }\r\n  addForm() {\r\n    let data = {\r\n      act: this.editTitle.get('act').value,\r\n      regulation: this.editTitle.get('regulation').value,\r\n    };\r\n    this.logicalFormInfo.addSafety(data).subscribe((resData) => {\r\n      console.log('SafetyLegislation', resData);\r\n\r\n      this.dialogRef.close('true');\r\n      if (this.dataRec) {\r\n        Swal.fire({\r\n          title: 'Safety Legislation Edited successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });\r\n      } else {\r\n        Swal.fire({\r\n          title: 'Safety Legislation Added successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });\r\n      }\r\n    });\r\n  }\r\n  closeDialog() {\r\n    this.dialogRef.close('false');\r\n  }\r\n\r\n}\r\n","\r\n<form [formGroup]=\"editTitle\" >\r\n    <h3 *ngIf=\"!dataRec\">Add Safety Legislation</h3>\r\n    <h3 *ngIf=\"dataRec\">Edit Safety Legislation</h3>\r\n    <mat-form-field appearance=\"legacy\"\r\n    class=\"example-full-width\" style=\"width: 498px;\">\r\n    <!-- <mat-label >Add Regulator</mat-label> -->\r\n    <!-- <mat-label >Edit Regulator</mat-label> -->\r\n    <input matInput  placeholder=\"Act\" formControlName=\"act\" >\r\n    </mat-form-field>\r\n    <mat-form-field appearance=\"legacy\"\r\n    class=\"example-full-width\" style=\"width: 498px;\">\r\n    <!-- <mat-label >Add Regulator</mat-label> -->\r\n    <!-- <mat-label >Edit Regulator</mat-label> -->\r\n    <input matInput  placeholder=\"Regulation\"  formControlName=\"regulation\" >\r\n    </mat-form-field>\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-2 offset-8 \">\r\n            <button mat-raised-button (click)=\"closeDialog()\">Close</button>\r\n        </div>\r\n        <div class=\"col-sm-2  \">\r\n            <button mat-raised-button *ngIf=\"dataRec\" [disabled]=\"!editTitle.valid\"(click)=\"onFormSubmit()\">Update</button>\r\n            <button mat-raised-button  *ngIf=\"!dataRec\"  [disabled]=\"!editTitle.valid\"(click)=\"addForm()\">Add</button>\r\n        </div>\r\n    </div>\r\n</form>","import { Component, OnInit, QueryList, ViewChild, ViewChildren } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Router } from '@angular/router';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { SetTitleService } from 'src/app/utils/services/set-title.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-set-state-relation',\r\n  templateUrl: './set-state-relation.component.html',\r\n  styleUrls: ['./set-state-relation.component.scss']\r\n})\r\nexport class SetStateRelationComponent implements OnInit {\r\n  setStatesDetail!: FormGroup;\r\n  // allContrlActReq=[];\r\n  // highRiskData: any = [];\r\n  // codeOfPract: any = [];\r\n  // licenseAndQualificationData: any = [];\r\n  // licenceCatAll: any = [];\r\n\r\n  StatesData: any = [];\r\n  Jurisdiction: any = [];\r\n  COP: any = [];\r\n  SafetyData: any = [];\r\n  regulator=[];\r\n  // task: any = [];\r\n  // riskLevel='';\r\n  // residuleRiskL='';\r\n  // PPEselection = [\r\n  //   { label: 'Disposable dust mask', value: '' },\r\n  //   { label: 'Dust Mas', value: '' },\r\n  //   { label: 'Face shield', value: '' },\r\n  //   { label: 'Full face respirator', value: '' },\r\n  //   { label: 'Gttors', value: '' },\r\n  //   { label: 'Half face respirator', value: '' },\r\n  //   { label: 'Hard Hat', value: '' },\r\n  //   { label: 'Hearing protection', value: '' },\r\n  //   { label: 'High-Vis Clothing', value: '' },\r\n  //   { label: 'Lock Out Tags', value: '' },\r\n  //   { label: 'Long sleeve/Long pants', value: '' },\r\n  //   { label: 'Out of Service Tags', value: '' },\r\n  //   { label: 'Protective gloves', value: '' },\r\n  //   { label: 'Rescue kit', value: '' },\r\n  //   { label: 'Safety boots', value: '' },\r\n  //   { label: 'Safety glasses', value: '' },\r\n  //   { label: 'Sun Screen', value: '' },\r\n  //   { label: 'torch', value: '' },\r\n  //   { label: 'Wide Brim Hat', value: '' },\r\n  // ];\r\n\r\n  // licenseAndQualification = [\r\n  //   { label: 'Open Cable Licence', value: '' },\r\n  //   { label: 'White Card', value: '' },\r\n  //   { label: 'EWP Licence', value: '' },\r\n  //   { label: 'Working At Heights', value: '' },\r\n  //   { label: 'Security Licence', value: '' },\r\n  //   { label: 'Asbestos Awarness', value: '' },\r\n  //   { label: 'Working In Confined Space', value: '' },\r\n  // ];\r\n\r\n  // highRiskConstruction2 = [\r\n  //   {\r\n  //     label: 'Working in or near trenches or shafts deeper than 1.5metres',\r\n  //     value: '',\r\n  //   },\r\n  //   { label: 'Work in or near a confined space', value: '' },\r\n  //   {\r\n  //     label:\r\n  //       'Work in an area that may have a contaminated or flammable atmosphere',\r\n  //     value: '',\r\n  //   },\r\n  //   { label: 'Working around or near mobile plant', value: '' },\r\n  //   { label: 'Work with near or near asbestos', value: '' },\r\n  //   { label: 'Working with hazardous substances', value: '' },\r\n  //   { label: 'Working with or near tilt-up/precast concrete', value: '' },\r\n  //   { label: 'Risk of falls higher than 2 metres', value: '' },\r\n  //   {\r\n  //     label: 'Working near on or adjacent to a road or rail corridor',\r\n  //     value: '',\r\n  //   },\r\n  //   { label: 'Working on or near telecommunication tower', value: '' },\r\n  //   { label: 'Working on or near telecommunication tower', value: '' },\r\n  //   { label: 'Work near explosives', value: '' },\r\n  //   {\r\n  //     label:\r\n  //       'Work in or near water or other liquid that involves a risk of drowning',\r\n  //     value: '',\r\n  //   },\r\n  //   { label: 'Demolition of load-bearing structure', value: '' },\r\n  //   { label: 'Diving work', value: '' },\r\n  // ];\r\n\r\n  // PPEselection2 = [\r\n  //   { label: 'Disposable dust mask', value: '' },\r\n  //   { label: 'Dust Mas', value: '' },\r\n  //   { label: 'Face shield', value: '' },\r\n  //   { label: 'Full face respirator', value: '' },\r\n  //   { label: 'Gttors', value: '' },\r\n  //   { label: 'Half face respirator', value: '' },\r\n  //   { label: 'Hard Hat', value: '' },\r\n  //   { label: 'Hearing protection', value: '' },\r\n  //   { label: 'High-Vis Clothing', value: '' },\r\n  //   { label: 'Lock Out Tags', value: '' },\r\n  //   { label: 'Long sleeve/Long pants', value: '' },\r\n  //   { label: 'Out of Service Tags', value: '' },\r\n  //   { label: 'Protective gloves', value: '' },\r\n  //   { label: 'Rescue kit', value: '' },\r\n  //   { label: 'Safety boots', value: '' },\r\n  //   { label: 'Safety glasses', value: '' },\r\n  //   { label: 'Sun Screen', value: '' },\r\n  //   { label: 'torch', value: '' },\r\n  //   { label: 'Wide Brim Hat', value: '' },\r\n  // ];\r\n  ELEMENT_DATA = [];\r\n  /////////////mat table////////////////\r\n  displayedColumns: string[] = ['index', 'title', 'edit'];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n  // @ViewChild('risk') risk: any;\r\n  @ViewChildren('risk') Risk: QueryList<any>;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    private setTitle: SetTitleService,\r\n    public router: Router,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.setTitle.setTitle('WHS-Set States Relation');\r\n \r\n    this.setStatesDetail = this.fb.group({\r\n      jurisdiction: this.fb.array([]),\r\n      safe: this.fb.array([]),\r\n      COP: this.fb.array([]),\r\n      regulator: this.fb.array([]),\r\n      // contrActReq: this.fb.array([]),\r\n      // riskLevel: this.fb.array([]),\r\n      // residualRisk: this.fb.array([]),\r\n    });\r\n\r\n    this.getStates();\r\n    // this.getAllHighRisk();\r\n    // this.getAllLicence();\r\n    // this.getAllCategories();\r\n    // this.getAllPPE();\r\n    // this.getAllHazard();\r\n    // this.getAllContrActReq();\r\n  }\r\n\r\n  \r\n\r\n  addActionJurisdiction() {\r\n    {\r\n      this.jurisdictionFA().push(this.jurisdictionFG());\r\n    }\r\n  }\r\n  addActionCOP() {\r\n    {\r\n      this.COP_FA().push(this.COP_FG());\r\n    }\r\n  }\r\n  addActionSafety() {\r\n    {\r\n      this.safetyFA().push(this.safetyFG());\r\n    }\r\n  }\r\n  addActionRegulator() {\r\n    {\r\n      this.regulatorFA().push(this.regulatorFG());\r\n    }\r\n  }\r\n  // addActionIdentifyHazrds() {\r\n  //   {\r\n  //     this.identifyHazrdsFA().push(this.identifyHazrdsFG());\r\n  //   }\r\n  // }\r\n  // addActionRiskLevel() {\r\n  //   {\r\n  //     this.riskLevelFA().push(this.riskLevelFG());\r\n  //   }\r\n  // }\r\n  // addActionResiRiskLevel() {\r\n  //   {\r\n  //     this.residlRiskLevelFA().push(this.residlRiskLevelFG());\r\n  //   }\r\n  // }\r\n  // addActionCOP() {\r\n  //   {\r\n  //     this.addCOP().push(this.newActionCOP());\r\n  //   }\r\n  // }\r\n  jurisdictionFA(): FormArray {\r\n    return this.setStatesDetail.get('jurisdiction') as FormArray;\r\n  }\r\n  COP_FA(): FormArray {\r\n    return this.setStatesDetail.get(' COP') as FormArray;\r\n  }\r\n  safetyFA(): FormArray {\r\n    return this.setStatesDetail.get('safety') as FormArray;\r\n  }\r\n  regulatorFA(): FormArray {\r\n    return this.setStatesDetail.get('regulator') as FormArray;\r\n  }\r\n  // identifyHazrdsFA(): FormArray {\r\n  //   return this.setStatesDetail.get('identifyHazrds') as FormArray;\r\n  // }\r\n  \r\n  // addCOP(): FormArray {\r\n  //   return this.setStatesDetail.get('codeOfPract') as FormArray;\r\n  // }\r\n  // riskLevelFA(): FormArray {\r\n  //   return this.setStatesDetail.get('riskLevel') as FormArray;\r\n  // }\r\n  // residlRiskLevelFA(): FormArray {\r\n  //   return this.setStatesDetail.get('residualRisk') as FormArray;\r\n  // }\r\n  jurisdictionFG(): FormGroup {\r\n    return this.fb.group({\r\n      jurisdictionkArr: [''],\r\n    });\r\n  }\r\n  COP_FG(): FormGroup {\r\n    return this.fb.group({\r\n      ppeArr: [''],\r\n    });\r\n  }\r\n  safetyFG(): FormGroup {\r\n    return this.fb.group({\r\n      licenceArr: [''],\r\n    });\r\n  }\r\n  regulatorFG(): FormGroup {\r\n    return this.fb.group({\r\n      contrActReqArr: [''],\r\n    });\r\n  }\r\n  // identifyHazrdsFG(): FormGroup {\r\n  //   return this.fb.group({\r\n  //     hazardsArr: [''],\r\n  //   });\r\n  // }\r\n\r\n  // riskLevelFG(): FormGroup {\r\n  //   return this.fb.group({\r\n  //     riskLevel: [''],\r\n  //   });\r\n  // }\r\n  // residlRiskLevelFG(): FormGroup {\r\n  //   return this.fb.group({\r\n  //     resiRiskLevel: [''],\r\n  //   });\r\n  // }\r\n  // newActionCOP(): FormGroup {\r\n  //   return this.fb.group({\r\n  //     copArr: [''],\r\n  //   });\r\n  // }\r\n\r\n  onFormSubmit() {\r\n    console.log(this.setStatesDetail);\r\n  }\r\n  getStates() {\r\n    this.logicalFormInfo.getAllStates().subscribe((res: any) => {\r\n      console.log('setStatesDetails=>', res);\r\n      this.StatesData = res.data;\r\n      \r\n      this.StatesData.forEach((element, index) => {\r\n        element.index = index + 1; //adding index\r\n      });\r\n\r\n      this.ELEMENT_DATA = this.StatesData.sort((a, b) => a.title.localeCompare(b.title));\r\n      this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n      this.dataSource.paginator = this.paginator;\r\n     \r\n\r\n    });\r\n  }\r\n  getJurisdiction() {\r\n    this.logicalFormInfo.getAllJurisdiction().subscribe((res: any) => {\r\n      console.log('Jurisdiction=>', res);\r\n      this.Jurisdiction = res.data;\r\n    });\r\n  }\r\n  getSafety() {\r\n    this.logicalFormInfo.getAllSafety().subscribe((res: any) => {\r\n      console.log('Safety=>', res);\r\n      this.SafetyData = res.data;\r\n    });\r\n  }\r\n\r\n  getCode() {\r\n    this.logicalFormInfo.getAllCode().subscribe((res) => {\r\n      console.log('COP=>', res);\r\n      this.COP = res.data;\r\n    });\r\n  }\r\n  getRegulator() {\r\n    this.logicalFormInfo.getAllRegulator().subscribe((res:any) => {\r\n      console.log('Regulator=>', res);\r\n      this.regulator = res.data;\r\n    });\r\n  }\r\n  // getAllContrActReq()  {\r\n  //   this.logicalFormInfo.getAllContrlActReq().subscribe((res:any) => {\r\n  //     console.log('getAllHazards=>', res);\r\n  //     this.allContrlActReq = res.data;\r\n  //   });\r\n  // }\r\n  // getAllCategories() {\r\n  //   this.logicalFormInfo.getAllLicenceCat().subscribe((res) => {\r\n  //     console.log('getAllLicenceCat=>', res);\r\n  //     this.licenceCatAll = res.data;\r\n  //   });\r\n  // }\r\n  setRelation_2(id){\r\n   this.router.navigate(['/admin/stateRel/addState'],\r\n\r\n      {queryParams: { id:id}});\r\n  }\r\n  setRelation(title, id,i) {\r\n\r\n    console.log('index', title);\r\n    console.log('id', id);\r\n    console.log('id', i);\r\nlet risk = [],\r\nppe=[],\r\nlicence=[],\r\nidentifyHazard=[],\r\ncontrolActionRequired=[];\r\n  if(this.jurisdictionFA().controls[i].get('jurisdictionArr').value){\r\n    this.jurisdictionFA().controls[i].get('jurisdictionArr').value.forEach(element => {\r\n      risk.push(element._id)\r\n    });\r\n  }\r\n  if(this.COP_FA().controls[i].get('COPArr').value){\r\n    this.COP_FA().controls[i].get('COPArr').value.forEach(element => {\r\n      ppe.push(element._id)\r\n    });\r\n  }\r\n  if(this.safetyFA().controls[i].get('safetyArr').value){\r\n    this.safetyFA().controls[i].get('safetyArr').value.forEach(element => {\r\n      licence.push(element._id)\r\n    });\r\n  }\r\n  if(this.regulatorFA().controls[i].get('contrActReqArr').value){\r\n    this.regulatorFA().controls[i].get('contrActReqArr').value.forEach(element => {\r\n      controlActionRequired.push(element._id)\r\n    });\r\n  }\r\n\r\n    let data = {\r\n      title: title,\r\n      jurisdiction: this.jurisdictionFA().controls[i].get('jurisdictionArr').value,\r\n      COP: this.COP_FA().controls[i].get('COPArr').value,\r\n      safety: this.safetyFA().controls[i].get('safetyArr').value,\r\n      regulator: this.regulatorFA().controls[i].get('regulatorArr').value,\r\n     \r\n      set:true      \r\n    };\r\n    console.log(data);\r\n\r\n    this.logicalFormInfo.updateStates(data,id).subscribe((res) => {\r\n      console.log('resStates Task=>', res);\r\n      this.getStates();\r\n\r\n      Swal.fire({\r\n        title: 'States Relation set successfully',\r\n        showConfirmButton: false,\r\n        timer: 1200,\r\n      });\r\n    });\r\n  }\r\n  // categorySel(catArr) {\r\n  //   this.licenseAndQualificationData = [];\r\n\r\n  //   console.log(catArr);\r\n  //   catArr.forEach((element) => {\r\n  //     this.licenseAndQual.forEach((item) => {\r\n  //       if (element === item.licenceCategoryId._id) {\r\n  //         this.licenseAndQualificationData.push(item);\r\n  //       }\r\n  //     });\r\n  //   });\r\n  //   console.log(\r\n  //     ' this.licenseAndQualificationData',\r\n  //     this.licenseAndQualificationData\r\n  //   );\r\n  // }\r\n\r\n}\r\n","  <!-- stepper logic -->\r\n  \r\n  <h2 class=\"ml-2\"> Set States Relation</h2>\r\n  <!-- <div class=\"col ml-2 mb-2\">\r\n    \r\n    <button  class=\"btn btn-outline-primary mt-1 mr-2 float-right\"[routerLink]=\"['/admin/siteInfo/addJobTask']\">\r\n      <i class=\"fas fa-folder-plus mr-2\"></i>Add Job Task \r\n    </button>\r\n  </div> -->\r\n  <div class=\"\">\r\n    <table mat-table [dataSource]=\"dataSource\">\r\n  \r\n      <!-- Position Column -->\r\n      <ng-container matColumnDef=\"index\">\r\n        <th mat-header-cell *matHeaderCellDef> No. </th>\r\n        <td mat-cell *matCellDef=\"let element\">{{element.index}}</td>\r\n      </ng-container>\r\n  \r\n      <!-- Name Column -->\r\n     \r\n  <!-- Name Column -->\r\n  <ng-container matColumnDef=\"title\">\r\n    <th mat-header-cell *matHeaderCellDef> Name </th>\r\n    <td mat-cell *matCellDef=\"let element\"> {{element.title}} </td>\r\n  </ng-container>\r\n  \r\n  <ng-container matColumnDef=\"edit\">\r\n    <th mat-header-cell *matHeaderCellDef> Set </th>\r\n    <td  mat-cell *matCellDef=\"let element\"(click)=\"setRelation_2(element._id)\"> <button *ngIf=\"!element.set\" mat-stroked-button color=\"primary\" class=\"myBtn\">Set</button> <button  *ngIf=\"element.set\" mat-stroked-button color=\"primary\" class=\"myBtn\">Update</button>\r\n    </td>\r\n  </ng-container>\r\n  <!-- <ng-container matColumnDef=\"delete\">\r\n    <th mat-header-cell *matHeaderCellDef> Delete </th>\r\n    <td mat-cell *matCellDef=\"let element\"(click)=\"delete(element)\"> <i class=\"fas fa-trash \"></i> \r\n    </td>\r\n  </ng-container> -->\r\n  \r\n  \r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n    </table>\r\n  \r\n    <mat-paginator [pageSizeOptions]=\"[20]\"\r\n                   showFirstLastButtons \r\n                   aria-label=\"Select page of periodic elements\">\r\n    </mat-paginator>\r\n  </div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-state-rel',\r\n  templateUrl: './state-rel.component.html',\r\n  styleUrls: ['./state-rel.component.scss']\r\n})\r\nexport class StateRelComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { StateRelRoutingModule } from './state-rel-routing.module';\r\nimport { StateRelComponent } from './state-rel.component';\r\nimport { JuridictionComponent } from './juridiction/juridiction.component';\r\nimport { SafetyLegislationComponent } from './safety-legislation/safety-legislation.component';\r\nimport { RegulatorComponent } from './regulator/regulator.component';\r\nimport { CodeOfPractComponent } from './code-of-pract/code-of-pract.component';\r\nimport { AddAndEditRegComponent } from './regulator/add-and-edit-reg/add-and-edit-reg.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { AddAndEditJuriComponent } from './juridiction/add-and-edit-juri/add-and-edit-juri.component';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { AddAndEditCodeComponent } from './code-of-pract/add-and-edit-code/add-and-edit-code.component';\r\nimport { AddAndEditSafetyComponent } from './safety-legislation/add-and-edit-safety/add-and-edit-safety.component';\r\nimport { StatesComponent } from './states/states.component';\r\nimport { AddAndEditStatesComponent } from './states/add-and-edit-states/add-and-edit-states.component';\r\nimport { SetStateRelationComponent } from './set-state-relation/set-state-relation.component';\r\nimport { AddStateRelationComponent } from './set-state-relation/add-state-relation/add-state-relation.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [StateRelComponent, JuridictionComponent, SafetyLegislationComponent, RegulatorComponent, CodeOfPractComponent, AddAndEditRegComponent, AddAndEditJuriComponent, AddAndEditCodeComponent, AddAndEditSafetyComponent, StatesComponent, AddAndEditStatesComponent, SetStateRelationComponent, AddStateRelationComponent],\r\n  imports: [\r\n    CommonModule,\r\n    StateRelRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatPaginatorModule,\r\n    MatTableModule,\r\n    MatFormFieldModule,\r\n    SharedModule\r\n  ]\r\n})\r\nexport class StateRelModule { }\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport Swal from 'sweetalert2';\r\nimport { AddAndEditSafetyComponent } from './add-and-edit-safety/add-and-edit-safety.component';\r\n\r\n@Component({\r\n  selector: 'app-safety-legislation',\r\n  templateUrl: './safety-legislation.component.html',\r\n  styleUrls: ['./safety-legislation.component.scss']\r\n})\r\nexport class SafetyLegislationComponent implements OnInit {\r\n  mode: any;\r\n  regData: any = [];\r\n  ELEMENT_DATA = [];\r\n  /////////////mat table////////////////\r\n  displayedColumns: string[] = ['index', 'act', 'regulation' ,'action'];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n  /////////////mat table end////////////////\r\n\r\n  constructor(private logicalFormInfo: LogicalFormInfoService,private dialog:MatDialog) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getAllSafetyReg()\r\n  }\r\n\r\n  getAllSafetyReg() {\r\n    this.logicalFormInfo.getAllSafety().subscribe((res) => {\r\n      console.log('getAllRegulator=>', res);\r\n      // this.jobTaskData = res.data[0].subComponents;\r\n      let data = res.data;\r\n      data.forEach((element, index) => {\r\n        element.index = index + 1; //adding index\r\n      });\r\n\r\n      this.ELEMENT_DATA = data;\r\n      this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n      this.dataSource.paginator = this.paginator;\r\n\r\n      //  this.task = res.data.subComponents;\r\n    });\r\n \r\n  }\r\n  \r\n  edit(element){\r\n    const dialogRef = this.dialog.open(AddAndEditSafetyComponent, {\r\n      width: \"550px\",\r\n      data: element,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if ((result == \"true\")) {\r\n        this.getAllSafetyReg();\r\n      }\r\n      console.log(\"The dialog was closed\");\r\n    });\r\n  }\r\n\r\n  delete(item) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: `Do you want to delete \"${item.act}\"?`,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#00B96F',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Delete!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.logicalFormInfo\r\n        .deleteSafety(item._id)\r\n        .subscribe((res) => {\r\n          Swal.fire({\r\n            title: 'Safety Legislation Deleted successfully',\r\n            showConfirmButton: false,\r\n            timer: 1200,\r\n          });\r\n          console.log('deleted res', res);\r\n          this.getAllSafetyReg();\r\n            \r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"col ml-2 pt-1\">\r\n    <h1> Safety Legislation List</h1>\r\n    </div>\r\n    <div class=\"col ml-2 mb-2\">\r\n      \r\n      <button  class=\"btn btn-outline-primary mt-1 mr-2 float-right\" (click)=\"edit('')\">\r\n        <i class=\"fas fa-folder-plus mr-2\"></i>Add Regulator \r\n      </button>\r\n    </div>\r\n    <div class=\"\">\r\n      <table mat-table [dataSource]=\"dataSource\">\r\n    \r\n        <!-- Position Column -->\r\n        <ng-container matColumnDef=\"index\">\r\n          <th mat-header-cell *matHeaderCellDef> No. </th>\r\n          <td mat-cell *matCellDef=\"let element\">{{element.index}}</td>\r\n        </ng-container>\r\n    \r\n        <!-- Name Column -->\r\n       \r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"act\">\r\n      <th mat-header-cell *matHeaderCellDef> Act </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.act}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"regulation\">\r\n        <th mat-header-cell *matHeaderCellDef> Regulation </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.regulation}} </td>\r\n      </ng-container>\r\n    \r\n      <ng-container matColumnDef=\"action\">\r\n        <th mat-header-cell *matHeaderCellDef> Action </th>\r\n        <td mat-cell *matCellDef=\"let element\"> \r\n          <!-- <i class=\"fas fa-pencil-alt mr-2 \" (click)=\"edit(element)\" title=\"edit\"></i>  <i  class=\"fas fa-trash ml-2 \" (click)=\"delete(element)\" title=\"delete\"></i>  -->\r\n          <button mat-icon-button class=\"mr-2\" aria-label=\"Example icon button with a delete icon\" (click)=\"edit(element)\">\r\n            <mat-icon >edit</mat-icon>\r\n          </button>\r\n          <button mat-icon-button aria-label=\"Example icon button with a delete icon\" (click)=\"delete(element)\">\r\n            <mat-icon >delete</mat-icon>\r\n          </button>\r\n        </td>\r\n      </ng-container>\r\n    \r\n    \r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n      </table>\r\n    \r\n      <mat-paginator [pageSizeOptions]=\"[20]\"\r\n                     showFirstLastButtons \r\n                     aria-label=\"Select page of periodic elements\">\r\n      </mat-paginator>\r\n    </div>\r\n    ","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport Swal from 'sweetalert2';\r\nimport { AddAndEditCodeComponent } from './add-and-edit-code/add-and-edit-code.component';\r\n\r\n@Component({\r\n  selector: 'app-code-of-pract',\r\n  templateUrl: './code-of-pract.component.html',\r\n  styleUrls: ['./code-of-pract.component.scss']\r\n})\r\nexport class CodeOfPractComponent implements OnInit {\r\n  mode: any;\r\n  regData: any = [];\r\n  ELEMENT_DATA = [];\r\n  /////////////mat table////////////////\r\n  displayedColumns: string[] = ['index', 'title' ,'action'];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n  /////////////mat table end////////////////\r\n\r\n  constructor(private logicalFormInfo: LogicalFormInfoService,private dialog:MatDialog) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getAllCode();\r\n  }\r\n\r\n  getAllCode() {\r\n    this.logicalFormInfo.getAllCode().subscribe((res) => {\r\n      console.log('getAllCode=>', res);\r\n      // this.jobTaskData = res.data[0].subComponents;\r\n      let data = res.data;\r\n      data.forEach((element, index) => {\r\n        element.index = index + 1; //adding index\r\n      });\r\n\r\n      this.ELEMENT_DATA = data;\r\n      this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n      this.dataSource.paginator = this.paginator;\r\n\r\n      //  this.task = res.data.subComponents;\r\n    });\r\n \r\n  }\r\n  \r\n  edit(element){\r\n    const dialogRef = this.dialog.open(AddAndEditCodeComponent, {\r\n      width: \"550px\",\r\n      data: element,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if ((result == \"true\")) {\r\n        this.getAllCode();\r\n      }\r\n      console.log(\"The dialog was closed\");\r\n    });\r\n  }\r\n\r\n  delete(item) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: `Do you want to delete \"${item.title}\"?`,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#00B96F',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Delete!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.logicalFormInfo\r\n        .deleteCode(item._id)\r\n        .subscribe((res) => {\r\n          Swal.fire({\r\n            title: 'COP Deleted successfully',\r\n            showConfirmButton: false,\r\n            timer: 1200,\r\n          });\r\n          console.log('deleted res', res);\r\n          this.getAllCode();\r\n            \r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"col ml-2 pt-1\">\r\n    <h1> Code Of Practice List</h1>\r\n    </div>\r\n    <div class=\"col ml-2 mb-2\">\r\n      \r\n      <button  class=\"btn btn-outline-primary mt-1 mr-2 float-right\" (click)=\"edit('')\">\r\n        <i class=\"fas fa-folder-plus mr-2\"></i>Add Code Of Practice \r\n      </button>\r\n    </div>\r\n    <div class=\"\">\r\n      <table mat-table [dataSource]=\"dataSource\">\r\n    \r\n        <!-- Position Column -->\r\n        <ng-container matColumnDef=\"index\">\r\n          <th mat-header-cell *matHeaderCellDef> No. </th>\r\n          <td mat-cell *matCellDef=\"let element\">{{element.index}}</td>\r\n        </ng-container>\r\n    \r\n        <!-- Name Column -->\r\n       \r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"title\">\r\n      <th mat-header-cell *matHeaderCellDef> Name </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.title}} </td>\r\n    </ng-container>\r\n    \r\n    <ng-container matColumnDef=\"action\">\r\n      <th mat-header-cell *matHeaderCellDef> Action </th>\r\n      <td mat-cell *matCellDef=\"let element\"> \r\n        <!-- <i class=\"fas fa-pencil-alt mr-2 \" (click)=\"edit(element)\" title=\"edit\"></i>  <i  class=\"fas fa-trash ml-2 \" (click)=\"delete(element)\" title=\"delete\"></i>  -->\r\n        <button mat-icon-button class=\"mr-2\" aria-label=\"Example icon button with a delete icon\" (click)=\"edit(element)\">\r\n          <mat-icon >edit</mat-icon>\r\n        </button>\r\n        <button mat-icon-button aria-label=\"Example icon button with a delete icon\" (click)=\"delete(element)\">\r\n          <mat-icon >delete</mat-icon>\r\n        </button>\r\n      </td>\r\n    </ng-container>\r\n   \r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n      </table>\r\n    \r\n      <mat-paginator [pageSizeOptions]=\"[20]\"\r\n                     showFirstLastButtons \r\n                     aria-label=\"Select page of periodic elements\">\r\n      </mat-paginator>\r\n    </div>\r\n    ","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-add-and-edit-reg',\r\n  templateUrl: './add-and-edit-reg.component.html',\r\n  styleUrls: ['./add-and-edit-reg.component.scss']\r\n})\r\nexport class AddAndEditRegComponent implements OnInit {\r\n  editTitle: FormGroup;\r\n  dataRec: any;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    public dialogRef: MatDialogRef<AddAndEditRegComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.dataRec = data;\r\n  }\r\n  ngOnInit(): void {\r\n    this.editTitle = this.fb.group({\r\n      title: [this.dataRec.title, Validators.required],\r\n    });\r\n  }\r\n\r\n  onFormSubmit() {\r\n    let data = {\r\n      title: this.editTitle.get('title').value,\r\n      componentId: this.dataRec.componentId,\r\n    };\r\n    this.logicalFormInfo\r\n      .updateRegulator(data, this.dataRec._id)\r\n      .subscribe((resData) => {\r\n        console.log('updateRegulator', resData);\r\n\r\n        this.dialogRef.close('true');\r\n        Swal.fire({\r\n          title: 'Regulator Edited successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });\r\n      });\r\n  }\r\n  addForm() {\r\n    let data = {\r\n      title: this.editTitle.get('title').value,\r\n    };\r\n    this.logicalFormInfo.addRegulator(data).subscribe((resData) => {\r\n      console.log('addRegulator', resData);\r\n\r\n      this.dialogRef.close('true');\r\n      if (this.dataRec) {\r\n        Swal.fire({\r\n          title: 'Regulator Edited successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });\r\n      } else {\r\n        Swal.fire({\r\n          title: 'Regulator Added successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });\r\n      }\r\n    });\r\n  }\r\n  closeDialog() {\r\n    this.dialogRef.close('false');\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"editTitle\" >\r\n    <h3 *ngIf=\"!dataRec\">Add Regulator</h3>\r\n    <h3 *ngIf=\"dataRec\">Edit Regulator</h3>\r\n    <mat-form-field appearance=\"legacy\"\r\n    class=\"example-full-width\" style=\"width: 498px;\">\r\n    <!-- <mat-label >Add Regulator</mat-label> -->\r\n    <!-- <mat-label >Edit Regulator</mat-label> -->\r\n    <input matInput  formControlName=\"title\" >\r\n    </mat-form-field>\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-2 offset-8 \">\r\n            <button mat-raised-button (click)=\"closeDialog()\">Close</button>\r\n        </div>\r\n        <div class=\"col-sm-2  \">\r\n            <button mat-raised-button *ngIf=\"dataRec\" [disabled]=\"!editTitle.valid\"(click)=\"onFormSubmit()\">Update</button>\r\n            <button mat-raised-button  *ngIf=\"!dataRec\"  [disabled]=\"!editTitle.valid\"(click)=\"addForm()\">Add</button>\r\n        </div>\r\n    </div>\r\n</form>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { LandingPageInfoServiceService } from 'src/app/utils/services/landing-page-info-service.service';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-add-state-relation',\r\n  templateUrl: './add-state-relation.component.html',\r\n  styleUrls: ['./add-state-relation.component.scss']\r\n})\r\nexport class AddStateRelationComponent implements OnInit {\r\n  SetState!: FormGroup;\r\n  states = null;\r\n  stateId = null;\r\n  JurisdictionData: [];\r\n  safety: [];\r\n  codeData: [];\r\n  regulatorData: [];\r\n  isLinear = false;\r\n\r\n\r\n  constructor(private route: ActivatedRoute, private fb: FormBuilder, private logicalFormInfo: LogicalFormInfoService,\r\n    public router: Router,) { }\r\n\r\n  ngOnInit(): void {\r\n    this.SetState = this.fb.group({\r\n      jurisdictionId: ['', Validators.required],\r\n      safetyLegislationId: ['', Validators.required],\r\n      regulatorId: ['', Validators.required],\r\n\r\n    });\r\n    this.route\r\n      .queryParams\r\n      .subscribe((id) => {\r\n        console.log(id);\r\n        this.stateId = id.id;\r\n        this.logicalFormInfo.getstatesById(this.stateId).subscribe((res: any) => {\r\n          console.log(\"getstatesById=>\", res);\r\n          this.states = res.data;\r\n          console.log(\"states\", this.states);\r\n          if (this.states.set == true) {\r\n            this.SetState.patchValue({\r\n              jurisdictionId: this.states.jurisdictionId,\r\n              safetyLegislationId: this.states.safetyLegislationId,\r\n              regulatorId: this.states.regulatorId,\r\n\r\n            });\r\n          }\r\n        })\r\n      });\r\n\r\n\r\n    this.getAllJurisdiction();\r\n    this.getAllSafe();\r\n    this.getAllRegulator();\r\n\r\n  }\r\n\r\n  getAllRegulator() {\r\n    this.logicalFormInfo.getAllRegulator().subscribe((res: any) => {\r\n      console.log(\"this.regulatorData\", res.data)\r\n      this.regulatorData = res.data;\r\n\r\n    })\r\n  }\r\n\r\n  getAllSafe() {\r\n    this.logicalFormInfo.getAllSafety().subscribe((res: any) => {\r\n      console.log(\"this.safety\", res)\r\n      this.safety = res.data\r\n    })\r\n  }\r\n  getAllJurisdiction() {\r\n    this.logicalFormInfo.getAllJurisdiction().subscribe((res: any) => {\r\n      console.log('JurisdictionData=>', res);\r\n      this.JurisdictionData = res.data;\r\n    });\r\n  }\r\n\r\n  setRelation() {\r\n    let data = {\r\n      set: true,\r\n      title: this.states.title,\r\n      jurisdictionId: this.SetState.get('jurisdictionId').value,\r\n      safetyLegislationId: this.SetState.get('safetyLegislationId').value,\r\n      regulatorId: this.SetState.get('regulatorId').value,\r\n    }\r\n    console.log(\"data=>\", data)\r\n    console.log(\"stateId=>\", this.stateId)\r\n    this.logicalFormInfo.updateStates(data, this.stateId).subscribe((res: any) => {\r\n      console.log('updateStates=>', res);\r\n\r\n      Swal.fire({\r\n        title: 'Updated successfully',\r\n        showConfirmButton: false,\r\n        timer: 1200,\r\n      });\r\n      this.router.navigate(['/admin/stateRel/setState'])\r\n    });\r\n\r\n  }\r\n}\r\n","<div class=\"btn btn-outline-primary\" [routerLink]=\"['/admin/stateRel/setState']\">\r\n    <i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\r\n  </div>\r\n  <div class=\"ml-2\">\r\n    <h2>States Relation :&nbsp;{{ states?.title }}</h2>\r\n  </div>\r\n  \r\n      <!-- <ng-template matStepLabel>Jurisdiction</ng-template> -->\r\n      <!-- <h3 class=\"text-center mt-3\">Jurisdiction</h3> -->\r\n      <!-- <div class=\"row \"  [formGroup]=\"SetState\"> -->\r\n          <!-- <div class=\"col-1 my-auto\"> \r\n              <button class=\"btn\" matStepperPrevious><i class=\"fas fa-arrow-left\"></i></button>\r\n          </div> -->\r\n          <!-- <div class=\"col-4\">\r\n              <mat-form-field class=\"container\" appearance=\"fill\">\r\n                  <mat-label class=\"text-center \">Jurisdiction</mat-label>\r\n                  <mat-select formControlName=\"jurisdiction\">\r\n                    <mat-select-trigger>\r\n                      <span\r\n                        *ngIf=\"!SetState.get('jurisdiction').value?.length\"\r\n                        class=\"example-additional-selection\"\r\n                      >\r\n                      </span>\r\n                     \r\n                    </mat-select-trigger>\r\n                    <mat-option\r\n                      *ngFor=\"let parameter of JurisdictionData\"\r\n                      [value]=\"parameter._id\"\r\n                    >\r\n                      {{ parameter.title }}</mat-option\r\n                    >\r\n                  </mat-select>\r\n                </mat-form-field>\r\n          </div> -->\r\n          <!-- <div class=\"col-4\">\r\n            <mat-form-field class=\"container\" appearance=\"fill\">\r\n              <mat-label>Safety Legislation</mat-label>\r\n              <mat-select formControlName=\"safe\">\r\n                <mat-select-trigger>\r\n                  <span\r\n                    *ngIf=\"!SetState.get('safe').value?.length\"\r\n                    class=\"example-additional-selection\"\r\n                  >\r\n                  </span>\r\n                 \r\n                </mat-select-trigger>\r\n                <mat-option\r\n                  *ngFor=\"let parameter of safety\"\r\n                  [value]=\"parameter._id\"\r\n                  >{{ parameter.act }}{{ parameter.regulation }}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div> -->\r\n          <!-- <div class=\"col-3\">\r\n            <mat-form-field class=\"container\" appearance=\"fill\">\r\n                <mat-label>Code Of Practice</mat-label>\r\n                \r\n                <mat-select formControlName=\"COP\">\r\n                  <mat-select-trigger>\r\n                    <span\r\n                      *ngIf=\"!SetState.get('COP').value?.length\"\r\n                      class=\"example-additional-selection\"\r\n                    >\r\n                    </span>\r\n                    <span\r\n                      *ngIf=\"SetState.get('COP').value?.length == 1\"\r\n                      class=\"example-additional-selection\"\r\n                    >\r\n                      One Item selected\r\n                    </span>\r\n                    <span\r\n                      *ngIf=\"SetState.get('COP').value?.length > 1\"\r\n                      class=\"example-additional-selection\"\r\n                    >\r\n                      More than one selected\r\n                    </span>\r\n                  </mat-select-trigger>\r\n                  <mat-option\r\n                    *ngFor=\"let parameter of codeData\"\r\n                    [value]=\"parameter._id\"\r\n                    >{{ parameter.title }}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n        </div> -->\r\n        <!-- <div class=\"col-4\">\r\n          <mat-form-field class=\"container\" appearance=\"fill\">\r\n              <mat-label>Regulator</mat-label>\r\n              <mat-select formControlName=\"regulator\">\r\n                <mat-select-trigger>\r\n                  <span\r\n                    *ngIf=\"!SetState.get('regulator').value?.length\"\r\n                    class=\"example-additional-selection\"\r\n                  >\r\n                  </span>\r\n                 \r\n                </mat-select-trigger>\r\n                <mat-option *ngFor=\"let parameter of regulatorData\" [value]=\"parameter._id\"\r\n                  >{{ parameter.title }}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n      </div> -->\r\n      <!-- <div class=\"ml-3 mt-3\">\r\n        <button *ngIf=\"!states?.set\" class=\"btn btn-primary\">Set</button>\r\n        <button *ngIf=\"states?.set\" class=\"btn btn-primary\">Update</button>\r\n      </div> -->\r\n          <!-- <div class=\"col-1 my-auto\">\r\n              <button class=\"btn\" matStepperNext><i class=\"fas fa-arrow-right\"></i></button>\r\n          </div> -->\r\n      <!-- </div> -->\r\n  \r\n     <div class=\"row\" [formGroup]=\"SetState\">\r\n       \r\n          <div class=\"col-4\">\r\n            <select class=\"form-select form-control\" aria-label=\"Default select example\" formControlName=\"jurisdictionId\" >\r\n               <option value=\"\" selected hidden> Select Jurisdiction</option>\r\n              <option  *ngFor=\"let parameter of JurisdictionData\"\r\n              [value]=\"parameter._id\">{{ parameter.title }}</option>\r\n            \r\n            </select>\r\n            </div>\r\n            <div class=\"col-4\">\r\n              <select class=\"form-select form-control\" aria-label=\"Default select example\" formControlName=\"safetyLegislationId\"  >\r\n                 <option value=\"\" selected hidden> Select Safety Legislation</option>\r\n                <option *ngFor=\"let parameter of safety\"\r\n                [value]=\"parameter._id\">{{ parameter.act }}{{ parameter.regulation }}</option>\r\n              \r\n              </select>\r\n              </div>\r\n              <div class=\"col-4 \">\r\n                <select class=\"form-select form-control\" aria-label=\"Default select example\" formControlName=\"regulatorId\" >\r\n                   <option value=\"\" selected hidden> Select Regulator</option>\r\n                  <option *ngFor=\"let parameter of regulatorData\"\r\n                  [value]=\"parameter._id\">{{ parameter.title }}</option>\r\n                \r\n                </select>\r\n                </div>\r\n                <div class=\"ml-3 mt-3\">\r\n                  <button *ngIf=\"!states?.set\"  class=\"btn btn-primary\" (click)=\"setRelation()\" >Set</button>\r\n                  <button *ngIf=\"states?.set\" class=\"btn btn-primary\"(click)=\" setRelation() \">Update</button>\r\n                </div>\r\n      </div>\r\n   \r\n      \r\n    "]}