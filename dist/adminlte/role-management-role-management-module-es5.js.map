{"version":3,"sources":["webpack:///src/app/role-management/role-management.component.ts","webpack:///src/app/role-management/role-management.component.html","webpack:///src/app/role-management/role-management-routing.module.ts","webpack:///src/app/utils/services/role-management.service.ts","webpack:///src/app/role-management/add-role/add-role.component.ts","webpack:///src/app/role-management/add-role/add-role.component.html","webpack:///src/app/role-management/checkbox/checkbox.component.ts","webpack:///src/app/role-management/checkbox/checkbox.component.html","webpack:///src/app/role-management/role-management.module.ts"],"names":["RoleManagementComponent","setTitle","dialog","id","dialogRef","open","height","width","data","action","userId","afterClosed","subscribe","result","console","log","openDialog","selector","templateUrl","styleUrls","routes","path","component","RoleManagementRoutingModule","forChild","imports","exports","RoleManagementService","https","apiUrl","post","get","providedIn","AddRoleComponent","fb","roleService","addRole","group","role","required","value","res","fire","close","onSubmit","CheckboxComponent","displayedColumns","formArr","ELEMENT_DATA","getAllRole","e","$event","changes","row","roleArr","tempArray","sort","rolemanagment","index","dashboardAccess","Arry","Arry1","RoleManagementModule","declarations"],"mappings":"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","file":"role-management-role-management-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { SetTitleService } from 'src/app/utils/services/set-title.service';\r\nimport { AddRoleComponent } from './add-role/add-role.component';\r\n@Component({\r\n  selector: 'app-role-management',\r\n  templateUrl: './role-management.component.html',\r\n  styleUrls: ['./role-management.component.scss']\r\n})\r\nexport class RoleManagementComponent implements OnInit {\r\n\r\n  constructor(\r\n    private setTitle: SetTitleService, \r\n    private dialog: MatDialog,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.setTitle.setTitle('WHS-Role Management');\r\n    \r\n  }\r\n  openDialog(id) {\r\n\t\tlet dialogRef = this.dialog.open(AddRoleComponent, {\r\n      height:'50%',\r\n     width:'500px',\r\n    \r\n\t\t\tdata: {\r\n\t\t\t\taction: \"new\",\r\n\t\t\t\tuserId: id,\r\n\t\t\t},\r\n\t\t});\r\n\t\tdialogRef.afterClosed().subscribe((result) => {\r\n      if(result === 'true' ){\r\n       \r\n      }\r\n\t\t\tconsole.log(\"AddRoleComponent -> openDialog -> result\", result);\r\n\t\t\t\r\n\t\t\tconsole.log(\"The dialog was closed\");\r\n\t\t});\r\n\t}\r\n\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col mt-2 mb-2\">\r\n      <button (click)=\"openDialog('')\" _ngcontent-hqi-c400=\"\" type=\"button\"\r\n          class=\"btn btn-outline-primary mt-1 mr-2 float-right\"><i _ngcontent-hqi-c400=\"\" class=\"fas fa-plus\"></i> Add Role\r\n        </button>\r\n      </div> \r\n  </div>\r\n  <app-checkbox></app-checkbox>\r\n<!-- <mat-tab-group mat-align-tabs=\"start\">\r\n    <mat-tab label=\"Content-1\"><app-checkbox></app-checkbox></mat-tab>\r\n    <mat-tab label=\"Content-2\">Content-2</mat-tab>\r\n    <mat-tab label=\"Content-3\">Content-3</mat-tab>\r\n    <mat-tab label=\"Content-4\">Content-4</mat-tab>\r\n  </mat-tab-group> -->\r\n  \r\n  \r\n\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CheckboxComponent } from './checkbox/checkbox.component';\r\nimport { RoleManagementComponent } from './role-management.component';\r\n\r\nconst routes: Routes = [\r\n  {path:'',component:RoleManagementComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class RoleManagementRoutingModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RoleManagementService {\r\n  apiUrl = environment.apiUrl;\r\n\r\n  constructor(private https: HttpClient) { }\r\n\r\n\r\n  ///role management///\r\n  addRole(data) {\r\n    return this.https.post(this.apiUrl + 'role/add', data);\r\n  }\r\n  // addMultipleRisk(data) {\r\n  //   return this.https.post(this.apiUrl + 'risk/add/multiple', data);\r\n  // }\r\n  // updateRisk(data, id) {\r\n  //   return this.https.put(this.apiUrl + 'risk/update/' + id, data);\r\n  // }\r\n  // deleteRisk(id) {\r\n  //   return this.https.delete(this.apiUrl + 'risk/delete/' + id)\r\n  // }\r\n  getAllRole() {\r\n    return this.https.get(this.apiUrl + 'role/getAll')\r\n  }\r\n  // getRiskById(id) {\r\n  //   return this.https.get(this.apiUrl + 'risk/get/' + id)\r\n  // }\r\n}\r\n","import { Component, OnInit,Inject } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA,\r\n} from '@angular/material/dialog';\r\nimport Swal from 'sweetalert2';\r\nimport {RoleManagementService}from'../../utils/services/role-management.service';\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n\r\n} from '@angular/forms';\r\n@Component({\r\n  selector: 'app-add-role',\r\n  templateUrl: './add-role.component.html',\r\n  styleUrls: ['./add-role.component.scss']\r\n})\r\nexport class AddRoleComponent implements OnInit {\r\n  addRole!: FormGroup;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private roleService : RoleManagementService,\r\n    public dialogRef: MatDialogRef<AddRoleComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.addRole = this.fb.group({\r\n    \r\n      role: ['', Validators.required],\r\n    \r\n     \r\n    });\r\n    console.log('', data);\r\n  }\r\n  \r\n\r\n  ngOnInit(): void {\r\n   \r\n  }\r\n  onSubmit() {\r\n    console.log(this.addRole.value)\r\n    \r\n      this.roleService.addRole(this.addRole.value).subscribe((res)=>{\r\n        console.log(\"res\",res);\r\n        \r\n        Swal.fire('Added Successfully')\r\n        this.dialogRef.close();\r\n      })\r\n  \r\n    // Swal.fire('Added Successfully')\r\n    // this.dialogRef.close();\r\n  }\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","\r\n<section>\r\n    <form [formGroup]=\"addRole\">\r\n      <div mat-dialog-title class=\"dialog-title\">\r\n      <h2 class=\"text-center pt-2\">\r\n        <p style=\"text-align: center\"> Add Role Management</p>\r\n      </h2>\r\n      <button type=\"button\" class=\"close\" \r\n      style=\"font-size: 30px;\"\r\n    \r\n    (click)=\"close()\" aria-label=\"Close\">\r\n      <span aria-hidden=\"true\">×</span>\r\n    </button>\r\n      </div>\r\n      <hr />\r\n      <div>\r\n        <div class=\"row\">\r\n          <div class=\"col-12 mt-2 mb-2\">\r\n            <p for=\"exampleFormControlInput1\" class=\"form-Label\">Role</p>\r\n            <input\r\n              type=\"text\"\r\n              formControlName=\"role\"\r\n              style=\"height: 50px\"\r\n              class=\"form-control\"\r\n              id=\"heading\"\r\n            />\r\n          </div>\r\n       </div>\r\n       <br>\r\n       \r\n        </div>\r\n      \r\n        <br>\r\n        <div class=\"row\">\r\n          <div class=\"col d-flex justify-content-center\">\r\n            <button class=\"btn btn-primary \" (click)=\"onSubmit()\" [disabled]=\"addRole.invalid \" > \r\n              Submit\r\n            </button>\r\n          </div>\r\n        </div>\r\n      \r\n    </form>\r\n </section>\r\n  ","import { Component, Input, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table'\r\nimport {FormBuilder,FormGroup,Validators,FormArray,FormControl,} from '@angular/forms';\r\nimport{RoleManagementService}from '../../utils/services/role-management.service'\r\n@Component({\r\n  selector: 'app-checkbox',\r\n  templateUrl: './checkbox.component.html',\r\n  styleUrls: ['./checkbox.component.scss']\r\n})\r\nexport class CheckboxComponent implements OnInit {\r\n // displayedColumns: string[] = [\"role\",'dynamicform',\"Logicalforms\",\"FormConfigure\",\"SubscriptionRates\",'LogicalFormData','CMS','StateRelation'];\r\n rolemanagment: FormGroup;\r\n \r\n displayedColumns: string[] = [\r\n  \"role\",\r\n\r\n  \"dashboard.Access\",\r\n  \"dashboard.View\",\r\n\r\n  \"dynamicForm.Access\",\r\n  \"dynamicForm.Add\",\r\n  \"dynamicForm.Delete\",\r\n  \"dynamicForm.Update\",\r\n  \"dynamicForm.View\",\r\n\r\n  \"Logicalforms.Access\",\r\n  \"Logicalforms.Add\",\r\n  \"Logicalforms.Delete\",\r\n  \"Logicalforms.Update\",\r\n  \"Logicalforms.View\",\r\n\r\n  \"FormConfigure.Access\",\r\n  \"FormConfigure.Add\",\r\n  \"FormConfigure.Delete\",\r\n  \"FormConfigure.Update\",\r\n  \"FormConfigure.View\",\r\n\r\n  \"SubscriptionRates.Access\",\r\n  \"SubscriptionRates.Add\",\r\n  \"SubscriptionRates.Delete\",\r\n  \"SubscriptionRates.Update\",\r\n  \"SubscriptionRates.View\",\r\n\r\n  \"LogicalFormData.Access\",\r\n  \"LogicalFormData.Add\",\r\n  \"LogicalFormData.Delete\",\r\n  \"LogicalFormData.Update\",\r\n  \"LogicalFormData.View\",\r\n\r\n  \"CMS.Access\",\r\n  \"CMS.Add\",\r\n  \"CMS.Delete\",\r\n  \"CMS.Update\",\r\n  \"CMS.View\",\r\n\r\n  \"StateRelation.Access\",\r\n  \"StateRelation.Add\",\r\n  \"StateRelation.Delete\",\r\n  \"StateRelation.Update\",\r\n  \"StateRelation.View\",\r\n\r\n  \r\n];\r\n showDatas: any;\r\n  tempArray: MatTableDataSource <any>;\r\n  // @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @Input()Arry:any;\r\n  @Output()Arry1:any;\r\n  roleArr:any;\r\n  formArr=false;\r\n\r\n  constructor(\r\n    private fb:FormBuilder,\r\n    private roleService :RoleManagementService,\r\n    \r\n    ) { \r\n      //this.getAllRole()\r\n    // this.rolemanagment = this.fb.group({\r\n    \r\n    // [this.roleArr[0].role+\"form\"]:[''],\r\n    // [this.roleArr[0].role+\"view\"]:[''],\r\n    // [this.roleArr[0].role+\"add\"]:[''],\r\n    // [this.roleArr[0].role+\"update\"]:[''],\r\n    // [this.roleArr[0].role+\"delete\"]:[''],\r\n       \r\n    // });\r\n  }\r\n  // roles = [\r\n  //   { value: \"SuperAdmin\",name:\"SuperAdmin\", Dynamicform:false,Logicalforms:false,FormConfigure:false,SubscriptionRates:false,LogicalFormData:false,CMS:false,StateRelation:false},\r\n  //   { value: \"Admin\", name:\"Admin\",Dynamicform:false,Logicalforms:false,FormConfigure:false,SubscriptionRates:false,LogicalFormData:false,CMS:false,StateRelation:false },\r\n  //   { value: \"Employee\", name:\"Employee\",Logicalforms:false,FormConfigure:false,SubscriptionRates:false,LogicalFormData:false,CMS:false,StateRelation:false },\r\n  //   { value: \"Adminstration\",name:\"Adminstration\",Logicalforms:false,FormConfigure:false,SubscriptionRates:false,LogicalFormData:false,CMS:false,StateRelation:false },\r\n  //   { value: \"Worker\",name:\"Worker\",Logicalforms:false,FormConfigure:false,SubscriptionRates:false,LogicalFormData:false,CMS:false,StateRelation:false },\r\n  // ];\r\n  // chickbox:string[]=[\r\n  //   'view','add','delete','update'\r\n  // ]\r\n  // titel:string[]=[\r\n  //   'view','add','delete','update'\r\n  // ]\r\n\r\n\r\n  ELEMENT_DATA: any[] = [\r\n    {\r\n      role: \"SuperAdmin\",\r\n      id: 1\r\n    },\r\n    {\r\n      role: \"Admin\",\r\n      id: 2\r\n    },\r\n    {\r\n      role: \"Employee\",\r\n      id: 3\r\n    },\r\n    {\r\n      role: \"Adminstration\",\r\n      id:4\r\n    },\r\n    {\r\n      role: \"Worker\",\r\n      id:5\r\n    },\r\n    \r\n  ];\r\n\r\n  ngOnInit(): void {\r\n   \r\n    this.getAllRole()\r\n  }\r\n  ngAfterViewInit() {\r\n    // this.tempArray.paginator = this.paginator;\r\n  }\r\n\r\n  doCheckboxCheck(e): void {\r\n   // this.roles[index].checked = !this.roles[index].checked;\r\n   console.log(\"event\",e);\r\n   //console.log(\"aaaa\",this.rolemanagment.get('Access').value);\r\n   \r\n   \r\n  }\r\n  applyFilter($event){\r\n\r\n  } \r\n  ngOnChanges(changes: any): void {\r\n\r\n    \r\n  }\r\n  getdata( row){\r\n    console.log(\"row\",row);\r\n    \r\n  }\r\n  getAllRole(){\r\n    this.roleService.getAllRole().subscribe((res:any)=>{\r\n      \r\n      this.roleArr=res.data\r\n      console.log(\"res\", this.roleArr);\r\n      this.tempArray = new MatTableDataSource<any>(this.roleArr);\r\n      // this.tempArray.paginator = this.paginator;\r\n      this.tempArray.sort = this.sort; \r\n     \r\n    //   for (let index = 0; index < this.roleArr.length; index++) {\r\n    //     this.rolemanagment.addControl( this.roleArr[index].role ,new FormArray([]))\r\n\r\n    //     console.log(this.rolemanagment.value);\r\n    //     // console.log(\"index\",index);\r\n      \r\n    //     this.add2(index).push(this.newAction2()); \r\n    //     this.formArr=true\r\n    // }\r\n\r\n    this.rolemanagment = this.fb.group({\r\n    \r\n      [this.roleArr[0].role+\"form\"]:[''],\r\n      [this.roleArr[0].role+\"view\"]:[''],\r\n      [this.roleArr[0].role+\"add\"]:[''],\r\n      [this.roleArr[0].role+\"update\"]:[''],\r\n      [this.roleArr[0].role+\"delete\"]:[''],\r\n         \r\n      });\r\n\r\n    })\r\n  }\r\n  add2(index): FormArray {\r\n    return this.rolemanagment.get( this.roleArr[index].role) as FormArray;\r\n  }\r\n  newAction2(): FormGroup {\r\n    return this.fb.group({\r\n      dashboardAccess: ['', Validators.required],\r\n    });\r\n  }\r\n  onSubmit(){\r\n    console.log(\"submit\",this.rolemanagment.value);\r\n    \r\n  }\r\n}\r\n","\r\n<div class=\"row\">\r\n  <div class=\"col ml-2 pt-3\">\r\n    <h1>Role Management List</h1>\r\n  </div>\r\n  \r\n    <div class=\"col mt-2 mb-2\">\r\n        <button  _ngcontent-hqi-c400=\"\" type=\"button\"\r\n            class=\"btn btn-primary mt-1 mr-5 float-md-right\" (click)=\"onSubmit()\"> Submit\r\n          </button>\r\n        </div> \r\n    </div>\r\n  <!-- <div class=\"col-6\">\r\n    <mat-form-field>\r\n      <input matInput #input placeholder=\"Search\" (keyup)=\"applyFilter($event)\" />\r\n    </mat-form-field>\r\n  </div> -->\r\n  <div class=\"\" *ngIf=\"false\">\r\n    <table mat-table [dataSource]=\"tempArray\" matSort>\r\n      <!-- Position Column -->\r\n      <ng-container matColumnDef=\"role\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Role</th>\r\n        <td mat-cell *matCellDef=\"let element; let i = index\"><span class=\"flex-start pl-0\">{{ element.value }}</span></td>\r\n      </ng-container>\r\n  \r\n      <!-- Name Column -->\r\n  \r\n      <!-- Name Column -->\r\n      <ng-container matColumnDef=\"Dynamicform\">\r\n        <th mat-header-cell *matHeaderCellDef >Dynamic form</th>\r\n        <td mat-cell *matCellDef=\"let element\">\r\n          <!-- <span class=\"flex-start\">{{ element.value }}</span> -->\r\n          <mat-checkbox class=\"example-margin\"(change)=\"doCheckboxCheck($event)\"></mat-checkbox>\r\n        </td>\r\n      </ng-container>\r\n  \r\n      <ng-container matColumnDef=\"Logicalforms\">\r\n        <th mat-header-cell *matHeaderCellDef>Logical forms</th>\r\n        <td mat-cell *matCellDef=\"let element\">\r\n          <mat-checkbox class=\"example-margin\"(change)=\"doCheckboxCheck($event)\"></mat-checkbox>\r\n      \r\n        </td>\r\n          <!-- <button\r\n            mat-icon-button\r\n            class=\"mr-2\"\r\n            aria-label=\"Example icon button with a delete icon\"\r\n            (click)=\"edit(element)\"\r\n          >\r\n            <mat-icon>edit</mat-icon>\r\n          </button>\r\n          <button\r\n            mat-icon-button\r\n            aria-label=\"Example icon button with a delete icon\"\r\n            (click)=\"delete(element)\"\r\n          >\r\n            <mat-icon>delete</mat-icon>\r\n          </button>\r\n          <button\r\n            mat-icon-button\r\n            class=\"mr-2\"\r\n            aria-label=\"Example icon button with a delete icon\"\r\n            [routerLink]=\"['/admin/siteInfo/siteinspectiontopic/' + element._id]\"\r\n          >\r\n            <mat-icon>launch</mat-icon>\r\n          </button> -->\r\n        \r\n      </ng-container>\r\n        <ng-container matColumnDef=\"FormConfigure\">\r\n        <th mat-header-cell *matHeaderCellDef>Form Configure</th>\r\n        <td mat-cell *matCellDef=\"let element\">\r\n          <mat-checkbox class=\"example-margin\" (change)=\"doCheckboxCheck($event)\"></mat-checkbox>\r\n        \r\n        </td>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"SubscriptionRates\">\r\n        <th mat-header-cell *matHeaderCellDef>Subscription Rates</th>\r\n        <td mat-cell *matCellDef=\"let element\">\r\n          <mat-checkbox class=\"example-margin\" (change)=\"doCheckboxCheck($event)\"></mat-checkbox>\r\n        \r\n        </td>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"LogicalFormData\">\r\n        <th mat-header-cell *matHeaderCellDef>Logical Form Data</th>\r\n        <td mat-cell *matCellDef=\"let element\">\r\n          <mat-checkbox class=\"example-margin\" (change)=\"doCheckboxCheck($event)\"></mat-checkbox>\r\n        \r\n        </td>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"CMS\">\r\n        <th mat-header-cell *matHeaderCellDef>CMS</th>\r\n        <td mat-cell *matCellDef=\"let element\">\r\n          <mat-checkbox    class=\"example-margin\" (change)=\"doCheckboxCheck($event)\"></mat-checkbox>\r\n        \r\n        </td>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"StateRelation\">\r\n        <th mat-header-cell *matHeaderCellDef>State Relation</th>\r\n        <td mat-cell *matCellDef=\"let element\">\r\n          <mat-checkbox    class=\"example-margin\" (change)=\"doCheckboxCheck($event)\"></mat-checkbox>\r\n        \r\n    \r\n        </td>\r\n      </ng-container>\r\n      \r\n  \r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n      <!-- <tr class=\"mat-row\" *matNoDataRow>\r\n        <td class=\"mat-cell\" colspan=\"4\">Data Not Found \"{{ input.value }}\"</td>\r\n      </tr> -->\r\n    </table>\r\n  \r\n    <!-- <mat-paginator\r\n      [pageSizeOptions]=\"[5,10,20]\"\r\n      showFirstLastButtons\r\n      aria-label=\"Select page of periodic elements\"\r\n    >\r\n    </mat-paginator>\r\n   -->\r\n<!-- /////////////////////////////////// -->\r\n\r\n  </div>\r\n\r\n  <div class=\"example-container mat-elevation-z8 overflow-auto\">\r\n    <table mat-table [dataSource]=\"tempArray\" class=\"mat-elevation-z8 \">\r\n  \r\n      <ng-container matColumnDef=\"role\" sticky>\r\n        <th [ngStyle]=\"{'display': 'none'}\" mat-header-cell *matHeaderCellDef [attr.rowspan]=\"2\"> Role </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.role}} </td>\r\n      </ng-container>\r\n\r\n\r\n        <!-- ////////////// -->\r\n  \r\n        <ng-container matColumnDef=\"dashboard.Access\">\r\n          <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Access </th>\r\n          <td mat-cell *matCellDef=\"let element\">  <mat-checkbox class=\"example-margin\" (change)=\"doCheckboxCheck($event)\">  \r\n          </mat-checkbox>\r\n        </td>\r\n        </ng-container>\r\n    \r\n        <ng-container matColumnDef=\"dashboard.View\">\r\n          <th mat-header-cell *matHeaderCellDef  class=\"p-2\" > View </th>\r\n          <td mat-cell *matCellDef=\"let element\" class=\"similar-cell-width\"> <mat-checkbox class=\"example-margin\" (change)=\"doCheckboxCheck($event)\">  \r\n          </mat-checkbox>\r\n        </td>\r\n        </ng-container>\r\n  \r\n    <!-- ////////////// -->\r\n      <ng-container matColumnDef=\"dynamicForm.Access\">\r\n        <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Access </th>\r\n        <td mat-cell *matCellDef=\"let element\">  <mat-checkbox class=\"example-margin\" (change)=\"doCheckboxCheck($event)\">  \r\n        </mat-checkbox>\r\n      </td>\r\n      </ng-container>\r\n  \r\n      <ng-container matColumnDef=\"dynamicForm.View\">\r\n        <th mat-header-cell *matHeaderCellDef class=\"p-2\" > View </th>\r\n        <td mat-cell *matCellDef=\"let element\" class=\"similar-cell-width\"> <mat-checkbox class=\"example-margin\" (change)=\"doCheckboxCheck($event)\">  \r\n        </mat-checkbox>\r\n      </td>\r\n      </ng-container>\r\n  \r\n      <ng-container matColumnDef=\"dynamicForm.Delete\">\r\n        <th mat-header-cell *matHeaderCellDef class=\"p-2\"> Delete </th>\r\n        <td mat-cell *matCellDef=\"let element\"> <mat-checkbox class=\"example-margin\" (change)=\"doCheckboxCheck($event)\">  \r\n        </mat-checkbox>\r\n      </td>\r\n      </ng-container>\r\n  \r\n      <ng-container matColumnDef=\"dynamicForm.Update\">\r\n        <th mat-header-cell *matHeaderCellDef class=\"p-2\"> Update </th>\r\n        <td mat-cell *matCellDef=\"let element\" class=\"similar-cell-width\"> <mat-checkbox class=\"example-margin\" (change)=\"doCheckboxCheck($event)\">  \r\n        </mat-checkbox>\r\n      </td>\r\n      </ng-container>\r\n  \r\n      <ng-container matColumnDef=\"dynamicForm.Add\">\r\n        <th mat-header-cell *matHeaderCellDef class=\"p-2\"> Add </th>\r\n        <td mat-cell *matCellDef=\"let element\"> <mat-checkbox class=\"example-margin\" (change)=\"doCheckboxCheck($event)\">  \r\n        </mat-checkbox>\r\n      </td>\r\n      </ng-container>\r\n\r\n      <!-- ////////////// -->\r\n  \r\n      <ng-container matColumnDef=\"Logicalforms.Access\">\r\n        <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Access </th>\r\n        <td mat-cell *matCellDef=\"let element\">  <mat-checkbox class=\"example-margin\" (change)=\"doCheckboxCheck($event)\">  \r\n        </mat-checkbox>\r\n      </td>\r\n      </ng-container>\r\n  \r\n      <ng-container matColumnDef=\"Logicalforms.View\">\r\n        <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> View </th>\r\n        <td mat-cell *matCellDef=\"let element\" class=\"similar-cell-width\"> <mat-checkbox class=\"example-margin\" (change)=\"doCheckboxCheck($event)\">  \r\n        </mat-checkbox>\r\n      </td>\r\n      </ng-container>\r\n  \r\n      <ng-container matColumnDef=\"Logicalforms.Delete\">\r\n        <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Delete </th>\r\n        <td mat-cell *matCellDef=\"let element\"> <mat-checkbox class=\"example-margin\" (change)=\"doCheckboxCheck($event)\">  \r\n        </mat-checkbox>\r\n      </td>\r\n      </ng-container>\r\n  \r\n      <ng-container matColumnDef=\"Logicalforms.Update\">\r\n        <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Update </th>\r\n        <td mat-cell *matCellDef=\"let element\" class=\"similar-cell-width\"> <mat-checkbox class=\"example-margin\" (change)=\"doCheckboxCheck($event)\">  \r\n        </mat-checkbox>\r\n      </td>\r\n      </ng-container>\r\n  \r\n      <ng-container matColumnDef=\"Logicalforms.Add\">\r\n        <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Add </th>\r\n        <td mat-cell *matCellDef=\"let element\"> <mat-checkbox class=\"example-margin\" (change)=\"doCheckboxCheck($event)\">  \r\n        </mat-checkbox>\r\n      </td>\r\n      </ng-container>\r\n\r\n         <!-- ////////////// -->\r\n  \r\n         <ng-container matColumnDef=\"FormConfigure.Access\">\r\n          <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Access </th>\r\n          <td mat-cell *matCellDef=\"let element\">  <mat-checkbox class=\"example-margin\" (change)=\"doCheckboxCheck($event)\">  \r\n          </mat-checkbox>\r\n        </td>\r\n        </ng-container>\r\n    \r\n        <ng-container matColumnDef=\"FormConfigure.View\">\r\n          <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> View </th>\r\n          <td mat-cell *matCellDef=\"let element\" class=\"similar-cell-width\"> <mat-checkbox class=\"example-margin\" (change)=\"doCheckboxCheck($event)\">  \r\n          </mat-checkbox>\r\n        </td>\r\n        </ng-container>\r\n    \r\n        <ng-container matColumnDef=\"FormConfigure.Delete\">\r\n          <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Delete </th>\r\n          <td mat-cell *matCellDef=\"let element\"> <mat-checkbox class=\"example-margin\" (change)=\"doCheckboxCheck($event)\">  \r\n          </mat-checkbox>\r\n        </td>\r\n        </ng-container>\r\n    \r\n        <ng-container matColumnDef=\"FormConfigure.Update\">\r\n          <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Update </th>\r\n          <td mat-cell *matCellDef=\"let element\" class=\"similar-cell-width\"> <mat-checkbox class=\"example-margin\" (change)=\"doCheckboxCheck($event)\">  \r\n          </mat-checkbox>\r\n        </td>\r\n        </ng-container>\r\n    \r\n        <ng-container matColumnDef=\"FormConfigure.Add\">\r\n          <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Add </th>\r\n          <td mat-cell *matCellDef=\"let element\"> <mat-checkbox class=\"example-margin\" (change)=\"doCheckboxCheck($event)\">  \r\n          </mat-checkbox>\r\n        </td>\r\n        </ng-container>\r\n\r\n            <!-- ////////////// -->\r\n  \r\n            <ng-container matColumnDef=\"SubscriptionRates.Access\">\r\n              <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Access </th>\r\n              <td mat-cell *matCellDef=\"let element\">  <mat-checkbox class=\"example-margin\" (change)=\"doCheckboxCheck($event)\">  \r\n              </mat-checkbox>\r\n            </td>\r\n            </ng-container>\r\n        \r\n            <ng-container matColumnDef=\"SubscriptionRates.View\">\r\n              <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> View </th>\r\n              <td mat-cell *matCellDef=\"let element\" class=\"similar-cell-width\"> <mat-checkbox class=\"example-margin\" (change)=\"doCheckboxCheck($event)\">  \r\n              </mat-checkbox>\r\n            </td>\r\n            </ng-container>\r\n        \r\n            <ng-container matColumnDef=\"SubscriptionRates.Delete\">\r\n              <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Delete </th>\r\n              <td mat-cell *matCellDef=\"let element\"> <mat-checkbox class=\"example-margin\" (change)=\"doCheckboxCheck($event)\">  \r\n              </mat-checkbox>\r\n            </td>\r\n            </ng-container>\r\n        \r\n            <ng-container matColumnDef=\"SubscriptionRates.Update\">\r\n              <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Update </th>\r\n              <td mat-cell *matCellDef=\"let element\" class=\"similar-cell-width\"> <mat-checkbox class=\"example-margin\" (change)=\"doCheckboxCheck($event)\">  \r\n              </mat-checkbox>\r\n            </td>\r\n            </ng-container>\r\n        \r\n            <ng-container matColumnDef=\"SubscriptionRates.Add\">\r\n              <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Add </th>\r\n              <td mat-cell *matCellDef=\"let element\"> <mat-checkbox class=\"example-margin\" (change)=\"doCheckboxCheck($event)\">  \r\n              </mat-checkbox>\r\n            </td>\r\n            </ng-container>\r\n\r\n            \r\n            <!-- ////////////// -->\r\n  \r\n            <ng-container matColumnDef=\"LogicalFormData.Access\">\r\n              <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Access </th>\r\n              <td mat-cell *matCellDef=\"let element\">  <mat-checkbox class=\"example-margin\" (change)=\"doCheckboxCheck($event)\">  \r\n              </mat-checkbox>\r\n            </td>\r\n            </ng-container>\r\n        \r\n            <ng-container matColumnDef=\"LogicalFormData.View\">\r\n              <th mat-header-cell *matHeaderCellDef  class=\"p-2\" > View </th>\r\n              <td mat-cell *matCellDef=\"let element\" class=\"similar-cell-width\"> <mat-checkbox class=\"example-margin\" (change)=\"doCheckboxCheck($event)\">  \r\n              </mat-checkbox>\r\n            </td>\r\n            </ng-container>\r\n        \r\n            <ng-container matColumnDef=\"LogicalFormData.Delete\">\r\n              <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Delete </th>\r\n              <td mat-cell *matCellDef=\"let element\"> <mat-checkbox class=\"example-margin\" (change)=\"doCheckboxCheck($event)\">  \r\n              </mat-checkbox>\r\n            </td>\r\n            </ng-container>\r\n        \r\n            <ng-container matColumnDef=\"LogicalFormData.Update\">\r\n              <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Update </th>\r\n              <td mat-cell *matCellDef=\"let element\" class=\"similar-cell-width\"> <mat-checkbox class=\"example-margin\" (change)=\"doCheckboxCheck($event)\">  \r\n              </mat-checkbox>\r\n            </td>\r\n            </ng-container>\r\n        \r\n            <ng-container matColumnDef=\"LogicalFormData.Add\">\r\n              <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Add </th>\r\n              <td mat-cell *matCellDef=\"let element\"> <mat-checkbox class=\"example-margin\" (change)=\"doCheckboxCheck($event)\">  \r\n              </mat-checkbox>\r\n            </td>\r\n            </ng-container>\r\n\r\n             <!-- ////////////// -->\r\n  \r\n             <ng-container matColumnDef=\"CMS.Access\">\r\n              <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Access </th>\r\n              <td mat-cell *matCellDef=\"let element\">  <mat-checkbox class=\"example-margin\" (change)=\"doCheckboxCheck($event)\">  \r\n              </mat-checkbox>\r\n            </td>\r\n            </ng-container>\r\n        \r\n            <ng-container matColumnDef=\"CMS.View\">\r\n              <th mat-header-cell *matHeaderCellDef  class=\"p-2\" > View </th>\r\n              <td mat-cell *matCellDef=\"let element\" class=\"similar-cell-width\"> <mat-checkbox class=\"example-margin\" (change)=\"doCheckboxCheck($event)\">  \r\n              </mat-checkbox>\r\n            </td>\r\n            </ng-container>\r\n        \r\n            <ng-container matColumnDef=\"CMS.Delete\">\r\n              <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Delete </th>\r\n              <td mat-cell *matCellDef=\"let element\"> <mat-checkbox class=\"example-margin\" (change)=\"doCheckboxCheck($event)\">  \r\n              </mat-checkbox>\r\n            </td>\r\n            </ng-container>\r\n        \r\n            <ng-container matColumnDef=\"CMS.Update\">\r\n              <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Update </th>\r\n              <td mat-cell *matCellDef=\"let element\" class=\"similar-cell-width\"> <mat-checkbox class=\"example-margin\" (change)=\"doCheckboxCheck($event)\">  \r\n              </mat-checkbox>\r\n            </td>\r\n            </ng-container>\r\n        \r\n            <ng-container matColumnDef=\"CMS.Add\">\r\n              <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Add </th>\r\n              <td mat-cell *matCellDef=\"let element\"> <mat-checkbox class=\"example-margin\" (change)=\"doCheckboxCheck($event)\">  \r\n              </mat-checkbox>\r\n            </td>\r\n            </ng-container>\r\n   \r\n\r\n             <!-- ////////////// -->\r\n  \r\n             <ng-container matColumnDef=\"StateRelation.Access\">\r\n              <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Access </th>\r\n              <td mat-cell *matCellDef=\"let element\">  <mat-checkbox class=\"example-margin\" (change)=\"doCheckboxCheck($event)\">  \r\n              </mat-checkbox>\r\n            </td>\r\n            </ng-container>\r\n        \r\n            <ng-container matColumnDef=\"StateRelation.View\">\r\n              <th mat-header-cell *matHeaderCellDef  class=\"p-2\" > View </th>\r\n              <td mat-cell *matCellDef=\"let element\" class=\"similar-cell-width\"> <mat-checkbox class=\"example-margin\" (change)=\"doCheckboxCheck($event)\">  \r\n              </mat-checkbox>\r\n            </td>\r\n            </ng-container>\r\n        \r\n            <ng-container matColumnDef=\"StateRelation.Delete\">\r\n              <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Delete </th>\r\n              <td mat-cell *matCellDef=\"let element\"> <mat-checkbox class=\"example-margin\" (change)=\"doCheckboxCheck($event)\">  \r\n              </mat-checkbox>\r\n            </td>\r\n            </ng-container>\r\n        \r\n            <ng-container matColumnDef=\"StateRelation.Update\">\r\n              <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Update </th>\r\n              <td mat-cell *matCellDef=\"let element\" class=\"similar-cell-width\"> <mat-checkbox class=\"example-margin\" (change)=\"doCheckboxCheck($event)\">  \r\n              </mat-checkbox>\r\n            </td>\r\n            </ng-container>\r\n        \r\n            <ng-container matColumnDef=\"StateRelation.Add\">\r\n              <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Add </th>\r\n              <td mat-cell *matCellDef=\"let element\"> <mat-checkbox class=\"example-margin\" (change)=\"doCheckboxCheck($event)\">  \r\n              </mat-checkbox>\r\n            </td>\r\n            </ng-container>\r\n  \r\n   \r\n  \r\n  \r\n      <ng-container matColumnDef=\"roleheader\"   sticky>\r\n        <th mat-header-cell *matHeaderCellDef  class=\"roleZIndex\"  [attr.rowspan]=\"2\">\r\n        Role\r\n        </th>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"dashboard\">\r\n        <th mat-header-cell *matHeaderCellDef  [attr.colspan]=\"2\">\r\n          Dashboard\r\n        </th>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"dynamicForm\">\r\n        <th mat-header-cell *matHeaderCellDef  [attr.colspan]=\"5\">\r\n          Dynamic Form\r\n        </th>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"logicalForms\">\r\n        <th mat-header-cell *matHeaderCellDef  [attr.colspan]=\"5\">\r\n          Logical Forms\r\n        </th>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"formConfigure\">\r\n        <th mat-header-cell *matHeaderCellDef  [attr.colspan]=\"5\">\r\n          Form Configure\r\n        </th>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"subscriptionRates\">\r\n        <th mat-header-cell *matHeaderCellDef  [attr.colspan]=\"5\">\r\n          Subscription Rates\r\n        </th>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"logicalFormData\">\r\n        <th mat-header-cell *matHeaderCellDef  [attr.colspan]=\"5\">\r\n          Logical Form Data\r\n        </th>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"cms\">\r\n        <th mat-header-cell *matHeaderCellDef  [attr.colspan]=\"5\">\r\n          CMS\r\n        </th>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"stateRelation\">\r\n        <th mat-header-cell *matHeaderCellDef  [attr.colspan]=\"5\">\r\n          State Relation\r\n        </th>\r\n      </ng-container>\r\n  \r\n  \r\n  \r\n      <tr mat-header-row\r\n        *matHeaderRowDef=\"['roleheader','dashboard','dynamicForm','logicalForms','formConfigure','subscriptionRates','logicalFormData','cms','stateRelation']\">\r\n      </tr>\r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns;sticky:true\"></tr>\r\n      <tr mat-row *matRowDef=\"let row ; columns: displayedColumns;\" (click)=\"getdata(row)\"></tr>\r\n    </table>\r\n  \r\n  </div>\r\n \r\n  \r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SharedModule } from './../shared/shared.module';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { RoleManagementRoutingModule } from './role-management-routing.module';\r\nimport { RoleManagementComponent } from './role-management.component';\r\nimport { CheckboxComponent } from './checkbox/checkbox.component';\r\nimport { AddRoleComponent } from './add-role/add-role.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [RoleManagementComponent, CheckboxComponent, AddRoleComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RoleManagementRoutingModule,\r\n    SharedModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ]\r\n})\r\nexport class RoleManagementModule { }\r\n"]}