{"version":3,"sources":["webpack:///src/app/role-management/role-management.component.ts","webpack:///src/app/role-management/role-management.component.html","webpack:///src/app/role-management/role-management-routing.module.ts","webpack:///src/app/utils/services/role-management.service.ts","webpack:///src/app/role-management/add-role/add-role.component.ts","webpack:///src/app/role-management/add-role/add-role.component.html","webpack:///src/app/role-management/checkbox/checkbox.component.ts","webpack:///src/app/role-management/checkbox/checkbox.component.html","webpack:///src/app/role-management/role-management.module.ts"],"names":["RoleManagementComponent","setTitle","dialog","id","dialogRef","open","height","width","data","action","userId","afterClosed","subscribe","result","console","log","openDialog","selector","templateUrl","styleUrls","routes","path","component","RoleManagementRoutingModule","forChild","imports","exports","RoleManagementService","https","apiUrl","post","put","get","providedIn","AddRoleComponent","fb","roleService","addRole","group","role","required","patchValue","value","res","fire","close","updateRole","_id","CheckboxComponent","formArr","formNameArr","displayedColumns","getAllRole","rolemanagment","e","$event","changes","row","roleArr","tempArray","sort","index","length","i","addControl","setValue","key","Object","keys","checkeBox","map","x","arr","split","obj","form","filterArr","obj3","access","filter","reduce","r","c","assign","push","objArr","forEach","splice","z","ngOnInit","onSubmit","Arry","Arry1","RoleManagementModule","declarations"],"mappings":"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","file":"role-management-role-management-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { SetTitleService } from 'src/app/utils/services/set-title.service';\r\nimport { AddRoleComponent } from './add-role/add-role.component';\r\n@Component({\r\n  selector: 'app-role-management',\r\n  templateUrl: './role-management.component.html',\r\n  styleUrls: ['./role-management.component.scss']\r\n})\r\nexport class RoleManagementComponent implements OnInit {\r\n\r\n  constructor(\r\n    private setTitle: SetTitleService, \r\n    private dialog: MatDialog,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.setTitle.setTitle('WHS-Role Management');\r\n    \r\n  }\r\n  openDialog(id) {\r\n\t\tlet dialogRef = this.dialog.open(AddRoleComponent, {\r\n      height:'50%',\r\n     width:'500px',\r\n    \r\n\t\t\tdata: {\r\n\t\t\t\taction: \"new\",\r\n\t\t\t\tuserId: id,\r\n\t\t\t},\r\n\t\t});\r\n\t\tdialogRef.afterClosed().subscribe((result) => {\r\n      if(result === 'true' ){\r\n       \r\n      }\r\n\t\t\tconsole.log(\"AddRoleComponent -> openDialog -> result\", result);\r\n\t\t\t\r\n\t\t\tconsole.log(\"The dialog was closed\");\r\n\t\t});\r\n\t}\r\n\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col mt-2 mb-2\">\r\n      <button (click)=\"openDialog('')\" _ngcontent-hqi-c400=\"\" type=\"button\"\r\n          class=\"btn btn-outline-primary mt-1 mr-2 float-right\"><i _ngcontent-hqi-c400=\"\" class=\"fas fa-plus\"></i> Add Role\r\n        </button>\r\n      </div> \r\n  </div>\r\n  <app-checkbox></app-checkbox>\r\n<!-- <mat-tab-group mat-align-tabs=\"start\">\r\n    <mat-tab label=\"Content-1\"><app-checkbox></app-checkbox></mat-tab>\r\n    <mat-tab label=\"Content-2\">Content-2</mat-tab>\r\n    <mat-tab label=\"Content-3\">Content-3</mat-tab>\r\n    <mat-tab label=\"Content-4\">Content-4</mat-tab>\r\n  </mat-tab-group> -->\r\n  \r\n  \r\n\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CheckboxComponent } from './checkbox/checkbox.component';\r\nimport { RoleManagementComponent } from './role-management.component';\r\n\r\nconst routes: Routes = [\r\n  {path:'',component:RoleManagementComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class RoleManagementRoutingModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RoleManagementService {\r\n  apiUrl = environment.apiUrl;\r\n\r\n  constructor(private https: HttpClient) { }\r\n\r\n\r\n  ///role management///\r\n  addRole(data) {\r\n    return this.https.post(this.apiUrl + 'role/add', data);\r\n  }\r\n  // addMultipleRisk(data) {\r\n  //   return this.https.post(this.apiUrl + 'risk/add/multiple', data);\r\n  // }\r\n  updateRole(id,data) {\r\n    return this.https.put(this.apiUrl + 'role/update/' + id, data);\r\n  }\r\n  // deleteRisk(id) {\r\n  //   return this.https.delete(this.apiUrl + 'risk/delete/' + id)\r\n  // }\r\n  getAllRole() {\r\n    return this.https.get(this.apiUrl + 'role/getAll')\r\n  }\r\n  // getRiskById(id) {\r\n  //   return this.https.get(this.apiUrl + 'risk/get/' + id)\r\n  // }\r\n}\r\n","import { Component, OnInit,Inject } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA,\r\n} from '@angular/material/dialog';\r\nimport Swal from 'sweetalert2';\r\nimport {RoleManagementService}from'../../utils/services/role-management.service';\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n\r\n} from '@angular/forms';\r\n@Component({\r\n  selector: 'app-add-role',\r\n  templateUrl: './add-role.component.html',\r\n  styleUrls: ['./add-role.component.scss']\r\n})\r\nexport class AddRoleComponent implements OnInit {\r\n  addRole!: FormGroup;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private roleService : RoleManagementService,\r\n    public dialogRef: MatDialogRef<AddRoleComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.addRole = this.fb.group({\r\n    \r\n      role: ['', Validators.required],\r\n    \r\n     \r\n    });\r\n    console.log('', data);\r\n  }\r\n  \r\n\r\n  ngOnInit(): void {\r\n   if(this.data.action===\"edit\"){\r\n    this.addRole.get(\"role\").patchValue(this.data.role.role)\r\n   }\r\n  }\r\n  onSubmit() {\r\n    if(this.data.action===\"new\"){\r\n    console.log(this.addRole.value)\r\n    \r\n      this.roleService.addRole(this.addRole.value).subscribe((res)=>{\r\n        console.log(\"res\",res);\r\n        \r\n        Swal.fire('Added Successfully')\r\n        this.dialogRef.close();\r\n      })\r\n    } \r\n     if(this.data.action===\"edit\"){\r\n      this.roleService.updateRole(this.data.role._id,this.addRole.value).subscribe((res)=>{\r\n        console.log(\"res\",res);\r\n        \r\n        Swal.fire('Update Successfully')\r\n        this.dialogRef.close(\"true\");\r\n      })\r\n    }\r\n  \r\n    // Swal.fire('Added Successfully')\r\n    // this.dialogRef.close();\r\n  }\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","\r\n<section>\r\n    <form [formGroup]=\"addRole\">\r\n      <div mat-dialog-title class=\"dialog-title\">\r\n      <h2 class=\"text-center pt-2\">\r\n        <p style=\"text-align: center\"*ngIf=\"data.action==='new'\"> Add Role Management</p>\r\n        <p style=\"text-align: center\" *ngIf=\"data.action==='edit'\"> Update Role Management</p>\r\n      </h2>\r\n      <button type=\"button\" class=\"close\" \r\n      style=\"font-size: 30px;\"\r\n    \r\n    (click)=\"close()\" aria-label=\"Close\">\r\n      <span aria-hidden=\"true\">×</span>\r\n    </button>\r\n      </div>\r\n      <hr />\r\n      <div>\r\n        <div class=\"row\">\r\n          <div class=\"col-12 mt-2 mb-2\">\r\n            <p for=\"exampleFormControlInput1\" class=\"form-Label\">Role</p>\r\n            <input\r\n              type=\"text\"\r\n              formControlName=\"role\"\r\n              style=\"height: 50px\"\r\n              class=\"form-control\"\r\n              id=\"heading\"\r\n            />\r\n          </div>\r\n       </div>\r\n       <br>\r\n       \r\n        </div>\r\n      \r\n        <br>\r\n        <div class=\"row\">\r\n          <div class=\"col d-flex justify-content-center\">\r\n            <button class=\"btn btn-primary \" (click)=\"onSubmit()\" [disabled]=\"addRole.invalid \" *ngIf=\"data.action==='new'\"> \r\n              Submit\r\n            </button>\r\n            <button class=\"btn btn-primary \" (click)=\"onSubmit()\" [disabled]=\"addRole.invalid \" *ngIf=\"data.action==='edit'\"> \r\n              Update\r\n            </button>\r\n          </div>\r\n        </div>\r\n      \r\n    </form>\r\n </section>\r\n  ","import { Component, Input, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table'\r\nimport { FormBuilder, FormGroup, Validators, FormArray, FormControl, FormControlName, } from '@angular/forms';\r\nimport { RoleManagementService } from '../../utils/services/role-management.service'\r\nimport { of } from 'rxjs';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { AddRoleComponent } from '../add-role/add-role.component';\r\n\r\n@Component({\r\n  selector: 'app-checkbox',\r\n  templateUrl: './checkbox.component.html',\r\n  styleUrls: ['./checkbox.component.scss']\r\n})\r\nexport class CheckboxComponent implements OnInit {\r\n  // displayedColumns: string[] = [\"role\",'dynamicform',\"Logicalforms\",\"FormConfigure\",\"SubscriptionRates\",'LogicalFormData','CMS','StateRelation'];\r\n  rolemanagment: FormGroup;\r\n\r\n  \r\n  showDatas: any;\r\n  tempArray: MatTableDataSource<any>;\r\n  // @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @Input() Arry: any;\r\n  @Output() Arry1: any;\r\n  roleArr: any;\r\n  formArr = false;\r\n  roleData: any\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private roleService: RoleManagementService,\r\n    private dialog: MatDialog,\r\n  ) {\r\n    this.getAllRole()\r\n    this.rolemanagment = this.fb.group({\r\n\r\n    });\r\n  }\r\n\r\n  formNameArr = [\r\n    \"dashboard\",\r\n    \"dynamicForm\",\r\n    \"Logicalforms\",\r\n    \"FormConfigure\",\r\n    \"SubscriptionRates\",\r\n    \"LogicalFormData\",\r\n    \"CMS\",\r\n    \"StateRelation\"\r\n  ]\r\n  displayedColumns: string[] = [\r\n    \"role\",\r\n\r\n    \"dashboard.Access\",\r\n    \"dashboard.View\",\r\n\r\n    \"dynamicForm.Access\",\r\n    \"dynamicForm.Add\",\r\n    \"dynamicForm.Delete\",\r\n    \"dynamicForm.Update\",\r\n    \"dynamicForm.View\",\r\n\r\n    \"Logicalforms.Access\",\r\n    \"Logicalforms.Add\",\r\n    \"Logicalforms.Delete\",\r\n    \"Logicalforms.Update\",\r\n    \"Logicalforms.View\",\r\n\r\n    \"FormConfigure.Access\",\r\n    \"FormConfigure.Add\",\r\n    \"FormConfigure.Delete\",\r\n    \"FormConfigure.Update\",\r\n    \"FormConfigure.View\",\r\n\r\n    \"SubscriptionRates.Access\",\r\n    \"SubscriptionRates.Add\",\r\n    \"SubscriptionRates.Delete\",\r\n    \"SubscriptionRates.Update\",\r\n    \"SubscriptionRates.View\",\r\n\r\n    \"LogicalFormData.Access\",\r\n    \"LogicalFormData.Add\",\r\n    \"LogicalFormData.Delete\",\r\n    \"LogicalFormData.Update\",\r\n    \"LogicalFormData.View\",\r\n\r\n    \"CMS.Access\",\r\n    \"CMS.Add\",\r\n    \"CMS.Delete\",\r\n    \"CMS.Update\",\r\n    \"CMS.View\",\r\n\r\n    \"StateRelation.Access\",\r\n    \"StateRelation.Add\",\r\n    \"StateRelation.Delete\",\r\n    \"StateRelation.Update\",\r\n    \"StateRelation.View\",\r\n  ];\r\n\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.getAllRole()\r\n    //     of(this.data).subscribe((res:any)=>{\r\n    //       console.log(\"resdata\",res);\r\n    // this.roleData=res\r\n    //       for (let index = 0; index < this.roleData.length; index++) {\r\n    //         for (let x = 0; x < this.roleData[index].access.length; x++) {\r\n\r\n\r\n    //         let key=Object.keys( this.roleData[index].access[x])\r\n\r\n    //            key.splice(0,1)\r\n    //         key.forEach((z:any,i)=>{\r\n\r\n\r\n    //          setTimeout(() => {\r\n    //           console.log(\"this.roleData[index].access[x]\",);\r\n    //          this.rolemanagment.get(this.roleData[index].access[x].form+`_${z}_`+this.roleData[index].role).setValue(this.roleData[index]?.access[x][z])\r\n\r\n    //           // if(this.roleData[index]?.access[x]?.Add){\r\n\r\n    //           //   this.rolemanagment.get(this.roleData[index].access[x].form+'_Add_'+this.roleData[index].role).setValue(this.roleData[index]?.access[x]?.Add)\r\n    //           //   this.rolemanagment.get(this.roleData[index].access[x].form+'_Delete_'+this.roleData[index].role).setValue(this.roleData[index]?.access[x]?.Delete)\r\n    //           //   this.rolemanagment.get(this.roleData[index].access[x].form+'_Update_'+this.roleData[index].role).setValue(this.roleData[index]?.access[x]?.Update)\r\n    //           //   this.rolemanagment.get(this.roleData[index].access[x].form+'_Access_'+this.roleData[index].role).setValue(this.roleData[index]?.access[x]?.Access)\r\n    //           // this.rolemanagment.get(this.roleData[index].access[x].form+'_View_'+this.roleData[index].role).setValue(this.roleData[index]?.access[x]?.View)\r\n    //           // }\r\n    //           // this.rolemanagment.get(this.roleData[index].access[x].form+'_Access_'+this.roleData[index].role).setValue(this.roleData[index]?.access[x]?.Access)\r\n    //           // this.rolemanagment.get(this.roleData[index].access[x].form+'_View_'+this.roleData[index].role).setValue(this.roleData[index]?.access[x]?.View)\r\n\r\n    //          }, 2000);\r\n\r\n\r\n    //         })\r\n\r\n    //         }\r\n\r\n    //       }\r\n\r\n\r\n    //     })\r\n  }\r\n  doCheckboxCheck(e): void {\r\n    // this.roles[index].checked = !this.roles[index].checked;\r\n    console.log(\"event\", e);\r\n    //console.log(\"aaaa\",this.rolemanagment.get('Access').value);\r\n\r\n\r\n  }\r\n  applyFilter($event) {\r\n\r\n  }\r\n  ngOnChanges(changes: any): void {\r\n\r\n\r\n  }\r\n  getdata(row) {\r\n    console.log(\"row\", row);\r\n\r\n  }\r\n  getAllRole() {\r\n    this.roleService.getAllRole().subscribe((res: any) => {\r\n\r\n      this.roleArr = res.data\r\n      console.log(\"res\", this.roleArr);\r\n      this.tempArray = new MatTableDataSource<any>(this.roleArr);\r\n      this.tempArray.sort = this.sort;\r\n\r\n      for (let index = 0; index < this.roleArr.length; index++) {\r\n        for (let i = 1; i < this.formNameArr.length; i++) {\r\n          this.rolemanagment.addControl('dashboard_Access_' + this.roleArr[index].role, new FormControl('', Validators.required));\r\n          this.rolemanagment.addControl('dashboard_View_' + this.roleArr[index].role, new FormControl('', Validators.required));\r\n          this.rolemanagment.addControl(this.formNameArr[i] + '_Access_' + this.roleArr[index].role, new FormControl('', Validators.required));\r\n          this.rolemanagment.addControl(this.formNameArr[i] + '_View_' + this.roleArr[index].role, new FormControl('', Validators.required));\r\n          this.rolemanagment.addControl(this.formNameArr[i] + '_Delete_' + this.roleArr[index].role, new FormControl('', Validators.required));\r\n          this.rolemanagment.addControl(this.formNameArr[i] + '_Update_' + this.roleArr[index].role, new FormControl('', Validators.required));\r\n          this.rolemanagment.addControl(this.formNameArr[i] + '_Add_' + this.roleArr[index].role, new FormControl('', Validators.required));\r\n        }\r\n      }\r\n      this.setValue()\r\n\r\n    })\r\n  }\r\n  add2(): FormArray {\r\n    return this.rolemanagment.get(\"attendees\") as FormArray;\r\n  }\r\n  newAction2(index): FormGroup {\r\n    return this.fb.group({\r\n      [\"dashboard_Access_\" + this.roleArr[index].role]: ['', Validators.required],\r\n    });\r\n  }\r\n  onSubmit() {\r\n    console.log(\"submit\", this.rolemanagment.value);\r\n    let key = Object.keys(this.rolemanagment.value)\r\n    let checkeBox = key.map((x: string) => {\r\n      let arr = x.split(\"_\")\r\n      let obj\r\n      obj = {\r\n        form: arr[0],\r\n        role: arr[2],\r\n      }\r\n      obj[arr[1]] = this.rolemanagment.get(x).value == \"\" ? false : this.rolemanagment.get(x).value\r\n      return obj\r\n    })\r\n    console.log(\"form\", checkeBox);\r\n    let filterArr\r\n    let obj3\r\n    let access = []\r\n\r\n    for (let index = 0; index < this.roleArr.length; index++) {\r\n      for (let i = 0; i < this.formNameArr.length; i++) {\r\n        obj3 = checkeBox.filter((x) => {\r\n          return x.form === this.formNameArr[i] && x.role === this.roleArr[index].role\r\n        }).reduce(((r, c) => Object.assign(r, c)), {});\r\n        access.push(obj3)\r\n      }\r\n\r\n    }\r\n    let objArr = []\r\n    for (let index = 0; index < this.roleArr.length; index++) {\r\n      let arr = []\r\n      arr = access.filter((x => x.role === this.roleArr[index].role))\r\n      arr.forEach((x => {\r\n        delete x.role\r\n      }))\r\n      let obj = {\r\n        access: arr,\r\n        role: this.roleArr[index].role,\r\n        _id: this.roleArr[index]._id\r\n      }\r\n      objArr.push(obj)\r\n    }\r\n\r\n    // let obj2=filterArr.reduce(((r, c) => Object.assign(r, c)), {});\r\n    // console.log(\"filterArr\",obj2);\r\n\r\n\r\n    // for (let index = 0; index < checkeBox.length; index++) {\r\n    //   let accessObj={\r\n    //     form:checkeBox[index].form,\r\n    //     view:checkeBox[index].View,\r\n    //     add:checkeBox[index].Add,\r\n    //     update:checkeBox[index].Update,\r\n    //     delete:checkeBox[index].Delete,\r\n    //   }\r\n    //   access.push(accessObj)\r\n    // }\r\n    console.log(\"acess\", objArr);\r\n\r\n  }\r\n  setValue() {\r\n    for (let index = 0; index < this.roleArr.length; index++) {\r\n      for (let x = 0; x < this.roleArr[index].access.length; x++) {\r\n\r\n\r\n        let key = Object.keys(this.roleArr[index].access[x])\r\n\r\n        key.splice(0, 1)\r\n        key.forEach((z: any, i) => {\r\n\r\n\r\n\r\n          console.log(\"this.roleArr[index].access[x]\",);\r\n          this.rolemanagment.get(this.roleArr[index].access[x].form + `_${z}_` + this.roleArr[index].role).setValue(this.roleArr[index]?.access[x][z])\r\n\r\n          // if(this.roleArr[index]?.access[x]?.Add){\r\n\r\n          //   this.rolemanagment.get(this.roleArr[index].access[x].form+'_Add_'+this.roleArr[index].role).setValue(this.roleArr[index]?.access[x]?.Add)\r\n          //   this.rolemanagment.get(this.roleArr[index].access[x].form+'_Delete_'+this.roleArr[index].role).setValue(this.roleArr[index]?.access[x]?.Delete)\r\n          //   this.rolemanagment.get(this.roleArr[index].access[x].form+'_Update_'+this.roleArr[index].role).setValue(this.roleArr[index]?.access[x]?.Update)\r\n          //   this.rolemanagment.get(this.roleArr[index].access[x].form+'_Access_'+this.roleArr[index].role).setValue(this.roleArr[index]?.access[x]?.Access)\r\n          // this.rolemanagment.get(this.roleArr[index].access[x].form+'_View_'+this.roleArr[index].role).setValue(this.roleArr[index]?.access[x]?.View)\r\n          // }\r\n          // this.rolemanagment.get(this.roleArr[index].access[x].form+'_Access_'+this.roleArr[index].role).setValue(this.roleArr[index]?.access[x]?.Access)\r\n          // this.rolemanagment.get(this.roleArr[index].access[x].form+'_View_'+this.roleArr[index].role).setValue(this.roleArr[index]?.access[x]?.View)\r\n\r\n        })\r\n\r\n      }\r\n\r\n\r\n    }\r\n    this.formArr = true\r\n  }\r\n  openDialog(role) {\r\n\t\tlet dialogRef = this.dialog.open(AddRoleComponent, {\r\n      height:'50%',\r\n     width:'500px',\r\n    \r\n\t\t\tdata: {\r\n\t\t\t\taction:\"edit\",\r\n\t\t\t\trole: role,\r\n\t\t\t},\r\n\t\t});\r\n\t\tdialogRef.afterClosed().subscribe((result) => {\r\n      if(result === 'true' ){\r\n       this.ngOnInit()\r\n      }\r\n\t\t\tconsole.log(\"AddRoleComponent -> openDialog -> result\", result);\r\n\t\t\t\r\n\t\t\tconsole.log(\"The dialog was closed\");\r\n\t\t});\r\n\t}\r\n}\r\n","\r\n<div class=\"row\">\r\n  <div class=\"col ml-2 pt-3\">\r\n    <h1>Role Management List</h1>\r\n  </div>\r\n  \r\n    <div class=\"col mt-2 mb-2\">\r\n        <button  _ngcontent-hqi-c400=\"\" type=\"button\"\r\n            class=\"btn btn-primary mt-1 mr-5 float-md-right\" (click)=\"onSubmit()\"> Submit\r\n          </button>\r\n        </div> \r\n    </div>\r\n  <!-- <div class=\"col-6\">\r\n    <mat-form-field>\r\n      <input matInput #input placeholder=\"Search\" (keyup)=\"applyFilter($event)\" />\r\n    </mat-form-field>\r\n  </div> -->\r\n\r\n  <div class=\"example-container mat-elevation-z8 overflow-auto\"[formGroup]=\"rolemanagment\">\r\n    <ng-container *ngIf=\"formArr\">\r\n \r\n    <table mat-table [dataSource]=\"tempArray\" class=\"mat-elevation-z8\" >\r\n      <ng-container matColumnDef=\"role\" sticky>\r\n        <th [ngStyle]=\"{'display': 'none'}\" mat-header-cell *matHeaderCellDef [attr.rowspan]=\"2\"> Role </th>\r\n        <td mat-cell *matCellDef=\"let element\"  ><p class=\"d-flex\">{{element.role}} <span class=\"material-icons ml-2 col\" matTooltip=\"Edit\"  (click)=\"openDialog(element)\"  >\r\n        edit\r\n      </span></p> </td>\r\n      </ng-container>\r\n\r\n\r\n        <!-- ////////////// -->\r\n \r\n  \r\n        <ng-container matColumnDef=\"dashboard.Access\">\r\n          <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Access </th>\r\n          <td mat-cell *matCellDef=\"let element; let i=index\"> <input type=\"checkbox\" [value]=\"true\"\r\n            (change)=\"doCheckboxCheck($event)\"\r\n            formControlName=\"{{'dashboard_Access_'+roleArr[i]?.role}}\"> \r\n        </td>\r\n        </ng-container>\r\n    \r\n        <ng-container matColumnDef=\"dashboard.View\">\r\n          <th mat-header-cell *matHeaderCellDef  class=\"p-2\" > View </th>\r\n          <td mat-cell *matCellDef=\"let element; let i=index\" class=\"similar-cell-width\"> <input type=\"checkbox\" [value]=\"true\"\r\n            (change)=\"doCheckboxCheck($event)\"\r\n            formControlName=\"{{'dashboard_View_'+roleArr[i]?.role}}\">     </td>\r\n        </ng-container>\r\n  \r\n    <!-- ////////////// -->\r\n      <ng-container matColumnDef=\"dynamicForm.Access\">\r\n        <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Access </th>\r\n        <td mat-cell *matCellDef=\"let element; let i=index\">  <input type=\"checkbox\" [value]=\"true\"\r\n            (change)=\"doCheckboxCheck($event)\"\r\n            formControlName=\"{{'dynamicForm_Access_'+roleArr[i]?.role}}\"> </td>\r\n      </ng-container>\r\n  \r\n      <ng-container matColumnDef=\"dynamicForm.View\">\r\n        <th mat-header-cell *matHeaderCellDef class=\"p-2\" > View </th>\r\n        <td mat-cell *matCellDef=\"let element; let i=index\" class=\"similar-cell-width\"> <input type=\"checkbox\" [value]=\"true\"\r\n            (change)=\"doCheckboxCheck($event)\"\r\n            formControlName=\"{{'dynamicForm_View_'+roleArr[i]?.role}}\"> </td>\r\n      </ng-container>\r\n  \r\n      <ng-container matColumnDef=\"dynamicForm.Delete\">\r\n        <th mat-header-cell *matHeaderCellDef class=\"p-2\"> Delete </th>\r\n        <td mat-cell *matCellDef=\"let element; let i=index\"> <input type=\"checkbox\" [value]=\"true\"\r\n            (change)=\"doCheckboxCheck($event)\"\r\n            formControlName=\"{{'dynamicForm_Delete_'+roleArr[i]?.role}}\"> </td>\r\n      </ng-container>\r\n  \r\n      <ng-container matColumnDef=\"dynamicForm.Update\">\r\n        <th mat-header-cell *matHeaderCellDef class=\"p-2\"> Update </th>\r\n        <td mat-cell *matCellDef=\"let element; let i=index\" class=\"similar-cell-width\"> <input type=\"checkbox\" [value]=\"true\"\r\n            (change)=\"doCheckboxCheck($event)\"\r\n            formControlName=\"{{'dynamicForm_Update_'+roleArr[i]?.role}}\"> </td>\r\n      </ng-container>\r\n  \r\n      <ng-container matColumnDef=\"dynamicForm.Add\">\r\n        <th mat-header-cell *matHeaderCellDef class=\"p-2\"> Add </th>\r\n        <td mat-cell *matCellDef=\"let element; let i=index\"> <input type=\"checkbox\" [value]=\"true\"\r\n            (change)=\"doCheckboxCheck($event)\"\r\n            formControlName=\"{{'dynamicForm_Add_'+roleArr[i]?.role}}\"> </td>\r\n      </ng-container>\r\n\r\n      <!-- ////////////// -->\r\n  \r\n      <ng-container matColumnDef=\"Logicalforms.Access\">\r\n        <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Access </th>\r\n        <td mat-cell *matCellDef=\"let element; let i=index\">  <input type=\"checkbox\" [value]=\"true\"\r\n            (change)=\"doCheckboxCheck($event)\"\r\n            formControlName=\"{{'Logicalforms_Access_'+roleArr[i]?.role}}\"> </td>\r\n      </ng-container>\r\n  \r\n      <ng-container matColumnDef=\"Logicalforms.View\">\r\n        <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> View </th>\r\n        <td mat-cell *matCellDef=\"let element; let i=index\" class=\"similar-cell-width\"> <input type=\"checkbox\" [value]=\"true\"\r\n            (change)=\"doCheckboxCheck($event)\"\r\n            formControlName=\"{{'Logicalforms_View_'+roleArr[i]?.role}}\"> </td>\r\n      </ng-container>\r\n  \r\n      <ng-container matColumnDef=\"Logicalforms.Delete\">\r\n        <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Delete </th>\r\n        <td mat-cell *matCellDef=\"let element; let i=index\"> <input type=\"checkbox\" [value]=\"true\"\r\n            (change)=\"doCheckboxCheck($event)\"\r\n            formControlName=\"{{'Logicalforms_Delete_'+roleArr[i]?.role}}\"> </td>\r\n      </ng-container>\r\n  \r\n      <ng-container matColumnDef=\"Logicalforms.Update\">\r\n        <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Update </th>\r\n        <td mat-cell *matCellDef=\"let element; let i=index\" class=\"similar-cell-width\"> <input type=\"checkbox\" [value]=\"true\"\r\n            (change)=\"doCheckboxCheck($event)\"\r\n            formControlName=\"{{'Logicalforms_Update_'+roleArr[i]?.role}}\"> </td>\r\n      </ng-container>\r\n  \r\n      <ng-container matColumnDef=\"Logicalforms.Add\">\r\n        <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Add </th>\r\n        <td mat-cell *matCellDef=\"let element; let i=index\"> <input type=\"checkbox\" [value]=\"true\"\r\n            (change)=\"doCheckboxCheck($event)\"\r\n            formControlName=\"{{'Logicalforms_Add_'+roleArr[i]?.role}}\"> </td>\r\n      </ng-container>\r\n\r\n         <!-- ////////////// -->\r\n  \r\n         <ng-container matColumnDef=\"FormConfigure.Access\">\r\n          <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Access </th>\r\n          <td mat-cell *matCellDef=\"let element; let i=index\">  <input type=\"checkbox\" [value]=\"true\"\r\n            (change)=\"doCheckboxCheck($event)\"\r\n            formControlName=\"{{'FormConfigure_Access_'+roleArr[i]?.role}}\">     </td>\r\n        </ng-container>\r\n    \r\n        <ng-container matColumnDef=\"FormConfigure.View\">\r\n          <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> View </th>\r\n          <td mat-cell *matCellDef=\"let element; let i=index\" class=\"similar-cell-width\"> <input type=\"checkbox\" [value]=\"true\"\r\n            (change)=\"doCheckboxCheck($event)\"\r\n            formControlName=\"{{'FormConfigure_View_'+roleArr[i]?.role}}\">     </td>\r\n        </ng-container>\r\n    \r\n        <ng-container matColumnDef=\"FormConfigure.Delete\">\r\n          <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Delete </th>\r\n          <td mat-cell *matCellDef=\"let element; let i=index\"> <input type=\"checkbox\" [value]=\"true\"\r\n            (change)=\"doCheckboxCheck($event)\"\r\n            formControlName=\"{{'FormConfigure_Delete_'+roleArr[i]?.role}}\">     </td>\r\n        </ng-container>\r\n    \r\n        <ng-container matColumnDef=\"FormConfigure.Update\">\r\n          <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Update </th>\r\n          <td mat-cell *matCellDef=\"let element; let i=index\" class=\"similar-cell-width\"> <input type=\"checkbox\" [value]=\"true\"\r\n            (change)=\"doCheckboxCheck($event)\"\r\n            formControlName=\"{{'FormConfigure_Update_'+roleArr[i]?.role}}\">     </td>\r\n        </ng-container>\r\n    \r\n        <ng-container matColumnDef=\"FormConfigure.Add\">\r\n          <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Add </th>\r\n          <td mat-cell *matCellDef=\"let element; let i=index\"> <input type=\"checkbox\" [value]=\"true\"\r\n            (change)=\"doCheckboxCheck($event)\"\r\n            formControlName=\"{{'FormConfigure_Add_'+roleArr[i]?.role}}\">     </td>\r\n        </ng-container>\r\n\r\n            <!-- ////////////// -->\r\n  \r\n            <ng-container matColumnDef=\"SubscriptionRates.Access\">\r\n              <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Access </th>\r\n              <td mat-cell *matCellDef=\"let element; let i=index\"> <input type=\"checkbox\" [value]=\"true\"\r\n            (change)=\"doCheckboxCheck($event)\"\r\n            formControlName=\"{{'SubscriptionRates_Access_'+roleArr[i]?.role}}\">\r\n            </td>\r\n            </ng-container>\r\n        \r\n            <ng-container matColumnDef=\"SubscriptionRates.View\">\r\n              <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> View </th>\r\n              <td mat-cell *matCellDef=\"let element; let i=index\" class=\"similar-cell-width\"><input type=\"checkbox\" [value]=\"true\"\r\n            (change)=\"doCheckboxCheck($event)\"\r\n            formControlName=\"{{'SubscriptionRates_View_'+roleArr[i]?.role}}\">\r\n            </td>\r\n            </ng-container>\r\n        \r\n            <ng-container matColumnDef=\"SubscriptionRates.Delete\">\r\n              <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Delete </th>\r\n              <td mat-cell *matCellDef=\"let element; let i=index\"><input type=\"checkbox\" [value]=\"true\"\r\n            (change)=\"doCheckboxCheck($event)\"\r\n            formControlName=\"{{'SubscriptionRates_Delete_'+roleArr[i]?.role}}\">\r\n            </td>\r\n            </ng-container>\r\n        \r\n            <ng-container matColumnDef=\"SubscriptionRates.Update\">\r\n              <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Update </th>\r\n              <td mat-cell *matCellDef=\"let element; let i=index\" class=\"similar-cell-width\"><input type=\"checkbox\" [value]=\"true\"\r\n            (change)=\"doCheckboxCheck($event)\"\r\n            formControlName=\"{{'SubscriptionRates_Update_'+roleArr[i]?.role}}\">\r\n            </td>\r\n            </ng-container>\r\n        \r\n            <ng-container matColumnDef=\"SubscriptionRates.Add\">\r\n              <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Add </th>\r\n              <td mat-cell *matCellDef=\"let element; let i=index\"><input type=\"checkbox\" [value]=\"true\"\r\n            (change)=\"doCheckboxCheck($event)\"\r\n            formControlName=\"{{'SubscriptionRates_Add_'+roleArr[i]?.role}}\">\r\n            </td>\r\n            </ng-container>\r\n\r\n            \r\n            <!-- ////////////// -->\r\n  \r\n            <ng-container matColumnDef=\"LogicalFormData.Access\">\r\n              <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Access </th>\r\n              <td mat-cell *matCellDef=\"let element; let i=index\"> <input type=\"checkbox\" [value]=\"true\"\r\n            (change)=\"doCheckboxCheck($event)\"\r\n            formControlName=\"{{'LogicalFormData_Access_'+roleArr[i]?.role}}\">\r\n            </td>\r\n            </ng-container>\r\n        \r\n            <ng-container matColumnDef=\"LogicalFormData.View\">\r\n              <th mat-header-cell *matHeaderCellDef  class=\"p-2\" > View </th>\r\n              <td mat-cell *matCellDef=\"let element; let i=index\" class=\"similar-cell-width\"><input type=\"checkbox\" [value]=\"true\"\r\n            (change)=\"doCheckboxCheck($event)\"\r\n            formControlName=\"{{'LogicalFormData_View_'+roleArr[i]?.role}}\">\r\n            </td>\r\n            </ng-container>\r\n        \r\n            <ng-container matColumnDef=\"LogicalFormData.Delete\">\r\n              <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Delete </th>\r\n              <td mat-cell *matCellDef=\"let element; let i=index\"><input type=\"checkbox\" [value]=\"true\"\r\n            (change)=\"doCheckboxCheck($event)\"\r\n            formControlName=\"{{'LogicalFormData_Delete_'+roleArr[i]?.role}}\">\r\n            </td>\r\n            </ng-container>\r\n        \r\n            <ng-container matColumnDef=\"LogicalFormData.Update\">\r\n              <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Update </th>\r\n              <td mat-cell *matCellDef=\"let element; let i=index\" class=\"similar-cell-width\"><input type=\"checkbox\" [value]=\"true\"\r\n            (change)=\"doCheckboxCheck($event)\"\r\n            formControlName=\"{{'LogicalFormData_Update_'+roleArr[i]?.role}}\">\r\n            </td>\r\n            </ng-container>\r\n        \r\n            <ng-container matColumnDef=\"LogicalFormData.Add\">\r\n              <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Add </th>\r\n              <td mat-cell *matCellDef=\"let element; let i=index\"><input type=\"checkbox\" [value]=\"true\"\r\n            (change)=\"doCheckboxCheck($event)\"\r\n            formControlName=\"{{'LogicalFormData_Add_'+roleArr[i]?.role}}\">\r\n            </td>\r\n            </ng-container>\r\n\r\n             <!-- ////////////// -->\r\n  \r\n             <ng-container matColumnDef=\"CMS.Access\">\r\n              <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Access </th>\r\n              <td mat-cell *matCellDef=\"let element; let i=index\"> <input type=\"checkbox\" [value]=\"true\"\r\n            (change)=\"doCheckboxCheck($event)\"\r\n            formControlName=\"{{'CMS_Access_'+roleArr[i]?.role}}\">\r\n            </td>\r\n            </ng-container>\r\n        \r\n            <ng-container matColumnDef=\"CMS.View\">\r\n              <th mat-header-cell *matHeaderCellDef  class=\"p-2\" > View </th>\r\n              <td mat-cell *matCellDef=\"let element; let i=index\" class=\"similar-cell-width\"><input type=\"checkbox\" [value]=\"true\"\r\n            (change)=\"doCheckboxCheck($event)\"\r\n            formControlName=\"{{'CMS_View_'+roleArr[i]?.role}}\">\r\n            </td>\r\n            </ng-container>\r\n        \r\n            <ng-container matColumnDef=\"CMS.Delete\">\r\n              <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Delete </th>\r\n              <td mat-cell *matCellDef=\"let element; let i=index\"><input type=\"checkbox\" [value]=\"true\"\r\n            (change)=\"doCheckboxCheck($event)\"\r\n            formControlName=\"{{'CMS_Delete_'+roleArr[i]?.role}}\">\r\n            </td>\r\n            </ng-container>\r\n        \r\n            <ng-container matColumnDef=\"CMS.Update\">\r\n              <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Update </th>\r\n              <td mat-cell *matCellDef=\"let element; let i=index\" class=\"similar-cell-width\"><input type=\"checkbox\" [value]=\"true\"\r\n            (change)=\"doCheckboxCheck($event)\"\r\n            formControlName=\"{{'CMS_Update_'+roleArr[i]?.role}}\">\r\n            </td>\r\n            </ng-container>\r\n        \r\n            <ng-container matColumnDef=\"CMS.Add\">\r\n              <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Add </th>\r\n              <td mat-cell *matCellDef=\"let element; let i=index\"><input type=\"checkbox\" [value]=\"true\"\r\n            (change)=\"doCheckboxCheck($event)\"\r\n            formControlName=\"{{'CMS_Add_'+roleArr[i]?.role}}\">\r\n            </td>\r\n            </ng-container>\r\n   \r\n\r\n             <!-- ////////////// -->\r\n  \r\n             <ng-container matColumnDef=\"StateRelation.Access\">\r\n              <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Access </th>\r\n              <td mat-cell *matCellDef=\"let element; let i=index\"> <input type=\"checkbox\" [value]=\"true\"\r\n            (change)=\"doCheckboxCheck($event)\"\r\n            formControlName=\"{{'StateRelation_Access_'+roleArr[i]?.role}}\">\r\n            </td>\r\n            </ng-container>\r\n        \r\n            <ng-container matColumnDef=\"StateRelation.View\">\r\n              <th mat-header-cell *matHeaderCellDef  class=\"p-2\" > View </th>\r\n              <td mat-cell *matCellDef=\"let element; let i=index\" class=\"similar-cell-width\"><input type=\"checkbox\" [value]=\"true\"\r\n            (change)=\"doCheckboxCheck($event)\"\r\n            formControlName=\"{{'StateRelation_View_'+roleArr[i]?.role}}\">\r\n            </td>\r\n            </ng-container>\r\n        \r\n            <ng-container matColumnDef=\"StateRelation.Delete\">\r\n              <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Delete </th>\r\n              <td mat-cell *matCellDef=\"let element; let i=index\"><input type=\"checkbox\" [value]=\"true\"\r\n            (change)=\"doCheckboxCheck($event)\"\r\n            formControlName=\"{{'StateRelation_Delete_'+roleArr[i]?.role}}\">\r\n            </td>\r\n            </ng-container>\r\n        \r\n            <ng-container matColumnDef=\"StateRelation.Update\">\r\n              <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Update </th>\r\n              <td mat-cell *matCellDef=\"let element; let i=index\" class=\"similar-cell-width\"><input type=\"checkbox\" [value]=\"true\"\r\n            (change)=\"doCheckboxCheck($event)\"\r\n            formControlName=\"{{'StateRelation_Update_'+roleArr[i]?.role}}\">\r\n            </td>\r\n            </ng-container>\r\n        \r\n            <ng-container matColumnDef=\"StateRelation.Add\">\r\n              <th mat-header-cell *matHeaderCellDef  class=\"p-2\"> Add </th>\r\n              <td mat-cell *matCellDef=\"let element; let i=index\"><input type=\"checkbox\" [value]=\"true\"\r\n            (change)=\"doCheckboxCheck($event)\"\r\n            formControlName=\"{{'StateRelation_Add_'+roleArr[i]?.role}}\">\r\n            </td>\r\n            </ng-container>\r\n  \r\n   \r\n  \r\n  \r\n      <ng-container matColumnDef=\"roleheader\"   sticky>\r\n        <th mat-header-cell *matHeaderCellDef  class=\"roleZIndex\"  [attr.rowspan]=\"2\">\r\n        Role\r\n        </th>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"dashboard\">\r\n        <th mat-header-cell *matHeaderCellDef  [attr.colspan]=\"2\">\r\n          Dashboard\r\n        </th>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"dynamicForm\">\r\n        <th mat-header-cell *matHeaderCellDef  [attr.colspan]=\"5\">\r\n          Dynamic Form\r\n        </th>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"logicalForms\">\r\n        <th mat-header-cell *matHeaderCellDef  [attr.colspan]=\"5\">\r\n          Logical Forms\r\n        </th>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"formConfigure\">\r\n        <th mat-header-cell *matHeaderCellDef  [attr.colspan]=\"5\">\r\n          Form Configure\r\n        </th>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"subscriptionRates\">\r\n        <th mat-header-cell *matHeaderCellDef  [attr.colspan]=\"5\">\r\n          Subscription Rates\r\n        </th>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"logicalFormData\">\r\n        <th mat-header-cell *matHeaderCellDef  [attr.colspan]=\"5\">\r\n          Logical Form Data\r\n        </th>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"cms\">\r\n        <th mat-header-cell *matHeaderCellDef  [attr.colspan]=\"5\">\r\n          CMS\r\n        </th>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"stateRelation\">\r\n        <th mat-header-cell *matHeaderCellDef  [attr.colspan]=\"5\">\r\n          State Relation\r\n        </th>\r\n      </ng-container>\r\n  \r\n  \r\n  \r\n      <tr mat-header-row\r\n        *matHeaderRowDef=\"['roleheader','dashboard','dynamicForm','logicalForms','formConfigure','subscriptionRates','logicalFormData','cms','stateRelation']\">\r\n      </tr>\r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns;sticky:true\"></tr>\r\n      <tr mat-row *matRowDef=\"let row ; columns: displayedColumns;\" (click)=\"getdata(row)\"></tr>\r\n    </table>\r\n\r\n  </ng-container>\r\n  </div>\r\n \r\n  \r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SharedModule } from './../shared/shared.module';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { RoleManagementRoutingModule } from './role-management-routing.module';\r\nimport { RoleManagementComponent } from './role-management.component';\r\nimport { CheckboxComponent } from './checkbox/checkbox.component';\r\nimport { AddRoleComponent } from './add-role/add-role.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [RoleManagementComponent, CheckboxComponent, AddRoleComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RoleManagementRoutingModule,\r\n    SharedModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ]\r\n})\r\nexport class RoleManagementModule { }\r\n"]}