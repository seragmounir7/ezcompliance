{"version":3,"sources":["webpack:///src/app/site-info/identify-hazards/add-hazard/add-hazard.component.ts","webpack:///src/app/site-info/identify-hazards/add-hazard/add-hazard.component.html","webpack:///src/app/site-info/high-risk-con/add-high-risk-construction/add-high-risk-construction.component.ts","webpack:///src/app/site-info/high-risk-con/add-high-risk-construction/add-high-risk-construction.component.html","webpack:///src/app/site-info/licence-and-qual/edit-licence/edit-licence.component.ts","webpack:///src/app/site-info/licence-and-qual/edit-licence/edit-licence.component.html","webpack:///src/app/site-info/add-site-info/edit-site/edit-site.component.ts","webpack:///src/app/site-info/add-site-info/edit-site/edit-site.component.html","webpack:///src/app/site-info/add-site-info/add-site/add-site.component.ts","webpack:///src/app/site-info/add-site-info/add-site/add-site.component.html","webpack:///src/app/site-info/site-info.module.ts","webpack:///src/app/site-info/project-manager/add-edit-proj-mang/add-edit-proj-mang.component.ts","webpack:///src/app/site-info/project-manager/add-edit-proj-mang/add-edit-proj-mang.component.html","webpack:///src/app/site-info/job-task/edit-task/edit-task.component.ts","webpack:///src/app/site-info/job-task/edit-task/edit-task.component.html","webpack:///src/app/site-info/identify-hazards/identify-hazards.component.ts","webpack:///src/app/site-info/identify-hazards/identify-hazards.component.html","webpack:///src/app/site-info/licence-and-qual/licence-cat/edit-licence-cat/edit-licence-cat.component.ts","webpack:///src/app/site-info/licence-and-qual/licence-cat/edit-licence-cat/edit-licence-cat.component.html","webpack:///src/app/site-info/contr-and-act-req/edit-cont-act/edit-cont-act.component.ts","webpack:///src/app/site-info/contr-and-act-req/edit-cont-act/edit-cont-act.component.html","webpack:///src/app/site-info/upload-bulk-data/upload-bulk-data.component.ts","webpack:///src/app/site-info/upload-bulk-data/upload-bulk-data.component.html","webpack:///src/app/site-info/add-customer/add-customer.component.ts","webpack:///src/app/site-info/add-customer/add-customer.component.html","webpack:///src/app/site-info/code-of-pract/add-cop/add-cop.component.ts","webpack:///src/app/site-info/code-of-pract/add-cop/add-cop.component.html","webpack:///src/app/site-info/ppe-select/ppe-select.component.ts","webpack:///src/app/site-info/ppe-select/ppe-select.component.html","webpack:///src/app/site-info/licence-and-qual/licence-cat/licence-cat.component.ts","webpack:///src/app/site-info/licence-and-qual/licence-cat/licence-cat.component.html","webpack:///src/app/site-info/add-customer/adding-cust/adding-cust.component.ts","webpack:///src/app/site-info/add-customer/adding-cust/adding-cust.component.html","webpack:///src/app/site-info/code-of-pract/code-of-pract.component.ts","webpack:///src/app/site-info/code-of-pract/code-of-pract.component.html","webpack:///src/app/site-info/code-of-pract/edit-cop/edit-cop.component.ts","webpack:///src/app/site-info/code-of-pract/edit-cop/edit-cop.component.html","webpack:///src/app/site-info/job-task/add-job-task/add-job-task.component.ts","webpack:///src/app/site-info/job-task/add-job-task/add-job-task.component.html","webpack:///src/app/site-info/licence-and-qual/add-licence/add-licence.component.ts","webpack:///src/app/site-info/licence-and-qual/add-licence/add-licence.component.html","webpack:///src/app/site-info/site-info.component.ts","webpack:///src/app/site-info/site-info.component.html","webpack:///src/app/site-info/ppe-select/edit-ppe/edit-ppe.component.ts","webpack:///src/app/site-info/ppe-select/edit-ppe/edit-ppe.component.html","webpack:///src/app/site-info/licence-and-qual/licence-cat/add-licence-cat/add-licence-cat.component.ts","webpack:///src/app/site-info/high-risk-con/high-risk-con.component.ts","webpack:///src/app/site-info/high-risk-con/high-risk-con.component.html","webpack:///src/app/site-info/ppe-select/add-ppe/add-ppe.component.ts","webpack:///src/app/site-info/ppe-select/add-ppe/add-ppe.component.html","webpack:///src/app/site-info/identify-hazards/edit-hazard/edit-hazard.component.ts","webpack:///src/app/site-info/identify-hazards/edit-hazard/edit-hazard.component.html","webpack:///src/app/site-info/high-risk-con/edit-high-risk-construction/edit-high-risk-construction.component.ts","webpack:///src/app/site-info/high-risk-con/edit-high-risk-construction/edit-high-risk-construction.component.html","webpack:///src/app/site-info/job-task/job-task.component.ts","webpack:///src/app/site-info/job-task/job-task.component.html","webpack:///src/app/site-info/licence-and-qual/licence-and-qual.component.ts","webpack:///src/app/site-info/licence-and-qual/licence-and-qual.component.html","webpack:///src/app/site-info/contr-and-act-req/contr-and-act-req.component.ts","webpack:///src/app/site-info/contr-and-act-req/contr-and-act-req.component.html","webpack:///src/app/site-info/contr-and-act-req/add-contr-act/add-contr-act.component.ts","webpack:///src/app/site-info/contr-and-act-req/add-contr-act/add-contr-act.component.html","webpack:///src/app/site-info/project-manager/project-manager.component.ts","webpack:///src/app/site-info/project-manager/project-manager.component.html","webpack:///src/app/site-info/add-customer/edit-cust/edit-cust.component.ts","webpack:///src/app/site-info/add-customer/edit-cust/edit-cust.component.html","webpack:///src/app/site-info/add-site-info/add-site-info.component.ts","webpack:///src/app/site-info/add-site-info/add-site-info.component.html","webpack:///src/app/site-info/site-info-routing.module.ts"],"names":["AddHazardComponent","fb","router","logicalFormInfo","hazardFG","group","arrObj","array","addAction","add","push","newAction","get","title","required","i","item","controls","length","removeAt","console","log","value","data","addMultipleHazards","subscribe","fire","showConfirmButton","timer","navigate","err","error","onFormSubmit","selector","templateUrl","styleUrls","AddHighRiskConstructionComponent","riskConstr","addMultipleRisk","EditLicenceComponent","dialogRef","categories","dataRec","editTitle","categoryId","licenceCategoryId","getAllLicenceCat","res","updateLicence","_id","resData","close","closeDialog","EditSiteComponent","AddSiteComponent","state","label","SiteInfoModule","declarations","imports","AddEditProjMangComponent","componentId","updateProjectMang","addProjectMang","EditTaskComponent","PPE","codeOfPractice","licence","risk","updateJobTask","IdentifyHazardsComponent","dialog","setTitle","jobTaskData","ELEMENT_DATA","displayedColumns","dataSource","paginator","getAllHazards","forEach","element","index","open","width","afterClosed","result","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","deleteHazards","EditLicenceCatComponent","updateLicenceCat","addLicenceCat","EditContActComponent","updateContrlActReq","UploadBulkDataComponent","uploadData","task","highRisk","ppe","identifyHaz","contrlAct","taskData","riskData","ppeData","licenceData","identifyHazData","contrlActData","removeSafetyModule","uploadAllData","AddCustomerComponent","id","action","userId","getAllJobTask","openDialog","AddCOPComponent","codeOfPractFG","addMultipleCOP","PpeSelectComponent","getAllPPEs","getAllPPE","deletePPE","LicenceCatComponent","deleteLicenceCat","edit","AddingCustComponent","CodeOfPractComponent","getAllCodeOfPractice","getAllCOP","deleteCOP","EditCOPComponent","updateCOP","AddJobTaskComponent","jobTaskDetails","addMultipleJobTask","AddLicenceComponent","addLicenceFG","addMultipleLicence","SiteInfoComponent","EditPPEComponent","updatePPE","AddLicenceCatComponent","addLicenceCatFG","HighRiskConComponent","spinner","highRiskConstructionData","isEdit","Edit","Add","collectionSize","hide","getAllHighRisk","getAllRisk","deleteRisk","AddPPEComponent","PPEformgp","addMultiplePPE","EditHazardComponent","updateHazards","EditHighRiskConstructionComponent","updateRisk","JobTaskComponent","getAllJobtask","deleteJobTask","LicenceAndQualComponent","getAllLicence","deleteLicence","ContrAndActReqComponent","getAllContrlActReq","deleteContrlActReq","AddContrActComponent","contrlAndActFG","addMultipleContrlActReq","ProjectManagerComponent","getAllProjectMang","deleteProjectMang","EditCustComponent","AddSiteInfoComponent","routes","path","component","children","SiteInfoRoutingModule","forChild","exports"],"mappings":";;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACSQ;;AAIE;;AACE;;AACE;;AACG;;AACH;;AACF;;AACA;;AAEE;;AAMF;;AACA;;AACE;;AAA6B;AAAA;;AAAA;;AAAA;AAAA;;AAC1B;;AACH;;AACF;;AACA;;AACE;;AAA6B;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAC3B;;AACF;;AACF;;AACF;;AAEA;;AACF;;;;;;AA9BE;;AAKO;;AAAA;;;;;;;;UDLJA,kB;AAGX,oCACUC,EADV,EAEUC,MAFV,EAGUC,eAHV,EAGiD;AAAA;;AAFvC,eAAAF,EAAA,GAAAA,EAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,eAAA,GAAAA,eAAA;AAER,eAAKC,QAAL,GAAgB,KAAKH,EAAL,CAAQI,KAAR,CAAc;AAC5BC,kBAAM,EAAE,KAAKL,EAAL,CAAQM,KAAR,CAAc,EAAd;AADoB,WAAd,CAAhB;AAGD;;;;iBAED,oBAAQ;AACN,iBAAKC,SAAL;AACD;;;iBACD,qBAAY;AACV;AACE,mBAAKC,GAAL,GAAWC,IAAX,CAAgB,KAAKC,SAAL,EAAhB;AACD;AACF;;;iBACD,eAAG;AACD,mBAAO,KAAKP,QAAL,CAAcQ,GAAd,CAAkB,QAAlB,CAAP;AACD;;;iBACD,qBAAS;AACP,mBAAO,KAAKX,EAAL,CAAQI,KAAR,CAAc;AACnBQ,mBAAK,EAAE,CAAC,EAAD,EAAK,0DAAWC,QAAhB;AADY,aAAd,CAAP;AAGD;;;iBAED,4BAAmBC,CAAnB,EAAsB;AACpB,gBAAMC,IAAI,GAAc,KAAKZ,QAAL,CAAca,QAAd,CAAuB,QAAvB,CAAxB;;AACA,gBAAID,IAAI,CAACE,MAAL,GAAc,CAAlB,EAAqB;AACnBF,kBAAI,CAACG,QAAL,CAAcJ,CAAd;AACD;AACF;;;iBACD,wBAAe;AAAA;;AACbK,mBAAO,CAACC,GAAR,CAAY,KAAKjB,QAAL,CAAckB,KAA1B;AACA,gBAAIC,IAAI,GAAG;AACTjB,oBAAM,EAAE,KAAKF,QAAL,CAAcQ,GAAd,CAAkB,QAAlB,EAA4BU;AAD3B,aAAX;AAGA,iBAAKnB,eAAL,CAAqBqB,kBAArB,CAAwCD,IAAxC,EAA8CE,SAA9C,CACE,UAACF,IAAD,EAAU;AACRH,qBAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBE,IAArB;AACA,iEAAKG,IAAL,CAAU;AACRb,qBAAK,EAAE,8BADC;AAERc,iCAAiB,EAAE,KAFX;AAGRC,qBAAK,EAAE;AAHC,eAAV;;AAKA,mBAAI,CAAC1B,MAAL,CAAY2B,QAAZ,CAAqB,CAAC,yBAAD,CAArB;AACD,aATH,EAUE,UAACC,GAAD,EAAS;AACPV,qBAAO,CAACW,KAAR,CAAcD,GAAd;AACD,aAZH;AAcD;;;;;;;yBAvDU9B,kB,EAAkB,2H,EAAA,uH,EAAA,wK;AAAA,O;;;cAAlBA,kB;AAAkB,uC;AAAA,iB;AAAA,e;AAAA,6lB;AAAA;AAAA;ACX/B;;AACI;;AACF;;AACA;;AACE;;AAA6B;AAAA,qBAAY,IAAAgC,YAAA,EAAZ;AAA0B,aAA1B;;AAC3B;;AAAwB;;AAAU;;AAClC;;AACA;;AACA;;AACE;;AAiCF;;AACA;;AAEA;;AACE;;AAAyF;;AAAG;;AAC9F;;AACF;;AACF;;;;AAjDmC;;AAI3B;;AAAA;;AAMoB;;AAAA;;AAoCuB;;AAAA;;;;;;;;;wEDnCxChC,kB,EAAkB;gBAL9B,uDAK8B;iBALpB;AACTiC,oBAAQ,EAAE,gBADD;AAETC,uBAAW,EAAE,6BAFJ;AAGTC,qBAAS,EAAE,CAAC,6BAAD;AAHF,W;AAKoB,U;;;;;;;;;;;;;;;;;;AEX/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACyCM;;AAIE;;AACE;;AACE;;AACG;;AACH;;AACF;;AACA;;AAEE;;AAMF;;AACA;;AACE;;AAA6B;AAAA;;AAAA;;AAAA;AAAA;;AAC1B;;AACH;;AACF;;AACA;;AACE;;AAA6B;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAC3B;;AACF;;AACF;;AACF;;AAEA;;AACF;;;;;;AA9BE;;AAKO;;AAAA;;;;;;;;UDpCFC,gC;AAsCX,kDACUnC,EADV,EAEUC,MAFV,EAGUC,eAHV,EAGgD;AAAA;;AAFtC,eAAAF,EAAA,GAAAA,EAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,eAAA,GAAAA,eAAA;AAER,eAAKkC,UAAL,GAAgB,KAAKpC,EAAL,CAAQI,KAAR,CAAc;AAC7B;AACCC,kBAAM,EAAE,KAAKL,EAAL,CAAQM,KAAR,CAAc,EAAd;AAFoB,WAAd,CAAhB;AAID;;;;iBAED,oBAAQ;AACN,iBAAKC,SAAL;AACD;;;iBACD,qBAAY;AACV;AACE,mBAAKC,GAAL,GAAWC,IAAX,CAAgB,KAAKC,SAAL,EAAhB;AACD;AACF;;;iBACD,eAAG;AACD,mBAAO,KAAK0B,UAAL,CAAgBzB,GAAhB,CAAoB,QAApB,CAAP;AACD;;;iBACD,qBAAS;AACP,mBAAO,KAAKX,EAAL,CAAQI,KAAR,CAAc;AAEnBQ,mBAAK,EAAE,CAAC,EAAD,EAAK,0DAAWC,QAAhB;AAFY,aAAd,CAAP;AAID;;;iBAED,4BAAmBC,CAAnB,EAAsB;AACpB,gBAAMC,IAAI,GAAc,KAAKqB,UAAL,CAAgBpB,QAAhB,CAAyB,QAAzB,CAAxB;;AACA,gBAAID,IAAI,CAACE,MAAL,GAAc,CAAlB,EAAqB;AACnBF,kBAAI,CAACG,QAAL,CAAcJ,CAAd;AAED;AACF;;;iBACD,wBAAe;AAAA;;AACb;AACA,gBAAIQ,IAAI,GAAC;AACPjB,oBAAM,EAAC,KAAK+B,UAAL,CAAgBzB,GAAhB,CAAoB,QAApB,EAA8BU;AAD9B,aAAT,CAFa,CAKb;;AAEA,iBAAKnB,eAAL,CAAqBmC,eAArB,CAAqCf,IAArC,EAA2CE,SAA3C,CAAqD,UAACF,IAAD,EAAU;AAC7DH,qBAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBE,IAAtB;AACA,iEAAKG,IAAL,CAAU;AACRb,qBAAK,EAAE,8BADC;AAERc,iCAAiB,EAAE,KAFX;AAGRC,qBAAK,EAAE;AAHC,eAAV;;AAKA,oBAAI,CAAC1B,MAAL,CAAY2B,QAAZ,CAAqB,CAAC,0BAAD,CAArB;AACD,aARD,EAQE,UAACC,GAAD,EAAO;AAACV,qBAAO,CAACW,KAAR,CAAcD,GAAd;AAAoB,aAR9B;AAWH;;;;;;;yBA5FYM,gC,EAAgC,2H,EAAA,uH,EAAA,wK;AAAA,O;;;cAAhCA,gC;AAAgC,uD;AAAA,iB;AAAA,e;AAAA,6lB;AAAA;AAAA;ACoB7C;;AACE;;AACF;;AACA;;AACE;;AAA+B;AAAA,qBAAY,IAAAJ,YAAA,EAAZ;AAA0B,aAA1B;;AAC7B;;AAAwB;;AAAoC;;AAC5D;;AACA;;AACA;;AACE;;AAiCF;;AACA;;AAEA;;AACE;;AAA2F;;AAAG;;AAChG;;AACF;;AACF;;;;AAjDqC;;AAI7B;;AAAA;;AAMoB;;AAAA;;AAoCuB;;AAAA;;;;;;;;;wEDlEtCI,gC,EAAgC;gBAL5C,uDAK4C;iBALlC;AACTH,oBAAQ,EAAE,gCADD;AAETC,uBAAW,EAAE,6CAFJ;AAGTC,qBAAS,EAAE,CAAC,6CAAD;AAHF,W;AAKkC,U;;;;;;;;;;;;;;;;;;AEZ7C;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AC8BQ;;AAAyD;;AAAc;;;;;;AAAd;;AAAA;;;;UDlBpDI,oB;AAKX,sCACUtC,EADV,EAEUE,eAFV,EAGSqC,SAHT,EAIkCjB,IAJlC,EAI2C;AAAA;;AAHjC,eAAAtB,EAAA,GAAAA,EAAA;AACA,eAAAE,eAAA,GAAAA,eAAA;AACD,eAAAqC,SAAA,GAAAA,SAAA;AACyB,eAAAjB,IAAA,GAAAA,IAAA;AALlC,eAAAkB,UAAA,GAAW,EAAX;AAOE,eAAKC,OAAL,GAAenB,IAAf;AACD;;;;iBAED,oBAAQ;AACNH,mBAAO,CAACC,GAAR,CAAY,KAAKqB,OAAjB;AAEA,iBAAKC,SAAL,GAAiB,KAAK1C,EAAL,CAAQI,KAAR,CAAc;AAC7BQ,mBAAK,EAAE,CAAC,KAAK6B,OAAL,CAAa7B,KAAd,EAAqB,0DAAWC,QAAhC,CADsB;AAE7B8B,wBAAU,EAAE,CAAC,KAAKF,OAAL,CAAaG,iBAAb,CAA+BhC,KAAhC,EAAuC,0DAAWC,QAAlD;AAFiB,aAAd,CAAjB;AAIA,iBAAKgC,gBAAL;AACD;;;iBACD,4BAAmB;AAAA;;AACjB,iBAAK3C,eAAL,CAAqB2C,gBAArB,GAAwCrB,SAAxC,CAAkD,UAACsB,GAAD,EAAS;AACzD3B,qBAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkC0B,GAAlC;AACA,oBAAI,CAACN,UAAL,GAAkBM,GAAG,CAACxB,IAAtB;AAED,aAJD;AAMD;;;iBACD,wBAAe;AAAA;;AAEb,gBAAIA,IAAI,GAAC;AACPV,mBAAK,EAAE,KAAK8B,SAAL,CAAe/B,GAAf,CAAmB,OAAnB,EAA4BU,KAD5B;AAEPuB,+BAAiB,EAAC,KAAKF,SAAL,CAAe/B,GAAf,CAAmB,YAAnB,EAAiCU;AAF5C,aAAT;AAIA,iBAAKnB,eAAL,CACG6C,aADH,CACiBzB,IADjB,EACuB,KAAKmB,OAAL,CAAaO,GADpC,EAEGxB,SAFH,CAEa,UAACyB,OAAD,EAAa;AACtB9B,qBAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B6B,OAA9B;;AAEA,oBAAI,CAACV,SAAL,CAAeW,KAAf,CAAqB,MAArB;;AACA,iEAAKzB,IAAL,CAAU,+BAAV;AACD,aAPH;AAQD;;;iBACD,uBAAW;AACT,iBAAKc,SAAL,CAAeW,KAAf,CAAqB,OAArB;AAED;;;;;;;yBAjDUZ,oB,EAAoB,2H,EAAA,wK,EAAA,sI,EAAA,gEASrB,wEATqB,C;AASN,O;;;cATdA,oB;AAAoB,yC;AAAA,iB;AAAA,e;AAAA,0hB;AAAA;AAAA;ACZjC;;AACI;;AAAqB;;AAAY;;AAEnC;;AACE;;AAYE;;AAOF;;AACA;;AACE;;AAKE;;AAEF;;AACF;;AACF;;AAEA;;AACE;;AACE;;AAA0B;AAAA,qBAAS,IAAAa,WAAA,EAAT;AAAsB,aAAtB;;AAAwB;;AAAK;;AACzD;;AACA;;AACE;;AAGE;AAAA,qBAAS,IAAApB,YAAA,EAAT;AAAuB,aAAvB;;AAEA;;AACF;;AACF;;AACF;;AACF;;;;AAlDM;;AA8B2B;;AAAA;;AAazB;;AAAA;;;;;;;;;wED/BKO,oB,EAAoB;gBALhC,uDAKgC;iBALtB;AACTN,oBAAQ,EAAE,kBADD;AAETC,uBAAW,EAAE,+BAFJ;AAGTC,qBAAS,EAAE,CAAC,+BAAD;AAHF,W;AAKsB,U;;;;;;;;;;oBAS5B,oD;qBAAO,wE;;;;;;;;;;;;;AErBZ;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAQakB,iB;AAEX,mCAAoBb,SAApB,EACgCjB,IADhC,EACyC;AAAA;;AADrB,eAAAiB,SAAA,GAAAA,SAAA;AACY,eAAAjB,IAAA,GAAAA,IAAA;AAAe;;;;iBAE/C,oBAAQ,CACP;;;;;;;yBANU8B,iB,EAAiB,sI,EAAA,gEAGpB,wEAHoB,C;AAGL,O;;;cAHZA,iB;AAAiB,sC;AAAA,iB;AAAA,e;AAAA,q0B;AAAA;AAAA;ACR9B;;AACI;;AACE;;AAAI;;AAAgB;;AAEpB;;AAUE;;AACE;;AAAqD;;AAAS;;AAC9D;;AAMF;;AACA;;AACE;;AAAqD;;AAAY;;AACjE;;AAMF;;AACF;;AAqBA;;AACE;;AACE;;AAAqD;;AAAa;;AAClE;;AAMF;;AACA;;AACE;;AAAqD;;AAAc;;AACnE;;AAMF;;AACA;;AACE;;AAAqD;;AAAM;;AAC3D;;AAMF;;AACA;;AACI;;AACC;;AAAK;;AAGN;;AAIF;;AAAwB;;AAAM;;AAC9B;;AAAkB;;AAAe;;AACjC;;AAAkB;;AAAO;;AACzB;;AAAkB;;AAAU;;AAC5B;;AAAkB;;AAAO;;AACzB;;AAAkB;;AAAc;;AAClC;;AAQA;;AACF;;AACF;;AACA;;AACA;;AAuBA;;AACA;;;;;;;;;wED5HSA,iB,EAAiB;gBAL7B,uDAK6B;iBALnB;AACTpB,oBAAQ,EAAE,eADD;AAETC,uBAAW,EAAE,4BAFJ;AAGTC,qBAAS,EAAE,CAAC,4BAAD;AAHF,W;AAKmB,U;;;;;;oBAG3B,oD;qBAAO,wE;;;;;;;;;;;;;AEXV;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UASamB,gB;AAEX,kCAAqBd,SAArB,EACgCjB,IADhC,EACyC;AAAA;;AADpB,eAAAiB,SAAA,GAAAA,SAAA;AACW,eAAAjB,IAAA,GAAAA,IAAA;AAIhC,eAAAgC,KAAA,GAAQ,CACJ;AAAEC,iBAAK,EAAE,iBAAT;AAA4BlC,iBAAK,EAAE;AAAnC,WADI,EAEJ;AAAEkC,iBAAK,EAAE,YAAT;AAAuBlC,iBAAK,EAAE;AAA9B,WAFI,EAGJ;AAAEkC,iBAAK,EAAE,iBAAT;AAA4BlC,iBAAK,EAAE;AAAnC,WAHI,EAIJ;AAAEkC,iBAAK,EAAE,UAAT;AAAqBlC,iBAAK,EAAE;AAA5B,WAJI,EAKJ;AAAEkC,iBAAK,EAAE,UAAT;AAAqBlC,iBAAK,EAAE;AAA5B,WALI,EAMJ;AAAEkC,iBAAK,EAAE,mBAAT;AAA8BlC,iBAAK,EAAE;AAArC,WANI,CAAR;AAJ+C;;;;iBAE/C,oBAAQ,CACP;;;;;;;yBANUgC,gB,EAAgB,sI,EAAA,gEAGnB,wEAHmB,C;AAGJ,O;;;cAHZA,gB;AAAgB,qC;AAAA,iB;AAAA,e;AAAA,q0B;AAAA;AAAA;ACT7B;;AACI;;AACE;;AAAI;;AAAgB;;AAEpB;;AAUE;;AACE;;AAAqD;;AAAS;;AAC9D;;AAMF;;AACA;;AACE;;AAAqD;;AAAY;;AACjE;;AAMF;;AACF;;AAqBA;;AACE;;AACE;;AAAqD;;AAAa;;AAClE;;AAMF;;AACA;;AACE;;AAAqD;;AAAc;;AACnE;;AAMF;;AACA;;AACE;;AAAqD;;AAAM;;AAC3D;;AAMF;;AACA;;AACI;;AACC;;AAAK;;AAGN;;AAIF;;AAAwB;;AAAM;;AAC9B;;AAAkB;;AAAe;;AACjC;;AAAkB;;AAAU;;AAC5B;;AAAkB;;AAAe;;AACjC;;AAAkB;;AAAQ;;AAC1B;;AAAkB;;AAAQ;;AAC1B;;AAAkB;;AAAiB;;AACrC;;AAQA;;AACF;;AACF;;AACA;;AACA;;AAuBA;;AACA;;;;;;;;;wED5HSA,gB,EAAgB;gBAL5B,uDAK4B;iBALlB;AACTrB,oBAAQ,EAAE,cADD;AAETC,uBAAW,EAAE,2BAFJ;AAGTC,qBAAS,EAAE,CAAC,2BAAD;AAHF,W;AAKkB,U;;;;;;oBAG1B,oD;qBAAO,wc,CAaA;AACA;;;UAkDasB,c;;;;;cAAAA;;;;2BAAAA,c;AAAc,S;AAAA,kBARhB,CACP,4DADO,EAEP,+EAFO,EAGP,0DAHO,EAIP,kEAJO,EAKP,mEALO,CAQgB;;;;4HAAdA,c,EAAc;AAAA,yBAnBvB,sEAmBuB,EAlBvB,2FAkBuB,EAjBvB,6EAiBuB,EAhBvB,2FAgBuB,EAfvB,mFAeuB,EAdvB,oGAcuB,EAbvB,0FAauB,EAZvB,gJAYuB,EAXvB,mJAWuB,EAXW,kGAWX,EAXgC,sFAWhC,EAXiD,0FAWjD,EAXoE,yFAWpE,EAXsF,2GAWtF,EAX4G,wGAW5G,EAXiI,wGAWjI,EAXsJ,+HAWtJ,EAX8K,kIAW9K,EAXuM,4FAWvM,EAX6N,yFAW7N,EAX8O,4FAW9O,EAXgQ,4FAWhQ,EAXkR,+FAWlR,EAXqS,oGAWrS,EAX0T,8FAW1T,EAX6U,sGAW7U,EAXuW,uGAWvW,EAXgY,qGAWhY,EAXoZ,wGAWpZ,EAXya,8GAWza,EAX+b,8GAW/b,EAXqd,qGAWrd,EAX8e,mGAW9e,EAXugB,0HAWvgB;AAX+hB,oBAItjB,4DAJsjB,EAKtjB,+EALsjB,EAMtjB,0DANsjB,EAOtjB,kEAPsjB,EAQtjB,mEARsjB;AAW/hB,S;AAHX,O;;;;;wEAGHA,c,EAAc;gBArB1B,sDAqB0B;iBArBjB;AACRC,wBAAY,EAAE,CACZ,sEADY,EAEZ,2FAFY,EAGZ,6EAHY,EAIZ,2FAJY,EAKZ,mFALY,EAMZ,oGANY,EAOZ,0FAPY,EAQZ,gJARY,EASZ,mJATY,EASsB,kGATtB,EAS2C,sFAT3C,EAS4D,0FAT5D,EAS+E,yFAT/E,EASiG,2GATjG,EASuH,wGATvH,EAS4I,wGAT5I,EASiK,+HATjK,EASyL,kIATzL,EASkN,4FATlN,EASwO,yFATxO,EASyP,4FATzP,EAS2Q,4FAT3Q,EAS6R,+FAT7R,EASgT,oGAThT,EASqU,8FATrU,EASwV,sGATxV,EASkX,uGATlX,EAS2Y,qGAT3Y,EAS+Z,wGAT/Z,EASob,8GATpb,EAS0c,8GAT1c,EASge,qGAThe,EASyf,mGATzf,EASkhB,0HATlhB,CADN;AAaRC,mBAAO,EAAE,CACP,4DADO,EAEP,+EAFO,EAGP,0DAHO,EAIP,kEAJO,EAKP,mEALO;AAbD,W;AAqBiB,U;;;;;;;;;;AChE3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACCI;;AAAqB;;AAAmB;;;;;;AACxC;;AAAoB;;AAAoB;;;;;;;;AAYhC;;AAAuE;AAAA;;AAAA;;AAAA;AAAA;;AAAyB;;AAAM;;;;;;AAA5D;;;;;;;;AAC1C;;AAA0E;AAAA;;AAAA;;AAAA;AAAA;;AAAoB;;AAAG;;;;;;AAApD;;;;UDJ5CC,wB;AAKX,0CACU3D,EADV,EAEUE,eAFV,EAGSqC,SAHT,EAIkCjB,IAJlC,EAI2C;AAAA;;AAHjC,eAAAtB,EAAA,GAAAA,EAAA;AACA,eAAAE,eAAA,GAAAA,eAAA;AACD,eAAAqC,SAAA,GAAAA,SAAA;AACyB,eAAAjB,IAAA,GAAAA,IAAA;AAEhC,eAAKmB,OAAL,GAAenB,IAAf;AACD;;;;iBAED,oBAAQ;AACN,iBAAKoB,SAAL,GAAiB,KAAK1C,EAAL,CAAQI,KAAR,CAAc;AAC7BQ,mBAAK,EAAE,CAAC,KAAK6B,OAAL,CAAa7B,KAAd,EAAqB,0DAAWC,QAAhC;AADsB,aAAd,CAAjB;AAGD;;;iBACD,wBAAe;AAAA;;AACb,gBAAIS,IAAI,GAAG;AACTV,mBAAK,EAAE,KAAK8B,SAAL,CAAe/B,GAAf,CAAmB,OAAnB,EAA4BU,KAD1B;AAETuC,yBAAW,EAAE,KAAKnB,OAAL,CAAamB;AAFjB,aAAX;AAIA,iBAAK1D,eAAL,CACG2D,iBADH,CACqBvC,IADrB,EAC2B,KAAKmB,OAAL,CAAaO,GADxC,EAEGxB,SAFH,CAEa,UAACyB,OAAD,EAAa;AACtB9B,qBAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B6B,OAA9B;;AAEA,oBAAI,CAACV,SAAL,CAAeW,KAAf,CAAqB,MAArB;;AACA,iEAAKzB,IAAL,CAAU;AACRb,qBAAK,EAAE,qCADC;AAERc,iCAAiB,EAAE,KAFX;AAGRC,qBAAK,EAAE;AAHC,eAAV;AAKD,aAXH;AAYD;;;iBACD,mBAAU;AAAA;;AACR,gBAAIL,IAAI,GAAG;AACTV,mBAAK,EAAE,KAAK8B,SAAL,CAAe/B,GAAf,CAAmB,OAAnB,EAA4BU;AAD1B,aAAX;AAGA,iBAAKnB,eAAL,CAAqB4D,cAArB,CAAoCxC,IAApC,EAA0CE,SAA1C,CAAoD,UAACyB,OAAD,EAAa;AAC/D9B,qBAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B6B,OAA9B;;AAEA,oBAAI,CAACV,SAAL,CAAeW,KAAf,CAAqB,MAArB;;AAEE,iEAAKzB,IAAL,CAAU;AACRb,qBAAK,EAAE,oCADC;AAERc,iCAAiB,EAAE,KAFX;AAGRC,qBAAK,EAAE;AAHC,eAAV;AAMH,aAXD;AAYD;;;iBACD,uBAAc;AACZ,iBAAKY,SAAL,CAAeW,KAAf,CAAqB,OAArB;AACD;;;;;;;yBAxDUS,wB,EAAwB,2H,EAAA,wK,EAAA,sI,EAAA,gEASzB,wEATyB,C;AASV,O;;;cATdA,wB;AAAwB,+C;AAAA,iB;AAAA,e;AAAA,qa;AAAA;AAAA;ACXrC;;AACI;;AACA;;AACA;;AAIA;;AACA;;AACA;;AACI;;AACI;;AAA0B;AAAA,qBAAS,IAAAR,WAAA,EAAT;AAAsB,aAAtB;;AAAwB;;AAAK;;AAC3D;;AACA;;AACI;;AACA;;AACJ;;AACJ;;AACJ;;;;AAlBM;;AACG;;AAAA;;AACA;;AAAA;;AAY8B;;AAAA;;AACC;;AAAA;;;;;;;;;wEDJ3BQ,wB,EAAwB;gBALpC,uDAKoC;iBAL1B;AACT3B,oBAAQ,EAAE,wBADD;AAETC,uBAAW,EAAE,qCAFJ;AAGTC,qBAAS,EAAE,CAAC,qCAAD;AAHF,W;AAK0B,U;;;;;;;;;;oBAShC,oD;qBAAO,wE;;;;;;;;;;;;;AEpBZ;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAaa6B,iB;AAMX,mCACU/D,EADV,EAEUE,eAFV,EAGSqC,SAHT,EAIkCjB,IAJlC,EAI2C;AAAA;;AAHjC,eAAAtB,EAAA,GAAAA,EAAA;AACA,eAAAE,eAAA,GAAAA,eAAA;AACD,eAAAqC,SAAA,GAAAA,SAAA;AACyB,eAAAjB,IAAA,GAAAA,IAAA;AAEhC,eAAKmB,OAAL,GAAenB,IAAf;AACD;;;;iBAED,oBAAQ;AACNH,mBAAO,CAACC,GAAR,CAAY,cAAZ,EAA2B,KAAKqB,OAAhC;AAEA,iBAAKC,SAAL,GAAiB,KAAK1C,EAAL,CAAQI,KAAR,CAAc;AAC7BQ,mBAAK,EAAE,CAAC,KAAK6B,OAAL,CAAa7B,KAAd,EAAqB,0DAAWC,QAAhC;AADsB,aAAd,CAAjB;AAGD;;;iBACD,wBAAe;AAAA;;AAEb,gBAAIS,IAAI,GAAC;AACPV,mBAAK,EAAE,KAAK8B,SAAL,CAAe/B,GAAf,CAAmB,OAAnB,EAA4BU,KAD5B;AAEP2C,iBAAG,EAAC,KAAKvB,OAAL,CAAauB,GAFV;AAGPC,4BAAc,EAAC,KAAKxB,OAAL,CAAawB,cAHrB;AAIPC,qBAAO,EAAC,KAAKzB,OAAL,CAAayB,OAJd;AAKPC,kBAAI,EAAC,KAAK1B,OAAL,CAAa0B;AALX,aAAT;AAOA,iBAAKjE,eAAL,CACGkE,aADH,CACiB9C,IADjB,EACuB,KAAKmB,OAAL,CAAaO,GADpC,EAEGxB,SAFH,CAEa,UAACyB,OAAD,EAAa;AACtB9B,qBAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B6B,OAA9B;;AAEA,oBAAI,CAACV,SAAL,CAAeW,KAAf,CAAqB,MAArB;;AACA,iEAAKzB,IAAL,CAAU;AACRb,qBAAK,EAAE,+BADC;AAERc,iCAAiB,EAAE,KAFX;AAGRC,qBAAK,EAAE;AAHC,eAAV;AAKG,aAXP;AAYD;;;iBACD,uBAAW;AACT,iBAAKY,SAAL,CAAeW,KAAf,CAAqB,OAArB;AAED;;;;;;;yBA/CUa,iB,EAAiB,2H,EAAA,wK,EAAA,sI,EAAA,gEAUlB,wEAVkB,C;AAUH,O;;;cAVdA,iB;AAAiB,sC;AAAA,iB;AAAA,e;AAAA,0V;AAAA;AAAA;ACb9B;;AACI;;AAAI;;AAAa;;AACjB;;AAGA;;AACA;;AACA;;AACI;;AACI;;AAA0B;AAAA,qBAAS,IAAAZ,WAAA,EAAT;AAAsB,aAAtB;;AAAwB;;AAAK;;AAC3D;;AACA;;AACI;;AAAwD;AAAA,qBAAS,IAAApB,YAAA,EAAT;AAAuB,aAAvB;;AAAyB;;AAAM;;AAC3F;;AACJ;;AACJ;;;;AAfM;;AAYiC;;AAAA;;;;;;;;;wEDC1BgC,iB,EAAiB;gBAL7B,uDAK6B;iBALnB;AACT/B,oBAAQ,EAAE,eADD;AAETC,uBAAW,EAAE,4BAFJ;AAGTC,qBAAS,EAAE,CAAC,4BAAD;AAHF,W;AAKmB,U;;;;;;;;;;oBAUzB,oD;qBAAO,wE;;;;;;;;;;;;;AEtBZ;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACWU;;AAAuC;;AAAI;;;;;;AAC3C;;AAAuC;;AAAiB;;;;;;AAAjB;;AAAA;;;;;;AAO3C;;AAAuC;;AAAK;;;;;;AAC5C;;AAAwC;;AAAkB;;;;;;AAAlB;;AAAA;;;;;;AAGtC;;AAAuC;;AAAK;;;;;;;;AAC5C;;AAAsC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAyB;;AAC/D;;;;;;AAGA;;AAAuC;;AAAO;;;;;;;;AAC9C;;AAAsC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA2B;;AACjE;;;;;;AAGA;;;;;;AACA;;;;;;;;;;;;UDpBKmC,wB;AAcX;AAEA,0CAEUnE,eAFV,EAGUoE,MAHV,EAIUC,QAJV,EAIkC;AAAA;;AAFxB,eAAArE,eAAA,GAAAA,eAAA;AACA,eAAAoE,MAAA,GAAAA,MAAA;AACA,eAAAC,QAAA,GAAAA,QAAA;AAjBV,eAAAC,WAAA,GAAmB,EAAnB;AACA,eAAAC,YAAA,GAAe,EAAf,CAgBkC,CAflC;;AACA,eAAAC,gBAAA,GAA6B,CAAC,OAAD,EAAU,OAAV,EAAkB,MAAlB,EAAyB,QAAzB,CAA7B;AACA,eAAAC,UAAA,GAAa,IAAI,0EAAJ,CAAuB,KAAKF,YAA5B,CAAb;AAcI;;;;iBAVJ,2BAAkB;AAChB,iBAAKE,UAAL,CAAgBC,SAAhB,GAA4B,KAAKA,SAAjC;AACD;;;iBAUD,oBAAQ;AACN,iBAAKC,aAAL;AACA,iBAAKN,QAAL,CAAcA,QAAd,CAAuB,cAAvB;AAED;;;iBAED,yBAAgB;AAAA;;AACd,iBAAKrE,eAAL,CAAqB2E,aAArB,GAAqCrD,SAArC,CAA+C,UAACsB,GAAD,EAAa;AAC1D3B,qBAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+B0B,GAA/B;AACA,kBAAIxB,IAAI,GAAGwB,GAAG,CAACxB,IAAf;AACAA,kBAAI,CAACwD,OAAL,CAAa,UAACC,OAAD,EAAUC,KAAV,EAAoB;AAC/BD,uBAAO,CAACC,KAAR,GAAgBA,KAAK,GAAG,CAAxB,CAD+B,CACJ;AAC5B,eAFD;AAIA,oBAAI,CAACP,YAAL,GAAoBnD,IAApB;AACA,oBAAI,CAACqD,UAAL,GAAkB,IAAI,0EAAJ,CAAuB,MAAI,CAACF,YAA5B,CAAlB;AACA,oBAAI,CAACE,UAAL,CAAgBC,SAAhB,GAA4B,MAAI,CAACA,SAAjC;AACAzD,qBAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiC,MAAI,CAACqD,YAAtC,EAV0D,CAY1D;AACD,aAbD;AAcD;;;iBACD,cAAKM,OAAL,EAAY;AAAA;;AACV,gBAAMxC,SAAS,GAAG,KAAK+B,MAAL,CAAYW,IAAZ,CAAiB,sFAAjB,EAAsC;AACtDC,mBAAK,EAAE,OAD+C;AAEtD5D,kBAAI,EAAEyD;AAFgD,aAAtC,CAAlB;AAIAxC,qBAAS,CAAC4C,WAAV,GAAwB3D,SAAxB,CAAkC,UAAC4D,MAAD,EAAY;AAC5C,kBAAKA,MAAM,IAAI,MAAf,EAAwB;AACtB,sBAAI,CAACP,aAAL;AACD;;AACD1D,qBAAO,CAACC,GAAR,CAAY,uBAAZ;AACD,aALD;AAMD;;;iBACD,iBAAOL,IAAP,EAAa;AAAA;;AACX,+DAAKU,IAAL,CAAU;AACRb,mBAAK,EAAE,eADC;AAERyE,kBAAI,oCAA4BtE,IAAI,CAACH,KAAjC,QAFI;AAGR0E,kBAAI,EAAE,SAHE;AAIRC,8BAAgB,EAAE,IAJV;AAKRC,gCAAkB,EAAE,SALZ;AAMRC,+BAAiB,EAAE,MANX;AAORC,+BAAiB,EAAE;AAPX,aAAV,EAQGC,IARH,CAQQ,UAACP,MAAD,EAAY;AAClB,kBAAIA,MAAM,CAAC/D,KAAX,EAAkB;AAChB,uBAAI,CAACnB,eAAL,CACC0F,aADD,CACe7E,IAAI,CAACiC,GADpB,EAECxB,SAFD,CAEW,UAACsB,GAAD,EAAS;AAClB,qEAAKrB,IAAL,CAAU;AACRb,yBAAK,EAAE,gCADC;AAERc,qCAAiB,EAAE,KAFX;AAGRC,yBAAK,EAAE;AAHC,mBAAV;AAKAR,yBAAO,CAACC,GAAR,CAAY,aAAZ,EAA2B0B,GAA3B;;AACA,yBAAI,CAAC+B,aAAL;AAED,iBAXD;AAYD;AACF,aAvBD;AAwBD;;;;;;;yBAlFUR,wB,EAAwB,wK,EAAA,mI,EAAA,yJ;AAAA,O;;;cAAxBA,wB;AAAwB,6C;AAAA;AAAA;sEASxB,wE,EAAY,I;;;;;;;;;;;;;;ACxBzB;;AAAkB;;AAAqB;;AACnC;;AAEE;;AACE;;AAAuC;;AACzC;;AACF;;AACA;;AACE;;AAGE;;AACE;;AACA;;AACF;;AAKJ;;AACE;;AACA;;AACF;;AACA;;AACI;;AACA;;AAEF;;AACA;;AACE;;AACA;;AAEF;;AAEE;;AACA;;AACF;;AAEA;;AAIF;;;;AAvCgE;;AAAA;;AAK7C;;AAAA;;AA0BK;;AAAA;;AACa;;AAAA;;AAGpB;;AAAA;;;;;;;;;wEDvBRA,wB,EAAwB;gBALpC,uDAKoC;iBAL1B;AACTrC,oBAAQ,EAAE,sBADD;AAETC,uBAAW,EAAE,mCAFJ;AAGTC,qBAAS,EAAE,CAAC,mCAAD;AAHF,W;AAK0B,U;;;;;;;;;AASV0C,mBAAS,EAAE,CAAF;kBAAjC,uDAAiC;mBAAvB,wE;AAAuB,WAAE;;;;;;;;;;;AExBtC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACCI;;AAAqB;;AAAoB;;;;;;AACzC;;AAAoB;;AAAqB;;;;;;;;AAYjC;;AAAuE;AAAA;;AAAA;;AAAA;AAAA;;AAAyB;;AAAM;;;;;;AAA5D;;;;;;;;AAC1C;;AAA0E;AAAA;;AAAA;;AAAA;AAAA;;AAAoB;;AAAG;;;;;;AAApD;;;;UDJ5CiB,uB;AAIX,yCACU7F,EADV,EAEUE,eAFV,EAGSqC,SAHT,EAIkCjB,IAJlC,EAI2C;AAAA;;AAHjC,eAAAtB,EAAA,GAAAA,EAAA;AACA,eAAAE,eAAA,GAAAA,eAAA;AACD,eAAAqC,SAAA,GAAAA,SAAA;AACyB,eAAAjB,IAAA,GAAAA,IAAA;AAEhC,eAAKmB,OAAL,GAAenB,IAAf;AACD;;;;iBAED,oBAAQ;AACN,iBAAKoB,SAAL,GAAiB,KAAK1C,EAAL,CAAQI,KAAR,CAAc;AAC7BQ,mBAAK,EAAE,CAAC,KAAK6B,OAAL,CAAa7B,KAAd,EAAqB,0DAAWC,QAAhC;AADsB,aAAd,CAAjB;AAGD;;;iBACD,wBAAe;AAAA;;AACb,gBAAIS,IAAI,GAAG;AACTV,mBAAK,EAAE,KAAK8B,SAAL,CAAe/B,GAAf,CAAmB,OAAnB,EAA4BU,KAD1B;AAETuC,yBAAW,EAAE,KAAKnB,OAAL,CAAamB;AAFjB,aAAX;AAIA,iBAAK1D,eAAL,CACG4F,gBADH,CACoBxE,IADpB,EAC0B,KAAKmB,OAAL,CAAaO,GADvC,EAEGxB,SAFH,CAEa,UAACyB,OAAD,EAAa;AACtB9B,qBAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B6B,OAA9B;;AAEA,qBAAI,CAACV,SAAL,CAAeW,KAAf,CAAqB,MAArB;;AACA,iEAAKzB,IAAL,CAAU;AACRb,qBAAK,EAAE,8BADC;AAERc,iCAAiB,EAAE,KAFX;AAGRC,qBAAK,EAAE;AAHC,eAAV;AAKD,aAXH;AAYD;;;iBACD,mBAAU;AAAA;;AACR,gBAAIL,IAAI,GAAG;AACTV,mBAAK,EAAE,KAAK8B,SAAL,CAAe/B,GAAf,CAAmB,OAAnB,EAA4BU;AAD1B,aAAX;AAGA,iBAAKnB,eAAL,CAAqB6F,aAArB,CAAmCzE,IAAnC,EAAyCE,SAAzC,CAAmD,UAACyB,OAAD,EAAa;AAC9D9B,qBAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB6B,OAAxB;;AAEA,qBAAI,CAACV,SAAL,CAAeW,KAAf,CAAqB,MAArB;;AACA,kBAAI,OAAI,CAACT,OAAT,EAAkB;AAChB,mEAAKhB,IAAL,CAAU;AACRb,uBAAK,EAAE,8BADC;AAERc,mCAAiB,EAAE,KAFX;AAGRC,uBAAK,EAAE;AAHC,iBAAV;AAKD,eAND,MAMO;AACL,mEAAKF,IAAL,CAAU;AACRb,uBAAK,EAAE,6BADC;AAERc,mCAAiB,EAAE,KAFX;AAGRC,uBAAK,EAAE;AAHC,iBAAV;AAKD;AACF,aAjBD;AAkBD;;;iBACD,uBAAc;AACZ,iBAAKY,SAAL,CAAeW,KAAf,CAAqB,OAArB;AACD;;;;;;;yBA7DU2C,uB,EAAuB,2H,EAAA,wK,EAAA,sI,EAAA,gEAQxB,wEARwB,C;AAQT,O;;;cARdA,uB;AAAuB,6C;AAAA,iB;AAAA,e;AAAA,qa;AAAA;AAAA;ACXpC;;AACI;;AACA;;AACA;;AAIA;;AACA;;AACA;;AACI;;AACI;;AAA0B;AAAA,qBAAS,IAAA1C,WAAA,EAAT;AAAsB,aAAtB;;AAAwB;;AAAK;;AAC3D;;AACA;;AACI;;AACA;;AACJ;;AACJ;;AACJ;;;;AAlBM;;AACG;;AAAA;;AACA;;AAAA;;AAY8B;;AAAA;;AACC;;AAAA;;;;;;;;;wEDJ3B0C,uB,EAAuB;gBALnC,uDAKmC;iBALzB;AACT7D,oBAAQ,EAAE,sBADD;AAETC,uBAAW,EAAE,mCAFJ;AAGTC,qBAAS,EAAE,CAAC,mCAAD;AAHF,W;AAKyB,U;;;;;;;;;;oBAQ/B,oD;qBAAO,wE;;;;;;;;;;;;;AEnBZ;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAWa8D,oB;AAIX,sCACUhG,EADV,EAEUE,eAFV,EAGSqC,SAHT,EAIkCjB,IAJlC,EAI2C;AAAA;;AAHjC,eAAAtB,EAAA,GAAAA,EAAA;AACA,eAAAE,eAAA,GAAAA,eAAA;AACD,eAAAqC,SAAA,GAAAA,SAAA;AACyB,eAAAjB,IAAA,GAAAA,IAAA;AAEhC,eAAKmB,OAAL,GAAenB,IAAf;AACD;;;;iBAED,oBAAQ;AACNH,mBAAO,CAACC,GAAR,CAAY,cAAZ,EAA4B,KAAKqB,OAAjC;AAEA,iBAAKC,SAAL,GAAiB,KAAK1C,EAAL,CAAQI,KAAR,CAAc;AAC7BQ,mBAAK,EAAE,CAAC,KAAK6B,OAAL,CAAa7B,KAAd,EAAqB,0DAAWC,QAAhC;AADsB,aAAd,CAAjB;AAGD;;;iBACD,wBAAe;AAAA;;AACb,gBAAIS,IAAI,GAAG;AACTV,mBAAK,EAAE,KAAK8B,SAAL,CAAe/B,GAAf,CAAmB,OAAnB,EAA4BU;AAD1B,aAAX;AAGA,iBAAKnB,eAAL,CACG+F,kBADH,CACsB3E,IADtB,EAC4B,KAAKmB,OAAL,CAAaO,GADzC,EAEGxB,SAFH,CAEa,UAACyB,OAAD,EAAa;AACtB,qBAAI,CAACV,SAAL,CAAeW,KAAf,CAAqB,MAArB;;AACA,iEAAKzB,IAAL,CAAU;AACRb,qBAAK,EAAE,+BADC;AAERc,iCAAiB,EAAE,KAFX;AAGRC,qBAAK,EAAE;AAHC,eAAV;AAKD,aATH;AAUD;;;iBACD,uBAAc;AACZ,iBAAKY,SAAL,CAAeW,KAAf,CAAqB,OAArB;AACD;;;;;;;yBArCU8C,oB,EAAoB,2H,EAAA,wK,EAAA,sI,EAAA,gEAQrB,wEARqB,C;AAQN,O;;;cARdA,oB;AAAoB,0C;AAAA,iB;AAAA,e;AAAA,0V;AAAA;AAAA;ACXjC;;AACI;;AAAI;;AAAc;;AAClB;;AAGA;;AACA;;AACA;;AACI;;AACI;;AAA0B;AAAA,qBAAS,IAAA7C,WAAA,EAAT;AAAsB,aAAtB;;AAAwB;;AAAK;;AAC3D;;AACA;;AACI;;AAAwD;AAAA,qBAAS,IAAApB,YAAA,EAAT;AAAuB,aAAvB;;AAAyB;;AAAM;;AAC3F;;AACJ;;AACF;;;;AAfI;;AAYiC;;AAAA;;;;;;;;;wEDD1BiE,oB,EAAoB;gBALhC,uDAKgC;iBALtB;AACThE,oBAAQ,EAAE,mBADD;AAETC,uBAAW,EAAE,gCAFJ;AAGTC,qBAAS,EAAE,CAAC,gCAAD;AAHF,W;AAKsB,U;;;;;;;;;;oBAQ5B,oD;qBAAO,wE;;;;;;;;;;;;;AEnBZ;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACgBM;;AAEE;;AAAI;;AAAO;;AACX;;AACI;;AAMJ;;AACA;;AACI;;AAMJ;;AACA;;AACI;;AAMJ;;AACA;;AACI;;AAMJ;;AACA;;AACI;;AAMJ;;AACA;;AACI;;AAMJ;;AAEF;;;;;;AAnDA;;AACM;;AAAA;;;;UDPCgE,uB;AAGX,yCACUlG,EADV,EAEUC,MAFV,EAGUC,eAHV,EAGiD;AAAA;;AAFvC,eAAAF,EAAA,GAAAA,EAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,eAAA,GAAAA,eAAA;AAER,eAAKiG,UAAL,GAAkB,KAAKnG,EAAL,CAAQI,KAAR,CAAc;AAC9B;AACAC,kBAAM,EAAE,KAAKL,EAAL,CAAQM,KAAR,CAAc,EAAd;AAFsB,WAAd,CAAlB;AAID;;;;iBAED,oBAAQ;AACN,iBAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3B,mBAAKP,SAAL;AACD;AACF;;;iBACD,qBAAY;AACV;AACE,mBAAKC,GAAL,GAAWC,IAAX,CAAgB,KAAKC,SAAL,EAAhB;AACD;AACF;;;iBACD,eAAG;AACD,mBAAO,KAAKyF,UAAL,CAAgBxF,GAAhB,CAAoB,QAApB,CAAP;AACD;;;iBACD,qBAAS;AACP,mBAAO,KAAKX,EAAL,CAAQI,KAAR,CAAc;AACnBgG,kBAAI,EAAE,CAAC,EAAD,CADa;AAEnBC,sBAAQ,EAAE,CAAC,EAAD,CAFS;AAGnBC,iBAAG,EAAE,CAAC,EAAD,CAHc;AAInBpC,qBAAO,EAAE,CAAC,EAAD,CAJU;AAKnBqC,yBAAW,EAAE,CAAC,EAAD,CALM;AAMnBC,uBAAS,EAAE,CAAC,EAAD;AANQ,aAAd,CAAP;AAQD;;;iBAED,8BAAqB;AACnB,gBAAMzF,IAAI,GAAc,KAAKoF,UAAL,CAAgBnF,QAAhB,CAAyB,QAAzB,CAAxB;;AACA,gBAAID,IAAI,CAACE,MAAL,GAAc,CAAlB,EAAqB;AACnBF,kBAAI,CAACG,QAAL,CAAcH,IAAI,CAACE,MAAL,GAAc,CAA5B;AACD;AACF;;;iBACD,yBAAgB;AACd,gBAAMF,IAAI,GAAc,KAAKoF,UAAL,CAAgBnF,QAAhB,CAAyB,QAAzB,CAAxB;AACA,gBAAIyF,QAAQ,GAAG;AACbpG,oBAAM,EAAE;AADK,aAAf;AAGA,gBAAIqG,QAAQ,GAAG;AACbrG,oBAAM,EAAE;AADK,aAAf;AAGA,gBAAIsG,OAAO,GAAG;AACZtG,oBAAM,EAAE;AADI,aAAd;AAGA,gBAAIuG,WAAW,GAAG;AAChBvG,oBAAM,EAAE;AADQ,aAAlB;AAGA,gBAAIwG,eAAe,GAAG;AACpBxG,oBAAM,EAAE;AADY,aAAtB;AAGA,gBAAIyG,aAAa,GAAG;AAClBzG,oBAAM,EAAE;AADU,aAApB;;AAGA,iBAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,IAAI,CAACE,MAAzB,EAAiCH,CAAC,EAAlC,EAAsC;AACpC,kBAAGC,IAAI,CAACC,QAAL,CAAcF,CAAd,EAAiBH,GAAjB,CAAqB,MAArB,EAA6BU,KAAhC,EAAsC;AACpCoF,wBAAQ,CAACpG,MAAT,CAAgBI,IAAhB,CAAqBM,IAAI,CAACC,QAAL,CAAcF,CAAd,EAAiBH,GAAjB,CAAqB,MAArB,EAA6BU,KAAlD;AACD;;AACD,kBAAGN,IAAI,CAACC,QAAL,CAAcF,CAAd,EAAiBH,GAAjB,CAAqB,UAArB,EAAiCU,KAApC,EAA0C;AACxCqF,wBAAQ,CAACrG,MAAT,CAAgBI,IAAhB,CAAqBM,IAAI,CAACC,QAAL,CAAcF,CAAd,EAAiBH,GAAjB,CAAqB,UAArB,EAAiCU,KAAtD;AACD;;AACD,kBAAGN,IAAI,CAACC,QAAL,CAAcF,CAAd,EAAiBH,GAAjB,CAAqB,KAArB,EAA4BU,KAA/B,EAAqC;AACnCsF,uBAAO,CAACtG,MAAR,CAAeI,IAAf,CAAoBM,IAAI,CAACC,QAAL,CAAcF,CAAd,EAAiBH,GAAjB,CAAqB,KAArB,EAA4BU,KAAhD;AACD;;AACD,kBAAGN,IAAI,CAACC,QAAL,CAAcF,CAAd,EAAiBH,GAAjB,CAAqB,SAArB,EAAgCU,KAAnC,EAAyC;AACvCuF,2BAAW,CAACvG,MAAZ,CAAmBI,IAAnB,CAAwBM,IAAI,CAACC,QAAL,CAAcF,CAAd,EAAiBH,GAAjB,CAAqB,SAArB,EAAgCU,KAAxD;AACD;;AACD,kBAAGN,IAAI,CAACC,QAAL,CAAcF,CAAd,EAAiBH,GAAjB,CAAqB,aAArB,EAAoCU,KAAvC,EAA6C;AAC3CwF,+BAAe,CAACxG,MAAhB,CAAuBI,IAAvB,CAA4BM,IAAI,CAACC,QAAL,CAAcF,CAAd,EAAiBH,GAAjB,CAAqB,aAArB,EAAoCU,KAAhE;AACD;;AACD,kBAAGN,IAAI,CAACC,QAAL,CAAcF,CAAd,EAAiBH,GAAjB,CAAqB,WAArB,EAAkCU,KAArC,EAA2C;AACzCyF,6BAAa,CAACzG,MAAd,CAAqBI,IAArB,CAA0BM,IAAI,CAACC,QAAL,CAAcF,CAAd,EAAiBH,GAAjB,CAAqB,WAArB,EAAkCU,KAA5D;AACD,eAlBmC,CAoBpC;AACA;AACA;AACA;AACA;;AACD;;AAEDF,mBAAO,CAACC,GAAR,CAAYqF,QAAZ,EACEC,QADF,EAEEC,OAFF,EAGEC,WAHF,EAIEC,eAJF,EAKEC,aALF;AAMD;;;;;;;yBAjGUZ,uB,EAAuB,2H,EAAA,uH,EAAA,wK;AAAA,O;;;cAAvBA,uB;AAAuB,6C;AAAA,iB;AAAA,e;AAAA,g1B;AAAA;AAAA;ACXpC;;AAAiB;;AAAe;;AAChC;;AACI;;AACE;;AACE;;AAAgB;;AAAE;;AAClB;;AAAgB;;AAAI;;AACpB;;AAAgB;;AAAS;;AACzB;;AAAgB;;AAAG;;AACnB;;AAAgB;;AAAO;;AACvB;;AAAgB;;AAAiB;;AACjC;;AAAgB;;AAA4B;;AAC9C;;AACF;;AACA;;AACI;;AAEF;;AAqDF;;AAEA;;AACF;;AACA;;AACE;;AAA8B;AAAA,qBAAS,IAAA3F,SAAA,EAAT;AAAoB,aAApB;;AAC3B;;AACH;;AACA;;AAA6B;AAAA,qBAAS,IAAAwG,kBAAA,EAAT;AAA6B,aAA7B;;AAC3B;;AACF;;AACF;;AACA;;AAIE;;AAA+B;AAAA,qBAAS,IAAAC,aAAA,EAAT;AAAwB,aAAxB;;AAA0B;;AAAM;;AACjE;;;;AAzES;;AAAA;;AAGmB;;AAAA;;;;;;;;;wEDLjBd,uB,EAAuB;gBALnC,uDAKmC;iBALzB;AACTlE,oBAAQ,EAAE,sBADD;AAETC,uBAAW,EAAE,mCAFJ;AAGTC,qBAAS,EAAE,CAAC,mCAAD;AAHF,W;AAKyB,U;;;;;;;;;;;;;;;;;;AEXpC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACiBM;;AAAuC;;AAAI;;;;;;AAC3C;;AAAuC;;AAAiB;;;;;;AAAjB;;AAAA;;;;;;AAO3C;;AAAuC;;AAAU;;;;;;AACjD;;AAAwC;;AAAqB;;;;;;AAArB;;AAAA;;;;;;AAIxC;;AAAuC;;AAAa;;;;;;AACpD;;AAAwC;;AAAwB;;;;;;AAAxB;;AAAA;;;;;;AAIxC;;AAAuC;;AAAe;;;;;;AACtD;;AAAwC;;AAA0B;;;;;;AAA1B;;AAAA;;;;;;AAIxC;;AAAuC;;AAAO;;;;;;AAC9C;;AAAwC;;AAAmB;;;;;;AAAnB;;AAAA;;;;;;AAIxC;;AAAuC;;AAAM;;;;;;AAC7C;;AAAwC;;AAAkB;;;;;;AAAlB;;AAAA;;;;;;AAIxC;;AAAuC;;AAAK;;;;;;;;AAC5C;;AAAsC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAyB;;AAC/D;;;;;;AAGA;;AAAuC;;AAAO;;;;;;;;AAC9C;;AAAsC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA2B;;AACjE;;;;;;AAIE;;;;;;AACA;;;;;;;;UDjDS+E,oB;AAMX,sCAAqB1C,QAArB,EAAwDD,MAAxD,EAA2E;AAAA;;AAAtD,eAAAC,QAAA,GAAAA,QAAA;AAAmC,eAAAD,MAAA,GAAAA,MAAA;AALxD,eAAAG,YAAA,GAAe,EAAf;AACA,eAAAC,gBAAA,GAA6B,CAAC,OAAD,EAAU,UAAV,EAAqB,aAArB,EAAmC,eAAnC,EAAmD,QAAnD,EAA4D,OAA5D,EAAqE,MAArE,EAA6E,QAA7E,CAA7B;AACA,eAAAC,UAAA,GAAa,IAAI,0EAAJ,CAAuB,KAAKF,YAA5B,CAAb;AAG8E;;;;iBAE9E,oBAAQ;AACN,iBAAKF,QAAL,CAAcA,QAAd,CAAuB,kBAAvB;AACD;;;iBACD,2BAAkB;AAChB,iBAAKI,UAAL,CAAgBC,SAAhB,GAA4B,KAAKA,SAAjC;AACD;;;iBAED,yBAAgB,CACd;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAED;;;iBAED,oBAAWsC,EAAX,EAAe;AACf,gBAAI3E,SAAS,GAAG,KAAK+B,MAAL,CAAYW,IAAZ,CAAiB,sFAAjB,EAAsC;AACrD3D,kBAAI,EAAE;AACL6F,sBAAM,EAAE,KADH;AAELC,sBAAM,EAAEF;AAFH;AAD+C,aAAtC,CAAhB;AAMA3E,qBAAS,CAAC4C,WAAV,GAAwB3D,SAAxB,CAAkC,UAAC4D,MAAD,EAAY;AAC7CjE,qBAAO,CAACC,GAAR,CAAY,+CAAZ,EAA6DgE,MAA7D;AAEAjE,qBAAO,CAACC,GAAR,CAAY,uBAAZ;AACA,aAJD;AAKA;;;iBACA,cAAK2D,OAAL,EAAc;AAAA;;AACZ,gBAAMxC,SAAS,GAAG,KAAK+B,MAAL,CAAYW,IAAZ,CAAiB,gFAAjB,EAAoC;AACpDC,mBAAK,EAAE,OAD6C;AAEpD5D,kBAAI,EAAEyD;AAF8C,aAApC,CAAlB;AAIAxC,qBAAS,CAAC4C,WAAV,GAAwB3D,SAAxB,CAAkC,UAAC4D,MAAD,EAAY;AAC5C,kBAAKA,MAAM,IAAI,MAAf,EAAwB;AACtB,uBAAI,CAACiC,aAAL;AACD;;AACDlG,qBAAO,CAACC,GAAR,CAAY,uBAAZ;AACD,aALD;AAMD;;;iBACD,iBAAOL,IAAP,EAAa,CACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACD;;;;;;;yBAlFUkG,oB,EAAoB,yJ,EAAA,mI;AAAA,O;;;cAApBA,oB;AAAoB,yC;AAAA;AAAA;sEAIpB,wE,EAAY,I;;;;;;;;;;;;;;ACdzB;;AAAI;;AAAa;;AACjB;;AAEE;;AACE;;AAA6B;AAAA,qBAAS,IAAAK,UAAA,CAAW,MAAX,CAAT;AAA2B,aAA3B;;AACzB;;AACJ;;AACJ;;AACA;;AACA;;AACE;;AAGE;;AACE;;AACA;;AACF;;AAKJ;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AAEF;;AACA;;AACE;;AACA;;AAEF;;AAGI;;AACA;;AACF;;AAEA;;AAIF;;;;AAxDmB;;AAAA;;AAgDK;;AAAA;;AACa;;AAAA;;AAGpB;;AAAA;;;;;;;;;wEDpDJL,oB,EAAoB;gBALhC,uDAKgC;iBALtB;AACTjF,oBAAQ,EAAE,kBADD;AAETC,uBAAW,EAAE,+BAFJ;AAGTC,qBAAS,EAAE,CAAC,+BAAD;AAHF,W;AAKsB,U;;;;;;;AAIN0C,mBAAS,EAAE,CAAF;kBAAjC,uDAAiC;mBAAvB,wE;AAAuB,WAAE;;;;;;;;;;;AEjBtC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACSQ;;AAIE;;AACE;;AACE;;AACG;;AACH;;AACF;;AACA;;AACE;;AAMF;;AACA;;AACE;;AAA6B;AAAA;;AAAA;;AAAA;AAAA;;AAC1B;;AACH;;AACF;;AACA;;AACE;;AAA6B;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAC3B;;AACF;;AACF;;AACF;;AAEA;;AACF;;;;;;AA7BE;;AAKO;;AAAA;;;;;;;;UDCJ2C,e;AAIX,iCACUvH,EADV,EAEUC,MAFV,EAGUC,eAHV,EAGgD;AAAA;;AAFtC,eAAAF,EAAA,GAAAA,EAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,eAAA,GAAAA,eAAA;AAER,eAAKsH,aAAL,GAAmB,KAAKxH,EAAL,CAAQI,KAAR,CAAc;AAChC;AACCC,kBAAM,EAAE,KAAKL,EAAL,CAAQM,KAAR,CAAc,EAAd;AAFuB,WAAd,CAAnB;AAID;;;;iBAED,oBAAQ;AACN,iBAAKC,SAAL;AACD;;;iBACD,qBAAY;AACV;AACE,mBAAKC,GAAL,GAAWC,IAAX,CAAgB,KAAKC,SAAL,EAAhB;AACD;AACF;;;iBACD,eAAG;AACD,mBAAO,KAAK8G,aAAL,CAAmB7G,GAAnB,CAAuB,QAAvB,CAAP;AACD;;;iBACD,qBAAS;AACP,mBAAO,KAAKX,EAAL,CAAQI,KAAR,CAAc;AAEnBQ,mBAAK,EAAE,CAAC,EAAD,EAAK,0DAAWC,QAAhB;AAFY,aAAd,CAAP;AAID;;;iBAED,4BAAmBC,CAAnB,EAAsB;AACpB,gBAAMC,IAAI,GAAc,KAAKyG,aAAL,CAAmBxG,QAAnB,CAA4B,QAA5B,CAAxB;;AACA,gBAAID,IAAI,CAACE,MAAL,GAAc,CAAlB,EAAqB;AACnBF,kBAAI,CAACG,QAAL,CAAcJ,CAAd;AAED;AACF;;;iBACD,wBAAe;AAAA;;AACb,gBAAIQ,IAAI,GAAC;AACPjB,oBAAM,EAAC,KAAKmH,aAAL,CAAmB7G,GAAnB,CAAuB,QAAvB,EAAiCU;AADjC,aAAT;AAGA,iBAAKnB,eAAL,CAAqBuH,cAArB,CAAoCnG,IAApC,EAA0CE,SAA1C,CAAoD,UAACF,IAAD,EAAU;AAC5DH,qBAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCE,IAAhC;;AAEA,qBAAI,CAACrB,MAAL,CAAY2B,QAAZ,CAAqB,CAAC,6BAAD,CAArB;AACD,aAJD,EAIE,UAACC,GAAD,EAAO;AAACV,qBAAO,CAACW,KAAR,CAAcD,GAAd;AAAoB,aAJ9B;AAQD;;;;;;;yBApDU0F,e,EAAe,2H,EAAA,uH,EAAA,wK;AAAA,O;;;cAAfA,e;AAAe,oC;AAAA,iB;AAAA,e;AAAA,6lB;AAAA;AAAA;ACjB5B;;AACI;;AACF;;AACA;;AACE;;AAAkC;AAAA,qBAAY,IAAAxF,YAAA,EAAZ;AAA0B,aAA1B;;AAChC;;AAAwB;;AAAoB;;AAC5C;;AACA;;AACA;;AACE;;AAgCF;;AACA;;AAEA;;AACE;;AAA8F;;AAAG;;AACnG;;AACF;;AACF;;;;AAhDmC;;AAI3B;;AAAA;;AAMoB;;AAAA;;AAmCuB;;AAAA;;;;;;;;;wED5BxCwF,e,EAAe;gBAL3B,uDAK2B;iBALjB;AACTvF,oBAAQ,EAAE,aADD;AAETC,uBAAW,EAAE,0BAFJ;AAGTC,qBAAS,EAAE,CAAC,0BAAD;AAHF,W;AAKiB,U;;;;;;;;;;;;;;;;;;AEhB5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACWU;;AAAuC;;AAAI;;;;;;AAC3C;;AAAuC;;AAAiB;;;;;;AAAjB;;AAAA;;;;;;AAO3C;;AAAuC;;AAAK;;;;;;AAC5C;;AAAwC;;AAAkB;;;;;;AAAlB;;AAAA;;;;;;AAGtC;;AAAuC;;AAAK;;;;;;;;AAC5C;;AAAsC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAyB;;AAC/D;;;;;;AAGA;;AAAuC;;AAAO;;;;;;;;AAC9C;;AAAsC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA2B;;AACjE;;;;;;AAGA;;;;;;AACA;;;;;;;;;;;;UDpBKwF,kB;AAYX;AAEA,oCAEUxH,eAFV,EAGUoE,MAHV,EAIUC,QAJV,EAIkC;AAAA;;AAFxB,eAAArE,eAAA,GAAAA,eAAA;AACA,eAAAoE,MAAA,GAAAA,MAAA;AACA,eAAAC,QAAA,GAAAA,QAAA;AAjBV,eAAAC,WAAA,GAAmB,EAAnB;AACA,eAAAC,YAAA,GAAe,EAAf,CAgBkC,CAflC;;AACA,eAAAC,gBAAA,GAA6B,CAAC,OAAD,EAAU,OAAV,EAAkB,MAAlB,EAAyB,QAAzB,CAA7B;AACA,eAAAC,UAAA,GAAa,IAAI,0EAAJ,CAAuB,KAAKF,YAA5B,CAAb;AAcI;;;;iBAVJ,2BAAkB;AAChB,iBAAKE,UAAL,CAAgBC,SAAhB,GAA4B,KAAKA,SAAjC;AACD;;;iBAUD,oBAAQ;AACN,iBAAK+C,UAAL;AACA,iBAAKpD,QAAL,CAAcA,QAAd,CAAuB,cAAvB;AAED;;;iBAED,sBAAa;AAAA;;AACX,iBAAKrE,eAAL,CAAqB0H,SAArB,GAAiCpG,SAAjC,CAA2C,UAACsB,GAAD,EAAa;AACtD3B,qBAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB0B,GAAxB;AACA,kBAAIxB,IAAI,GAAGwB,GAAG,CAACxB,IAAf;AACAA,kBAAI,CAACwD,OAAL,CAAa,UAACC,OAAD,EAAUC,KAAV,EAAoB;AAC/BD,uBAAO,CAACC,KAAR,GAAgBA,KAAK,GAAG,CAAxB,CAD+B,CACJ;AAC5B,eAFD;AAIA,qBAAI,CAACP,YAAL,GAAoBnD,IAApB;AACA,qBAAI,CAACqD,UAAL,GAAkB,IAAI,0EAAJ,CAAuB,OAAI,CAACF,YAA5B,CAAlB;AACA,qBAAI,CAACE,UAAL,CAAgBC,SAAhB,GAA4B,OAAI,CAACA,SAAjC;AACAzD,qBAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiC,OAAI,CAACqD,YAAtC,EAVsD,CAYtD;AACD,aAbD;AAcD;;;iBACD,cAAKM,OAAL,EAAY;AAAA;;AACV,gBAAMxC,SAAS,GAAG,KAAK+B,MAAL,CAAYW,IAAZ,CAAiB,6EAAjB,EAAmC;AACnDC,mBAAK,EAAE,OAD4C;AAEnD5D,kBAAI,EAAEyD;AAF6C,aAAnC,CAAlB;AAIAxC,qBAAS,CAAC4C,WAAV,GAAwB3D,SAAxB,CAAkC,UAAC4D,MAAD,EAAY;AAC5C,kBAAKA,MAAM,IAAI,MAAf,EAAwB;AACtB,uBAAI,CAACuC,UAAL;AACD;;AACDxG,qBAAO,CAACC,GAAR,CAAY,uBAAZ;AACD,aALD;AAMD;;;iBACD,iBAAOL,IAAP,EAAa;AAAA;;AACX,+DAAKU,IAAL,CAAU;AACRb,mBAAK,EAAE,eADC;AAERyE,kBAAI,oCAA4BtE,IAAI,CAACH,KAAjC,QAFI;AAGR0E,kBAAI,EAAE,SAHE;AAIRC,8BAAgB,EAAE,IAJV;AAKRC,gCAAkB,EAAE,SALZ;AAMRC,+BAAiB,EAAE,MANX;AAORC,+BAAiB,EAAE;AAPX,aAAV,EAQGC,IARH,CAQQ,UAACP,MAAD,EAAY;AAClB,kBAAIA,MAAM,CAAC/D,KAAX,EAAkB;AAChB,uBAAI,CAACnB,eAAL,CACC2H,SADD,CACW9G,IAAI,CAACiC,GADhB,EAECxB,SAFD,CAEW,UAACsB,GAAD,EAAS;AAClB,qEAAKrB,IAAL,CAAU;AACRb,yBAAK,EAAE,gCADC;AAERc,qCAAiB,EAAE,KAFX;AAGRC,yBAAK,EAAE;AAHC,mBAAV;AAKAR,yBAAO,CAACC,GAAR,CAAY,aAAZ,EAA2B0B,GAA3B;;AACA,yBAAI,CAAC6E,UAAL;AAED,iBAXD;AAYD;AACF,aAvBD;AAwBD;;;;;;;yBAhFUD,kB,EAAkB,wK,EAAA,mI,EAAA,yJ;AAAA,O;;;cAAlBA,kB;AAAkB,uC;AAAA;AAAA;sEAOlB,wE,EAAY,I;;;;;;;;;;;;;;ACtBzB;;AAAkB;;AAAQ;;AACtB;;AAEE;;AACE;;AAAuC;;AACzC;;AACF;;AACA;;AACE;;AAGE;;AACE;;AACA;;AACF;;AAKJ;;AACE;;AACA;;AACF;;AACA;;AACI;;AACA;;AAEF;;AACA;;AACE;;AACA;;AAEF;;AAEE;;AACA;;AACF;;AAEA;;AAIF;;;;AAvCgE;;AAAA;;AAK7C;;AAAA;;AA0BK;;AAAA;;AACa;;AAAA;;AAGpB;;AAAA;;;;;;;;;wEDvBRA,kB,EAAkB;gBAL9B,uDAK8B;iBALpB;AACT1F,oBAAQ,EAAE,gBADD;AAETC,uBAAW,EAAE,6BAFJ;AAGTC,qBAAS,EAAE,CAAC,6BAAD;AAHF,W;AAKoB,U;;;;;;;;;AAOJ0C,mBAAS,EAAE,CAAF;kBAAjC,uDAAiC;mBAAvB,wE;AAAuB,WAAE;;;;;;;;;;;AEtBtC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACaM;;AAAuC;;AAAI;;;;;;AAC3C;;AAAuC;;AAAiB;;;;;;AAAjB;;AAAA;;;;;;AAO3C;;AAAuC;;AAAK;;;;;;AAC5C;;AAAwC;;AAAkB;;;;;;AAAlB;;AAAA;;;;;;AAIxC;;AAAuC;;AAAK;;;;;;;;AAC5C;;AAAsC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAyB;;AAC/D;;;;;;AAGA;;AAAuC;;AAAO;;;;;;;;AAC9C;;AAAsC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA2B;;AACjE;;;;;;AAIE;;;;;;AACA;;;;;;;;UDxBSkD,mB;AAeX;AAEA,qCAAoB5H,eAApB,EAAoEoE,MAApE,EAAsF;AAAA;;AAAlE,eAAApE,eAAA,GAAAA,eAAA;AAAgD,eAAAoE,MAAA,GAAAA,MAAA;AAdpE,eAAAE,WAAA,GAAmB,EAAnB;AACA,eAAAC,YAAA,GAAe,EAAf,CAasF,CAZtF;;AACA,eAAAC,gBAAA,GAA6B,CAAC,OAAD,EAAU,OAAV,EAAmB,MAAnB,EAA0B,QAA1B,CAA7B;AACA,eAAAC,UAAA,GAAa,IAAI,0EAAJ,CAAuB,KAAKF,YAA5B,CAAb;AAUwF;;;;iBALxF,2BAAkB;AAChB,iBAAKE,UAAL,CAAgBC,SAAhB,GAA4B,KAAKA,SAAjC;AACD;;;iBAKD,oBAAQ;AACN,iBAAK/B,gBAAL;AACD;;;iBAED,4BAAmB;AAAA;;AACjB,iBAAK3C,eAAL,CAAqB2C,gBAArB,GAAwCrB,SAAxC,CAAkD,UAACsB,GAAD,EAAS;AACzD3B,qBAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkC0B,GAAlC,EADyD,CAEzD;;AACA,kBAAIxB,IAAI,GAAGwB,GAAG,CAACxB,IAAf;AACAA,kBAAI,CAACwD,OAAL,CAAa,UAACC,OAAD,EAAUC,KAAV,EAAoB;AAC/BD,uBAAO,CAACC,KAAR,GAAgBA,KAAK,GAAG,CAAxB,CAD+B,CACJ;AAC5B,eAFD;AAIA,qBAAI,CAACP,YAAL,GAAoBnD,IAApB;AACA,qBAAI,CAACqD,UAAL,GAAkB,IAAI,0EAAJ,CAAuB,OAAI,CAACF,YAA5B,CAAlB;AACA,qBAAI,CAACE,UAAL,CAAgBC,SAAhB,GAA4B,OAAI,CAACA,SAAjC,CAVyD,CAYzD;AACD,aAbD;AAeD;;;iBAED,cAAKG,OAAL,EAAY;AAAA;;AACV,gBAAMxC,SAAS,GAAG,KAAK+B,MAAL,CAAYW,IAAZ,CAAiB,oGAAjB,EAA0C;AAC1DC,mBAAK,EAAE,OADmD;AAE1D5D,kBAAI,EAAEyD;AAFoD,aAA1C,CAAlB;AAIAxC,qBAAS,CAAC4C,WAAV,GAAwB3D,SAAxB,CAAkC,UAAC4D,MAAD,EAAY;AAC5C,kBAAKA,MAAM,IAAI,MAAf,EAAwB;AACtB,uBAAI,CAACvC,gBAAL;AACD;;AACD1B,qBAAO,CAACC,GAAR,CAAY,uBAAZ;AACD,aALD;AAMD;;;iBAED,iBAAOL,IAAP,EAAa;AAAA;;AACX,+DAAKU,IAAL,CAAU;AACRb,mBAAK,EAAE,eADC;AAERyE,kBAAI,oCAA4BtE,IAAI,CAACH,KAAjC,QAFI;AAGR0E,kBAAI,EAAE,SAHE;AAIRC,8BAAgB,EAAE,IAJV;AAKRC,gCAAkB,EAAE,SALZ;AAMRC,+BAAiB,EAAE,MANX;AAORC,+BAAiB,EAAE;AAPX,aAAV,EAQGC,IARH,CAQQ,UAACP,MAAD,EAAY;AAClB,kBAAIA,MAAM,CAAC/D,KAAX,EAAkB;AAChB,uBAAI,CAACnB,eAAL,CACC6H,gBADD,CACkBhH,IAAI,CAACiC,GADvB,EAECxB,SAFD,CAEW,UAACsB,GAAD,EAAS;AAClB,qEAAKrB,IAAL,CAAU;AACRb,yBAAK,EAAE,+BADC;AAERc,qCAAiB,EAAE,KAFX;AAGRC,yBAAK,EAAE;AAHC,mBAAV;AAKAR,yBAAO,CAACC,GAAR,CAAY,aAAZ,EAA2B0B,GAA3B;;AACA,yBAAI,CAACD,gBAAL;AAED,iBAXD;AAYD;AACF,aAvBD;AAwBD;;;;;;;yBA/EUiF,mB,EAAmB,wK,EAAA,mI;AAAA,O;;;cAAnBA,mB;AAAmB,wC;AAAA;AAAA;sEAUnB,wE,EAAY,I;;;;;;;;;;;;;;ACvBzB;;AAAkB;;AAAqB;;AACvC;;AAEE;;AAA8D;AAAA,qBAAS,IAAAE,IAAA,CAAK,EAAL,CAAT;AAAiB,aAAjB;;AAC5D;;AAAuC;;AACzC;;AACF;;AACA;;AACE;;AAGE;;AACE;;AACA;;AACF;;AAKJ;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AAEF;;AACA;;AACE;;AACA;;AAEF;;AAGI;;AACA;;AACF;;AAEA;;AAIF;;;;AApCmB;;AAAA;;AA4BK;;AAAA;;AACa;;AAAA;;AAGpB;;AAAA;;;;;;;;;wED3BJF,mB,EAAmB;gBAL/B,uDAK+B;iBALrB;AACT9F,oBAAQ,EAAE,iBADD;AAETC,uBAAW,EAAE,8BAFJ;AAGTC,qBAAS,EAAE,CAAC,8BAAD;AAHF,W;AAKqB,U;;;;;;;AAUL0C,mBAAS,EAAE,CAAF;kBAAjC,uDAAiC;mBAAvB,wE;AAAuB,WAAE;;;;;;;;;;;AExBtC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAQaqD,mB;AAEX,qCAAoB1F,SAApB,EACgCjB,IADhC,EACyC;AAAA;;AADrB,eAAAiB,SAAA,GAAAA,SAAA;AACY,eAAAjB,IAAA,GAAAA,IAAA;AAAe;;;;iBAE/C,oBAAQ,CACP;;;;;;;yBANU2G,mB,EAAmB,sI,EAAA,gEAGtB,wEAHsB,C;AAGP,O;;;cAHZA,mB;AAAmB,wC;AAAA,iB;AAAA,e;AAAA,sP;AAAA;AAAA;ACRhC;;AACI;;AACI;;AAAI;;AAAY;;AAEhB;;AACE;;AACE;;AAAqD;;AAAa;;AAClE;;AAKF;;AACA;;AACE;;AAAqD;;AAAgB;;AACrE;;AAKF;;AACF;;AACA;;AACE;;AACE;;AAAqD;;AAAsB;;AAC3E;;AAKF;;AACA;;AACE;;AAAqD;;AAAc;;AACnE;;AAKF;;AACF;;AAEF;;AACA;;AACA;;AAuBA;;AACF;;;;;;;;wED3DSA,mB,EAAmB;gBAL/B,uDAK+B;iBALrB;AACTjG,oBAAQ,EAAE,iBADD;AAETC,uBAAW,EAAE,8BAFJ;AAGTC,qBAAS,EAAE,CAAC,8BAAD;AAHF,W;AAKqB,U;;;;;;oBAG7B,oD;qBAAO,wE;;;;;;;;;;;;;AEXV;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACaM;;AAAuC;;AAAI;;;;;;AAC3C;;AAAuC;;AAAiB;;;;;;AAAjB;;AAAA;;;;;;AAO3C;;AAAuC;;AAAK;;;;;;AAC5C;;AAAwC;;AAAkB;;;;;;AAAlB;;AAAA;;;;;;AAIxC;;AAAuC;;AAAK;;;;;;;;AAC5C;;AAAsC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAyB;;AAC/D;;;;;;AAGA;;AAAuC;;AAAO;;;;;;;;AAC9C;;AAAsC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA2B;;AACjE;;;;;;AAIE;;;;;;AACA;;;;;;;;;;;;UDxBSgG,oB;AAcX;AAEA,sCAAoBhI,eAApB,EAAoEoE,MAApE,EAA8FC,QAA9F,EAAyH;AAAA;;AAArG,eAAArE,eAAA,GAAAA,eAAA;AAAgD,eAAAoE,MAAA,GAAAA,MAAA;AAA0B,eAAAC,QAAA,GAAAA,QAAA;AAb9F,eAAAC,WAAA,GAAmB,EAAnB;AACA,eAAAC,YAAA,GAAe,EAAf,CAYyH,CAXzH;;AACA,eAAAC,gBAAA,GAA6B,CAAC,OAAD,EAAU,OAAV,EAAmB,MAAnB,EAA0B,QAA1B,CAA7B;AACA,eAAAC,UAAA,GAAa,IAAI,0EAAJ,CAAuB,KAAKF,YAA5B,CAAb;AAS2H;;;;iBAL3H,2BAAkB;AAChB,iBAAKE,UAAL,CAAgBC,SAAhB,GAA4B,KAAKA,SAAjC;AACD;;;iBAKD,oBAAQ;AACN,iBAAKuD,oBAAL;AACA,iBAAK5D,QAAL,CAAcA,QAAd,CAAuB,sBAAvB;AACD;;;iBAED,gCAAuB;AAAA;;AAErB,iBAAKrE,eAAL,CAAqBkI,SAArB,GAAiC5G,SAAjC,CAA2C,UAACsB,GAAD,EAAa;AACtD3B,qBAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgC0B,GAAhC,EADsD,CAEtD;;AACA,kBAAIxB,IAAI,GAAGwB,GAAG,CAACxB,IAAf;AACAA,kBAAI,CAACwD,OAAL,CAAa,UAACC,OAAD,EAAUC,KAAV,EAAoB;AAC/BD,uBAAO,CAACC,KAAR,GAAgBA,KAAK,GAAG,CAAxB,CAD+B,CACJ;AAC5B,eAFD;AAIA,qBAAI,CAACP,YAAL,GAAoBnD,IAApB;AACA,qBAAI,CAACqD,UAAL,GAAkB,IAAI,0EAAJ,CAAuB,OAAI,CAACF,YAA5B,CAAlB;AACA,qBAAI,CAACE,UAAL,CAAgBC,SAAhB,GAA4B,OAAI,CAACA,SAAjC,CAVsD,CAYtD;AACD,aAbD;AAeD;;;iBACD,cAAKG,OAAL,EAAY;AAAA;;AACV,gBAAMxC,SAAS,GAAG,KAAK+B,MAAL,CAAYW,IAAZ,CAAiB,6EAAjB,EAAmC;AACnDC,mBAAK,EAAE,OAD4C;AAEnD5D,kBAAI,EAAEyD;AAF6C,aAAnC,CAAlB;AAIAxC,qBAAS,CAAC4C,WAAV,GAAwB3D,SAAxB,CAAkC,UAAC4D,MAAD,EAAY;AAC5C,kBAAKA,MAAM,IAAI,MAAf,EAAwB;AACtB,uBAAI,CAAC+C,oBAAL;AACD;;AACDhH,qBAAO,CAACC,GAAR,CAAY,uBAAZ;AACD,aALD;AAMD;;;iBACD,iBAAOL,IAAP,EAAa;AAAA;;AACX,+DAAKU,IAAL,CAAU;AACRb,mBAAK,EAAE,eADC;AAERyE,kBAAI,oCAA4BtE,IAAI,CAACH,KAAjC,QAFI;AAGR0E,kBAAI,EAAE,SAHE;AAIRC,8BAAgB,EAAE,IAJV;AAKRC,gCAAkB,EAAE,SALZ;AAMRC,+BAAiB,EAAE,MANX;AAORC,+BAAiB,EAAE;AAPX,aAAV,EAQGC,IARH,CAQQ,UAACP,MAAD,EAAY;AAClB,kBAAIA,MAAM,CAAC/D,KAAX,EAAkB;AAChB,uBAAI,CAACnB,eAAL,CACCmI,SADD,CACWtH,IAAI,CAACiC,GADhB,EAECxB,SAFD,CAEW,UAACsB,GAAD,EAAS;AAClB,qEAAKrB,IAAL,CAAU;AACRb,yBAAK,EAAE,gCADC;AAERc,qCAAiB,EAAE,KAFX;AAGRC,yBAAK,EAAE;AAHC,mBAAV;;AAKA,yBAAI,CAACwG,oBAAL;AAED,iBAVD;AAWD;AACF,aAtBD;AAuBD;;;;;;;yBA7EUD,oB,EAAoB,wK,EAAA,mI,EAAA,yJ;AAAA,O;;;cAApBA,oB;AAAoB,0C;AAAA;AAAA;sEASpB,wE,EAAY,I;;;;;;;;;;;;;;ACtBzB;;AAAkB;;AAAqB;;AACvC;;AAEE;;AACE;;AAAuC;;AACzC;;AACF;;AACA;;AACE;;AAGE;;AACE;;AACA;;AACF;;AAKJ;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AAEF;;AACA;;AACE;;AACA;;AAEF;;AAGI;;AACA;;AACF;;AAEA;;AAIF;;;;AAzCgE;;AAAA;;AAK7C;;AAAA;;AA4BK;;AAAA;;AACa;;AAAA;;AAGpB;;AAAA;;;;;;;;;wED3BJA,oB,EAAoB;gBALhC,uDAKgC;iBALtB;AACTlG,oBAAQ,EAAE,mBADD;AAETC,uBAAW,EAAE,gCAFJ;AAGTC,qBAAS,EAAE,CAAC,gCAAD;AAHF,W;AAKsB,U;;;;;;;;;AASN0C,mBAAS,EAAE,CAAF;kBAAjC,uDAAiC;mBAAvB,wE;AAAuB,WAAE;;;;;;;;;;;AEvBtC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAYa0D,gB;AAOX,kCACUtI,EADV,EAEUE,eAFV,EAGSqC,SAHT,EAIkCjB,IAJlC,EAI2C;AAAA;;AAHjC,eAAAtB,EAAA,GAAAA,EAAA;AACA,eAAAE,eAAA,GAAAA,eAAA;AACD,eAAAqC,SAAA,GAAAA,SAAA;AACyB,eAAAjB,IAAA,GAAAA,IAAA;AAEhC,eAAKmB,OAAL,GAAenB,IAAf;AACD;;;;iBAED,oBAAQ;AACN,iBAAKoB,SAAL,GAAiB,KAAK1C,EAAL,CAAQI,KAAR,CAAc;AAC7BQ,mBAAK,EAAE,CAAC,KAAK6B,OAAL,CAAa7B,KAAd,EAAqB,0DAAWC,QAAhC;AADsB,aAAd,CAAjB;AAGD;;;iBACD,wBAAe;AAAA;;AAEb,gBAAIS,IAAI,GAAC;AACPV,mBAAK,EAAE,KAAK8B,SAAL,CAAe/B,GAAf,CAAmB,OAAnB,EAA4BU;AAD5B,aAAT;AAGA,iBAAKnB,eAAL,CACGqI,SADH,CACajH,IADb,EACmB,KAAKmB,OAAL,CAAaO,GADhC,EAEGxB,SAFH,CAEa,UAACyB,OAAD,EAAa;AACtB9B,qBAAO,CAACC,GAAR,CAAY,SAAZ,EAAuB6B,OAAvB;;AAEA,qBAAI,CAACV,SAAL,CAAeW,KAAf,CAAqB,MAArB;;AACA,iEAAKzB,IAAL,CAAU;AACRb,qBAAK,EAAE,+BADC;AAERc,iCAAiB,EAAE,KAFX;AAGRC,qBAAK,EAAE;AAHC,eAAV;AAKG,aAXP;AAYD;;;iBACD,uBAAW;AACT,iBAAKY,SAAL,CAAeW,KAAf,CAAqB,OAArB;AAED;;;;;;;yBA1CUoF,gB,EAAgB,2H,EAAA,wK,EAAA,sI,EAAA,gEAWjB,wEAXiB,C;AAWF,O;;;cAXdA,gB;AAAgB,qC;AAAA,iB;AAAA,e;AAAA,0V;AAAA;AAAA;ACZ7B;;AACI;;AAEA;;AAAW;;AAAqB;;AAChC;;AACA;;AACA;;AACI;;AACI;;AAA0B;AAAA,qBAAS,IAAAnF,WAAA,EAAT;AAAsB,aAAtB;;AAAwB;;AAAK;;AAC3D;;AACA;;AACI;;AAAwD;AAAA,qBAAS,IAAApB,YAAA,EAAT;AAAuB,aAAvB;;AAAyB;;AAAI;;AACzF;;AACJ;;AACJ;;;;AAdM;;AAWiC;;AAAA;;;;;;;;;wEDC1BuG,gB,EAAgB;gBAL5B,uDAK4B;iBALlB;AACTtG,oBAAQ,EAAE,cADD;AAETC,uBAAW,EAAE,2BAFJ;AAGTC,qBAAS,EAAE,CAAC,2BAAD;AAHF,W;AAKkB,U;;;;;;;;;;oBAWxB,oD;qBAAO,wE;;;;;;;;;;;;;AEvBZ;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACSM;;AAIE;;AACE;;AACE;;AACG;;AACH;;AACF;;AACA;;AACE;;AAMF;;AACA;;AACE;;AAA6B;AAAA;;AAAA;;AAAA;AAAA;;AAC1B;;AACH;;AACF;;AACA;;AACE;;AAA6B;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAC3B;;AACF;;AACF;;AACF;;AAEA;;AACF;;;;;;AA7BE;;AAKO;;AAAA;;;;;;;;UDCFsG,mB;AAIX,qCACUxI,EADV,EAEUC,MAFV,EAGUC,eAHV,EAGgD;AAAA;;AAFtC,eAAAF,EAAA,GAAAA,EAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,eAAA,GAAAA,eAAA;AAER,eAAKuI,cAAL,GAAoB,KAAKzI,EAAL,CAAQI,KAAR,CAAc;AACjC;AACCC,kBAAM,EAAE,KAAKL,EAAL,CAAQM,KAAR,CAAc,EAAd;AAFwB,WAAd,CAApB;AAID;;;;iBAED,oBAAQ;AACN,iBAAKC,SAAL;AACD;;;iBACD,qBAAY;AACV;AACE,mBAAKC,GAAL,GAAWC,IAAX,CAAgB,KAAKC,SAAL,EAAhB;AACD;AACF;;;iBACD,eAAG;AACD,mBAAO,KAAK+H,cAAL,CAAoB9H,GAApB,CAAwB,QAAxB,CAAP;AACD;;;iBACD,qBAAS;AACP,mBAAO,KAAKX,EAAL,CAAQI,KAAR,CAAc;AACnBQ,mBAAK,EAAE,CAAC,EAAD,EAAK,0DAAWC,QAAhB;AADY,aAAd,CAAP;AAGD;;;iBAED,4BAAmBC,CAAnB,EAAsB;AACpB,gBAAMC,IAAI,GAAc,KAAK0H,cAAL,CAAoBzH,QAApB,CAA6B,QAA7B,CAAxB;;AACA,gBAAID,IAAI,CAACE,MAAL,GAAc,CAAlB,EAAqB;AACnBF,kBAAI,CAACG,QAAL,CAAcJ,CAAd;AAED;AACF;;;iBACD,wBAAe;AAAA;;AACbK,mBAAO,CAACC,GAAR,CAAY,KAAKqH,cAAL,CAAoB9H,GAApB,CAAwB,QAAxB,EAAkCU,KAA9C;AACA,gBAAIC,IAAI,GAAC;AACPjB,oBAAM,EAAC,KAAKoI,cAAL,CAAoB9H,GAApB,CAAwB,QAAxB,EAAkCU;AADlC,aAAT;AAGA,iBAAKnB,eAAL,CAAqBwI,kBAArB,CAAwCpH,IAAxC,EAA8CE,SAA9C,CAAwD,UAACF,IAAD,EAAU;AAChEH,qBAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBE,IAAzB;AACA,iEAAKG,IAAL,CAAU;AACRb,qBAAK,EAAE,8BADC;AAERc,iCAAiB,EAAE,KAFX;AAGRC,qBAAK,EAAE;AAHC,eAAV;;AAKA,qBAAI,CAAC1B,MAAL,CAAY2B,QAAZ,CAAqB,CAAC,yBAAD,CAArB;AACD,aARD,EAQE,UAACC,GAAD,EAAO;AAACV,qBAAO,CAACW,KAAR,CAAcD,GAAd;AAAoB,aAR9B;AAYD;;;;;;;yBAxDU2G,mB,EAAmB,2H,EAAA,uH,EAAA,wK;AAAA,O;;;cAAnBA,mB;AAAmB,yC;AAAA,iB;AAAA,e;AAAA,6lB;AAAA;AAAA;ACjBhC;;AACE;;AACF;;AACA;;AACE;;AAAmC;AAAA,qBAAY,IAAAzG,YAAA,EAAZ;AAA0B,aAA1B;;AACjC;;AAAwB;;AAAY;;AACpC;;AACA;;AACA;;AACE;;AAgCF;;AACA;;AAEA;;AACE;;AAA+F;;AAAG;;AACpG;;AACF;;AACF;;;;AAhDqC;;AAI7B;;AAAA;;AAMoB;;AAAA;;AAmCuB;;AAAA;;;;;;;;;wED5BtCyG,mB,EAAmB;gBAL/B,uDAK+B;iBALrB;AACTxG,oBAAQ,EAAE,kBADD;AAETC,uBAAW,EAAE,+BAFJ;AAGTC,qBAAS,EAAE,CAAC,+BAAD;AAHF,W;AAKqB,U;;;;;;;;;;;;;;;;;;AEjBhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACmCgB;;AAAmE;;AAAkB;;;;;;AAAzC;;AAAuB;;AAAA;;;;;;;;AAxB3E;;AAIE;;AACE;;AACE;;AACG;;AACH;;AACF;;AACA;;AACE;;AAQF;;AACA;;AACE;;AAEE;;AAAgC;;AAAe;;AAC/C;;AACF;;AACF;;AACA;;AACE;;AAA6B;AAAA;;AAAA;;AAAA;AAAA;;AAC1B;;AACH;;AACF;;AACA;;AACE;;AAA6B;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAC3B;;AACF;;AACF;;AACF;;AAEA;;AACF;;;;;;;;AAtCE;;AAKO;;AAAA;;AAiB4B;;AAAA;;;;;;;;UDlBhCyG,mB;AAIX,qCACU3I,EADV,EAEUC,MAFV,EAGUC,eAHV,EAGgD;AAAA;;AAFtC,eAAAF,EAAA,GAAAA,EAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,eAAA,GAAAA,eAAA;AAJV,eAAAsC,UAAA,GAAW,EAAX;AAME,eAAKoG,YAAL,GAAkB,KAAK5I,EAAL,CAAQI,KAAR,CAAc;AAC/B;AACCC,kBAAM,EAAE,KAAKL,EAAL,CAAQM,KAAR,CAAc,EAAd;AAFsB,WAAd,CAAlB;AAID;;;;iBAED,oBAAQ;AACN,iBAAKC,SAAL;AACA,iBAAKsC,gBAAL;AACD;;;iBACD,qBAAY;AACV;AACE,mBAAKrC,GAAL,GAAWC,IAAX,CAAgB,KAAKC,SAAL,EAAhB;AACD;AACF;;;iBACD,eAAG;AACD,mBAAO,KAAKkI,YAAL,CAAkBjI,GAAlB,CAAsB,QAAtB,CAAP;AACD;;;iBACD,qBAAS;AACP,mBAAO,KAAKX,EAAL,CAAQI,KAAR,CAAc;AACnBQ,mBAAK,EAAE,CAAC,EAAD,EAAK,0DAAWC,QAAhB,CADY;AAEnB+B,+BAAiB,EAAE,CAAC,EAAD,EAAK,0DAAW/B,QAAhB;AAFA,aAAd,CAAP;AAID;;;iBAED,4BAAmBC,CAAnB,EAAsB;AACpB,gBAAMC,IAAI,GAAc,KAAK6H,YAAL,CAAkB5H,QAAlB,CAA2B,QAA3B,CAAxB;;AACA,gBAAID,IAAI,CAACE,MAAL,GAAc,CAAlB,EAAqB;AACnBF,kBAAI,CAACG,QAAL,CAAcJ,CAAd;AACD;AACF;;;iBACD,4BAAmB;AAAA;;AACjB,iBAAKZ,eAAL,CAAqB2C,gBAArB,GAAwCrB,SAAxC,CAAkD,UAACsB,GAAD,EAAS;AACzD3B,qBAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkC0B,GAAlC;AACA,qBAAI,CAACN,UAAL,GAAkBM,GAAG,CAACxB,IAAtB;AACD,aAHD;AAKD;;;iBACD,wBAAe;AAAA;;AACb,gBAAIA,IAAI,GAAC;AACPjB,oBAAM,EAAC,KAAKuI,YAAL,CAAkBjI,GAAlB,CAAsB,QAAtB,EAAgCU;AADhC,aAAT;AAGAF,mBAAO,CAACC,GAAR,CAAY,aAAZ,EAA0BE,IAA1B;AAEA,iBAAKpB,eAAL,CAAqB2I,kBAArB,CAAwCvH,IAAxC,EAA8CE,SAA9C,CAAwD,UAACsB,GAAD,EAAS;AAC/D3B,qBAAO,CAACC,GAAR,CAAY,WAAZ,EAAyB0B,GAAzB;AACA,iEAAKrB,IAAL,CAAU;AACRb,qBAAK,EAAE,8BADC;AAERc,iCAAiB,EAAE,KAFX;AAGRC,qBAAK,EAAE;AAHC,eAAV;;AAKA,qBAAI,CAAC1B,MAAL,CAAY2B,QAAZ,CAAqB,CAAC,gCAAD,CAArB;AACD,aARD,EAQE,UAACC,GAAD,EAAO;AAACV,qBAAO,CAACW,KAAR,CAAcD,GAAd;AAAoB,aAR9B;AAYD;;;;;;;yBAjEU8G,mB,EAAmB,2H,EAAA,uH,EAAA,wK;AAAA,O;;;cAAnBA,mB;AAAmB,wC;AAAA,iB;AAAA,e;AAAA,g1B;AAAA;AAAA;ACjBhC;;AACI;;AACF;;AAEA;;AAEE;;AAAiC;AAAA,qBAAY,IAAA5G,YAAA,EAAZ;AAA0B,aAA1B;;AAC/B;;AAAwB;;AAAW;;AACnC;;AACA;;AACA;;AACE;;AAyCF;;AACA;;AAEA;;AACE;;AAA6F;;AAAG;;AAClG;;AACF;;AACF;;;;AA3DmC;;AAM3B;;AAAA;;AAMoB;;AAAA;;AA4CuB;;AAAA;;;;;;;;;wEDvCxC4G,mB,EAAmB;gBAL/B,uDAK+B;iBALrB;AACT3G,oBAAQ,EAAE,iBADD;AAETC,uBAAW,EAAE,8BAFJ;AAGTC,qBAAS,EAAE,CAAC,8BAAD;AAHF,W;AAKqB,U;;;;;;;;;;;;;;;;;;AEjBhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAQa4G,iB;AAEX,mCAAoBvE,QAApB,EAA8C;AAAA;;AAA1B,eAAAA,QAAA,GAAAA,QAAA;AAA6B;;;;iBAEjD,oBAAQ;AACN,iBAAKA,QAAL,CAAcA,QAAd,CAAuB,eAAvB;AACD;;;;;;;yBANUuE,iB,EAAiB,kJ;AAAA,O;;;cAAjBA,iB;AAAiB,sC;AAAA,gB;AAAA,e;AAAA;AAAA;ACR9B;;;;;;;;;wEDQaA,iB,EAAiB;gBAL7B,uDAK6B;iBALnB;AACT9G,oBAAQ,EAAE,eADD;AAETC,uBAAW,EAAE,4BAFJ;AAGTC,qBAAS,EAAE,CAAC,4BAAD;AAHF,W;AAKmB,U;;;;;;;;;;;;;;AER9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAUa6G,gB;AAGX,kCACU/I,EADV,EAEUE,eAFV,EAGSqC,SAHT,EAIkCjB,IAJlC,EAI2C;AAAA;;AAHjC,eAAAtB,EAAA,GAAAA,EAAA;AACA,eAAAE,eAAA,GAAAA,eAAA;AACD,eAAAqC,SAAA,GAAAA,SAAA;AACyB,eAAAjB,IAAA,GAAAA,IAAA;AAEhC,eAAKmB,OAAL,GAAenB,IAAf;AACD;;;;iBAED,oBAAQ;AACN,iBAAKoB,SAAL,GAAiB,KAAK1C,EAAL,CAAQI,KAAR,CAAc;AAC7BQ,mBAAK,EAAE,CAAC,KAAK6B,OAAL,CAAa7B,KAAd,EAAqB,0DAAWC,QAAhC;AADsB,aAAd,CAAjB;AAGD;;;iBACD,wBAAe;AAAA;;AAEb,gBAAIS,IAAI,GAAC;AACPV,mBAAK,EAAE,KAAK8B,SAAL,CAAe/B,GAAf,CAAmB,OAAnB,EAA4BU;AAD5B,aAAT;AAGA,iBAAKnB,eAAL,CACG8I,SADH,CACa1H,IADb,EACmB,KAAKmB,OAAL,CAAaO,GADhC,EAEGxB,SAFH,CAEa,UAACyB,OAAD,EAAa;AACtB9B,qBAAO,CAACC,GAAR,CAAY,SAAZ,EAAuB6B,OAAvB;;AAEA,qBAAI,CAACV,SAAL,CAAeW,KAAf,CAAqB,MAArB;;AACA,iEAAKzB,IAAL,CAAU;AACRb,qBAAK,EAAE,gCADC;AAERc,iCAAiB,EAAE,KAFX;AAGRC,qBAAK,EAAE;AAHC,eAAV;AAKA,aAXJ;AAYD;;;iBACD,uBAAW;AACT,iBAAKY,SAAL,CAAeW,KAAf,CAAqB,OAArB;AAED;;;;;;;yBAtCU6F,gB,EAAgB,2H,EAAA,wK,EAAA,sI,EAAA,gEAOjB,wEAPiB,C;AAOF,O;;;cAPdA,gB;AAAgB,qC;AAAA,iB;AAAA,e;AAAA,0V;AAAA;AAAA;ACV7B;;AACI;;AAAI;;AAAQ;;AACZ;;AAGA;;AACA;;AACA;;AACI;;AACI;;AAA0B;AAAA,qBAAS,IAAA5F,WAAA,EAAT;AAAsB,aAAtB;;AAAwB;;AAAK;;AAC3D;;AACA;;AACI;;AAAwD;AAAA,qBAAS,IAAApB,YAAA,EAAT;AAAuB,aAAvB;;AAAyB;;AAAM;;AAC3F;;AACJ;;AACJ;;;;AAfM;;AAYiC;;AAAA;;;;;;;;;wEDF1BgH,gB,EAAgB;gBAL5B,uDAK4B;iBALlB;AACT/G,oBAAQ,EAAE,cADD;AAETC,uBAAW,EAAE,2BAFJ;AAGTC,qBAAS,EAAE,CAAC,2BAAD;AAHF,W;AAKkB,U;;;;;;;;;;oBAOxB,oD;qBAAO,wE;;;;;;;;;;;;;AEjBZ;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAea+G,sB;AAIX,wCACUjJ,EADV,EAEUC,MAFV,EAGUC,eAHV,EAGgD;AAAA;;AAFtC,eAAAF,EAAA,GAAAA,EAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,eAAA,GAAAA,eAAA;AAER,eAAKgJ,eAAL,GAAqB,KAAKlJ,EAAL,CAAQI,KAAR,CAAc;AAClC;AACCC,kBAAM,EAAE,KAAKL,EAAL,CAAQM,KAAR,CAAc,EAAd;AAFyB,WAAd,CAArB;AAID;;;;iBAED,oBAAQ;AACN,iBAAKC,SAAL;AACD;;;iBACD,qBAAY;AACV;AACE,mBAAKC,GAAL,GAAWC,IAAX,CAAgB,KAAKC,SAAL,EAAhB;AACD;AACF;;;iBACD,eAAG;AACD,mBAAO,KAAKwI,eAAL,CAAqBvI,GAArB,CAAyB,QAAzB,CAAP;AACD;;;iBACD,qBAAS;AACP,mBAAO,KAAKX,EAAL,CAAQI,KAAR,CAAc;AAEnBQ,mBAAK,EAAE,CAAC,EAAD,EAAK,0DAAWC,QAAhB;AAFY,aAAd,CAAP;AAID;;;iBAED,4BAAmBC,CAAnB,EAAsB;AACpB,gBAAMC,IAAI,GAAc,KAAKmI,eAAL,CAAqBlI,QAArB,CAA8B,QAA9B,CAAxB;;AACA,gBAAID,IAAI,CAACE,MAAL,GAAc,CAAlB,EAAqB;AACnBF,kBAAI,CAACG,QAAL,CAAcJ,CAAd;AAED;AACF;;;iBACD,wBAAe;AAAA;;AACb,gBAAIQ,IAAI,GAAC;AACPjB,oBAAM,EAAC,KAAK6I,eAAL,CAAqBvI,GAArB,CAAyB,QAAzB,EAAmCU;AADnC,aAAT;AAGA,iBAAKnB,eAAL,CAAqB6F,aAArB,CAAmCzE,IAAnC,EAAyCE,SAAzC,CAAmD,UAACF,IAAD,EAAU;AAC3DH,qBAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBE,IAAzB;;AACA,qBAAI,CAACrB,MAAL,CAAY2B,QAAZ,CAAqB,CAAC,4BAAD,CAArB;AACD,aAHD,EAGE,UAACC,GAAD,EAAO;AAACV,qBAAO,CAACW,KAAR,CAAcD,GAAd;AAAoB,aAH9B;AAOD;;;;;;;yBAnDUoH,sB,EAAsB,2H,EAAA,uH,EAAA,wK;AAAA,O;;;cAAtBA,sB;AAAsB,4C;AAAA,gB;AAAA,e;AAAA,sE;AAAA;;;;;wEAAtBA,sB,EAAsB;gBALlC,uDAKkC;iBALxB;AACTjH,oBAAQ,EAAE,qBADD;AAETC,uBAAW,EAAE,kCAFJ;AAGTC,qBAAS,EAAE,CAAC,kCAAD;AAHF,W;AAKwB,U;;;;;;;;;;;;;;;;;;ACfnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AC8HU;;AAAuC;;AAAI;;;;;;AAC3C;;AAAuC;;AAAiB;;;;;;AAAjB;;AAAA;;;;;;AAO3C;;AAAuC;;AAAK;;;;;;AAC5C;;AAAwC;;AAAkB;;;;;;AAAlB;;AAAA;;;;;;AAIxC;;AAAuC;;AAAK;;;;;;;;AAC5C;;AAAsC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAyB;;AAC/D;;;;;;AAGA;;AAAuC;;AAAO;;;;;;;;AAC9C;;AAAsC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA2B;;AACjE;;;;;;AAIE;;;;;;AACA;;;;;;;;;;;;UD/HKiH,oB;AAmBX,sCACUjJ,eADV,EAESoE,MAFT,EAGU8E,OAHV,EAISnJ,MAJT,EAKUsE,QALV,EAKkC;AAAA;;AAJxB,eAAArE,eAAA,GAAAA,eAAA;AACD,eAAAoE,MAAA,GAAAA,MAAA;AACC,eAAA8E,OAAA,GAAAA,OAAA;AACD,eAAAnJ,MAAA,GAAAA,MAAA;AACC,eAAAsE,QAAA,GAAAA,QAAA;AArBV,eAAA8E,wBAAA,GAAgC,EAAhC;AAEA,eAAAC,MAAA,GAAS,KAAT;AAEA,eAAAC,IAAA,GAAO,KAAP;AACA,eAAAC,GAAA,GAAM,KAAN;AACA,eAAAC,cAAA,GAAiB,EAAjB;AACA,eAAAC,IAAA,GAAO,KAAP;AAEA,eAAA9F,WAAA,GAAc,EAAd;AACA,eAAAa,YAAA,GAAe,EAAf,CAWkC,CAVlC;;AACA,eAAAC,gBAAA,GAA6B,CAAC,OAAD,EAAU,OAAV,EAAmB,MAAnB,EAA0B,QAA1B,CAA7B;AACA,eAAAC,UAAA,GAAa,IAAI,0EAAJ,CAAuB,KAAKF,YAA5B,CAAb;AAWC;;;;iBAED,oBAAQ;AACN,iBAAKkF,cAAL;AACA,iBAAKpF,QAAL,CAAcA,QAAd,CAAuB,iCAAvB;AACD;;;iBAGD,2BAAkB;AAChB,iBAAKI,UAAL,CAAgBC,SAAhB,GAA4B,KAAKA,SAAjiBACA,0BAAiB;AAAA;;AACf,iBAAK1E,eAAL,CAAqB0J,UAArB,GAAkCpI,SAAlC,CAA4C,UAACsB,GAAD,EAAa;AACvD3B,qBAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB0B,GAAtB,EADuD,CAEvD;;AACA,kBAAIxB,IAAI,GAAGwB,GAAG,CAACxB,IAAf;AACAA,kBAAI,CAACwD,OAAL,CAAa,UAACC,OAAD,EAAUC,KAAV,EAAoB;AAC/BD,uBAAO,CAACC,KAAR,GAAgBA,KAAK,GAAG,CAAxB,CAD+B,CACJ;AAC5B,eAFD;AAIA,qBAAI,CAACP,YAAL,GAAoBnD,IAApB;AACA,qBAAI,CAACqD,UAAL,GAAkB,IAAI,0EAAJ,CAAuB,OAAI,CAACF,YAA5B,CAAlB;AACA,qBAAI,CAACE,UAAL,CAAgBC,SAAhB,GAA4B,OAAI,CAACA,SAAjC,CAVuD,CAYvD;AACD,aAbD;AAeD;;;iBACD,cAAKG,OAAL,EAAY;AAAA;;AACV,gBAAMxC,SAAS,GAAG,KAAK+B,MAAL,CAAYW,IAAZ,CAAiB,oIAAjB,EAAoD;AACpEC,mBAAK,EAAE,OAD6D;AAEpE5D,kBAAI,EAAEyD;AAF8D,aAApD,CAAlB;AAIAxC,qBAAS,CAAC4C,WAAV,GAAwB3D,SAAxB,CAAkC,UAAC4D,MAAD,EAAY;AAC5C,kBAAKA,MAAM,IAAI,MAAf,EAAwB;AACtB,uBAAI,CAACuE,cAAL;AACD;;AACDxI,qBAAO,CAACC,GAAR,CAAY,uBAAZ;AACD,aALD;AAMD;;;iBACD,iBAAOL,IAAP,EAAa;AAAA;;AACX,+DAAKU,IAAL,CAAU;AACRb,mBAAK,EAAE,eADC;AAERyE,kBAAI,oCAA4BtE,IAAI,CAACH,KAAjC,QAFI;AAGR0E,kBAAI,EAAE,SAHE;AAIRC,8BAAgB,EAAE,IAJV;AAKRC,gCAAkB,EAAE,SALZ;AAMRC,+BAAiB,EAAE,MANX;AAORC,+BAAiB,EAAE;AAPX,aAAV,EAQGC,IARH,CAQQ,UAACP,MAAD,EAAY;AAClB,kBAAIA,MAAM,CAAC/D,KAAX,EAAkB;AAChB,uBAAI,CAACnB,eAAL,CACC2J,UADD,CACY9I,IAAI,CAACiC,GADjB,EAECxB,SAFD,CAEW,UAACsB,GAAD,EAAS;AAClB,qEAAKrB,IAAL,CAAU;AACRb,yBAAK,EAAE,gCADC;AAERc,qCAAiB,EAAE,KAFX;AAGRC,yBAAK,EAAE;AAHC,mBAAV;AAKAR,yBAAO,CAACC,GAAR,CAAY,aAAZ,EAA2B0B,GAA3B;;AACA,yBAAI,CAAC6G,cAAL;AAED,iBAXD;AAYD;AACF,aAvBD;AAwBD;;;;;;;yBA3MUR,oB,EAAoB,wK,EAAA,mI,EAAA,8H,EAAA,uH,EAAA,yJ;AAAA,O;;;cAApBA,oB;AAAoB,0C;AAAA;AAAA;sEAiBpB,wE,EAAY,I;;;;;;;;;;;;;;ACyEnB;;AAAiB;;AAAc;;AACjC;;AAEE;;AACE;;AAAuC;;AACzC;;AACF;;AACA;;AACE;;AAGE;;AACE;;AACA;;AACF;;AAKJ;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AAEF;;AACA;;AACE;;AACA;;AAEF;;AAGI;;AACA;;AACF;;AAEA;;AAIF;;;;AAzCgE;;AAAA;;AAK7C;;AAAA;;AA4BK;;AAAA;;AACa;;AAAA;;AAGpB;;AAAA;;;;;;;;;wEDlIRA,oB,EAAoB;gBALhC,uDAKgC;iBALtB;AACTnH,oBAAQ,EAAE,mBADD;AAETC,uBAAW,EAAE,gCAFJ;AAGTC,qBAAS,EAAE,CAAC,gCAAD;AAHF,W;AAKsB,U;;;;;;;;;;;;;AAiBN0C,mBAAS,EAAE,CAAF;kBAAjC,uDAAiC;mBAAvB,wE;AAAuB,WAAE;;;;;;;;;;;AEzCtC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACSQ;;AAIE;;AACE;;AACE;;AACG;;AACH;;AACF;;AACA;;AAEE;;AAMF;;AACA;;AACE;;AAA6B;AAAA;;AAAA;;AAAA;AAAA;;AAC1B;;AACH;;AACF;;AACA;;AACE;;AAA6B;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAC3B;;AACF;;AACF;;AACF;;AAEA;;AACF;;;;;;AA9BE;;AAKO;;AAAA;;;;;;;;UDDJkF,e;AAGX,iCACU9J,EADV,EAEUC,MAFV,EAGUC,eAHV,EAGgD;AAAA;;AAFtC,eAAAF,EAAA,GAAAA,EAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,eAAA,GAAAA,eAAA;AAER,eAAK6J,SAAL,GAAe,KAAK/J,EAAL,CAAQI,KAAR,CAAc;AAC5B;AACCC,kBAAM,EAAE,KAAKL,EAAL,CAAQM,KAAR,CAAc,EAAd;AAFmB,WAAd,CAAf;AAID;;;;iBAED,oBAAQ;AACN,iBAAKC,SAAL;AACD;;;iBACD,qBAAY;AACV;AACE,mBAAKC,GAAL,GAAWC,IAAX,CAAgB,KAAKC,SAAL,EAAhB;AACD;AACF;;;iBACD,eAAG;AACD,mBAAO,KAAKqJ,SAAL,CAAepJ,GAAf,CAAmB,QAAnB,CAAP;AACD;;;iBACD,qBAAS;AACP,mBAAO,KAAKX,EAAL,CAAQI,KAAR,CAAc;AAEnBQ,mBAAK,EAAE,CAAC,EAAD,EAAK,0DAAWC,QAAhB;AAFY,aAAd,CAAP;AAID;;;iBAED,4BAAmBC,CAAnB,EAAsB;AACpB,gBAAMC,IAAI,GAAc,KAAKgJ,SAAL,CAAe/I,QAAf,CAAwB,QAAxB,CAAxB;;AACA,gBAAID,IAAI,CAACE,MAAL,GAAc,CAAlB,EAAqB;AACnBF,kBAAI,CAACG,QAAL,CAAcJ,CAAd;AAED;AACF;;;iBACD,wBAAe;AAAA;;AACbK,mBAAO,CAACC,GAAR,CAAY,KAAK2I,SAAL,CAAe1I,KAA3B;AACA,gBAAIC,IAAI,GAAC;AACPjB,oBAAM,EAAC,KAAK0J,SAAL,CAAepJ,GAAf,CAAmB,QAAnB,EAA6BU;AAD7B,aAAT;AAGA,iBAAKnB,eAAL,CAAqB8J,cAArB,CAAoC1I,IAApC,EAA0CE,SAA1C,CAAoD,UAACF,IAAD,EAAU;AAC5DH,qBAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBE,IAArB;;AACA,qBAAI,CAACrB,MAAL,CAAY2B,QAAZ,CAAqB,CAAC,wBAAD,CAArB;AACD,aAHD,EAGE,UAACC,GAAD,EAAO;AAACV,qBAAO,CAACW,KAAR,CAAcD,GAAd;AAAoB,aAH9B;AAOD;;;;;;;yBAnDUiI,e,EAAe,2H,EAAA,uH,EAAA,wK;AAAA,O;;;cAAfA,e;AAAe,oC;AAAA,iB;AAAA,e;AAAA,6lB;AAAA;AAAA;ACf5B;;AACI;;AACF;;AACA;;AACE;;AAA8B;AAAA,qBAAY,IAAA/H,YAAA,EAAZ;AAA0B,aAA1B;;AAC5B;;AAAwB;;AAAO;;AAC/B;;AACA;;AACA;;AACE;;AAiCF;;AACA;;AAEA;;AACE;;AAA0F;;AAAG;;AAC/F;;AACF;;AACF;;;;AAjDmC;;AAI3B;;AAAA;;AAMoB;;AAAA;;AAoCuB;;AAAA;;;;;;;;;wED/BxC+H,e,EAAe;gBAL3B,uDAK2B;iBALjB;AACT9H,oBAAQ,EAAE,aADD;AAETC,uBAAW,EAAE,0BAFJ;AAGTC,qBAAS,EAAE,CAAC,0BAAD;AAHF,W;AAKiB,U;;;;;;;;;;;;;;;;;;AEf5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAUa+H,mB;AAIX,qCACUjK,EADV,EAEUE,eAFV,EAGSqC,SAHT,EAIkCjB,IAJlC,EAI2C;AAAA;;AAHjC,eAAAtB,EAAA,GAAAA,EAAA;AACA,eAAAE,eAAA,GAAAA,eAAA;AACD,eAAAqC,SAAA,GAAAA,SAAA;AACyB,eAAAjB,IAAA,GAAAA,IAAA;AAEhC,eAAKmB,OAAL,GAAenB,IAAf;AACD;;;;iBAED,oBAAQ;AACN,iBAAKoB,SAAL,GAAiB,KAAK1C,EAAL,CAAQI,KAAR,CAAc;AAC7BQ,mBAAK,EAAE,CAAC,KAAK6B,OAAL,CAAa7B,KAAd,EAAqB,0DAAWC,QAAhC;AADsB,aAAd,CAAjB;AAGD;;;iBACD,wBAAe;AAAA;;AAEb,gBAAIS,IAAI,GAAC;AACPV,mBAAK,EAAE,KAAK8B,SAAL,CAAe/B,GAAf,CAAmB,OAAnB,EAA4BU;AAD5B,aAAT;AAGA,iBAAKnB,eAAL,CACGgK,aADH,CACiB5I,IADjB,EACuB,KAAKmB,OAAL,CAAaO,GADpC,EAEGxB,SAFH,CAEa,UAACyB,OAAD,EAAa;AACtB9B,qBAAO,CAACC,GAAR,CAAY,SAAZ,EAAuB6B,OAAvB;;AAEA,qBAAI,CAACV,SAAL,CAAeW,KAAf,CAAqB,MAArB;;AACA,iEAAKzB,IAAL,CAAU;AACRb,qBAAK,EAAE,gCADC;AAERc,iCAAiB,EAAE,KAFX;AAGRC,qBAAK,EAAE;AAHC,eAAV;AAKA,aAXJ;AAYD;;;iBACD,uBAAW;AACT,iBAAKY,SAAL,CAAeW,KAAf,CAAqB,OAArB;AAED;;;;;;;yBAvCU+G,mB,EAAmB,2H,EAAA,wK,EAAA,sI,EAAA,gEAQpB,wEARoB,C;AAQL,O;;;cARdA,mB;AAAmB,wC;AAAA,iB;AAAA,e;AAAA,0V;AAAA;AAAA;ACVhC;;AACI;;AAAI;;AAAW;;AACf;;AAGA;;AACA;;AACA;;AACI;;AACI;;AAA0B;AAAA,qBAAS,IAAA9G,WAAA,EAAT;AAAsB,aAAtB;;AAAwB;;AAAK;;AAC3D;;AACA;;AACI;;AAAwD;AAAA,qBAAS,IAAApB,YAAA,EAAT;AAAuB,aAAvB;;AAAyB;;AAAM;;AAC3F;;AACJ;;AACJ;;;;AAfM;;AAYiC;;AAAA;;;;;;;;;wEDF1BkI,mB,EAAmB;gBAL/B,uDAK+B;iBALrB;AACTjI,oBAAQ,EAAE,iBADD;AAETC,uBAAW,EAAE,8BAFJ;AAGTC,qBAAS,EAAE,CAAC,8BAAD;AAHF,W;AAKqB,U;;;;;;;;;;oBAQ3B,oD;qBAAO,wE;;;;;;;;;;;;;AElBZ;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAaaiI,iC;AAMX,mDACUnK,EADV,EAEUE,eAFV,EAGSqC,SAHT,EAIkCjB,IAJlC,EAI2C;AAAA;;AAHjC,eAAAtB,EAAA,GAAAA,EAAA;AACA,eAAAE,eAAA,GAAAA,eAAA;AACD,eAAAqC,SAAA,GAAAA,SAAA;AACyB,eAAAjB,IAAA,GAAAA,IAAA;AAEhC,eAAKmB,OAAL,GAAenB,IAAf;AACD;;;;iBAED,oBAAQ;AACNH,mBAAO,CAACC,GAAR,CAAY,cAAZ,EAA2B,KAAKqB,OAAhC;AAEA,iBAAKC,SAAL,GAAiB,KAAK1C,EAAL,CAAQI,KAAR,CAAc;AAC7BQ,mBAAK,EAAE,CAAC,KAAK6B,OAAL,CAAa7B,KAAd,EAAqB,0DAAWC,QAAhC;AADsB,aAAd,CAAjB;AAGD;;;iBACD,wBAAe;AAAA;;AAEb,gBAAIS,IAAI,GAAC;AACPV,mBAAK,EAAE,KAAK8B,SAAL,CAAe/B,GAAf,CAAmB,OAAnB,EAA4BU;AAD5B,aAAT;AAGA,iBAAKnB,eAAL,CACGkK,UADH,CACc9I,IADd,EACoB,KAAKmB,OAAL,CAAaO,GADjC,EAEGxB,SAFH,CAEa,UAACyB,OAAD,EAAa;AAEtB,qBAAI,CAACV,SAAL,CAAeW,KAAf,CAAqB,MAArB;;AACA,iEAAKzB,IAAL,CAAU;AACRb,qBAAK,EAAE,+BADC;AAERc,iCAAiB,EAAE,KAFX;AAGRC,qBAAK,EAAE;AAHC,eAAV;AAKG,aAVP;AAWD;;;iBACD,uBAAW;AACT,iBAAKY,SAAL,CAAeW,KAAf,CAAqB,OAArB;AAED;;;;;;;yBA1CUiH,iC,EAAiC,2H,EAAA,wK,EAAA,sI,EAAA,gEAUlC,wEAVkC,C;AAUnB,O;;;cAVdA,iC;AAAiC,wD;AAAA,iB;AAAA,e;AAAA,0V;AAAA;AAAA;ACb9C;;AACE;;AAAI;;AAAc;;AAClB;;AAGA;;AACA;;AACA;;AACI;;AACI;;AAA0B;AAAA,qBAAS,IAAAhH,WAAA,EAAT;AAAsB,aAAtB;;AAAwB;;AAAK;;AAC3D;;AACA;;AACI;;AAAwD;AAAA,qBAAS,IAAApB,YAAA,EAAT;AAAuB,aAAvB;;AAAyB;;AAAM;;AAC3F;;AACJ;;AACF;;;;AAfM;;AAY+B;;AAAA;;;;;;;;;wEDCxBoI,iC,EAAiC;gBAL7C,uDAK6C;iBALnC;AACTnI,oBAAQ,EAAE,iCADD;AAETC,uBAAW,EAAE,8CAFJ;AAGTC,qBAAS,EAAE,CAAC,8CAAD;AAHF,W;AAKmC,U;;;;;;;;;;oBAUzC,oD;qBAAO,wE;;;;;;;;;;;;;AEtBZ;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACYU;;AAAuC;;AAAI;;;;;;AAC3C;;AAAuC;;AAAiB;;;;;;AAAjB;;AAAA;;;;;;AAO3C;;AAAuC;;AAAK;;;;;;AAC5C;;AAAwC;;AAAkB;;;;;;AAAlB;;AAAA;;;;;;AAIxC;;AAAuC;;AAAK;;;;;;;;AAC5C;;AAAsC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAyB;;AAC/D;;;;;;AAGA;;AAAuC;;AAAO;;;;;;;;AAC9C;;AAAsC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA2B;;AACjE;;;;;;AAIE;;;;;;AACA;;;;;;;;;;;;UDvBKmI,gB;AAYX;AAEA,kCAAoBnK,eAApB,EAAqEoE,MAArE,EACUC,QADV,EACqC;AAAA;;AADjB,eAAArE,eAAA,GAAAA,eAAA;AAAiD,eAAAoE,MAAA,GAAAA,MAAA;AAC3D,eAAAC,QAAA,GAAAA,QAAA;AAbV,eAAAC,WAAA,GAAmB,EAAnB;AACA,eAAAC,YAAA,GAAe,EAAf,CAYqC,CAXrC;;AACA,eAAAC,gBAAA,GAA6B,CAAC,OAAD,EAAU,OAAV,EAAmB,MAAnB,EAA2B,QAA3B,CAA7B;AACA,eAAAC,UAAA,GAAa,IAAI,0EAAJ,CAAuB,KAAKF,YAA5B,CAAb;AASwC;;;;iBANxC,2BAAkB;AAChB,iBAAKE,UAAL,CAAgBC,SAAhB,GAA4B,KAAKA,SAAjC;AACD;;;iBAMD,oBAAQ;AACN,iBAAKyC,aAAL;AACA,iBAAK9C,QAAL,CAAcA,QAAd,CAAuB,mBAAvB;AACD;;;iBAED,yBAAgB;AAAA;;AACd,iBAAKrE,eAAL,CAAqBoK,aAArB,GAAqC9I,SAArC,CAA+C,UAACsB,GAAD,EAAc;AAC3D3B,qBAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgC0B,GAAhC,EAD2D,CAE3D;;AACA,kBAAIxB,IAAI,GAAGwB,GAAG,CAACxB,IAAf;AACAA,kBAAI,CAACwD,OAAL,CAAa,UAACC,OAAD,EAAUC,KAAV,EAAoB;AAC/BD,uBAAO,CAACC,KAAR,GAAgBA,KAAK,GAAG,CAAxB,CAD+B,CACJ;AAC5B,eAFD;AAIA,qBAAI,CAACP,YAAL,GAAoBnD,IAApB;AACA,qBAAI,CAACqD,UAAL,GAAkB,IAAI,0EAAJ,CAAuB,OAAI,CAACF,YAA5B,CAAlB;AACA,qBAAI,CAACE,UAAL,CAAgBC,SAAhB,GAA4B,OAAI,CAACA,SAAjC,CAV2D,CAY3D;AACD,aAbD;AAeD;;;iBACD,cAAKG,OAAL,EAAc;AAAA;;AACZ,gBAAMxC,SAAS,GAAG,KAAK+B,MAAL,CAAYW,IAAZ,CAAiB,gFAAjB,EAAoC;AACpDC,mBAAK,EAAE,OAD6C;AAEpD5D,kBAAI,EAAEyD;AAF8C,aAApC,CAAlB;AAIAxC,qBAAS,CAAC4C,WAAV,GAAwB3D,SAAxB,CAAkC,UAAC4D,MAAD,EAAY;AAC5C,kBAAKA,MAAM,IAAI,MAAf,EAAwB;AACtB,uBAAI,CAACiC,aAAL;AACD;;AACDlG,qBAAO,CAACC,GAAR,CAAY,uBAAZ;AACD,aALD;AAMD;;;iBACD,iBAAOL,IAAP,EAAa;AAAA;;AACX,+DAAKU,IAAL,CAAU;AACRb,mBAAK,EAAE,eADC;AAERyE,kBAAI,oCAA4BtE,IAAI,CAACH,KAAjC,QAFI;AAGR0E,kBAAI,EAAE,SAHE;AAIRC,8BAAgB,EAAE,IAJV;AAKRC,gCAAkB,EAAE,SALZ;AAMRC,+BAAiB,EAAE,MANX;AAORC,+BAAiB,EAAE;AAPX,aAAV,EAQGC,IARH,CAQQ,UAACP,MAAD,EAAY;AAClB,kBAAIA,MAAM,CAAC/D,KAAX,EAAkB;AAChB,uBAAI,CAACnB,eAAL,CACGqK,aADH,CACiBxJ,IAAI,CAACiC,GADtB,EAEGxB,SAFH,CAEa,UAACsB,GAAD,EAAS;AAClB,qEAAKrB,IAAL,CAAU;AACRb,yBAAK,EAAE,gCADC;AAERc,qCAAiB,EAAE,KAFX;AAGRC,yBAAK,EAAE;AAHC,mBAAV;AAIIR,yBAAO,CAACC,GAAR,CAAY,aAAZ,EAA2B0B,GAA3B;;AACJ,yBAAI,CAACuE,aAAL;AAED,iBAVH;AAWD;AACF,aAtBD;AAuBD;;;;;;;yBA3EUgD,gB,EAAgB,wK,EAAA,mI,EAAA,yJ;AAAA,O;;;cAAhBA,gB;AAAgB,qC;AAAA;AAAA;sEAOhB,wE,EAAY,I;;;;;;;;;;;;;;ACrBzB;;AAAkB;;AAAa;;AAC3B;;AAEE;;AACE;;AAAuC;;AACzC;;AACF;;AACA;;AACE;;AAGE;;AACE;;AACA;;AACF;;AAKJ;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AAEF;;AACA;;AACE;;AACA;;AAEF;;AAGI;;AACA;;AACF;;AAEA;;AAIF;;;;AAzCgE;;AAAA;;AAK7C;;AAAA;;AA4BK;;AAAA;;AACa;;AAAA;;AAGpB;;AAAA;;;;;;;;;wED1BRA,gB,EAAgB;gBAL5B,uDAK4B;iBALlB;AACTrI,oBAAQ,EAAE,cADD;AAETC,uBAAW,EAAE,2BAFJ;AAGTC,qBAAS,EAAE,CAAC,2BAAD;AAHF,W;AAKkB,U;;;;;;;;;AAOF0C,mBAAS,EAAE,CAAF;kBAAjC,uDAAiC;mBAAvB,wE;AAAuB,WAAE;;;;;;;;;;;AEtBtC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACaM;;AAAuC;;AAAI;;;;;;AAC3C;;AAAuC;;AAAiB;;;;;;AAAjB;;AAAA;;;;;;AAO3C;;AAAuC;;AAAK;;;;;;AAC5C;;AAAwC;;AAAkB;;;;;;AAAlB;;AAAA;;;;;;AAGxC;;AAAuC;;AAAS;;;;;;AAChD;;AAAwC;;AAAqC;;;;;;AAArC;;AAAA;;;;;;AAIxC;;AAAuC;;AAAK;;;;;;;;AAC5C;;AAAsC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAyB;;AAC/D;;;;;;AAGA;;AAAuC;;AAAO;;;;;;;;AAC9C;;AAAsC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA2B;;AACjE;;;;;;AAIE;;;;;;AACA;;;;;;;;;;;;UD1BS4F,uB;AAiBX;AAEA,yCAAoBtK,eAApB,EAAoEoE,MAApE,EACUC,QADV,EACqC;AAAA;;AADjB,eAAArE,eAAA,GAAAA,eAAA;AAAgD,eAAAoE,MAAA,GAAAA,MAAA;AAC1D,eAAAC,QAAA,GAAAA,QAAA;AAfV,eAAAC,WAAA,GAAmB,EAAnB;AACA,eAAAC,YAAA,GAAe,EAAf,CAcqC,CAbrC;;AACA,eAAAC,gBAAA,GAA6B,CAAC,OAAD,EAAU,OAAV,EAAkB,UAAlB,EAA8B,MAA9B,EAAqC,QAArC,CAA7B;AACA,eAAAC,UAAA,GAAa,IAAI,0EAAJ,CAAuB,KAAKF,YAA5B,CAAb;AAWuC;;;;iBANvC,2BAAkB;AAChB,iBAAKE,UAAL,CAAgBC,SAAhB,GAA4B,KAAKA,SAAjC;AACD;;;iBAMD,oBAAQ;AACN,iBAAK6F,aAAL;AACA,iBAAKlG,QAAL,CAAcA,QAAd,CAAuB,oCAAvB;AACD;;;iBAED,yBAAgB;AAAA;;AACd,iBAAKrE,eAAL,CAAqBuK,aAArB,GAAqCjJ,SAArC,CAA+C,UAACsB,GAAD,EAAS;AACtD3B,qBAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+B0B,GAA/B,EADsD,CAEtD;;AACA,kBAAIxB,IAAI,GAAGwB,GAAG,CAACxB,IAAf;AACAA,kBAAI,CAACwD,OAAL,CAAa,UAACC,OAAD,EAAUC,KAAV,EAAoB;AAC/BD,uBAAO,CAACC,KAAR,GAAgBA,KAAK,GAAG,CAAxB,CAD+B,CACJ;AAC5B,eAFD;AAIA,qBAAI,CAACP,YAAL,GAAoBnD,IAApB;AACA,qBAAI,CAACqD,UAAL,GAAkB,IAAI,0EAAJ,CAAuB,OAAI,CAACF,YAA5B,CAAlB;AACA,qBAAI,CAACE,UAAL,CAAgBC,SAAhB,GAA4B,OAAI,CAACA,SAAjC,CAVsD,CAYtD;AACD,aAbD;AAeD;;;iBACD,cAAKG,OAAL,EAAY;AAAA;;AACV,gBAAMxC,SAAS,GAAG,KAAK+B,MAAL,CAAYW,IAAZ,CAAiB,yFAAjB,EAAuC;AACvDC,mBAAK,EAAE,OADgD;AAEvD5D,kBAAI,EAAEyD;AAFiD,aAAvC,CAAlB;AAIAxC,qBAAS,CAAC4C,WAAV,GAAwB3D,SAAxB,CAAkC,UAAC4D,MAAD,EAAY;AAC5C,kBAAKA,MAAM,IAAI,MAAf,EAAwB;AACtB,uBAAI,CAACqF,aAAL;AACD;;AACDtJ,qBAAO,CAACC,GAAR,CAAY,uBAAZ;AACD,aALD;AAMD;;;iBACD,iBAAOL,IAAP,EAAa;AAAA;;AACXI,mBAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBL,IAArB;AAEA,+DAAKU,IAAL,CAAU;AACRb,mBAAK,EAAE,eADC;AAERyE,kBAAI,oCAA4BtE,IAAI,CAACH,KAAjC,QAFI;AAGR0E,kBAAI,EAAE,SAHE;AAIRC,8BAAgB,EAAE,IAJV;AAKRC,gCAAkB,EAAE,SALZ;AAMRC,+BAAiB,EAAE,MANX;AAORC,+BAAiB,EAAE;AAPX,aAAV,EAQGC,IARH,CAQQ,UAACP,MAAD,EAAY;AAClB,kBAAIA,MAAM,CAAC/D,KAAX,EAAkB;AAChB,uBAAI,CAACnB,eAAL,CACCwK,aADD,CACe3J,IAAI,CAACiC,GADpB,EAECxB,SAFD,CAEW,UAACsB,GAAD,EAAS;AAClB,qEAAKrB,IAAL,CAAU;AACRb,yBAAK,EAAE,sBADC;AAERc,qCAAiB,EAAE,KAFX;AAGRC,yBAAK,EAAE;AAHC,mBAAV;AAIaR,yBAAO,CAACC,GAAR,CAAY,aAAZ,EAA2B0B,GAA3B;;AACb,yBAAI,CAAC2H,aAAL;AAED,iBAVD;AAWD;AACF,aAtBD;AAuBD;;;;;;;yBAlFUD,uB,EAAuB,wK,EAAA,mI,EAAA,yJ;AAAA,O;;;cAAvBA,uB;AAAuB,6C;AAAA;AAAA;sEAYvB,wE,EAAY,I;;;;;;;;;;;;;;AC3BzB;;AAAkB;;AAA8B;;AAChD;;AAEE;;AACE;;AAAuC;;AACzC;;AACF;;AACA;;AACE;;AAGE;;AACE;;AACA;;AACF;;AAKJ;;AACE;;AACA;;AACF;;AACA;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AAEF;;AACA;;AACE;;AACA;;AAEF;;AAGI;;AACA;;AACF;;AAEA;;AAIF;;;;AA7CgE;;AAAA;;AAK7C;;AAAA;;AAgCK;;AAAA;;AACa;;AAAA;;AAGpB;;AAAA;;;;;;;;;wED7BJA,uB,EAAuB;gBALnC,uDAKmC;iBALzB;AACTxI,oBAAQ,EAAE,sBADD;AAETC,uBAAW,EAAE,mCAFJ;AAGTC,qBAAS,EAAE,CAAC,mCAAD;AAHF,W;AAKyB,U;;;;;;;;;AAYT0C,mBAAS,EAAE,CAAF;kBAAjC,uDAAiC;mBAAvB,wE;AAAuB,WAAE;;;;;;;;;;;AE3BtC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACWU;;AAAuC;;AAAI;;;;;;AAC3C;;AAAuC;;AAAiB;;;;;;AAAjB;;AAAA;;;;;;AAO3C;;AAAuC;;AAAK;;;;;;AAC5C;;AAAwC;;AAAkB;;;;;;AAAlB;;AAAA;;;;;;AAGtC;;AAAuC;;AAAK;;;;;;;;AAC5C;;AAAsC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAyB;;AAC/D;;;;;;AAGA;;AAAuC;;AAAO;;;;;;;;AAC9C;;AAAsC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA2B;;AACjE;;;;;;AAGA;;;;;;AACA;;;;;;;;;;;;UDpBK+F,uB;AAaX;AAEA,yCAEUzK,eAFV,EAGUoE,MAHV,EAIUC,QAJV,EAIkC;AAAA;;AAFxB,eAAArE,eAAA,GAAAA,eAAA;AACA,eAAAoE,MAAA,GAAAA,MAAA;AACA,eAAAC,QAAA,GAAAA,QAAA;AAjBV,eAAAC,WAAA,GAAmB,EAAnB;AACA,eAAAC,YAAA,GAAe,EAAf,CAgBkC,CAflC;;AACA,eAAAC,gBAAA,GAA6B,CAAC,OAAD,EAAU,OAAV,EAAkB,MAAlB,EAAyB,QAAzB,CAA7B;AACA,eAAAC,UAAA,GAAa,IAAI,0EAAJ,CAAuB,KAAKF,YAA5B,CAAb;AAcI;;;;iBAVJ,2BAAkB;AAChB,iBAAKE,UAAL,CAAgBC,SAAhB,GAA4B,KAAKA,SAAjC;AACD;;;iBAUD,oBAAQ;AACN,iBAAKgG,kBAAL;AACA,iBAAKrG,QAAL,CAAcA,QAAd,CAAuB,cAAvB;AAED;;;iBAED,8BAAqB;AAAA;;AACnB,iBAAKrE,eAAL,CAAqB0K,kBAArB,GAA0CpJ,SAA1C,CAAoD,UAACsB,GAAD,EAAa;AAC/D3B,qBAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB0B,GAAxB;AACA,kBAAIxB,IAAI,GAAGwB,GAAG,CAACxB,IAAf;AACAA,kBAAI,CAACwD,OAAL,CAAa,UAACC,OAAD,EAAUC,KAAV,EAAoB;AAC/BD,uBAAO,CAACC,KAAR,GAAgBA,KAAK,GAAG,CAAxB,CAD+B,CACJ;AAC5B,eAFD;AAIA,qBAAI,CAACP,YAAL,GAAoBnD,IAApB;AACA,qBAAI,CAACqD,UAAL,GAAkB,IAAI,0EAAJ,CAAuB,OAAI,CAACF,YAA5B,CAAlB;AACA,qBAAI,CAACE,UAAL,CAAgBC,SAAhB,GAA4B,OAAI,CAACA,SAAjC;AACAzD,qBAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiC,OAAI,CAACqD,YAAtC,EAV+D,CAY/D;AACD,aAbD;AAcD;;;iBACD,cAAKM,OAAL,EAAY;AAAA;;AACV,gBAAMxC,SAAS,GAAG,KAAK+B,MAAL,CAAYW,IAAZ,CAAiB,2FAAjB,EAAuC;AACvDC,mBAAK,EAAE,OADgD;AAEvD5D,kBAAI,EAAEyD;AAFiD,aAAvC,CAAlB;AAIAxC,qBAAS,CAAC4C,WAAV,GAAwB3D,SAAxB,CAAkC,UAAC4D,MAAD,EAAY;AAC5C,kBAAKA,MAAM,IAAI,MAAf,EAAwB;AACtB,uBAAI,CAACwF,kBAAL;AACD;;AACDzJ,qBAAO,CAACC,GAAR,CAAY,uBAAZ;AACD,aALD;AAMD;;;iBACD,iBAAOL,IAAP,EAAa;AAAA;;AACX,+DAAKU,IAAL,CAAU;AACRb,mBAAK,EAAE,eADC;AAERyE,kBAAI,oCAA4BtE,IAAI,CAACH,KAAjC,QAFI;AAGR0E,kBAAI,EAAE,SAHE;AAIRC,8BAAgB,EAAE,IAJV;AAKRC,gCAAkB,EAAE,SALZ;AAMRC,+BAAiB,EAAE,MANX;AAORC,+BAAiB,EAAE;AAPX,aAAV,EAQGC,IARH,CAQQ,UAACP,MAAD,EAAY;AAClB,kBAAIA,MAAM,CAAC/D,KAAX,EAAkB;AAChB,uBAAI,CAACnB,eAAL,CACC2K,kBADD,CACoB9J,IAAI,CAACiC,GADzB,EAECxB,SAFD,CAEW,UAACsB,GAAD,EAAS;AAClB,qEAAKrB,IAAL,CAAU;AACRb,yBAAK,EAAE,gCADC;AAERc,qCAAiB,EAAE,KAFX;AAGRC,yBAAK,EAAE;AAHC,mBAAV;AAKAR,yBAAO,CAACC,GAAR,CAAY,aAAZ,EAA2B0B,GAA3B;;AACA,yBAAI,CAAC8H,kBAAL;AAED,iBAXD;AAYD;AACF,aAvBD;AAwBD;;;;;;;yBAjFUD,uB,EAAuB,wK,EAAA,mI,EAAA,yJ;AAAA,O;;;cAAvBA,uB;AAAuB,8C;AAAA;AAAA;sEAQvB,wE,EAAY,I;;;;;;;;;;;;;;ACvBzB;;AAAkB;;AAAgC;;AAC9C;;AAEE;;AACE;;AAAuC;;AACzC;;AACF;;AACA;;AACE;;AAGE;;AACE;;AACA;;AACF;;AAKJ;;AACE;;AACA;;AACF;;AACA;;AACI;;AACA;;AAEF;;AACA;;AACE;;AACA;;AAEF;;AAEE;;AACA;;AACF;;AAEA;;AAIF;;;;AAvCgE;;AAAA;;AAK7C;;AAAA;;AA0BK;;AAAA;;AACa;;AAAA;;AAGpB;;AAAA;;;;;;;;;wEDvBRA,uB,EAAuB;gBALnC,uDAKmC;iBALzB;AACT3I,oBAAQ,EAAE,uBADD;AAETC,uBAAW,EAAE,oCAFJ;AAGTC,qBAAS,EAAE,CAAC,oCAAD;AAHF,W;AAKyB,U;;;;;;;;;AAQT0C,mBAAS,EAAE,CAAF;kBAAjC,uDAAiC;mBAAvB,wE;AAAuB,WAAE;;;;;;;;;;;AEvBtC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACSQ;;AAIE;;AACE;;AACE;;AACG;;AACH;;AACF;;AACA;;AAEE;;AAMF;;AACA;;AACE;;AAA6B;AAAA;;AAAA;;AAAA;AAAA;;AAC1B;;AACH;;AACF;;AACA;;AACE;;AAA6B;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAC3B;;AACF;;AACF;;AACF;;AAEA;;AACF;;;;;;AA9BE;;AAKO;;AAAA;;;;;;;;UDCJkG,oB;AAIX,sCACU9K,EADV,EAEUC,MAFV,EAGUC,eAHV,EAGgD;AAAA;;AAFtC,eAAAF,EAAA,GAAAA,EAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,eAAA,GAAAA,eAAA;AAER,eAAK6K,cAAL,GAAoB,KAAK/K,EAAL,CAAQI,KAAR,CAAc;AACjC;AACCC,kBAAM,EAAE,KAAKL,EAAL,CAAQM,KAAR,CAAc,EAAd;AAFwB,WAAd,CAApB;AAID;;;;iBAED,oBAAQ;AACN,iBAAKC,SAAL;AACD;;;iBACD,qBAAY;AACV;AACE,mBAAKC,GAAL,GAAWC,IAAX,CAAgB,KAAKC,SAAL,EAAhB;AACD;AACF;;;iBACD,eAAG;AACD,mBAAO,KAAKqK,cAAL,CAAoBpK,GAApB,CAAwB,QAAxB,CAAP;AACD;;;iBACD,qBAAS;AACP,mBAAO,KAAKX,EAAL,CAAQI,KAAR,CAAc;AAEnBQ,mBAAK,EAAE,CAAC,EAAD,EAAK,0DAAWC,QAAhB;AAFY,aAAd,CAAP;AAID;;;iBAED,4BAAmBC,CAAnB,EAAsB;AACpB,gBAAMC,IAAI,GAAc,KAAKgK,cAAL,CAAoB/J,QAApB,CAA6B,QAA7B,CAAxB;;AACA,gBAAID,IAAI,CAACE,MAAL,GAAc,CAAlB,EAAqB;AACnBF,kBAAI,CAACG,QAAL,CAAcJ,CAAd;AAED;AACF;;;iBACD,wBAAe;AAAA;;AACbK,mBAAO,CAACC,GAAR,CAAY,KAAK2J,cAAL,CAAoB1J,KAAhC;AACA,gBAAIC,IAAI,GAAC;AACPjB,oBAAM,EAAC,KAAK0K,cAAL,CAAoBpK,GAApB,CAAwB,QAAxB,EAAkCU;AADlC,aAAT;AAGA,iBAAKnB,eAAL,CAAqB8K,uBAArB,CAA6C1J,IAA7C,EAAmDE,SAAnD,CAA6D,UAACF,IAAD,EAAU;AACrEH,qBAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBE,IAArB;AACA,iEAAKG,IAAL,CAAU;AACRb,qBAAK,EAAE,8BADC;AAERc,iCAAiB,EAAE,KAFX;AAGRC,qBAAK,EAAE;AAHC,eAAV;;AAKA,qBAAI,CAAC1B,MAAL,CAAY2B,QAAZ,CAAqB,CAAC,8BAAD,CAArB;AACD,aARD,EAQE,UAACC,GAAD,EAAO;AAACV,qBAAO,CAACW,KAAR,CAAcD,GAAd;AAAoB,aAR9B;AAYD;;;;;;;yBAzDUiJ,oB,EAAoB,2H,EAAA,uH,EAAA,wK;AAAA,O;;;cAApBA,oB;AAAoB,0C;AAAA,iB;AAAA,e;AAAA,6lB;AAAA;AAAA;ACjBjC;;AACI;;AACF;;AACA;;AACE;;AAAmC;AAAA,qBAAY,IAAA/I,YAAA,EAAZ;AAA0B,aAA1B;;AACjC;;AAAwB;;AAAsB;;AAC9C;;AACA;;AACA;;AACE;;AAiCF;;AACA;;AAEA;;AACE;;AAA+F;;AAAG;;AACpG;;AACF;;AACF;;;;AAjDmC;;AAI3B;;AAAA;;AAMoB;;AAAA;;AAoCuB;;AAAA;;;;;;;;;wED7BxC+I,oB,EAAoB;gBALhC,uDAKgC;iBALtB;AACT9I,oBAAQ,EAAE,mBADD;AAETC,uBAAW,EAAE,gCAFJ;AAGTC,qBAAS,EAAE,CAAC,gCAAD;AAHF,W;AAKsB,U;;;;;;;;;;;;;;;;;;AEjBjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACaM;;AAAuC;;AAAI;;;;;;AAC3C;;AAAuC;;AAAiB;;;;;;AAAjB;;AAAA;;;;;;AAO3C;;AAAuC;;AAAK;;;;;;AAC5C;;AAAwC;;AAAkB;;;;;;AAAlB;;AAAA;;;;;;AAIxC;;AAAuC;;AAAK;;;;;;;;AAC5C;;AAAsC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAyB;;AAC/D;;;;;;AAGA;;AAAuC;;AAAO;;;;;;;;AAC9C;;AAAsC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA2B;;AACjE;;;;;;AAIE;;;;;;AACA;;;;;;;;UDxBS+I,uB;AAeX;AAEA,yCAAoB/K,eAApB,EAAoEoE,MAApE,EAAsF;AAAA;;AAAlE,eAAApE,eAAA,GAAAA,eAAA;AAAgD,eAAAoE,MAAA,GAAAA,MAAA;AAdpE,eAAAE,WAAA,GAAmB,EAAnB;AACA,eAAAC,YAAA,GAAe,EAAf,CAasF,CAZtF;;AACA,eAAAC,gBAAA,GAA6B,CAAC,OAAD,EAAU,OAAV,EAAmB,MAAnB,EAA0B,QAA1B,CAA7B;AACA,eAAAC,UAAA,GAAa,IAAI,0EAAJ,CAAuB,KAAKF,YAA5B,CAAb;AAUwF;;;;iBALxF,2BAAkB;AAChB,iBAAKE,UAAL,CAAgBC,SAAhB,GAA4B,KAAKA,SAAjC;AACD;;;iBAKD,oBAAQ;AACN,iBAAKsG,iBAAL;AACD;;;iBAED,6BAAoB;AAAA;;AAClB,iBAAKhL,eAAL,CAAqBgL,iBAArB,GAAyC1J,SAAzC,CAAmD,UAACsB,GAAD,EAAa;AAC9D3B,qBAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmC0B,GAAnC,EAD8D,CAE9D;;AACA,kBAAIxB,IAAI,GAAGwB,GAAG,CAACxB,IAAf;AACAA,kBAAI,CAACwD,OAAL,CAAa,UAACC,OAAD,EAAUC,KAAV,EAAoB;AAC/BD,uBAAO,CAACC,KAAR,GAAgBA,KAAK,GAAG,CAAxB,CAD+B,CACJ;AAC5B,eAFD;AAIA,qBAAI,CAACP,YAAL,GAAoBnD,IAApB;AACA,qBAAI,CAACqD,UAAL,GAAkB,IAAI,0EAAJ,CAAuB,OAAI,CAACF,YAA5B,CAAlB;AACA,qBAAI,CAACE,UAAL,CAAgBC,SAAhB,GAA4B,OAAI,CAACA,SAAjC,CAV8D,CAY9D;AACD,aAbD;AAeD;;;iBAED,cAAKG,OAAL,EAAY;AAAA;;AACV,gBAAMxC,SAAS,GAAG,KAAK+B,MAAL,CAAYW,IAAZ,CAAiB,yGAAjB,EAA2C;AAC3DC,mBAAK,EAAE,OADoD;AAE3D5D,kBAAI,EAAEyD;AAFqD,aAA3C,CAAlB;AAIAxC,qBAAS,CAAC4C,WAAV,GAAwB3D,SAAxB,CAAkC,UAAC4D,MAAD,EAAY;AAC5C,kBAAKA,MAAM,IAAI,MAAf,EAAwB;AACtB,uBAAI,CAAC8F,iBAAL;AACD;;AACD/J,qBAAO,CAACC,GAAR,CAAY,uBAAZ;AACD,aALD;AAMD;;;iBAED,iBAAOL,IAAP,EAAa;AAAA;;AACX,+DAAKU,IAAL,CAAU;AACRb,mBAAK,EAAE,eADC;AAERyE,kBAAI,oCAA4BtE,IAAI,CAACH,KAAjC,QAFI;AAGR0E,kBAAI,EAAE,SAHE;AAIRC,8BAAgB,EAAE,IAJV;AAKRC,gCAAkB,EAAE,SALZ;AAMRC,+BAAiB,EAAE,MANX;AAORC,+BAAiB,EAAE;AAPX,aAAV,EAQGC,IARH,CAQQ,UAACP,MAAD,EAAY;AAClB,kBAAIA,MAAM,CAAC/D,KAAX,EAAkB;AAChB,uBAAI,CAACnB,eAAL,CACCiL,iBADD,CACmBpK,IAAI,CAACiC,GADxB,EAECxB,SAFD,CAEW,UAACsB,GAAD,EAAS;AAClB,qEAAKrB,IAAL,CAAU;AACRb,yBAAK,EAAE,sCADC;AAERc,qCAAiB,EAAE,KAFX;AAGRC,yBAAK,EAAE;AAHC,mBAAV;AAKAR,yBAAO,CAACC,GAAR,CAAY,aAAZ,EAA2B0B,GAA3B;;AACA,yBAAI,CAACoI,iBAAL;AAED,iBAXD;AAYD;AACF,aAvBD;AAwBD;;;;;;;yBA/EUD,uB,EAAuB,wK,EAAA,mI;AAAA,O;;;cAAvBA,uB;AAAuB,4C;AAAA;AAAA;sEAUvB,wE,EAAY,I;;;;;;;;;;;;;;ACvBzB;;AAAK;;AAAoB;;AACzB;;AAEE;;AAA8D;AAAA,qBAAS,IAAAjD,IAAA,CAAK,EAAL,CAAT;AAAiB,aAAjB;;AAC5D;;AAAuC;;AACzC;;AACF;;AACA;;AACE;;AAGE;;AACE;;AACA;;AACF;;AAKJ;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AAEF;;AACA;;AACE;;AACA;;AAEF;;AAGI;;AACA;;AACF;;AAEA;;AAIF;;;;AApCmB;;AAAA;;AA4BK;;AAAA;;AACa;;AAAA;;AAGpB;;AAAA;;;;;;;;;wED3BJiD,uB,EAAuB;gBALnC,uDAKmC;iBALzB;AACTjJ,oBAAQ,EAAE,qBADD;AAETC,uBAAW,EAAE,kCAFJ;AAGTC,qBAAS,EAAE,CAAC,kCAAD;AAHF,W;AAKyB,U;;;;;;;AAUT0C,mBAAS,EAAE,CAAF;kBAAjC,uDAAiC;mBAAvB,wE;AAAuB,WAAE;;;;;;;;;;;AExBtC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAQawG,iB;AAEX,mCAAoB7I,SAApB,EACgCjB,IADhC,EACyC;AAAA;;AADrB,eAAAiB,SAAA,GAAAA,SAAA;AACY,eAAAjB,IAAA,GAAAA,IAAA;AAAe;;;;iBAE/C,oBAAQ,CACP;;;;;;;yBANU8J,iB,EAAiB,sI,EAAA,gEAGpB,wEAHoB,C;AAGL,O;;;cAHZA,iB;AAAiB,sC;AAAA,iB;AAAA,e;AAAA,sP;AAAA;AAAA;ACR9B;;AACI;;AACI;;AAAI;;AAAY;;AAEhB;;AACE;;AACE;;AAAqD;;AAAa;;AAClE;;AAKF;;AACA;;AACE;;AAAqD;;AAAgB;;AACrE;;AAKF;;AACF;;AACA;;AACE;;AACE;;AAAqD;;AAAsB;;AAC3E;;AAKF;;AACA;;AACE;;AAAqD;;AAAc;;AACnE;;AAKF;;AACF;;AAEF;;AACA;;AACA;;AAuBA;;AACF;;;;;;;;wED3DSA,iB,EAAiB;gBAL7B,uDAK6B;iBALnB;AACTpJ,oBAAQ,EAAE,eADD;AAETC,uBAAW,EAAE,4BAFJ;AAGTC,qBAAS,EAAE,CAAC,4BAAD;AAHF,W;AAKmB,U;;;;;;oBAG3B,oD;qBAAO,wE;;;;;;;;;;;;;AEXV;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACgBU;;AAAuC;;AAAI;;;;;;AAC3C;;AAAuC;;AAAiB;;;;;;AAAjB;;AAAA;;;;;;AAO3C;;AAAuC;;AAAU;;;;;;AACjD;;AAAwC;;AAAqB;;;;;;AAArB;;AAAA;;;;;;AAIxC;;AAAuC;;AAAa;;;;;;AACpD;;AAAwC;;AAAwB;;;;;;AAAxB;;AAAA;;;;;;AAIxC;;AAAuC;;AAAe;;;;;;AACtD;;AAAwC;;AAA0B;;;;;;AAA1B;;AAAA;;;;;;AAIxC;;AAAuC;;AAAO;;;;;;AAC9C;;AAAwC;;AAAmB;;;;;;AAAnB;;AAAA;;;;;;AAIxC;;AAAuC;;AAAM;;;;;;AAC7C;;AAAwC;;AAAkB;;;;;;AAAlB;;AAAA;;;;;;AAIxC;;AAAuC;;AAAK;;;;;;;;AAC5C;;AAAsC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAyB;;AAC/D;;;;;;AAGA;;AAAuC;;AAAO;;;;;;;;AAC9C;;AAAsC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA2B;;AACjE;;;;;;AAIE;;;;;;AACA;;;;;;;;UDhDKmJ,oB;AAYX;AAEA,sCAAqB/G,MAArB,EAAgDC,QAAhD,EAA2E;AAAA;;AAAtD,eAAAD,MAAA,GAAAA,MAAA;AAA2B,eAAAC,QAAA,GAAAA,QAAA;AAZhD,eAAAC,WAAA,GAAmB,EAAnB;AACA,eAAAC,YAAA,GAAe,EAAf,CAW2E,CAV3E;;AACA,eAAAC,gBAAA,GAA6B,CAAC,OAAD,EAAU,UAAV,EAAqB,aAArB,EAAmC,eAAnC,EAAmD,QAAnD,EAA4D,OAA5D,EAAqE,MAArE,EAA6E,QAA7E,CAA7B;AACA,eAAAC,UAAA,GAAa,IAAI,0EAAJ,CAAuB,KAAKF,YAA5B,CAAb;AAQ8E;;;;iBAL9E,2BAAkB;AAChB,iBAAKE,UAAL,CAAgBC,SAAhB,GAA4B,KAAKA,SAAjC;AACD;;;iBAKD,oBAAQ;AACN,iBAAKL,QAAL,CAAcA,QAAd,CAAuB,mBAAvB;AACD;;;iBAED,yBAAgB,CACd;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAED;;;iBAED,oBAAW2C,EAAX,EAAe;AACf,gBAAI3E,SAAS,GAAG,KAAK+B,MAAL,CAAYW,IAAZ,CAAiB,6EAAjB,EAAmC;AAClD3D,kBAAI,EAAE;AACL6F,sBAAM,EAAE,KADH;AAELC,sBAAM,EAAEF;AAFH;AAD4C,aAAnC,CAAhB;AAMA3E,qBAAS,CAAC4C,WAAV,GAAwB3D,SAAxB,CAAkC,UAAC4D,MAAD,EAAY;AAC7CjE,qBAAO,CAACC,GAAR,CAAY,+CAAZ,EAA6DgE,MAA7D;AAEAjE,qBAAO,CAACC,GAAR,CAAY,uBAAZ;AACA,aAJD;AAKA;;;iBACA,cAAK2D,OAAL,EAAc;AAAA;;AACZ,gBAAMxC,SAAS,GAAG,KAAK+B,MAAL,CAAYW,IAAZ,CAAiB,gFAAjB,EAAoC;AACpDC,mBAAK,EAAE,OAD6C;AAEpD5D,kBAAI,EAAEyD;AAF8C,aAApC,CAAlB;AAIAxC,qBAAS,CAAC4C,WAAV,GAAwB3D,SAAxB,CAAkC,UAAC4D,MAAD,EAAY;AAC5C,kBAAKA,MAAM,IAAI,MAAf,EAAwB;AACtB,uBAAI,CAACiC,aAAL;AACD;;AACDlG,qBAAO,CAACC,GAAR,CAAY,uBAAZ;AACD,aALD;AAMD;;;iBACD,iBAAOL,IAAP,EAAa,CACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACD;;;;;;;yBAvFUsK,oB,EAAoB,mI,EAAA,yJ;AAAA,O;;;cAApBA,oB;AAAoB,0C;AAAA;AAAA;sEAOpB,wE,EAAY,I;;;;;;;;;;;;;;AClBzB;;AAAI;;AAAqB;;AACrB;;AAEE;;AACE;;AAA6B;AAAA,qBAAS,IAAA/D,UAAA,CAAW,MAAX,CAAT;AAA2B,aAA3B;;AACzB;;AACJ;;AACJ;;AACA;;AACA;;AACE;;AAGE;;AACE;;AACA;;AACF;;AAKJ;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AAEF;;AACA;;AACE;;AACA;;AAEF;;AAGI;;AACA;;AACF;;AAEA;;AAIF;;;;AAxDmB;;AAAA;;AAgDK;;AAAA;;AACa;;AAAA;;AAGpB;;AAAA;;;;;;;;;wEDnDR+D,oB,EAAoB;gBALhC,uDAKgC;iBALtB;AACTrJ,oBAAQ,EAAE,mBADD;AAETC,uBAAW,EAAE,gCAFJ;AAGTC,qBAAS,EAAE,CAAC,gCAAD;AAHF,W;AAKsB,U;;;;;;;AAON0C,mBAAS,EAAE,CAAF;kBAAjC,uDAAiC;mBAAvB,wE;AAAuB,WAAE;;;;;;;;;;;AEpBtrB;AAAEC,YAAI,EAAE,SAAR;AAAmBC,iBAAS,EAAE,4FAA9B;AAAoDC,gBAAQ,EAAC,CAC3D;AAAEF,cAAI,EAAE,UAAR;AAAoBC,mBAAS,EAAE;AAA/B,SAD2D,EAE3D;AAAED,cAAI,EAAE,UAAR;AAAoBC,mBAAS,EAAE;AAA/B,SAF2D;AAA7D,OADqB,EAKrB;AAAED,YAAI,EAAE,aAAR;AAAuBC,iBAAS,EAAE;AAAlC,OALqB,EAMrB;AAAED,YAAI,EAAE,SAAR;AAAmBC,iBAAS,EAAE;AAA9B,OANqB,EAOrB;AAACD,YAAI,EAAC,YAAN;AAAmBC,iBAAS,EAAC;AAA7B,OAPqB,EAQrB;AAACD,YAAI,EAAC,aAAN;AAAoBC,iBAAS,EAAC;AAA9B,OARqB,EASrB;AAACD,YAAI,EAAC,QAAN;AAAeC,iBAAS,EAAC;AAAzB,OATqB,EAWrB;AAAED,YAAI,EAAE,UAAR;AAAoBC,iBAAS,EAAE;AAA/B,OAXqB,EAYrB;AAAED,YAAI,EAAE,gBAAR;AAA0BC,iBAAS,EAAE;AAArC,OAZqB,EAarB;AAAED,YAAI,EAAE,YAAR;AAAsBC,iBAAS,EAAE;AAAjC,OAbqB,EAcrB;AAAED,YAAI,EAAE,aAAR;AAAuBC,iBAAS,EAAE;AAAlC,OAdqB,EAerB;AAAED,YAAI,EAAE,YAAR;AAAsBC,iBAAS,EAAE;AAAjC,OAfqB,EAgBrB;AAAED,YAAI,EAAE,eAAR;AAAyBC,iBAAS,EAAE;AAApC,OAhBqB,EAiBrB;AAAED,YAAI,EAAE,gBAAR;AAA0BC,iBAAS,EAAE;AAArC,OAjBqB,EAkBrB;AAAED,YAAI,EAAE,QAAR;AAAkBC,iBAAS,EAAE;AAA7B,OAlBqB,EAmBrB;AAAED,YAAI,EAAE,aAAR;AAAuBC,iBAAS,EAAE;AAAlC,OAnBqB,EAoBrB;AAAED,YAAI,EAAE,QAAR;AAAkBC,iBAAS,EAAE;AAA7B,OApBqB,EAqBrB;AAAED,YAAI,EAAE,SAAR;AAAmBC,iBAAS,EAAE;AAA9B,OArBqB,EAsBrB;AAAED,YAAI,EAAE,YAAR;AAAsBC,iBAAS,EAAE;AAAjC,OAtBqB,EAuBrB;AAAED,YAAI,EAAE,UAAR;AAAoBC,iBAAS,EAAE;AAA/B,OAvBqB,EAwBrB;AAAED,YAAI,EAAE,SAAR;AAAmBC,iBAAS,EAAE;AAA9B,OAxBqB,EAyBrB;AAAED,YAAI,EAAE,YAAR;AAAsBC,iBAAS,EAAE;AAAjC,OAzBqB,EA0BrB;AAAED,YAAI,EAAE,cAAR;AAAwBC,iBAAS,EAAE;AAAnC,OA1BqB,EA2BrB;AAAED,YAAI,EAAE,iBAAR;AAA2BC,iBAAS,EAAE;AAAtC,OA3BqB,EA4BrB;AAAED,YAAI,EAAE,kBAAR;AAA4BC,iBAAS,EAAE;AAAvC,OA5BqB,CAAvB;;UAmCaE,qB;;;;;cAAAA;;;;2BAAAA,qB;AAAqB,S;AAAA,kBAHvB,CAAC,8DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CAGuB,EAFtB,6DAEsB;;;;6HAArBI,qB,EAAqB;AAAA;AAAA,oBAFtB,6DAEsB;AAAA,S;AAFV,O;;;;;yEAEXA,qB,EAAqB;gBAJjC,uDAIiC;iBAJxB;AACRhI,mBAAO,EAAE,CAAC,8DAAaiI,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,mBAAO,EAAE,CAAC,6DAAD;AAFD,W;AAIwB,U","file":"site-info-site-info-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, FormArray } from '@angular/forms';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { Router } from '@angular/router';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-add-hazard',\r\n  templateUrl: './add-hazard.component.html',\r\n  styleUrls: ['./add-hazard.component.scss'],\r\n})\r\nexport class AddHazardComponent implements OnInit {\r\n  hazardFG!: FormGroup;\r\n  formData: any;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private router: Router,\r\n    private logicalFormInfo: LogicalFormInfoService\r\n  ) {\r\n    this.hazardFG = this.fb.group({\r\n      arrObj: this.fb.array([]),\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.addAction();\r\n  }\r\n  addAction() {\r\n    {\r\n      this.add().push(this.newAction());\r\n    }\r\n  }\r\n  add(): FormArray {\r\n    return this.hazardFG.get('arrObj') as FormArray;\r\n  }\r\n  newAction(): FormGroup {\r\n    return this.fb.group({\r\n      title: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  removeSafetyModule(i) {\r\n    const item = <FormArray>this.hazardFG.controls['arrObj'];\r\n    if (item.length > 1) {\r\n      item.removeAt(i);\r\n    }\r\n  }\r\n  onFormSubmit() {\r\n    console.log(this.hazardFG.value);\r\n    let data = {\r\n      arrObj: this.hazardFG.get('arrObj').value,\r\n    };\r\n    this.logicalFormInfo.addMultipleHazards(data).subscribe(\r\n      (data) => {\r\n        console.log('PPE=>', data);\r\n        Swal.fire({\r\n          title: 'Parameter Added successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });  \r\n        this.router.navigate(['/admin/siteInfo/hazards']);\r\n      },\r\n      (err) => {\r\n        console.error(err);\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"btn btn-outline-primary\" [routerLink]=\"['/admin/siteInfo/hazards']\">\r\n    <i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\r\n  </div>\r\n  <div class=\"container px-4 py-4 bg-white\">\r\n    <form [formGroup]=\"hazardFG\" (ngSubmit)=\"onFormSubmit()\">\r\n      <h2 class=\"text-center\">Add Hazard</h2>\r\n      <br />\r\n      <hr />\r\n      <ng-container formArrayName=\"arrObj\">\r\n        <ng-container\r\n          *ngFor=\"let control of add().controls; let i = index\"\r\n          [formGroupName]=\"i\"\r\n        >\r\n          <div class=\"row justify-content-center\">\r\n            <div class=\"mr-1 mt-2\">\r\n              <span \r\n                >{{i+1}}.\r\n              </span>\r\n            </div>\r\n            <div class=\"col-8\">\r\n              <!-- <p for=\"exampleFormControlInput1\" class=\"form-Label\">Job Task Type</p> -->\r\n              <input\r\n                type=\"text\"\r\n                formControlName=\"title\"\r\n                class=\"form-control sign\"\r\n                id=\"name\"\r\n              />\r\n            </div>\r\n            <div class=\"col-1 mt-2\">\r\n              <span class=\"material-icons\" (click)=\"addAction()\"\r\n                >add_circle_outline\r\n              </span>\r\n            </div>\r\n            <div class=\"col-1 mt-2\">\r\n              <span class=\"material-icons\" (click)=\"removeSafetyModule(i)\">\r\n                remove_circle_outline\r\n              </span>\r\n            </div>\r\n          </div>\r\n  \r\n          <hr />\r\n        </ng-container>\r\n      </ng-container>\r\n      <br />\r\n  \r\n      <div class=\"col-md-2\">\r\n        <button type=\"submit\" class=\"btn btn-primary\"[disabled]=\"hazardFG.get('arrObj').invalid\">Add</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  ","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators,FormArray } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-add-high-risk-construction',\r\n  templateUrl: './add-high-risk-construction.component.html',\r\n  styleUrls: ['./add-high-risk-construction.component.scss'],\r\n})\r\nexport class AddHighRiskConstructionComponent implements OnInit {\r\n  // riskDetails!: FormGroup;\r\n  // riskData: any = [];\r\n  // ID: any;\r\n  // hide: boolean = true;\r\n  // constructor(\r\n  //   private logicalFormInfo: LogicalFormInfoService,\r\n  //   private fb: FormBuilder,\r\n  //   public dialogRef: MatDialogRef<AddHighRiskConstructionComponent>,\r\n  //   @Inject(MAT_DIALOG_DATA) public data: any\r\n  // ) {\r\n  //   {\r\n  //     this.riskDetails = this.fb.group({\r\n  //       title: ['', Validators.required],\r\n  //     });\r\n  //     console.log('riskDetails=>', this.riskDetails);\r\n  //   }\r\n  // }\r\n\r\n  // ngOnInit(): void {}\r\n\r\n  // onFormSubmit() {\r\n  //   console.log(this.riskDetails);\r\n  //   let data = {\r\n  //     componentId: this.data.EditData,\r\n  //     title: this.riskDetails.get('title').value,\r\n  //   };\r\n  //   this.logicalFormInfo.addSubComponent(data).subscribe((data) => {\r\n  //     console.log('riskDetails=>', data);\r\n  //     // this.riskData = data;\r\n  //     this.dialogRef.close('true');\r\n  //     this.riskDetails.reset();\r\n  //     Swal.fire('Parameter added successfully');\r\n  //   });\r\n  // }\r\n  \r\n  riskConstr!: FormGroup;\r\n  formData: any;;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private router: Router,\r\n    private logicalFormInfo:LogicalFormInfoService\r\n  ) { \r\n    this.riskConstr=this.fb.group({\r\n     // mode:\"JobTask\",\r\n      arrObj: this.fb.array([]),\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.addAction();\r\n  }\r\n  addAction() {\r\n    {\r\n      this.add().push(this.newAction());\r\n    }\r\n  }\r\n  add(): FormArray {\r\n    return this.riskConstr.get('arrObj') as FormArray;\r\n  }\r\n  newAction(): FormGroup {\r\n    return this.fb.group({\r\n     \r\n      title: ['', Validators.required],\r\n    });\r\n  }\r\n  \r\n  removeSafetyModule(i) {\r\n    const item = <FormArray>this.riskConstr.controls['arrObj'];\r\n    if (item.length > 1) {\r\n      item.removeAt(i);\r\n    \r\n    }\r\n  }\r\n  onFormSubmit() {\r\n    // console.log(this.riskConstr.value);\r\n    let data={\r\n      arrObj:this.riskConstr.get('arrObj').value\r\n    }\r\n    // console.log(data);\r\n    \r\n    this.logicalFormInfo.addMultipleRisk(data).subscribe((data) => {\r\n      console.log('Risk=>', data);\r\n      Swal.fire({\r\n        title: 'Parameter Added successfully',\r\n        showConfirmButton: false,\r\n        timer: 1200,\r\n      });  \r\n      this.router.navigate(['/admin/siteInfo/highRisk']);    \r\n    },(err)=>{console.error(err);} \r\n  \r\n    );\r\n}\r\n}","<!-- <div class=\"container px-4 py-4 card\">\r\n  <form [formGroup]=\"riskDetails\" (ngSubmit)=\"onFormSubmit()\">\r\n    <h1 class=\"text-center pt-3\">\r\n      <p style=\"text-align: center\">High Risk Construction</p>\r\n    </h1>\r\n    <hr />\r\n    <div>\r\n      <div class=\"row\">\r\n        <div class=\"col-8\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">Add Parameter</p>\r\n          <input\r\n            type=\"text\"\r\n            formControlName=\"title\"\r\n            class=\"form-control\"\r\n            id=\"name\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <br />\r\n    <hr />\r\n    <div class=\"col-md-2\">\r\n      <button\r\n        type=\"submit\"\r\n        [disabled]=\"riskDetails.get('title').hasError('required')\"\r\n        class=\"btn btn-primary\"\r\n      >\r\n        Add\r\n      </button>\r\n    </div>\r\n  </form>\r\n</div> -->\r\n<div class=\"btn btn-outline-primary\" [routerLink]=\"['/admin/siteInfo/highRisk']\">\r\n  <i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\r\n</div>\r\n<div class=\"container px-4 py-4 bg-white\">\r\n  <form [formGroup]=\"riskConstr\" (ngSubmit)=\"onFormSubmit()\">\r\n    <h2 class=\"text-center\">Add High Risk Construction Parameter</h2>\r\n    <br />\r\n    <hr />\r\n    <ng-container formArrayName=\"arrObj\">\r\n      <ng-container\r\n        *ngFor=\"let control of add().controls; let i = index\"\r\n        [formGroupName]=\"i\"\r\n      >\r\n        <div class=\"row justify-content-center\">\r\n          <div class=\"mr-1 mt-2\">\r\n            <span \r\n              >{{i+1}}.\r\n            </span>\r\n          </div>\r\n          <div class=\"col-8\">\r\n            <!-- <p for=\"exampleFormControlInput1\" class=\"form-Label\">Job Task Type</p> -->\r\n            <input\r\n              type=\"text\"\r\n              formControlName=\"title\"\r\n              class=\"form-control sign\"\r\n              id=\"name\"\r\n            />\r\n          </div>\r\n          <div class=\"col-1 mt-2\">\r\n            <span class=\"material-icons\" (click)=\"addAction()\"\r\n              >add_circle_outline\r\n            </span>\r\n          </div>\r\n          <div class=\"col-1 mt-2\">\r\n            <span class=\"material-icons\" (click)=\"removeSafetyModule(i)\">\r\n              remove_circle_outline\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        <hr />\r\n      </ng-container>\r\n    </ng-container>\r\n    <br />\r\n\r\n    <div class=\"col-md-2\">\r\n      <button type=\"submit\" class=\"btn btn-primary\"[disabled]=\"riskConstr.get('arrObj').invalid\">Add</button>\r\n    </div>\r\n  </form>\r\n</div>\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\n@Component({\r\n  selector: 'app-edit-licence',\r\n  templateUrl: './edit-licence.component.html',\r\n  styleUrls: ['./edit-licence.component.scss']\r\n})\r\nexport class EditLicenceComponent implements OnInit {\r\n\r\n  editTitle: FormGroup;\r\n  dataRec: any;\r\n  categories=[];\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    public dialogRef: MatDialogRef<EditLicenceComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.dataRec = data;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    console.log(this.dataRec);\r\n    \r\n    this.editTitle = this.fb.group({\r\n      title: [this.dataRec.title, Validators.required],\r\n      categoryId: [this.dataRec.licenceCategoryId.title, Validators.required],\r\n    });\r\n    this.getAllLicenceCat();\r\n  }\r\n  getAllLicenceCat() {\r\n    this.logicalFormInfo.getAllLicenceCat().subscribe((res) => {\r\n      console.log('getAllLicenceCat=>', res);\r\n      this.categories = res.data;\r\n \r\n    });\r\n \r\n  }\r\n  onFormSubmit() {\r\n\r\n    let data={\r\n      title :this.editTitle.get('title').value,\r\n      licenceCategoryId:this.editTitle.get('categoryId').value,\r\n    }\r\n    this.logicalFormInfo\r\n      .updateLicence(data, this.dataRec._id)\r\n      .subscribe((resData) => {\r\n        console.log('submodulesData', resData);\r\n\r\n        this.dialogRef.close('true');\r\n        Swal.fire('Parameter Edited successfully');\r\n      });\r\n  }\r\n  closeDialog(){\r\n    this.dialogRef.close('false');\r\n\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"editTitle\">\r\n    <h1 mat-dialog-title>Edit Licence</h1>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-6\">\r\n      <!-- <mat-form-field\r\n        appearance=\"legacy\"\r\n        class=\"example-full-width\"\r\n        style=\"width: 1200px\"\r\n      >\r\n        <input\r\n          matInput\r\n          formControlName=\"title\"\r\n          style=\"text-transform: capitalize !important\"\r\n        />\r\n      </mat-form-field> -->\r\n      <input\r\n      type=\"text\"\r\n      formControlName=\"title\"\r\n      class=\"form-control sign\"\r\n      id=\"name\"\r\n      placeholder=\"Licence Name\"\r\n    />\r\n    </div>\r\n    <div class=\"col-6\">\r\n      <select\r\n        class=\"form-select form-control\"\r\n        aria-label=\"Default select example\"\r\n        formControlName=\"categoryId\"\r\n      >\r\n        <option *ngFor=\"let item of categories\" value=\"item._id\">{{item.title}}</option>\r\n    \r\n      </select>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row mt-4\">\r\n    <div class=\"col-sm-2 offset-8\">\r\n      <button mat-raised-button (click)=\"closeDialog()\">Close</button>\r\n    </div>\r\n    <div class=\"col-sm-2\">\r\n      <button\r\n        mat-raised-button\r\n        [disabled]=\"!editTitle.valid\"\r\n        (click)=\"onFormSubmit()\"\r\n      >\r\n        Update\r\n      </button>\r\n    </div>\r\n  </div>\r\n</form>\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-edit-site',\r\n  templateUrl: './edit-site.component.html',\r\n  styleUrls: ['./edit-site.component.scss']\r\n})\r\nexport class EditSiteComponent implements OnInit {\r\n\r\n  constructor(private dialogRef: MatDialogRef<EditSiteComponent>,\r\n\t\t@Inject(MAT_DIALOG_DATA) public data: any,) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<section class=\"content\">\r\n    <div class=\"container px-4 py-4 bg-white\">\r\n      <h1>Site Information</h1>\r\n    \r\n      <div class=\"row\">\r\n        <!-- <div class=\"my-3 col\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">Job Number</p>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            formControlName=\"jobNumber\"\r\n            id=\"siteName\"\r\n          />\r\n        </div> -->\r\n        <div class=\"my-3 col-6\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">Site Name</p>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            formControlName=\"siteName\"\r\n            id=\"siteName\"\r\n          />\r\n        </div>\r\n        <div class=\"my-3 col-6\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">Site Foremen</p>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            formControlName=\"siteName\"\r\n            id=\"siteName\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <!-- <div class=\"row\">\r\n        <div class=\"my-3 col\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">Customer Name</p>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            formControlName=\"customerName\"\r\n            id=\"siteName\"\r\n          />\r\n        </div>\r\n        <div class=\"my-3 col\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">Customer Contact</p>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            formControlName=\"customerContact\"\r\n            id=\"siteName\"\r\n          />\r\n        </div>\r\n      </div> -->\r\n      <div class=\"row\">\r\n        <div class=\"my-3 col-2\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">Street Number</p>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            formControlName=\"streetNumber\"\r\n            id=\"siteName\"\r\n          />\r\n        </div>\r\n        <div class=\"my-3 col-4\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">Street Address</p>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            formControlName=\"streetAddress\"\r\n            id=\"siteName\"\r\n          />\r\n        </div>\r\n        <div class=\"my-3 col-2\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">Suburb</p>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            formControlName=\"suburb\"\r\n            id=\"siteName\"\r\n          />\r\n        </div>\r\n        <div class=\"my-3 col-4\">\r\n            <label for=\"exampleFormControlInput1\" class=\"form-label\"\r\n            >State</label\r\n          >\r\n  \r\n            <select\r\n          class=\"form-select form-control col\"\r\n          aria-label=\"Default select example\"\r\n        >\r\n          <option selected hidden>Select</option>\r\n          <option value=\"1\">1-Insignificant</option>\r\n          <option value=\"2\">2-Minor</option>\r\n          <option value=\"3\">3-Moderate</option>\r\n          <option value=\"4\">4-Major</option>\r\n          <option value=\"5\">5-Catastrophic</option>\r\n        </select>\r\n          <!-- <p for=\"exampleFormControlInput1\" class=\"form-Label\">State</p>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            formControlName=\"state\"\r\n            id=\"siteName\"\r\n          /> -->\r\n        </div>\r\n      </div>\r\n    <div class=\"btn btn-primary\">\r\n    Submit\r\n    </div>\r\n      <!-- <div class=\"row\">\r\n        <div class=\"my-3 col\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n            Customer Contact Phone\r\n          </p>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            formControlName=\"customerContactPhone\"\r\n            id=\"siteName\"\r\n          />\r\n        </div>\r\n        <div class=\"my-3 col\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">Project Manager</p>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            formControlName=\"projectManager\"\r\n            id=\"siteName\"\r\n          />\r\n        </div>\r\n      </div> -->\r\n    </div>\r\n    </section>\r\n    ","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-add-site',\r\n  templateUrl: './add-site.component.html',\r\n  styleUrls: ['./add-site.component.scss']\r\n})\r\nexport class AddSiteComponent implements OnInit {\r\n\r\n  constructor( private dialogRef: MatDialogRef<AddSiteComponent>,\r\n\t\t@Inject(MAT_DIALOG_DATA) public data: any,) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  state = [\r\n      { label: 'New South Wales', value: '' },\r\n      { label: 'Queensland', value: '' },\r\n      { label: 'South Australia', value: '' },\r\n      { label: 'Tasmania', value: '' },\r\n      { label: 'Victoria', value: '' },\r\n      { label: 'Western Australia', value: '' },\r\n    ];\r\n}\r\n","<section class=\"content\">\r\n    <div class=\"container px-4 py-4 bg-white\">\r\n      <h1>Site Information</h1>\r\n    \r\n      <div class=\"row\">\r\n        <!-- <div class=\"my-3 col\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">Job Number</p>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            formControlName=\"jobNumber\"\r\n            id=\"siteName\"\r\n          />\r\n        </div> -->\r\n        <div class=\"my-3 col-6\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">Site Name</p>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            formControlName=\"siteName\"\r\n            id=\"siteName\"\r\n          />\r\n        </div>\r\n        <div class=\"my-3 col-6\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">Site Foremen</p>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            formControlName=\"siteName\"\r\n            id=\"siteName\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <!-- <div class=\"row\">\r\n        <div class=\"my-3 col\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">Customer Name</p>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            formControlName=\"customerName\"\r\n            id=\"siteName\"\r\n          />\r\n        </div>\r\n        <div class=\"my-3 col\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">Customer Contact</p>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            formControlName=\"customerContact\"\r\n            id=\"siteName\"\r\n          />\r\n        </div>\r\n      </div> -->\r\n      <div class=\"row\">\r\n        <div class=\"my-3 col-2\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">Street Number</p>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            formControlName=\"streetNumber\"\r\n            id=\"siteName\"\r\n          />\r\n        </div>\r\n        <div class=\"my-3 col-4\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">Street Address</p>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            formControlName=\"streetAddress\"\r\n            id=\"siteName\"\r\n          />\r\n        </div>\r\n        <div class=\"my-3 col-2\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">Suburb</p>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            formControlName=\"suburb\"\r\n            id=\"siteName\"\r\n          />\r\n        </div>\r\n        <div class=\"my-3 col-4\">\r\n            <label for=\"exampleFormControlInput1\" class=\"form-label\"\r\n            >State</label\r\n          >\r\n  \r\n            <select\r\n          class=\"form-select form-control col\"\r\n          aria-label=\"Default select example\"\r\n        >\r\n          <option selected hidden>Select</option>\r\n          <option value=\"1\">New South Wales</option>\r\n          <option value=\"2\">Queensland</option>\r\n          <option value=\"3\">South Australia</option>\r\n          <option value=\"4\">Tasmania</option>\r\n          <option value=\"5\">Victoria</option>\r\n          <option value=\"5\">Western Australia</option>\r\n        </select>\r\n          <!-- <p for=\"exampleFormControlInput1\" class=\"form-Label\">State</p>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            formControlName=\"state\"\r\n            id=\"siteName\"\r\n          /> -->\r\n        </div>\r\n      </div>\r\n    <div class=\"btn btn-primary\">\r\n    Submit\r\n    </div>\r\n      <!-- <div class=\"row\">\r\n        <div class=\"my-3 col\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n            Customer Contact Phone\r\n          </p>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            formControlName=\"customerContactPhone\"\r\n            id=\"siteName\"\r\n          />\r\n        </div>\r\n        <div class=\"my-3 col\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">Project Manager</p>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            formControlName=\"projectManager\"\r\n            id=\"siteName\"\r\n          />\r\n        </div>\r\n      </div> -->\r\n    </div>\r\n    </section>\r\n    ","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { SiteInfoRoutingModule } from './site-info-routing.module';\r\nimport { SiteInfoComponent } from './site-info.component';\r\nimport { AddSiteInfoComponent } from './add-site-info/add-site-info.component';\r\nimport { JobTaskComponent } from './job-task/job-task.component';\r\nimport { HighRiskConComponent } from './high-risk-con/high-risk-con.component';\r\nimport { PpeSelectComponent } from './ppe-select/ppe-select.component';\r\nimport { LicenceAndQualComponent } from './licence-and-qual/licence-and-qual.component';\r\nimport { SharedModule } from './../shared/shared.module';\r\nimport { AddCustomerComponent } from './add-customer/add-customer.component';\r\n// import { AddLicenceAndQualificationComponent } from './licence-and-qual/add-licence-and-qualification/add-licence-and-qualification.component';\r\n// import { AddPPEselectComponent } from './ppe-select/add-ppeselect/add-ppeselect.component';\r\nimport { AddHighRiskConstructionComponent } from './high-risk-con/add-high-risk-construction/add-high-risk-construction.component';\r\nimport { EditHighRiskConstructionComponent } from './high-risk-con/edit-high-risk-construction/edit-high-risk-construction.component';\r\nimport { AddJobTaskComponent } from './job-task/add-job-task/add-job-task.component';\r\nimport { AddPPEComponent } from './ppe-select/add-ppe/add-ppe.component';\r\nimport { EditTaskComponent } from './job-task/edit-task/edit-task.component';\r\nimport { EditPPEComponent } from './ppe-select/edit-ppe/edit-ppe.component';\r\nimport { EditLicenceComponent } from './licence-and-qual/edit-licence/edit-licence.component';\r\nimport { AddLicenceComponent } from './licence-and-qual/add-licence/add-licence.component';\r\nimport { LicenceCatComponent } from './licence-and-qual/licence-cat/licence-cat.component';\r\nimport { AddLicenceCatComponent } from './licence-and-qual/licence-cat/add-licence-cat/add-licence-cat.component';\r\nimport { EditLicenceCatComponent } from './licence-and-qual/licence-cat/edit-licence-cat/edit-licence-cat.component';\r\nimport { CodeOfPractComponent } from './code-of-pract/code-of-pract.component';\r\nimport { AddCOPComponent } from './code-of-pract/add-cop/add-cop.component';\r\nimport { EditCOPComponent } from './code-of-pract/edit-cop/edit-cop.component';\r\nimport { AddSiteComponent } from './add-site-info/add-site/add-site.component';\r\nimport { EditSiteComponent } from './add-site-info/edit-site/edit-site.component';\r\nimport { AddingCustComponent } from './add-customer/adding-cust/adding-cust.component';\r\nimport { EditCustComponent } from './add-customer/edit-cust/edit-cust.component';\r\nimport { IdentifyHazardsComponent } from './identify-hazards/identify-hazards.component';\r\nimport { ContrAndActReqComponent } from './contr-and-act-req/contr-and-act-req.component';\r\nimport { AddHazardComponent } from './identify-hazards/add-hazard/add-hazard.component';\r\nimport { EditHazardComponent } from './identify-hazards/edit-hazard/edit-hazard.component';\r\nimport { AddContrActComponent } from './contr-and-act-req/add-contr-act/add-contr-act.component';\r\nimport { EditContActComponent } from './contr-and-act-req/edit-cont-act/edit-cont-act.component';\r\nimport { UploadBulkDataComponent } from './upload-bulk-data/upload-bulk-data.component';\r\nimport { ProjectManagerComponent } from './project-manager/project-manager.component';\r\nimport { AddEditProjMangComponent } from './project-manager/add-edit-proj-mang/add-edit-proj-mang.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SiteInfoComponent,\r\n    AddSiteInfoComponent,\r\n    JobTaskComponent,\r\n    HighRiskConComponent,\r\n    PpeSelectComponent,\r\n    LicenceAndQualComponent,\r\n    AddCustomerComponent,\r\n    AddHighRiskConstructionComponent,\r\n    EditHighRiskConstructionComponent,AddJobTaskComponent, AddPPEComponent, EditTaskComponent, EditPPEComponent, EditLicenceComponent, AddLicenceComponent, LicenceCatComponent, AddLicenceCatComponent, EditLicenceCatComponent, CodeOfPractComponent, AddCOPComponent, EditCOPComponent, AddSiteComponent, EditSiteComponent, AddingCustComponent, EditCustComponent, IdentifyHazardsComponent, ContrAndActReqComponent, AddHazardComponent, EditHazardComponent, AddContrActComponent, EditContActComponent, UploadBulkDataComponent, ProjectManagerComponent, AddEditProjMangComponent\r\n  ],\r\n\r\n  imports: [\r\n    CommonModule,\r\n    SiteInfoRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n  ],\r\n})\r\nexport class SiteInfoModule {}\r\n\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\n@Component({\r\n  selector: 'app-add-edit-proj-mang',\r\n  templateUrl: './add-edit-proj-mang.component.html',\r\n  styleUrls: ['./add-edit-proj-mang.component.scss']\r\n})\r\nexport class AddEditProjMangComponent implements OnInit {\r\n\r\n  editTitle: FormGroup;\r\n  dataRec: any;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    public dialogRef: MatDialogRef<AddEditProjMangComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.dataRec = data;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.editTitle = this.fb.group({\r\n      title: [this.dataRec.title, Validators.required],\r\n    });\r\n  }\r\n  onFormSubmit() {\r\n    let data = {\r\n      title: this.editTitle.get('title').value,\r\n      componentId: this.dataRec.componentId,\r\n    };\r\n    this.logicalFormInfo\r\n      .updateProjectMang(data, this.dataRec._id)\r\n      .subscribe((resData) => {\r\n        console.log('projectManager', resData);\r\n\r\n        this.dialogRef.close('true');\r\n        Swal.fire({\r\n          title: 'Project Manager Edited successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });\r\n      });\r\n  }\r\n  addForm() {\r\n    let data = {\r\n      title: this.editTitle.get('title').value,\r\n    };\r\n    this.logicalFormInfo.addProjectMang(data).subscribe((resData) => {\r\n      console.log('projectManager', resData);\r\n\r\n      this.dialogRef.close('true');\r\n    \r\n        Swal.fire({\r\n          title: 'Project Manager added successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });\r\n      \r\n    });\r\n  }\r\n  closeDialog() {\r\n    this.dialogRef.close('false');\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"editTitle\" >\r\n    <h3 *ngIf=\"!dataRec\">Add Project Manager</h3>\r\n    <h3 *ngIf=\"dataRec\">Edit Project Manager</h3>\r\n    <mat-form-field appearance=\"legacy\"\r\n    class=\"example-full-width\" style=\"width: 498px;\">\r\n    <!-- <mat-label >Add Licence Category</mat-label> -->\r\n    <!-- <mat-label >Edit Licence Category</mat-label> -->\r\n    <input matInput  formControlName=\"title\" style=\"text-transform: capitalize !important;\">\r\n    </mat-form-field>\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-2 offset-8 \">\r\n            <button mat-raised-button (click)=\"closeDialog()\">Close</button>\r\n        </div>\r\n        <div class=\"col-sm-2  \">\r\n            <button mat-raised-button *ngIf=\"dataRec\" [disabled]=\"!editTitle.valid\"(click)=\"onFormSubmit()\">Update</button>\r\n            <button mat-raised-button  *ngIf=\"!dataRec\"  [disabled]=\"!editTitle.valid\"(click)=\"addForm()\">Add</button>\r\n        </div>\r\n    </div>\r\n</form>   \r\n\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-task',\r\n  templateUrl: './edit-task.component.html',\r\n  styleUrls: ['./edit-task.component.scss'],\r\n})\r\nexport class EditTaskComponent implements OnInit {\r\n  editTitle: FormGroup;\r\n  dataRec: any;\r\n\r\n\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    public dialogRef: MatDialogRef<EditTaskComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.dataRec = data;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    console.log(\"this.dataRec\",this.dataRec);\r\n    \r\n    this.editTitle = this.fb.group({\r\n      title: [this.dataRec.title, Validators.required],\r\n    });\r\n  }\r\n  onFormSubmit() {\r\n     \r\n    let data={\r\n      title :this.editTitle.get('title').value,\r\n      PPE:this.dataRec.PPE,\r\n      codeOfPractice:this.dataRec.codeOfPractice,\r\n      licence:this.dataRec.licence,\r\n      risk:this.dataRec.risk,\r\n    }\r\n    this.logicalFormInfo\r\n      .updateJobTask(data, this.dataRec._id)\r\n      .subscribe((resData) => {\r\n        console.log('submodulesData', resData);\r\n\r\n        this.dialogRef.close('true');\r\n        Swal.fire({\r\n          title: 'Parameter Edited successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });  \r\n          });\r\n  }\r\n  closeDialog(){\r\n    this.dialogRef.close('false');\r\n\r\n  }\r\n}\r\n","<form [formGroup]=\"editTitle\" >\r\n    <h3>Edit Job Task</h3>\r\n    <mat-form-field appearance=\"legacy\"\r\n    class=\"example-full-width\" style=\"width: 498px;\">\r\n    <!-- <mat-label>Edit Job Task</mat-label> -->\r\n    <input matInput  formControlName=\"title\" style=\"text-transform: capitalize !important;\">\r\n    </mat-form-field>\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-2 offset-8 \">\r\n            <button mat-raised-button (click)=\"closeDialog()\">Close</button>\r\n        </div>\r\n        <div class=\"col-sm-2  \">\r\n            <button mat-raised-button  [disabled]=\"!editTitle.valid\"(click)=\"onFormSubmit()\">Update</button>\r\n        </div>\r\n    </div>\r\n</form>   \r\n\r\n","import { MatDialog } from '@angular/material/dialog';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { AfterViewInit, ViewChild } from '@angular/core';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { SetTitleService } from 'src/app/utils/services/set-title.service';\r\nimport { EditHazardComponent } from './edit-hazard/edit-hazard.component';\r\n@Component({\r\n  selector: 'app-identify-hazards',\r\n  templateUrl: './identify-hazards.component.html',\r\n  styleUrls: ['./identify-hazards.component.scss']\r\n})\r\nexport class IdentifyHazardsComponent implements OnInit {\r\n\r\n  mode: any;\r\n  jobTaskData: any = [];\r\n  ELEMENT_DATA = [];\r\n  /////////////mat table////////////////\r\n  displayedColumns: string[] = ['index', 'title','edit','delete'];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n  /////////////mat table end////////////////\r\n\r\n  constructor(\r\n\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    private dialog:MatDialog,\r\n    private setTitle:SetTitleService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getAllHazards();\r\n    this.setTitle.setTitle('WHS-PPE List');\r\n\r\n  }\r\n\r\n  getAllHazards() {\r\n    this.logicalFormInfo.getAllHazards().subscribe((res:any) => {\r\n      console.log('getAllHazards=>', res);\r\n      let data = res.data;\r\n      data.forEach((element, index) => {\r\n        element.index = index + 1; //adding index\r\n      });\r\n\r\n      this.ELEMENT_DATA = data;\r\n      this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n      this.dataSource.paginator = this.paginator;\r\n      console.log('this.ELEMENT_DATA', this.ELEMENT_DATA);\r\n\r\n      //  this.task = res.data.subComponents;\r\n    });\r\n  }\r\n  edit(element){\r\n    const dialogRef = this.dialog.open(EditHazardComponent, {\r\n      width: \"550px\",\r\n      data: element,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if ((result == \"true\")) {\r\n        this.getAllHazards();\r\n      }\r\n      console.log(\"The dialog was closed\");\r\n    });\r\n  }\r\n  delete(item) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: `Do you want to delete \"${item.title}\"?`,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#00B96F',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Delete!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.logicalFormInfo\r\n        .deleteHazards(item._id)\r\n        .subscribe((res) => {\r\n          Swal.fire({\r\n            title: 'Parameter Deleted successfully',\r\n            showConfirmButton: false,\r\n            timer: 1200,\r\n          });\r\n          console.log('deleted res', res);\r\n          this.getAllHazards();\r\n            \r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<h2 class=\"ml-2\"> Identify Hazards List</h2>\r\n    <div class=\"col ml-2 mb-2\">\r\n      \r\n      <button  class=\"btn btn-outline-primary mt-1 mr-2 float-right\"[routerLink]=\"['/admin/siteInfo/addHazards']\">\r\n        <i class=\"fas fa-folder-plus mr-2\"></i>Add Hazard \r\n      </button>\r\n    </div>\r\n    <div class=\"mat-elevation-z8 ml-2\">\r\n      <table mat-table [dataSource]=\"dataSource\">\r\n    \r\n        <!-- Position Column -->\r\n        <ng-container matColumnDef=\"index\">\r\n          <th mat-header-cell *matHeaderCellDef> No. </th>\r\n          <td mat-cell *matCellDef=\"let element\">{{element.index}}</td>\r\n        </ng-container>\r\n    \r\n        <!-- Name Column -->\r\n       \r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"title\">\r\n      <th mat-header-cell *matHeaderCellDef> Name </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.title}} </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"edit\">\r\n        <th mat-header-cell *matHeaderCellDef> Edit </th>\r\n        <td mat-cell *matCellDef=\"let element\"(click)=\"edit(element)\"> <i class=\"fas fa-pencil-alt \"></i> \r\n        </td>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"delete\">\r\n        <th mat-header-cell *matHeaderCellDef> Delete </th>\r\n        <td mat-cell *matCellDef=\"let element\"(click)=\"delete(element)\"> <i class=\"fas fa-trash \"></i> \r\n        </td>\r\n      </ng-container>\r\n    \r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n      </table>\r\n    \r\n      <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\"\r\n                     showFirstLastButtons \r\n                     aria-label=\"Select page of periodic elements\">\r\n      </mat-paginator>\r\n    </div>\r\n    \r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\n@Component({\r\n  selector: 'app-edit-licence-cat',\r\n  templateUrl: './edit-licence-cat.component.html',\r\n  styleUrls: ['./edit-licence-cat.component.scss'],\r\n})\r\nexport class EditLicenceCatComponent implements OnInit {\r\n  editTitle: FormGroup;\r\n  dataRec: any;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    public dialogRef: MatDialogRef<EditLicenceCatComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.dataRec = data;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.editTitle = this.fb.group({\r\n      title: [this.dataRec.title, Validators.required],\r\n    });\r\n  }\r\n  onFormSubmit() {\r\n    let data = {\r\n      title: this.editTitle.get('title').value,\r\n      componentId: this.dataRec.componentId,\r\n    };\r\n    this.logicalFormInfo\r\n      .updateLicenceCat(data, this.dataRec._id)\r\n      .subscribe((resData) => {\r\n        console.log('submodulesData', resData);\r\n\r\n        this.dialogRef.close('true');\r\n        Swal.fire({\r\n          title: 'Category Edited successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });\r\n      });\r\n  }\r\n  addForm() {\r\n    let data = {\r\n      title: this.editTitle.get('title').value,\r\n    };\r\n    this.logicalFormInfo.addLicenceCat(data).subscribe((resData) => {\r\n      console.log('category', resData);\r\n\r\n      this.dialogRef.close('true');\r\n      if (this.dataRec) {\r\n        Swal.fire({\r\n          title: 'Category Edited successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });\r\n      } else {\r\n        Swal.fire({\r\n          title: 'Category Added successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });\r\n      }\r\n    });\r\n  }\r\n  closeDialog() {\r\n    this.dialogRef.close('false');\r\n  }\r\n}\r\n","<form [formGroup]=\"editTitle\" >\r\n    <h3 *ngIf=\"!dataRec\">Add Licence Category</h3>\r\n    <h3 *ngIf=\"dataRec\">Edit Licence Category</h3>\r\n    <mat-form-field appearance=\"legacy\"\r\n    class=\"example-full-width\" style=\"width: 498px;\">\r\n    <!-- <mat-label >Add Licence Category</mat-label> -->\r\n    <!-- <mat-label >Edit Licence Category</mat-label> -->\r\n    <input matInput  formControlName=\"title\" style=\"text-transform: capitalize !important;\">\r\n    </mat-form-field>\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-2 offset-8 \">\r\n            <button mat-raised-button (click)=\"closeDialog()\">Close</button>\r\n        </div>\r\n        <div class=\"col-sm-2  \">\r\n            <button mat-raised-button *ngIf=\"dataRec\" [disabled]=\"!editTitle.valid\"(click)=\"onFormSubmit()\">Update</button>\r\n            <button mat-raised-button  *ngIf=\"!dataRec\"  [disabled]=\"!editTitle.valid\"(click)=\"addForm()\">Add</button>\r\n        </div>\r\n    </div>\r\n</form>   \r\n\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormArray, FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\n@Component({\r\n  selector: 'app-edit-cont-act',\r\n  templateUrl: './edit-cont-act.component.html',\r\n  styleUrls: ['./edit-cont-act.component.scss'],\r\n})\r\nexport class EditContActComponent implements OnInit {\r\n  editTitle: FormGroup;\r\n  dataRec: any;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    public dialogRef: MatDialogRef<EditContActComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.dataRec = data;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    console.log('this.dataRec', this.dataRec);\r\n\r\n    this.editTitle = this.fb.group({\r\n      title: [this.dataRec.title, Validators.required],\r\n    });\r\n  }\r\n  onFormSubmit() {\r\n    let data = {\r\n      title: this.editTitle.get('title').value,\r\n    };\r\n    this.logicalFormInfo\r\n      .updateContrlActReq(data, this.dataRec._id)\r\n      .subscribe((resData) => {\r\n        this.dialogRef.close('true');\r\n        Swal.fire({\r\n          title: 'Parameter Edited successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });\r\n      });\r\n  }\r\n  closeDialog() {\r\n    this.dialogRef.close('false');\r\n  }\r\n}\r\n","<form [formGroup]=\"editTitle\" >\r\n    <h3>Edit High Risk</h3>\r\n    <mat-form-field appearance=\"legacy\"\r\n    class=\"example-full-width\" style=\"width: 498px;\">\r\n    <!-- <mat-label>Edit Job Task</mat-label> -->\r\n    <input matInput   style=\"text-transform: capitalize !important;\"formControlName=\"title\">\r\n    </mat-form-field>\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-2 offset-8 \">\r\n            <button mat-raised-button (click)=\"closeDialog()\">Close</button>\r\n        </div>\r\n        <div class=\"col-sm-2  \">\r\n            <button mat-raised-button  [disabled]=\"!editTitle.valid\"(click)=\"onFormSubmit()\">Update</button>\r\n        </div>\r\n    </div>\r\n  </form>   \r\n  \r\n  ","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, FormArray } from '@angular/forms';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-upload-bulk-data',\r\n  templateUrl: './upload-bulk-data.component.html',\r\n  styleUrls: ['./upload-bulk-data.component.scss'],\r\n})\r\nexport class UploadBulkDataComponent implements OnInit {\r\n  uploadData!: FormGroup;\r\n  formData: any;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private router: Router,\r\n    private logicalFormInfo: LogicalFormInfoService\r\n  ) {\r\n    this.uploadData = this.fb.group({\r\n      // mode:\"JobTask\",\r\n      arrObj: this.fb.array([]),\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    for (let i = 0; i < 10; i++) {\r\n      this.addAction();\r\n    }\r\n  }\r\n  addAction() {\r\n    {\r\n      this.add().push(this.newAction());\r\n    }\r\n  }\r\n  add(): FormArray {\r\n    return this.uploadData.get('arrObj') as FormArray;\r\n  }\r\n  newAction(): FormGroup {\r\n    return this.fb.group({\r\n      task: [''],\r\n      highRisk: [''],\r\n      ppe: [''],\r\n      licence: [''],\r\n      identifyHaz: [''],\r\n      contrlAct: [''],\r\n    });\r\n  }\r\n\r\n  removeSafetyModule() {\r\n    const item = <FormArray>this.uploadData.controls['arrObj'];\r\n    if (item.length > 1) {\r\n      item.removeAt(item.length - 1);\r\n    }\r\n  }\r\n  uploadAllData() {\r\n    const item = <FormArray>this.uploadData.controls['arrObj'];\r\n    let taskData = {\r\n      arrObj: []\r\n    };\r\n    let riskData = {\r\n      arrObj: []\r\n    };\r\n    let ppeData = {\r\n      arrObj: []\r\n    };\r\n    let licenceData = {\r\n      arrObj: []\r\n    };\r\n    let identifyHazData = {\r\n      arrObj: []\r\n    };\r\n    let contrlActData = {\r\n      arrObj: []\r\n    };\r\n    for (let i = 0; i < item.length; i++) {\r\n      if(item.controls[i].get('task').value){\r\n        taskData.arrObj.push(item.controls[i].get('task').value)\r\n      }\r\n      if(item.controls[i].get('highRisk').value){\r\n        riskData.arrObj.push(item.controls[i].get('highRisk').value)\r\n      }\r\n      if(item.controls[i].get('ppe').value){\r\n        ppeData.arrObj.push(item.controls[i].get('ppe').value)\r\n      }\r\n      if(item.controls[i].get('licence').value){\r\n        licenceData.arrObj.push(item.controls[i].get('licence').value)\r\n      }\r\n      if(item.controls[i].get('identifyHaz').value){\r\n        identifyHazData.arrObj.push(item.controls[i].get('identifyHaz').value)\r\n      }\r\n      if(item.controls[i].get('contrlAct').value){\r\n        contrlActData.arrObj.push(item.controls[i].get('contrlAct').value)\r\n      }\r\n\r\n      // console.log(item.controls[i].get('highRisk').value);\r\n      // console.log(item.controls[i].get('ppe').value);\r\n      // console.log(item.controls[i].get('licence').value);\r\n      // console.log(item.controls[i].get('identifyHaz').value);\r\n      // console.log(item.controls[i].get('contrlAct').value);\r\n    }\r\n    \r\n    console.log(taskData,\r\n      riskData,\r\n      ppeData,\r\n      licenceData,\r\n      identifyHazData,\r\n      contrlActData);\r\n  }\r\n}\r\n","<h2 class=\"ml-2\">Upload All Data</h2>\r\n<table class=\"table table-bordered\">\r\n    <thead>\r\n      <tr>\r\n        <th scope=\"col\">No</th>\r\n        <th scope=\"col\">Task</th>\r\n        <th scope=\"col\">High Risk</th>\r\n        <th scope=\"col\">PPE</th>\r\n        <th scope=\"col\">Licence</th>\r\n        <th scope=\"col\">Indentify Hazards</th>\r\n        <th scope=\"col\">Controls and action required</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody [formGroup]=\"uploadData\">\r\n        <ng-container formArrayName=\"arrObj\">\r\n\r\n      <tr *ngFor=\"let control of add().controls; let i = index\"\r\n      [formGroupName]=\"i\">\r\n        <td>{{i+1}}</td>\r\n        <td>\r\n            <input\r\n            type=\"text\"\r\n            formControlName=\"task\"\r\n            class=\"form-control sign\"\r\n            id=\"name\"\r\n          />\r\n        </td>\r\n        <td>\r\n            <input\r\n            type=\"text\"\r\n            formControlName=\"highRisk\"\r\n            class=\"form-control sign\"\r\n            id=\"name\"\r\n          />\r\n        </td>\r\n        <td>\r\n            <input\r\n            type=\"text\"\r\n            formControlName=\"ppe\"\r\n            class=\"form-control sign\"\r\n            id=\"name\"\r\n          />\r\n        </td>\r\n        <td>\r\n            <input\r\n            type=\"text\"\r\n            formControlName=\"licence\"\r\n            class=\"form-control sign\"\r\n            id=\"name\"\r\n          />\r\n        </td>\r\n        <td>\r\n            <input\r\n            type=\"text\"\r\n            formControlName=\"identifyHaz\"\r\n            class=\"form-control sign\"\r\n            id=\"name\"\r\n          />\r\n        </td>\r\n        <td>\r\n            <input\r\n            type=\"text\"\r\n            formControlName=\"contrlAct\"\r\n            class=\"form-control sign\"\r\n            id=\"name\"\r\n          />\r\n        </td>\r\n     \r\n      </tr>\r\n    </ng-container>\r\n     \r\n    </tbody>\r\n  </table>\r\n  <div class=\"col mt-2 text-center \">\r\n    <span class=\"material-icons \" (click)=\"addAction()\"\r\n      >add_circle_outline\r\n    </span>\r\n    <span class=\"material-icons\" (click)=\"removeSafetyModule()\">\r\n      remove_circle_outline\r\n    </span>\r\n  </div>\r\n  <div class=\"col\">\r\n    <!-- <span class=\"material-icons\" (click)=\"removeSafetyModule(i)\">\r\n      remove_circle_outline\r\n    </span> -->\r\n    <button class=\"btn btn-primary\"(click)=\"uploadAllData()\">Upload</button>\r\n  </div>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { SetTitleService } from 'src/app/utils/services/set-title.service';\r\nimport { AddingCustComponent } from './adding-cust/adding-cust.component';\r\nimport { EditCustComponent } from './edit-cust/edit-cust.component';\r\n\r\n@Component({\r\n  selector: 'app-add-customer',\r\n  templateUrl: './add-customer.component.html',\r\n  styleUrls: ['./add-customer.component.scss']\r\n})\r\nexport class AddCustomerComponent implements OnInit {\r\n  ELEMENT_DATA = [];\r\n  displayedColumns: string[] = ['index', 'siteName','siteForemen','streetAddress','Suburb','State', 'edit', 'delete'];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  constructor( private setTitle: SetTitleService, private dialog: MatDialog) { }\r\n\r\n  ngOnInit(): void {\r\n    this.setTitle.setTitle('WHS-Add Customer');\r\n  }\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  getAllJobTask() {\r\n    // this.logicalFormInfo.getAllJobtask().subscribe((res: any) => {\r\n    //   console.log('jobTaskDetails=>', res);\r\n    //   // this.jobTaskData = res.data[0].subComponents;\r\n    //   let data = res.data\r\n    //   data.forEach((element, index) => {\r\n    //     element.index = index + 1; //adding index\r\n    //   });\r\n\r\n    //   this.ELEMENT_DATA = data;\r\n    //   this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n    //   this.dataSource.paginator = this.paginator;\r\n\r\n    //   //  this.task = res.data.subComponents;\r\n    // });\r\n\r\n  }\r\n\r\n  openDialog(id) {\r\n\t\tlet dialogRef = this.dialog.open(AddingCustComponent, {\r\n\t\t\tdata: {\r\n\t\t\t\taction: \"new\",\r\n\t\t\t\tuserId: id,\r\n\t\t\t},\r\n\t\t});\r\n\t\tdialogRef.afterClosed().subscribe((result) => {\r\n\t\t\tconsole.log(\"CustomerInfoComponent -> openDialog -> result\", result);\r\n\t\t\t\r\n\t\t\tconsole.log(\"The dialog was closed\");\r\n\t\t});\r\n\t}\r\n  edit(element) {\r\n    const dialogRef = this.dialog.open(EditCustComponent, {\r\n      width: \"550px\",\r\n      data: element,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if ((result == \"true\")) {\r\n        this.getAllJobTask();\r\n      }\r\n      console.log(\"The dialog was closed\");\r\n    });\r\n  }\r\n  delete(item) {\r\n    // Swal.fire({\r\n    //   title: 'Are you sure?',\r\n    //   text: `Do you want to delete \"${item.title}\"?`,\r\n    //   icon: 'warning',\r\n    //   showCancelButton: true,\r\n    //   confirmButtonColor: '#00B96F',\r\n    //   cancelButtonColor: '#d33',\r\n    //   confirmButtonText: 'Yes, Delete!',\r\n    // }).then((result) => {\r\n    //   if (result.value) {\r\n    //     this.logicalFormInfo\r\n    //       .deleteJobTask(item._id)\r\n    //       .subscribe((res) => {\r\n    //         Swal.fire({\r\n    //           title: 'Parameter Deleted successfully',\r\n    //           showConfirmButton: false,\r\n    //           timer: 1200,\r\n    //         }); console.log('deleted res', res);\r\n    //         this.getAllJobTask();\r\n\r\n    //       });\r\n    //   }\r\n    // });\r\n  }\r\n}\r\n","\r\n \r\n\r\n<h2>Customer List</h2>\r\n<div class=\"col ml-2 mb-2\">\r\n  \r\n  <div class=\"col-sm-9\" style=\"display: flex; justify-content: flex-end\">\r\n    <span class=\"material-icons\" (click)=\"openDialog('abcd')\" style=\"cursor: pointer\">\r\n        control_point\r\n    </span>\r\n</div>\r\n</div>\r\n<div class=\"mat-elevation-z8 ml-2\">\r\n  <table mat-table [dataSource]=\"dataSource\">\r\n\r\n    <!-- Position Column -->\r\n    <ng-container matColumnDef=\"index\">\r\n      <th mat-header-cell *matHeaderCellDef> No. </th>\r\n      <td mat-cell *matCellDef=\"let element\">{{element.index}}</td>\r\n    </ng-container>\r\n\r\n    <!-- Name Column -->\r\n   \r\n<!-- Name Column -->\r\n<ng-container matColumnDef=\"siteName\">\r\n  <th mat-header-cell *matHeaderCellDef> Site Name </th>\r\n  <td mat-cell *matCellDef=\"let element\"> {{element.siteName}} </td>\r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"siteForemen\">\r\n  <th mat-header-cell *matHeaderCellDef> Site Foremen </th>\r\n  <td mat-cell *matCellDef=\"let element\"> {{element.siteForemen}} </td>\r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"streetAddress\">\r\n  <th mat-header-cell *matHeaderCellDef> Street Address </th>\r\n  <td mat-cell *matCellDef=\"let element\"> {{element.streetAddress}} </td>\r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"Suburb\">\r\n  <th mat-header-cell *matHeaderCellDef> Suburb </th>\r\n  <td mat-cell *matCellDef=\"let element\"> {{element.Suburb}} </td>\r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"State\">\r\n  <th mat-header-cell *matHeaderCellDef> State </th>\r\n  <td mat-cell *matCellDef=\"let element\"> {{element.State}} </td>\r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"edit\">\r\n  <th mat-header-cell *matHeaderCellDef> Edit </th>\r\n  <td mat-cell *matCellDef=\"let element\"(click)=\"edit(element)\"> <i class=\"fas fa-pencil-alt \"></i> \r\n  </td>\r\n</ng-container>\r\n<ng-container matColumnDef=\"delete\">\r\n  <th mat-header-cell *matHeaderCellDef> Delete </th>\r\n  <td mat-cell *matCellDef=\"let element\"(click)=\"delete(element)\"> <i class=\"fas fa-trash \"></i> \r\n  </td>\r\n</ng-container>\r\n\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n  </table>\r\n\r\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\"\r\n                 showFirstLastButtons \r\n                 aria-label=\"Select page of periodic elements\">\r\n  </mat-paginator>\r\n</div>\r\n ","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n  FormArray,\r\n  \r\n} from '@angular/forms';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-add-cop',\r\n  templateUrl: './add-cop.component.html',\r\n  styleUrls: ['./add-cop.component.scss']\r\n})\r\nexport class AddCOPComponent implements OnInit {\r\n\r\n  codeOfPractFG!: FormGroup;\r\n  formData: any;;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private router: Router,\r\n    private logicalFormInfo:LogicalFormInfoService\r\n  ) { \r\n    this.codeOfPractFG=this.fb.group({\r\n     // mode:\"JobTask\",\r\n      arrObj: this.fb.array([]),\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.addAction();\r\n  }\r\n  addAction() {\r\n    {\r\n      this.add().push(this.newAction());\r\n    }\r\n  }\r\n  add(): FormArray {\r\n    return this.codeOfPractFG.get('arrObj') as FormArray;\r\n  }\r\n  newAction(): FormGroup {\r\n    return this.fb.group({\r\n     \r\n      title: ['', Validators.required],\r\n    });\r\n  }\r\n  \r\n  removeSafetyModule(i) {\r\n    const item = <FormArray>this.codeOfPractFG.controls['arrObj'];\r\n    if (item.length > 1) {\r\n      item.removeAt(i);\r\n    \r\n    }\r\n  }\r\n  onFormSubmit() {\r\n    let data={\r\n      arrObj:this.codeOfPractFG.get('arrObj').value\r\n    }\r\n    this.logicalFormInfo.addMultipleCOP(data).subscribe((data) => {\r\n      console.log('codeOfPractice=>', data);\r\n\r\n      this.router.navigate(['/admin/siteInfo/codeOfpract']);      \r\n    },(err)=>{console.error(err);} \r\n  \r\n    );\r\n    \r\n  }\r\n}\r\n","<div class=\"btn btn-outline-primary\" [routerLink]=\"['/admin/siteInfo/codeOfpract']\">\r\n    <i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\r\n  </div>\r\n  <div class=\"container px-4 py-4 bg-white\">\r\n    <form [formGroup]=\"codeOfPractFG\" (ngSubmit)=\"onFormSubmit()\">\r\n      <h2 class=\"text-center\">Add Code Of Practice</h2>\r\n      <br />\r\n      <hr />\r\n      <ng-container formArrayName=\"arrObj\">\r\n        <ng-container\r\n          *ngFor=\"let control of add().controls; let i = index\"\r\n          [formGroupName]=\"i\"\r\n        >\r\n          <div class=\"row justify-content-center\">\r\n            <div class=\"mr-1 mt-2\">\r\n              <span \r\n                >{{i+1}}.\r\n              </span>\r\n            </div>\r\n            <div class=\"col-8\">\r\n              <input\r\n                type=\"text\"\r\n                formControlName=\"title\"\r\n                class=\"form-control sign\"\r\n                id=\"name\"\r\n              />\r\n            </div>\r\n            <div class=\"col-1 mt-2\">\r\n              <span class=\"material-icons\" (click)=\"addAction()\"\r\n                >add_circle_outline\r\n              </span>\r\n            </div>\r\n            <div class=\"col-1 mt-2\">\r\n              <span class=\"material-icons\" (click)=\"removeSafetyModule(i)\">\r\n                remove_circle_outline\r\n              </span>\r\n            </div>\r\n          </div>\r\n  \r\n          <hr />\r\n        </ng-container>\r\n      </ng-container>\r\n      <br />\r\n  \r\n      <div class=\"col-md-2\">\r\n        <button type=\"submit\" class=\"btn btn-primary\"[disabled]=\"codeOfPractFG.get('arrObj').invalid\">Add</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  ","import { MatDialog } from '@angular/material/dialog';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { AfterViewInit, ViewChild } from '@angular/core';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { EditPPEComponent } from './edit-ppe/edit-ppe.component';\r\nimport { SetTitleService } from 'src/app/utils/services/set-title.service';\r\n@Component({\r\n  selector: 'app-ppe-select',\r\n  templateUrl: './ppe-select.component.html',\r\n  styleUrls: ['./ppe-select.component.scss'],\r\n})\r\nexport class PpeSelectComponent implements AfterViewInit,OnInit {\r\n  jobTaskData: any = [];\r\n  ELEMENT_DATA = [];\r\n  /////////////mat table////////////////\r\n  displayedColumns: string[] = ['index', 'title','edit','delete'];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n  /////////////mat table end////////////////\r\n\r\n  constructor(\r\n\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    private dialog:MatDialog,\r\n    private setTitle:SetTitleService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getAllPPEs();\r\n    this.setTitle.setTitle('WHS-PPE List');\r\n\r\n  }\r\n\r\n  getAllPPEs() {\r\n    this.logicalFormInfo.getAllPPE().subscribe((res:any) => {\r\n      console.log('PPEAll=>', res);\r\n      let data = res.data;\r\n      data.forEach((element, index) => {\r\n        element.index = index + 1; //adding index\r\n      });\r\n\r\n      this.ELEMENT_DATA = data;\r\n      this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n      this.dataSource.paginator = this.paginator;\r\n      console.log('this.ELEMENT_DATA', this.ELEMENT_DATA);\r\n\r\n      //  this.task = res.data.subComponents;\r\n    });\r\n  }\r\n  edit(element){\r\n    const dialogRef = this.dialog.open(EditPPEComponent, {\r\n      width: \"550px\",\r\n      data: element,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if ((result == \"true\")) {\r\n        this.getAllPPEs();\r\n      }\r\n      console.log(\"The dialog was closed\");\r\n    });\r\n  }\r\n  delete(item) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: `Do you want to delete \"${item.title}\"?`,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#00B96F',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Delete!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.logicalFormInfo\r\n        .deletePPE(item._id)\r\n        .subscribe((res) => {\r\n          Swal.fire({\r\n            title: 'Parameter Deleted successfully',\r\n            showConfirmButton: false,\r\n            timer: 1200,\r\n          });\r\n          console.log('deleted res', res);\r\n          this.getAllPPEs();\r\n            \r\n        });\r\n      }\r\n    });\r\n  }\r\n}\r\n","<h2 class=\"ml-2\"> PPE List</h2>\r\n    <div class=\"col ml-2 mb-2\">\r\n      \r\n      <button  class=\"btn btn-outline-primary mt-1 mr-2 float-right\"[routerLink]=\"['/admin/siteInfo/addPPE']\">\r\n        <i class=\"fas fa-folder-plus mr-2\"></i>Add PPE \r\n      </button>\r\n    </div>\r\n    <div class=\"mat-elevation-z8 ml-2\">\r\n      <table mat-table [dataSource]=\"dataSource\">\r\n    \r\n        <!-- Position Column -->\r\n        <ng-container matColumnDef=\"index\">\r\n          <th mat-header-cell *matHeaderCellDef> No. </th>\r\n          <td mat-cell *matCellDef=\"let element\">{{element.index}}</td>\r\n        </ng-container>\r\n    \r\n        <!-- Name Column -->\r\n       \r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"title\">\r\n      <th mat-header-cell *matHeaderCellDef> Name </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.title}} </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"edit\">\r\n        <th mat-header-cell *matHeaderCellDef> Edit </th>\r\n        <td mat-cell *matCellDef=\"let element\"(click)=\"edit(element)\"> <i class=\"fas fa-pencil-alt \"></i> \r\n        </td>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"delete\">\r\n        <th mat-header-cell *matHeaderCellDef> Delete </th>\r\n        <td mat-cell *matCellDef=\"let element\"(click)=\"delete(element)\"> <i class=\"fas fa-trash \"></i> \r\n        </td>\r\n      </ng-container>\r\n    \r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n      </table>\r\n    \r\n      <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\"\r\n                     showFirstLastButtons \r\n                     aria-label=\"Select page of periodic elements\">\r\n      </mat-paginator>\r\n    </div>\r\n    \r\n","import { EditLicenceCatComponent } from './edit-licence-cat/edit-licence-cat.component';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport {  ViewChild } from '@angular/core';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table'\r\n@Component({\r\n  selector: 'app-licence-cat',\r\n  templateUrl: './licence-cat.component.html',\r\n  styleUrls: ['./licence-cat.component.scss']\r\n})\r\nexport class LicenceCatComponent implements OnInit {\r\n\r\n  mode: any;\r\n  jobTaskData: any = [];\r\n  ELEMENT_DATA = [];\r\n  /////////////mat table////////////////\r\n  displayedColumns: string[] = ['index', 'title' ,'edit','delete'];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n  /////////////mat table end////////////////\r\n\r\n  constructor(private logicalFormInfo: LogicalFormInfoService,private dialog:MatDialog) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getAllLicenceCat();\r\n  }\r\n\r\n  getAllLicenceCat() {\r\n    this.logicalFormInfo.getAllLicenceCat().subscribe((res) => {\r\n      console.log('getAllLicenceCat=>', res);\r\n      // this.jobTaskData = res.data[0].subComponents;\r\n      let data = res.data;\r\n      data.forEach((element, index) => {\r\n        element.index = index + 1; //adding index\r\n      });\r\n\r\n      this.ELEMENT_DATA = data;\r\n      this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n      this.dataSource.paginator = this.paginator;\r\n\r\n      //  this.task = res.data.subComponents;\r\n    });\r\n \r\n  }\r\n  \r\n  edit(element){\r\n    const dialogRef = this.dialog.open(EditLicenceCatComponent, {\r\n      width: \"550px\",\r\n      data: element,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if ((result == \"true\")) {\r\n        this.getAllLicenceCat();\r\n      }\r\n      console.log(\"The dialog was closed\");\r\n    });\r\n  }\r\n\r\n  delete(item) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: `Do you want to delete \"${item.title}\"?`,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#00B96F',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Delete!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.logicalFormInfo\r\n        .deleteLicenceCat(item._id)\r\n        .subscribe((res) => {\r\n          Swal.fire({\r\n            title: 'Category Deleted successfully',\r\n            showConfirmButton: false,\r\n            timer: 1200,\r\n          });\r\n          console.log('deleted res', res);\r\n          this.getAllLicenceCat();\r\n            \r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","\r\n<h2 class=\"ml-2\"> Licence Category List</h2>\r\n<div class=\"col ml-2 mb-2\">\r\n  \r\n  <button  class=\"btn btn-outline-primary mt-1 mr-2 float-right\"(click)=\"edit('')\">\r\n    <i class=\"fas fa-folder-plus mr-2\"></i>Add Category \r\n  </button>\r\n</div>\r\n<div class=\"mat-elevation-z8 ml-2\">\r\n  <table mat-table [dataSource]=\"dataSource\">\r\n\r\n    <!-- Position Column -->\r\n    <ng-container matColumnDef=\"index\">\r\n      <th mat-header-cell *matHeaderCellDef> No. </th>\r\n      <td mat-cell *matCellDef=\"let element\">{{element.index}}</td>\r\n    </ng-container>\r\n\r\n    <!-- Name Column -->\r\n   \r\n<!-- Name Column -->\r\n<ng-container matColumnDef=\"title\">\r\n  <th mat-header-cell *matHeaderCellDef> Name </th>\r\n  <td mat-cell *matCellDef=\"let element\"> {{element.title}} </td>\r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"edit\">\r\n  <th mat-header-cell *matHeaderCellDef> Edit </th>\r\n  <td mat-cell *matCellDef=\"let element\"(click)=\"edit(element)\"> <i class=\"fas fa-pencil-alt \"></i> \r\n  </td>\r\n</ng-container>\r\n<ng-container matColumnDef=\"delete\">\r\n  <th mat-header-cell *matHeaderCellDef> Delete </th>\r\n  <td mat-cell *matCellDef=\"let element\"(click)=\"delete(element)\"> <i class=\"fas fa-trash \"></i> \r\n  </td>\r\n</ng-container>\r\n\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n  </table>\r\n\r\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\"\r\n                 showFirstLastButtons \r\n                 aria-label=\"Select page of periodic elements\">\r\n  </mat-paginator>\r\n</div>\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-adding-cust',\r\n  templateUrl: './adding-cust.component.html',\r\n  styleUrls: ['./adding-cust.component.scss']\r\n})\r\nexport class AddingCustComponent implements OnInit {\r\n\r\n  constructor(private dialogRef: MatDialogRef<AddingCustComponent>,\r\n\t\t@Inject(MAT_DIALOG_DATA) public data: any,) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<section class=\"content\">\r\n    <div class=\"container px-4 py-4 bg-white\">\r\n        <h2>Add Customer</h2>\r\n      \r\n        <div class=\"row\">\r\n          <div class=\"my-3 col\">\r\n            <p for=\"exampleFormControlInput1\" class=\"form-Label\">Customer Name</p>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"siteName\"\r\n            />\r\n          </div>\r\n          <div class=\"my-3 col\">\r\n            <p for=\"exampleFormControlInput1\" class=\"form-Label\">Customer Contact</p>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"siteName\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"my-3 col\">\r\n            <p for=\"exampleFormControlInput1\" class=\"form-Label\">Customer Contact Phone</p>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"siteName\"\r\n            />\r\n          </div>\r\n          <div class=\"my-3 col\">\r\n            <p for=\"exampleFormControlInput1\" class=\"form-Label\">Customer Email</p>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"siteName\"\r\n            />\r\n          </div>\r\n        </div> \r\n      \r\n      <div class=\"btn btn-primary\">\r\n      Submit\r\n      </div>\r\n        <!-- <div class=\"row\">\r\n          <div class=\"my-3 col\">\r\n            <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n              Customer Contact Phone\r\n            </p>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              formControlName=\"CustomerContactPhone\"\r\n              id=\"siteName\"\r\n            />\r\n          </div>\r\n          <div class=\"my-3 col\">\r\n            <p for=\"exampleFormControlInput1\" class=\"form-Label\">Project Manager</p>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              formControlName=\"projectManager\"\r\n              id=\"siteName\"\r\n            />\r\n          </div>\r\n        </div> -->\r\n      </div>\r\n    </section>\r\n      ","import { EditCOPComponent } from './edit-cop/edit-cop.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { SetTitleService } from 'src/app/utils/services/set-title.service';\r\n@Component({\r\n  selector: 'app-code-of-pract',\r\n  templateUrl: './code-of-pract.component.html',\r\n  styleUrls: ['./code-of-pract.component.scss']\r\n})\r\nexport class CodeOfPractComponent implements OnInit {\r\n\r\n  mode: any;\r\n  jobTaskData: any = [];\r\n  ELEMENT_DATA = [];\r\n  /////////////mat table////////////////\r\n  displayedColumns: string[] = ['index', 'title' ,'edit','delete'];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n  /////////////mat table end////////////////\r\n\r\n  constructor(private logicalFormInfo: LogicalFormInfoService,private dialog:MatDialog, private setTitle: SetTitleService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getAllCodeOfPractice();\r\n    this.setTitle.setTitle('WHS-Code of Practice');\r\n  }\r\n\r\n  getAllCodeOfPractice() {\r\n   \r\n    this.logicalFormInfo.getAllCOP().subscribe((res:any) => {\r\n      console.log('codeOfPractice=>', res);\r\n      // this.jobTaskData = res.data[0].subComponents;\r\n      let data = res.data;\r\n      data.forEach((element, index) => {\r\n        element.index = index + 1; //adding index\r\n      });\r\n\r\n      this.ELEMENT_DATA = data;\r\n      this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n      this.dataSource.paginator = this.paginator;\r\n\r\n      //  this.task = res.data.subComponents;\r\n    });\r\n \r\n  }\r\n  edit(element){\r\n    const dialogRef = this.dialog.open(EditCOPComponent, {\r\n      width: \"550px\",\r\n      data: element,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if ((result == \"true\")) {\r\n        this.getAllCodeOfPractice();\r\n      }\r\n      console.log(\"The dialog was closed\");\r\n    });\r\n  }\r\n  delete(item) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: `Do you want to delete \"${item.title}\"?`,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#00B96F',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Delete!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.logicalFormInfo\r\n        .deleteCOP(item._id)\r\n        .subscribe((res) => {\r\n          Swal.fire({\r\n            title: 'Parameter Deleted successfully',\r\n            showConfirmButton: false,\r\n            timer: 1200,\r\n          });          \r\n          this.getAllCodeOfPractice();\r\n            \r\n        });\r\n      }\r\n    });\r\n  }\r\n}\r\n","\r\n<h2 class=\"ml-2\"> Code Of Practice List</h2>\r\n<div class=\"col ml-2 mb-2\">\r\n  \r\n  <button  class=\"btn btn-outline-primary mt-1 mr-2 float-right\"[routerLink]=\"['/admin/siteInfo/addCOP']\">\r\n    <i class=\"fas fa-folder-plus mr-2\"></i>Add Code Of Practice \r\n  </button>\r\n</div>\r\n<div class=\"mat-elevation-z8 ml-2\">\r\n  <table mat-table [dataSource]=\"dataSource\">\r\n\r\n    <!-- Position Column -->\r\n    <ng-container matColumnDef=\"index\">\r\n      <th mat-header-cell *matHeaderCellDef> No. </th>\r\n      <td mat-cell *matCellDef=\"let element\">{{element.index}}</td>\r\n    </ng-container>\r\n\r\n    <!-- Name Column -->\r\n   \r\n<!-- Name Column -->\r\n<ng-container matColumnDef=\"title\">\r\n  <th mat-header-cell *matHeaderCellDef> Name </th>\r\n  <td mat-cell *matCellDef=\"let element\"> {{element.title}} </td>\r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"edit\">\r\n  <th mat-header-cell *matHeaderCellDef> Edit </th>\r\n  <td mat-cell *matCellDef=\"let element\"(click)=\"edit(element)\"> <i class=\"fas fa-pencil-alt \"></i> \r\n  </td>\r\n</ng-container>\r\n<ng-container matColumnDef=\"delete\">\r\n  <th mat-header-cell *matHeaderCellDef> Delete </th>\r\n  <td mat-cell *matCellDef=\"let element\"(click)=\"delete(element)\"> <i class=\"fas fa-trash \"></i> \r\n  </td>\r\n</ng-container>\r\n\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n  </table>\r\n\r\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\"\r\n                 showFirstLastButtons \r\n                 aria-label=\"Select page of periodic elements\">\r\n  </mat-paginator>\r\n</div>\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\n@Component({\r\n  selector: 'app-edit-cop',\r\n  templateUrl: './edit-cop.component.html',\r\n  styleUrls: ['./edit-cop.component.scss']\r\n})\r\nexport class EditCOPComponent implements OnInit {\r\n\r\n  editTitle: FormGroup;\r\n  dataRec: any;\r\n\r\n\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    public dialogRef: MatDialogRef<EditCOPComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.dataRec = data;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.editTitle = this.fb.group({\r\n      title: [this.dataRec.title, Validators.required],\r\n    });\r\n  }\r\n  onFormSubmit() {\r\n     \r\n    let data={\r\n      title :this.editTitle.get('title').value,\r\n    }\r\n    this.logicalFormInfo\r\n      .updateCOP(data, this.dataRec._id)\r\n      .subscribe((resData) => {\r\n        console.log('resData', resData);\r\n\r\n        this.dialogRef.close('true');\r\n        Swal.fire({\r\n          title: 'Parameter Edited successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });  \r\n          });\r\n  }\r\n  closeDialog(){\r\n    this.dialogRef.close('false');\r\n\r\n  }\r\n}\r\n","<form [formGroup]=\"editTitle\" >\r\n    <mat-form-field appearance=\"legacy\"\r\n    class=\"example-full-width\" style=\"width: 498px;\">\r\n    <mat-label>Edit Code Of Practice</mat-label>\r\n    <input matInput  formControlName=\"title\" style=\"text-transform: capitalize !important;\">\r\n    </mat-form-field>\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-2 offset-8 \">\r\n            <button mat-raised-button (click)=\"closeDialog()\">Close</button>\r\n        </div>\r\n        <div class=\"col-sm-2  \">\r\n            <button mat-raised-button  [disabled]=\"!editTitle.valid\"(click)=\"onFormSubmit()\">Edit</button>\r\n        </div>\r\n    </div>\r\n</form>   \r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n  FormArray,\r\n  \r\n} from '@angular/forms';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-add-job-task',\r\n  templateUrl: './add-job-task.component.html',\r\n  styleUrls: ['./add-job-task.component.scss']\r\n})\r\nexport class AddJobTaskComponent implements OnInit {\r\n\r\n  jobTaskDetails!: FormGroup;\r\n  formData: any;;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private router: Router,\r\n    private logicalFormInfo:LogicalFormInfoService\r\n  ) { \r\n    this.jobTaskDetails=this.fb.group({\r\n     // mode:\"JobTask\",\r\n      arrObj: this.fb.array([]),\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.addAction();\r\n  }\r\n  addAction() {\r\n    {\r\n      this.add().push(this.newAction());\r\n    }\r\n  }\r\n  add(): FormArray {\r\n    return this.jobTaskDetails.get('arrObj') as FormArray;\r\n  }\r\n  newAction(): FormGroup {\r\n    return this.fb.group({     \r\n      title: ['', Validators.required],\r\n    });\r\n  }\r\n  \r\n  removeSafetyModule(i) {\r\n    const item = <FormArray>this.jobTaskDetails.controls['arrObj'];\r\n    if (item.length > 1) {\r\n      item.removeAt(i);\r\n    \r\n    }\r\n  }\r\n  onFormSubmit() {\r\n    console.log(this.jobTaskDetails.get('arrObj').value);\r\n    let data={\r\n      arrObj:this.jobTaskDetails.get('arrObj').value\r\n    }\r\n    this.logicalFormInfo.addMultipleJobTask(data).subscribe((data) => {\r\n      console.log('JOBTask=>', data);\r\n      Swal.fire({\r\n        title: 'Parameter Added successfully',\r\n        showConfirmButton: false,\r\n        timer: 1200,\r\n      }); \r\n      this.router.navigate(['/admin/siteInfo/jobTask']);      \r\n    },(err)=>{console.error(err);} \r\n  \r\n    );\r\n    \r\n  }\r\n \r\n}\r\n","<div class=\"btn btn-outline-primary\" [routerLink]=\"['/admin/siteInfo/jobTask']\">\r\n  <i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\r\n</div>\r\n<div class=\"container px-4 py-4 bg-white\">\r\n  <form [formGroup]=\"jobTaskDetails\" (ngSubmit)=\"onFormSubmit()\">\r\n    <h2 class=\"text-center\">Add Job Task</h2>\r\n    <br />\r\n    <hr />\r\n    <ng-container formArrayName=\"arrObj\">\r\n      <ng-container\r\n        *ngFor=\"let control of add().controls; let i = index\"\r\n        [formGroupName]=\"i\"\r\n      >\r\n        <div class=\"row justify-content-center\">\r\n          <div class=\"mr-1 mt-2\">\r\n            <span \r\n              >{{i+1}}.\r\n            </span>\r\n          </div>\r\n          <div class=\"col-8\">\r\n            <input\r\n              type=\"text\"\r\n              formControlName=\"title\"\r\n              class=\"form-control sign\"\r\n              id=\"name\"\r\n            />\r\n          </div>\r\n          <div class=\"col-1 mt-2\">\r\n            <span class=\"material-icons\" (click)=\"addAction()\"\r\n              >add_circle_outline\r\n            </span>\r\n          </div>\r\n          <div class=\"col-1 mt-2\">\r\n            <span class=\"material-icons\" (click)=\"removeSafetyModule(i)\">\r\n              remove_circle_outline\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        <hr />\r\n      </ng-container>\r\n    </ng-container>\r\n    <br />\r\n\r\n    <div class=\"col-md-2\">\r\n      <button type=\"submit\" class=\"btn btn-primary\"[disabled]=\"jobTaskDetails.get('arrObj').invalid\">Add</button>\r\n    </div>\r\n  </form>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n  FormArray,\r\n  \r\n} from '@angular/forms'\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { Router } from '@angular/router';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-add-licence',\r\n  templateUrl: './add-licence.component.html',\r\n  styleUrls: ['./add-licence.component.scss']\r\n})\r\nexport class AddLicenceComponent implements OnInit {\r\n  addLicenceFG!: FormGroup;\r\n  formData: any;\r\n  categories=[];\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private router: Router,\r\n    private logicalFormInfo:LogicalFormInfoService\r\n  ) { \r\n    this.addLicenceFG=this.fb.group({\r\n     // mode:\"JobTask\",\r\n      arrObj: this.fb.array([]),\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.addAction();\r\n    this.getAllLicenceCat();\r\n  }\r\n  addAction() {\r\n    {\r\n      this.add().push(this.newAction());\r\n    }\r\n  }\r\n  add(): FormArray {\r\n    return this.addLicenceFG.get('arrObj') as FormArray;\r\n  }\r\n  newAction(): FormGroup {\r\n    return this.fb.group({     \r\n      title: ['', Validators.required],\r\n      licenceCategoryId: ['', Validators.required],\r\n    });\r\n  }\r\n  \r\n  removeSafetyModule(i) {\r\n    const item = <FormArray>this.addLicenceFG.controls['arrObj'];\r\n    if (item.length > 1) {\r\n      item.removeAt(i);    \r\n    }\r\n  }\r\n  getAllLicenceCat() {\r\n    this.logicalFormInfo.getAllLicenceCat().subscribe((res) => {\r\n      console.log('getAllLicenceCat=>', res);\r\n      this.categories = res.data; \r\n    });\r\n \r\n  }\r\n  onFormSubmit() {\r\n    let data={\r\n      arrObj:this.addLicenceFG.get('arrObj').value\r\n    }\r\n    console.log(\"data li cat\",data);\r\n    \r\n    this.logicalFormInfo.addMultipleLicence(data).subscribe((res) => {\r\n      console.log('licence=>', res);\r\n      Swal.fire({\r\n        title: 'Parameter added successfully',\r\n        showConfirmButton: false,\r\n        timer: 1200,\r\n      });\r\n      this.router.navigate(['/admin/siteInfo/licenceAndQual']);      \r\n    },(err)=>{console.error(err);} \r\n  \r\n    );\r\n    \r\n  }\r\n \r\n\r\n}\r\n","<div class=\"btn btn-outline-primary\" [routerLink]=\"['/admin/siteInfo/licenceAndQual']\">\r\n    <i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\r\n  </div>\r\n  \r\n  <div class=\"container px-4 py-4 bg-white\">\r\n    \r\n    <form [formGroup]=\"addLicenceFG\" (ngSubmit)=\"onFormSubmit()\">\r\n      <h2 class=\"text-center\">Add Licence</h2>\r\n      <br />\r\n      <hr />\r\n      <ng-container formArrayName=\"arrObj\">\r\n        <ng-container\r\n          *ngFor=\"let control of add().controls; let i = index\"\r\n          [formGroupName]=\"i\"\r\n        >\r\n          <div class=\"row justify-content-center\">\r\n            <div class=\"mr-1 mt-2\">\r\n              <span \r\n                >{{i+1}}.\r\n              </span>\r\n            </div>\r\n            <div class=\"col-4\">\r\n              <input\r\n                type=\"text\"\r\n                formControlName=\"title\"\r\n                class=\"form-control sign\"\r\n                id=\"name\"\r\n                placeholder=\"Licence Name\"\r\n              />\r\n              \r\n            </div>\r\n            <div class=\"col-4\">            \r\n              <select class=\"form-select form-control\" formControlName=\"licenceCategoryId\"\r\n              aria-label=\"Default select example\">\r\n                <option value=\"\"selected hidden>Select category</option>\r\n                <option *ngFor=\"let category of categories\" [value]=\"category._id\">{{category.title}}</option>               \r\n              </select>\r\n            </div>\r\n            <div class=\"col-1 mt-2\">\r\n              <span class=\"material-icons\" (click)=\"addAction()\"\r\n                >add_circle_outline\r\n              </span>\r\n            </div>\r\n            <div class=\"col-1 mt-2\">\r\n              <span class=\"material-icons\" (click)=\"removeSafetyModule(i)\">\r\n                remove_circle_outline\r\n              </span>\r\n            </div>\r\n          </div>\r\n  \r\n          <hr />\r\n        </ng-container>\r\n      </ng-container>\r\n      <br />\r\n  \r\n      <div class=\"col-md-2\">\r\n        <button type=\"submit\" class=\"btn btn-primary\"[disabled]=\"addLicenceFG.get('arrObj').invalid\">Add</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  ","import { Component, OnInit } from '@angular/core';\r\nimport { SetTitleService } from '../utils/services/set-title.service';\r\n\r\n@Component({\r\n  selector: 'app-site-info',\r\n  templateUrl: './site-info.component.html',\r\n  styleUrls: ['./site-info.component.scss']\r\n})\r\nexport class SiteInfoComponent implements OnInit {\r\n\r\n  constructor(private setTitle:SetTitleService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.setTitle.setTitle('WHS-Site Info');\r\n  }\r\n\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport Swal from 'sweetalert2';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\n@Component({\r\n  selector: 'app-edit-ppe',\r\n  templateUrl: './edit-ppe.component.html',\r\n  styleUrls: ['./edit-ppe.component.scss']\r\n})\r\nexport class EditPPEComponent implements OnInit {\r\n  editTitle!: FormGroup;\r\n  dataRec: any;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    public dialogRef: MatDialogRef<EditPPEComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.dataRec = data;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.editTitle = this.fb.group({\r\n      title: [this.dataRec.title, Validators.required],\r\n    });\r\n  }\r\n  onFormSubmit() {\r\n     \r\n    let data={\r\n      title :this.editTitle.get('title').value\r\n    }\r\n    this.logicalFormInfo\r\n      .updatePPE(data, this.dataRec._id)\r\n      .subscribe((resData) => {\r\n        console.log('resData', resData);\r\n\r\n        this.dialogRef.close('true');\r\n        Swal.fire({\r\n          title: 'Parameter Updated successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });     \r\n       });\r\n  }\r\n  closeDialog(){\r\n    this.dialogRef.close('false');\r\n\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"editTitle\" >\r\n    <h2>Edit PPE</h2>\r\n    <mat-form-field appearance=\"legacy\"\r\n    class=\"example-full-width\" style=\"width: 498px;\">\r\n    <!-- <mat-label>Edit PPE</mat-label> -->\r\n    <input matInput  formControlName=\"title\" style=\"text-transform: capitalize !important;\">\r\n    </mat-form-field>\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-2 offset-8 \">\r\n            <button mat-raised-button (click)=\"closeDialog()\">Close</button>\r\n        </div>\r\n        <div class=\"col-sm-2  \">\r\n            <button mat-raised-button  [disabled]=\"!editTitle.valid\"(click)=\"onFormSubmit()\">Update</button>\r\n        </div>\r\n    </div>\r\n</form>   \r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n  FormArray,\r\n  \r\n} from '@angular/forms'\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-add-licence-cat',\r\n  templateUrl: './add-licence-cat.component.html',\r\n  styleUrls: ['./add-licence-cat.component.scss']\r\n})\r\nexport class AddLicenceCatComponent implements OnInit {\r\n\r\n  addLicenceCatFG!: FormGroup;\r\n  formData: any;;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private router: Router,\r\n    private logicalFormInfo:LogicalFormInfoService\r\n  ) { \r\n    this.addLicenceCatFG=this.fb.group({\r\n     // mode:\"JobTask\",\r\n      arrObj: this.fb.array([]),\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.addAction();\r\n  }\r\n  addAction() {\r\n    {\r\n      this.add().push(this.newAction());\r\n    }\r\n  }\r\n  add(): FormArray {\r\n    return this.addLicenceCatFG.get('arrObj') as FormArray;\r\n  }\r\n  newAction(): FormGroup {\r\n    return this.fb.group({\r\n     \r\n      title: ['', Validators.required],\r\n    });\r\n  }\r\n  \r\n  removeSafetyModule(i) {\r\n    const item = <FormArray>this.addLicenceCatFG.controls['arrObj'];\r\n    if (item.length > 1) {\r\n      item.removeAt(i);\r\n    \r\n    }\r\n  }\r\n  onFormSubmit() {\r\n    let data={\r\n      arrObj:this.addLicenceCatFG.get('arrObj').value\r\n    }\r\n    this.logicalFormInfo.addLicenceCat(data).subscribe((data) => {\r\n      console.log('JOBTask=>', data);\r\n      this.router.navigate(['/admin/siteInfo/licenceCat']);      \r\n    },(err)=>{console.error(err);} \r\n  \r\n    );\r\n    \r\n  }\r\n \r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { LandingPageInfoServiceService } from 'src/app/utils/services/landing-page-info-service.service';\r\n\r\nimport { UploadFileServiceService } from './../../utils/services/upload-file-service.service';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\n\r\nimport Swal from 'sweetalert2';\r\nimport { FormBuilder, FormGroup, Validators, FormArray } from '@angular/forms';\r\nimport { AddHighRiskConstructionComponent } from './add-high-risk-construction/add-high-risk-construction.component';\r\nimport { EditHighRiskConstructionComponent } from './edit-high-risk-construction/edit-high-risk-construction.component';\r\nimport { AfterViewInit,ViewChild } from '@angular/core';\r\n\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { SetTitleService } from 'src/app/utils/services/set-title.service';\r\n@Component({\r\n  selector: 'app-high-risk-con',\r\n  templateUrl: './high-risk-con.component.html',\r\n  styleUrls: ['./high-risk-con.component.scss'],\r\n})\r\nexport class HighRiskConComponent implements AfterViewInit, OnInit {\r\n  formData: any;\r\n  mode: any;\r\n  highRiskConstructionData: any = [];\r\n  myId: any;\r\n  isEdit = false;\r\n  Is_id: any;\r\n  Edit = false;\r\n  Add = false;\r\n  collectionSize = 10;\r\n  hide = false;\r\n  closeResult: string;\r\n  componentId = '';\r\n  ELEMENT_DATA = [];\r\n  /////////////mat table////////////////\r\n  displayedColumns: string[] = ['index', 'title' ,'edit','delete'];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  constructor(\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    public dialog: MatDialog,\r\n    private spinner: NgxSpinnerService,\r\n    public router: Router,\r\n    private setTitle:SetTitleService\r\n  ) {\r\n    \r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllHighRisk();\r\n    this.setTitle.setTitle('WHS-High Risk Construction List');\r\n  }\r\n  \r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n \r\n  // onFormSubmit() {\r\n  //   console.log(this.riskDetails);\r\n  //   this.logicalFormInfo\r\n  //     .addFormData(this.riskDetails.getRawValue())\r\n  //     .subscribe((data) => {\r\n  //       console.log('risk=>', data);\r\n  //       this.formData = data;\r\n  //     });\r\n  // }\r\n  // getAllHighRisk() {\r\n  //   this.mode = 'Risk';\r\n  //   this.logicalFormInfo.getFormDataById(this.mode).subscribe((res) => {\r\n  //     console.log('riskDetails data=>', res);\r\n  //     this.componentId = res.data[0]._id;\r\n  //     this.highRiskConstructionData = res.data[0];\r\n  //     console.log('highRiskConstructionData', this.highRiskConstructionData);\r\n  //   });\r\n  // }\r\n  // editTask(title,id, i) {\r\n  //   console.log('id', id);\r\n  //   this.myId = id;\r\n  //   this.isEdit = true;\r\n  //   this.mode = 'Risk';\r\n\r\n  //   let dialogRef = this.dialog.open(EditHighRiskConstructionComponent, {\r\n  //     data: {        \r\n  //       EditData: id,\r\n  //       componentId: this.componentId,\r\n  //       index: i,\r\n  //       title:title\r\n  //       // moduleName: name,\r\n  //     },\r\n\r\n  //     width: '1000px',\r\n  //     height: '500px',\r\n  //   });\r\n  //   dialogRef.afterClosed().subscribe((result) => {\r\n  //     console.log('-> openDialog -> result', result);\r\n\r\n  //     if ((result = 'true')) {\r\n  //       this.getAllHighRisk();\r\n  //     }\r\n  //     console.log('The dialog was closed');\r\n  //   });\r\n  // }\r\n\r\n  // addTask() {\r\n  //   let dialogRef = this.dialog.open(AddHighRiskConstructionComponent, {\r\n  //     data: {\r\n  //       action: 'new',\r\n  //       EditData: this.componentId,\r\n  //     },\r\n  //     width: '600px',\r\n  //     height: '400px',\r\n  //   });\r\n  //   dialogRef.afterClosed().subscribe((result) => {\r\n  //     console.log('openDialog->result', result);\r\n  //     if ((result = 'true')) {\r\n  //       this.getAllHighRisk();\r\n  //     }\r\n  //   });\r\n\r\n  // }\r\n  // deleteopen(content, id) {\r\n  //   console.log('deleteopen close id=>', id);\r\n  //   this.Is_id = id;\r\n  //   this.modalService\r\n  //     .open(content, { ariaLabelledBy: 'modal-basic-title' })\r\n  //     .result.then(\r\n  //       (result) => {\r\n  //         this.closeResult = `Closed with: ${result}`;\r\n  //         console.log('deleting');\r\n  //         this.logicalFormInfo\r\n  //           .deleteSubComponent(this.Is_id)\r\n  //           .subscribe((res) => {\r\n  //             Swal.fire('Deleted Successfully');\r\n  //             console.log('deleted res', res);\r\n  //             this.getAllHighRisk();\r\n  //           });\r\n  //       },\r\n  //       (reason) => {\r\n  //         this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n  //         console.log('dismissed');\r\n  //       }\r\n  //     );\r\n  // }\r\n\r\n  // delete(item) {\r\n  //   Swal.fire({\r\n  //     title: 'Are you sure?',\r\n  //     text: `Do you want to delete \"${item}\"?`,\r\n  //     icon: 'warning',\r\n  //     showCancelButton: true,\r\n  //     confirmButtonColor: '#00B96F',\r\n  //     cancelButtonColor: '#d33',\r\n  //     confirmButtonText: 'Yes, Delete!',\r\n  //   }).then((result) => {\r\n  //     if (result.value) {\r\n  //     }\r\n  //   });\r\n  // }\r\n  // private getDismissReason(reason: any): string {\r\n  //   if (reason === ModalDismissReasons.ESC) {\r\n  //     return 'by pressing ESC';\r\n  //   } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n  //     return 'by clicking on a backdrop';\r\n  //   } else {\r\n  //     return `with: ${reason}`;\r\n  //   }\r\n  // }\r\n  getAllHighRisk() {\r\n    this.logicalFormInfo.getAllRisk().subscribe((res:any) => {\r\n      console.log('Risk=>', res);\r\n      // this.jobTaskData = res.data[0].subComponents;\r\n      let data = res.data;\r\n      data.forEach((element, index) => {\r\n        element.index = index + 1; //adding index\r\n      });\r\n\r\n      this.ELEMENT_DATA = data;\r\n      this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n      this.dataSource.paginator = this.paginator;\r\n\r\n      //  this.task = res.data.subComponents;\r\n    });\r\n \r\n  }\r\n  edit(element){\r\n    const dialogRef = this.dialog.open(EditHighRiskConstructionComponent, {\r\n      width: \"550px\",\r\n      data: element,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if ((result == \"true\")) {\r\n        this.getAllHighRisk();\r\n      }\r\n      console.log(\"The dialog was closed\");\r\n    });\r\n  }\r\n  delete(item) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: `Do you want to delete \"${item.title}\"?`,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#00B96F',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Delete!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.logicalFormInfo\r\n        .deleteRisk(item._id)\r\n        .subscribe((res) => {\r\n          Swal.fire({\r\n            title: 'Parameter Deleted successfully',\r\n            showConfirmButton: false,\r\n            timer: 1200,\r\n          });\r\n          console.log('deleted res', res);\r\n          this.getAllHighRisk();\r\n            \r\n        });\r\n      }\r\n    });\r\n  }\r\n}\r\n","  \r\n    <!-- <form [formGroup]=\"jobTaskDetails\" (ngSubmit)=\" onFormSubmit()\">\r\n\r\n      <h2 class=\"text-center\">High Risk Construction </h2>\r\n     <br>\r\n     <hr>\r\n      <ng-container formArrayName=\"arrObj\">\r\n          <ng-container\r\n            *ngFor=\"let control of add().controls; let i = index\"\r\n            [formGroupName]=\"i\"\r\n          >\r\n            <div>\r\n              <div class=\"row\">\r\n               \r\n                <div class=\"col-8\">\r\n               <input\r\n                    type=\"text\"\r\n                    formControlName=\"title\"\r\n                    class=\"form-control sign\"\r\n                    id=\"name\"\r\n                  />\r\n                </div>\r\n                <div class=\"col-1 mt-2\">\r\n                <span class=\"material-icons\" (click)=\"addAction()\"\r\n                  >add_circle_outline\r\n                </span>\r\n              </div> \r\n                 <div class=\"col-1 mt-2\">\r\n                <span class=\"material-icons\" (click)=\"removeSafetyModule(i)\">\r\n                  remove_circle_outline\r\n                </span>\r\n              </div> \r\n              </div>\r\n            </div>\r\n            <hr />\r\n          </ng-container>\r\n        </ng-container>\r\n        <br>\r\n      \r\n        <div class=\"col-md-2\"> \r\n          <button type=\"submit\" class=\"btn btn-primary \"> Submit</button>\r\n        </div>\r\n        </form>\r\n      </div> \r\n      \r\n      \r\n      <section class=\"content\">\r\n        <div class=\"text-center\">\r\n          <h1 class=\"card\"> High Risk Construction</h1>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"col ml-2 mb-2\">\r\n            <button (click)=\"addTask()\" class=\"btn btn-outline-primary mt-1 mr-2 float-right\">\r\n              <i class=\"fas fa-folder-plus mr-2\"></i>Add Parameter \r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div class=\"container-fluid\">\r\n          <div class=\"row\">\r\n            <div class=\"col-12\">\r\n              <div class=\"card\">\r\n                <div class=\"card-body p-0\">\r\n                  <table class=\"table table-hover text-wrap\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th style=\"width: 5%\">Index</th>\r\n                        <th style=\"width: 80%\">Title</th>\r\n                        <th  style=\"width: 5%\">Edit</th>\r\n                        <th style=\"width: 5%\" >Delete</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <tr *ngFor=\"let risk of highRiskConstructionData.subComponents; let i = index\">\r\n                        <td>{{ i+1 }}</td>\r\n                        <td>{{ risk.title }}</td>\r\n \r\n                        <td>\r\n                          <button class=\"btn btn-info btn-sm mr-2\" (click)=\"editTask(risk.title ,risk._id,i)\">\r\n                            <i class=\"fas fa-pencil-alt \"></i> \r\n                          </button>\r\n                        </td>\r\n                        <td>\r\n                          <button class=\"btn btn-danger btn-sm mr-2\" (click)=\"deleteopen(deletemodal, risk._id)\">\r\n                            <i class=\"fas fa-trash \"></i>\r\n                          </button>\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      <ng-template #deletemodal let-modal>\r\n        <div class=\"modal-header titel\">\r\n          <h2 class=\"modal-title titel\" id=\"modal-basic-title\">Are you sure?</h2>\r\n        </div>\r\n        <div class=\"modal-body deletebody\">\r\n          <p></p>\r\n          <p>Do you want to delete this Service</p>\r\n        </div>\r\n        <div class=\"modal-footer footer\">\r\n          <button type=\"button\" class=\"btn mr-3\" style=\"background-color: #eeeeee\" (click)=\"modal.dismiss('Save click')\">\r\n            Cancel\r\n          </button>\r\n          <button type=\"button\" class=\"btn btn-danger ml-3\" aria-label=\"Close\" (click)=\"modal.close('Cross click')\">\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </ng-template> -->\r\n\r\n      <h2 class=\"ml-2\">High Risk List</h2>\r\n    <div class=\"col ml-2 mb-2\">\r\n      \r\n      <button  class=\"btn btn-outline-primary mt-1 mr-2 float-right\"[routerLink]=\"['/admin/siteInfo/addHighRisk']\">\r\n        <i class=\"fas fa-folder-plus mr-2\"></i>Add High Risk \r\n      </button>\r\n    </div>\r\n    <div class=\"mat-elevation-z8 ml-2\">\r\n      <table mat-table [dataSource]=\"dataSource\">\r\n    \r\n        <!-- Position Column -->\r\n        <ng-container matColumnDef=\"index\">\r\n          <th mat-header-cell *matHeaderCellDef> No. </th>\r\n          <td mat-cell *matCellDef=\"let element\">{{element.index}}</td>\r\n        </ng-container>\r\n    \r\n        <!-- Name Column -->\r\n       \r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"title\">\r\n      <th mat-header-cell *matHeaderCellDef> Name </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.title}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"edit\">\r\n      <th mat-header-cell *matHeaderCellDef> Edit </th>\r\n      <td mat-cell *matCellDef=\"let element\"(click)=\"edit(element)\"> <i class=\"fas fa-pencil-alt \"></i> \r\n      </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"delete\">\r\n      <th mat-header-cell *matHeaderCellDef> Delete </th>\r\n      <td mat-cell *matCellDef=\"let element\"(click)=\"delete(element)\"> <i class=\"fas fa-trash \"></i> \r\n      </td>\r\n    </ng-container>\r\n\r\n    \r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n      </table>\r\n    \r\n      <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\"\r\n                     showFirstLastButtons \r\n                     aria-label=\"Select page of periodic elements\">\r\n      </mat-paginator>\r\n    </div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n  FormArray,\r\n  \r\n} from '@angular/forms'\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-add-ppe',\r\n  templateUrl: './add-ppe.component.html',\r\n  styleUrls: ['./add-ppe.component.scss']\r\n})\r\nexport class AddPPEComponent implements OnInit {\r\n  PPEformgp!: FormGroup;\r\n  formData: any;;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private router: Router,\r\n    private logicalFormInfo:LogicalFormInfoService\r\n  ) { \r\n    this.PPEformgp=this.fb.group({\r\n     // mode:\"JobTask\",\r\n      arrObj: this.fb.array([]),\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.addAction();\r\n  }\r\n  addAction() {\r\n    {\r\n      this.add().push(this.newAction());\r\n    }\r\n  }\r\n  add(): FormArray {\r\n    return this.PPEformgp.get('arrObj') as FormArray;\r\n  }\r\n  newAction(): FormGroup {\r\n    return this.fb.group({\r\n     \r\n      title: ['', Validators.required],\r\n    });\r\n  }\r\n  \r\n  removeSafetyModule(i) {\r\n    const item = <FormArray>this.PPEformgp.controls['arrObj'];\r\n    if (item.length > 1) {\r\n      item.removeAt(i);\r\n    \r\n    }\r\n  }\r\n  onFormSubmit() {\r\n    console.log(this.PPEformgp.value);\r\n    let data={\r\n      arrObj:this.PPEformgp.get('arrObj').value\r\n    }\r\n    this.logicalFormInfo.addMultiplePPE(data).subscribe((data) => {\r\n      console.log('PPE=>', data);\r\n      this.router.navigate(['/admin/siteInfo/ppeSel']);      \r\n    },(err)=>{console.error(err);} \r\n  \r\n    );\r\n    \r\n  }\r\n\r\n}\r\n","<div class=\"btn btn-outline-primary\" [routerLink]=\"['/admin/siteInfo/ppeSel']\">\r\n    <i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\r\n  </div>\r\n  <div class=\"container px-4 py-4 bg-white\">\r\n    <form [formGroup]=\"PPEformgp\" (ngSubmit)=\"onFormSubmit()\">\r\n      <h2 class=\"text-center\">Add PPE</h2>\r\n      <br />\r\n      <hr />\r\n      <ng-container formArrayName=\"arrObj\">\r\n        <ng-container\r\n          *ngFor=\"let control of add().controls; let i = index\"\r\n          [formGroupName]=\"i\"\r\n        >\r\n          <div class=\"row justify-content-center\">\r\n            <div class=\"mr-1 mt-2\">\r\n              <span \r\n                >{{i+1}}.\r\n              </span>\r\n            </div>\r\n            <div class=\"col-8\">\r\n              <!-- <p for=\"exampleFormControlInput1\" class=\"form-Label\">Job Task Type</p> -->\r\n              <input\r\n                type=\"text\"\r\n                formControlName=\"title\"\r\n                class=\"form-control sign\"\r\n                id=\"name\"\r\n              />\r\n            </div>\r\n            <div class=\"col-1 mt-2\">\r\n              <span class=\"material-icons\" (click)=\"addAction()\"\r\n                >add_circle_outline\r\n              </span>\r\n            </div>\r\n            <div class=\"col-1 mt-2\">\r\n              <span class=\"material-icons\" (click)=\"removeSafetyModule(i)\">\r\n                remove_circle_outline\r\n              </span>\r\n            </div>\r\n          </div>\r\n  \r\n          <hr />\r\n        </ng-container>\r\n      </ng-container>\r\n      <br />\r\n  \r\n      <div class=\"col-md-2\">\r\n        <button type=\"submit\" class=\"btn btn-primary\"[disabled]=\"PPEformgp.get('arrObj').invalid\">Add</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  ","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport Swal from 'sweetalert2';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\n@Component({\r\n  selector: 'app-edit-hazard',\r\n  templateUrl: './edit-hazard.component.html',\r\n  styleUrls: ['./edit-hazard.component.scss']\r\n})\r\nexport class EditHazardComponent implements OnInit {\r\n\r\n  editTitle!: FormGroup;\r\n  dataRec: any;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    public dialogRef: MatDialogRef<EditHazardComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.dataRec = data;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.editTitle = this.fb.group({\r\n      title: [this.dataRec.title, Validators.required],\r\n    });\r\n  }\r\n  onFormSubmit() {\r\n     \r\n    let data={\r\n      title :this.editTitle.get('title').value\r\n    }\r\n    this.logicalFormInfo\r\n      .updateHazards(data, this.dataRec._id)\r\n      .subscribe((resData) => {\r\n        console.log('resData', resData);\r\n\r\n        this.dialogRef.close('true');\r\n        Swal.fire({\r\n          title: 'Parameter Updated successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });     \r\n       });\r\n  }\r\n  closeDialog(){\r\n    this.dialogRef.close('false');\r\n\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"editTitle\" >\r\n    <h2>Edit Hazard</h2>\r\n    <mat-form-field appearance=\"legacy\"\r\n    class=\"example-full-width\" style=\"width: 498px;\">\r\n    <!-- <mat-label>Edit PPE</mat-label> -->\r\n    <input matInput  formControlName=\"title\" style=\"text-transform: capitalize !important;\">\r\n    </mat-form-field>\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-2 offset-8 \">\r\n            <button mat-raised-button (click)=\"closeDialog()\">Close</button>\r\n        </div>\r\n        <div class=\"col-sm-2  \">\r\n            <button mat-raised-button  [disabled]=\"!editTitle.valid\"(click)=\"onFormSubmit()\">Update</button>\r\n        </div>\r\n    </div>\r\n</form>   \r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormArray, FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { UploadFileServiceService } from 'src/app/utils/services/upload-file-service.service';\r\nimport { Router } from '@angular/router';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\n@Component({\r\n  selector: 'app-edit-high-risk-construction',\r\n  templateUrl: './edit-high-risk-construction.component.html',\r\n  styleUrls: ['./edit-high-risk-construction.component.scss'],\r\n})\r\nexport class EditHighRiskConstructionComponent implements OnInit {\r\n  editTitle: FormGroup;\r\n  dataRec: any;\r\n\r\n\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    public dialogRef: MatDialogRef<EditHighRiskConstructionComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.dataRec = data;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    console.log(\"this.dataRec\",this.dataRec);\r\n    \r\n    this.editTitle = this.fb.group({\r\n      title: [this.dataRec.title, Validators.required],\r\n    });\r\n  }\r\n  onFormSubmit() {\r\n     \r\n    let data={\r\n      title :this.editTitle.get('title').value,\r\n    }\r\n    this.logicalFormInfo\r\n      .updateRisk(data, this.dataRec._id)\r\n      .subscribe((resData) => {\r\n\r\n        this.dialogRef.close('true');\r\n        Swal.fire({\r\n          title: 'Parameter Edited successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });  \r\n          });\r\n  }\r\n  closeDialog(){\r\n    this.dialogRef.close('false');\r\n\r\n  }\r\n}\r\n","<form [formGroup]=\"editTitle\" >\r\n  <h3>Edit High Risk</h3>\r\n  <mat-form-field appearance=\"legacy\"\r\n  class=\"example-full-width\" style=\"width: 498px;\">\r\n  <!-- <mat-label>Edit Job Task</mat-label> -->\r\n  <input matInput   style=\"text-transform: capitalize !important;\"formControlName=\"title\">\r\n  </mat-form-field>\r\n  <div class=\"row\">\r\n      <div class=\"col-sm-2 offset-8 \">\r\n          <button mat-raised-button (click)=\"closeDialog()\">Close</button>\r\n      </div>\r\n      <div class=\"col-sm-2  \">\r\n          <button mat-raised-button  [disabled]=\"!editTitle.valid\"(click)=\"onFormSubmit()\">Update</button>\r\n      </div>\r\n  </div>\r\n</form>   \r\n\r\n","import { MatDialog } from '@angular/material/dialog';\r\nimport { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { EditTaskComponent } from './edit-task/edit-task.component';\r\nimport { SetTitleService } from 'src/app/utils/services/set-title.service';\r\n\r\n@Component({\r\n  selector: 'app-job-task',\r\n  templateUrl: './job-task.component.html',\r\n  styleUrls: ['./job-task.component.scss'],\r\n})\r\nexport class JobTaskComponent implements AfterViewInit, OnInit {\r\n  mode: any;\r\n  jobTaskData: any = [];\r\n  ELEMENT_DATA = [];\r\n  /////////////mat table////////////////\r\n  displayedColumns: string[] = ['index', 'title', 'edit', 'delete'];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n  /////////////mat table end////////////////\r\n\r\n  constructor(private logicalFormInfo: LogicalFormInfoService, private dialog: MatDialog,\r\n    private setTitle: SetTitleService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllJobTask();\r\n    this.setTitle.setTitle('WHS-Job Task List');\r\n  }\r\n \r\n  getAllJobTask() {\r\n    this.logicalFormInfo.getAllJobtask().subscribe((res: any) => {\r\n      console.log('jobTaskDetails=>', res);\r\n      // this.jobTaskData = res.data[0].subComponents;\r\n      let data = res.data\r\n      data.forEach((element, index) => {\r\n        element.index = index + 1; //adding index\r\n      });\r\n\r\n      this.ELEMENT_DATA = data;\r\n      this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n      this.dataSource.paginator = this.paginator;\r\n\r\n      //  this.task = res.data.subComponents;\r\n    });\r\n\r\n  }\r\n  edit(element) {\r\n    const dialogRef = this.dialog.open(EditTaskComponent, {\r\n      width: \"550px\",\r\n      data: element,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if ((result == \"true\")) {\r\n        this.getAllJobTask();\r\n      }\r\n      console.log(\"The dialog was closed\");\r\n    });\r\n  }\r\n  delete(item) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: `Do you want to delete \"${item.title}\"?`,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#00B96F',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Delete!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.logicalFormInfo\r\n          .deleteJobTask(item._id)\r\n          .subscribe((res) => {\r\n            Swal.fire({\r\n              title: 'Parameter Deleted successfully',\r\n              showConfirmButton: false,\r\n              timer: 1200,\r\n            }); console.log('deleted res', res);\r\n            this.getAllJobTask();\r\n\r\n          });\r\n      }\r\n    });\r\n  }\r\n}\r\n","\r\n<h2 class=\"ml-2\"> Job task List</h2>\r\n    <div class=\"col ml-2 mb-2\">\r\n      \r\n      <button  class=\"btn btn-outline-primary mt-1 mr-2 float-right\"[routerLink]=\"['/admin/siteInfo/addJobTask']\">\r\n        <i class=\"fas fa-folder-plus mr-2\"></i>Add Job Task \r\n      </button>\r\n    </div>\r\n    <div class=\"mat-elevation-z8 ml-2\">\r\n      <table mat-table [dataSource]=\"dataSource\">\r\n    \r\n        <!-- Position Column -->\r\n        <ng-container matColumnDef=\"index\">\r\n          <th mat-header-cell *matHeaderCellDef> No. </th>\r\n          <td mat-cell *matCellDef=\"let element\">{{element.index}}</td>\r\n        </ng-container>\r\n    \r\n        <!-- Name Column -->\r\n       \r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"title\">\r\n      <th mat-header-cell *matHeaderCellDef> Name </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.title}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"edit\">\r\n      <th mat-header-cell *matHeaderCellDef> Edit </th>\r\n      <td mat-cell *matCellDef=\"let element\"(click)=\"edit(element)\"> <i class=\"fas fa-pencil-alt \"></i> \r\n      </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"delete\">\r\n      <th mat-header-cell *matHeaderCellDef> Delete </th>\r\n      <td mat-cell *matCellDef=\"let element\"(click)=\"delete(element)\"> <i class=\"fas fa-trash \"></i> \r\n      </td>\r\n    </ng-container>\r\n\r\n    \r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n      </table>\r\n    \r\n      <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\"\r\n                     showFirstLastButtons \r\n                     aria-label=\"Select page of periodic elements\">\r\n      </mat-paginator>\r\n    </div>\r\n    ","import { EditLicenceComponent } from './edit-licence/edit-licence.component';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { AfterViewInit,ViewChild } from '@angular/core';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { SetTitleService } from 'src/app/utils/services/set-title.service';\r\n@Component({\r\n  selector: 'app-licence-and-qual',\r\n  templateUrl: './licence-and-qual.component.html',\r\n  styleUrls: ['./licence-and-qual.component.scss']\r\n})\r\nexport class LicenceAndQualComponent implements OnInit {\r\n  licenceAndQual: FormGroup;\r\n  formData: any;\r\n\r\n  mode: any;\r\n  jobTaskData: any = [];\r\n  ELEMENT_DATA = [];\r\n  /////////////mat table////////////////\r\n  displayedColumns: string[] = ['index', 'title','category' ,'edit','delete'];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n  /////////////mat table end////////////////\r\n\r\n  constructor(private logicalFormInfo: LogicalFormInfoService,private dialog:MatDialog,\r\n    private setTitle: SetTitleService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getAllLicence();\r\n    this.setTitle.setTitle('WHS-License and Qualification List');\r\n  }\r\n\r\n  getAllLicence() {\r\n    this.logicalFormInfo.getAllLicence().subscribe((res) => {\r\n      console.log('getAllLicence=>', res);\r\n      // this.jobTaskData = res.data[0].subComponents;\r\n      let data = res.data;\r\n      data.forEach((element, index) => {\r\n        element.index = index + 1; //adding index\r\n      });\r\n\r\n      this.ELEMENT_DATA = data;\r\n      this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n      this.dataSource.paginator = this.paginator;\r\n\r\n      //  this.task = res.data.subComponents;\r\n    });\r\n \r\n  }\r\n  edit(element){\r\n    const dialogRef = this.dialog.open(EditLicenceComponent, {\r\n      width: \"550px\",\r\n      data: element,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if ((result == \"true\")) {\r\n        this.getAllLicence();\r\n      }\r\n      console.log(\"The dialog was closed\");\r\n    });\r\n  }\r\n  delete(item) {\r\n    console.log(\"delete\",item);\r\n    \r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: `Do you want to delete \"${item.title}\"?`,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#00B96F',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Delete!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.logicalFormInfo\r\n        .deleteLicence(item._id)\r\n        .subscribe((res) => {\r\n          Swal.fire({\r\n            title: 'Deleted successfully',\r\n            showConfirmButton: false,\r\n            timer: 1000,\r\n          });          console.log('deleted res', res);\r\n          this.getAllLicence();\r\n            \r\n        });\r\n      }\r\n    });\r\n  }\r\n}\r\n","\r\n<h2 class=\"ml-2\"> Licence and Qualification List</h2>\r\n<div class=\"col ml-2 mb-2\">\r\n  \r\n  <button  class=\"btn btn-outline-primary mt-1 mr-2 float-right\"[routerLink]=\"['/admin/siteInfo/addLicence']\">\r\n    <i class=\"fas fa-folder-plus mr-2\"></i>Add Licence \r\n  </button>\r\n</div>\r\n<div class=\"mat-elevation-z8 ml-2\">\r\n  <table mat-table [dataSource]=\"dataSource\">\r\n\r\n    <!-- Position Column -->\r\n    <ng-container matColumnDef=\"index\">\r\n      <th mat-header-cell *matHeaderCellDef> No. </th>\r\n      <td mat-cell *matCellDef=\"let element\">{{element.index}}</td>\r\n    </ng-container>\r\n\r\n    <!-- Name Column -->\r\n   \r\n<!-- Name Column -->\r\n<ng-container matColumnDef=\"title\">\r\n  <th mat-header-cell *matHeaderCellDef> Name </th>\r\n  <td mat-cell *matCellDef=\"let element\"> {{element.title}} </td>\r\n</ng-container>\r\n<ng-container matColumnDef=\"category\">\r\n  <th mat-header-cell *matHeaderCellDef> Category </th>\r\n  <td mat-cell *matCellDef=\"let element\"> {{element.licenceCategoryId?.title}} </td>\r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"edit\">\r\n  <th mat-header-cell *matHeaderCellDef> Edit </th>\r\n  <td mat-cell *matCellDef=\"let element\"(click)=\"edit(element)\"> <i class=\"fas fa-pencil-alt \"></i> \r\n  </td>\r\n</ng-container>\r\n<ng-container matColumnDef=\"delete\">\r\n  <th mat-header-cell *matHeaderCellDef> Delete </th>\r\n  <td mat-cell *matCellDef=\"let element\"(click)=\"delete(element)\"> <i class=\"fas fa-trash \"></i> \r\n  </td>\r\n</ng-container>\r\n\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n  </table>\r\n\r\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\"\r\n                 showFirstLastButtons \r\n                 aria-label=\"Select page of periodic elements\">\r\n  </mat-paginator>\r\n</div>\r\n","import { MatDialog } from '@angular/material/dialog';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport {  ViewChild } from '@angular/core';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { SetTitleService } from 'src/app/utils/services/set-title.service';\r\nimport { EditContActComponent } from './edit-cont-act/edit-cont-act.component';\r\n@Component({\r\n  selector: 'app-contr-and-act-req',\r\n  templateUrl: './contr-and-act-req.component.html',\r\n  styleUrls: ['./contr-and-act-req.component.scss']\r\n})\r\nexport class ContrAndActReqComponent implements OnInit {\r\n\r\n  jobTaskData: any = [];\r\n  ELEMENT_DATA = [];\r\n  /////////////mat table////////////////\r\n  displayedColumns: string[] = ['index', 'title','edit','delete'];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n  /////////////mat table end////////////////\r\n\r\n  constructor(\r\n\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    private dialog:MatDialog,\r\n    private setTitle:SetTitleService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getAllContrlActReq();\r\n    this.setTitle.setTitle('WHS-PPE List');\r\n\r\n  }\r\n\r\n  getAllContrlActReq() {\r\n    this.logicalFormInfo.getAllContrlActReq().subscribe((res:any) => {\r\n      console.log('PPEAll=>', res);\r\n      let data = res.data;\r\n      data.forEach((element, index) => {\r\n        element.index = index + 1; //adding index\r\n      });\r\n\r\n      this.ELEMENT_DATA = data;\r\n      this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n      this.dataSource.paginator = this.paginator;\r\n      console.log('this.ELEMENT_DATA', this.ELEMENT_DATA);\r\n\r\n      //  this.task = res.data.subComponents;\r\n    });\r\n  }\r\n  edit(element){\r\n    const dialogRef = this.dialog.open(EditContActComponent, {\r\n      width: \"550px\",\r\n      data: element,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if ((result == \"true\")) {\r\n        this.getAllContrlActReq();\r\n      }\r\n      console.log(\"The dialog was closed\");\r\n    });\r\n  }\r\n  delete(item) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: `Do you want to delete \"${item.title}\"?`,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#00B96F',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Delete!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.logicalFormInfo\r\n        .deleteContrlActReq(item._id)\r\n        .subscribe((res) => {\r\n          Swal.fire({\r\n            title: 'Parameter Deleted successfully',\r\n            showConfirmButton: false,\r\n            timer: 1200,\r\n          });\r\n          console.log('deleted res', res);\r\n          this.getAllContrlActReq();\r\n            \r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<h2 class=\"ml-2\"> Control And Action Required List</h2>\r\n    <div class=\"col ml-2 mb-2\">\r\n      \r\n      <button  class=\"btn btn-outline-primary mt-1 mr-2 float-right\"[routerLink]=\"['/admin/siteInfo/addContrlActReq']\">\r\n        <i class=\"fas fa-folder-plus mr-2\"></i>Add Control and Action \r\n      </button>\r\n    </div>\r\n    <div class=\"mat-elevation-z8 ml-2\">\r\n      <table mat-table [dataSource]=\"dataSource\">\r\n    \r\n        <!-- Position Column -->\r\n        <ng-container matColumnDef=\"index\">\r\n          <th mat-header-cell *matHeaderCellDef> No. </th>\r\n          <td mat-cell *matCellDef=\"let element\">{{element.index}}</td>\r\n        </ng-container>\r\n    \r\n        <!-- Name Column -->\r\n       \r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"title\">\r\n      <th mat-header-cell *matHeaderCellDef> Name </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.title}} </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"edit\">\r\n        <th mat-header-cell *matHeaderCellDef> Edit </th>\r\n        <td mat-cell *matCellDef=\"let element\"(click)=\"edit(element)\"> <i class=\"fas fa-pencil-alt \"></i> \r\n        </td>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"delete\">\r\n        <th mat-header-cell *matHeaderCellDef> Delete </th>\r\n        <td mat-cell *matCellDef=\"let element\"(click)=\"delete(element)\"> <i class=\"fas fa-trash \"></i> \r\n        </td>\r\n      </ng-container>\r\n    \r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n      </table>\r\n    \r\n      <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\"\r\n                     showFirstLastButtons \r\n                     aria-label=\"Select page of periodic elements\">\r\n      </mat-paginator>\r\n    </div>\r\n    \r\n","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n  FormArray,\r\n  \r\n} from '@angular/forms'\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { Router } from '@angular/router';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-add-contr-act',\r\n  templateUrl: './add-contr-act.component.html',\r\n  styleUrls: ['./add-contr-act.component.scss']\r\n})\r\nexport class AddContrActComponent implements OnInit {\r\n\r\n  contrlAndActFG!: FormGroup;\r\n  formData: any;;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private router: Router,\r\n    private logicalFormInfo:LogicalFormInfoService\r\n  ) { \r\n    this.contrlAndActFG=this.fb.group({\r\n     // mode:\"JobTask\",\r\n      arrObj: this.fb.array([]),\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.addAction();\r\n  }\r\n  addAction() {\r\n    {\r\n      this.add().push(this.newAction());\r\n    }\r\n  }\r\n  add(): FormArray {\r\n    return this.contrlAndActFG.get('arrObj') as FormArray;\r\n  }\r\n  newAction(): FormGroup {\r\n    return this.fb.group({\r\n     \r\n      title: ['', Validators.required],\r\n    });\r\n  }\r\n  \r\n  removeSafetyModule(i) {\r\n    const item = <FormArray>this.contrlAndActFG.controls['arrObj'];\r\n    if (item.length > 1) {\r\n      item.removeAt(i);\r\n    \r\n    }\r\n  }\r\n  onFormSubmit() {\r\n    console.log(this.contrlAndActFG.value);\r\n    let data={\r\n      arrObj:this.contrlAndActFG.get('arrObj').value\r\n    }\r\n    this.logicalFormInfo.addMultipleContrlActReq(data).subscribe((data) => {\r\n      console.log('PPE=>', data);\r\n      Swal.fire({\r\n        title: 'Parameter Added successfully',\r\n        showConfirmButton: false,\r\n        timer: 1200,\r\n      });\r\n      this.router.navigate(['/admin/siteInfo/contrlActReq']);      \r\n    },(err)=>{console.error(err);} \r\n  \r\n    );\r\n    \r\n  }\r\n}\r\n","<div class=\"btn btn-outline-primary\" [routerLink]=\"['/admin/siteInfo/contrlActReq']\">\r\n    <i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\r\n  </div>\r\n  <div class=\"container px-4 py-4 bg-white\">\r\n    <form [formGroup]=\"contrlAndActFG\" (ngSubmit)=\"onFormSubmit()\">\r\n      <h2 class=\"text-center\">Add Control And Action</h2>\r\n      <br />\r\n      <hr />\r\n      <ng-container formArrayName=\"arrObj\">\r\n        <ng-container\r\n          *ngFor=\"let control of add().controls; let i = index\"\r\n          [formGroupName]=\"i\"\r\n        >\r\n          <div class=\"row justify-content-center\">\r\n            <div class=\"mr-1 mt-2\">\r\n              <span \r\n                >{{i+1}}.\r\n              </span>\r\n            </div>\r\n            <div class=\"col-8\">\r\n              <!-- <p for=\"exampleFormControlInput1\" class=\"form-Label\">Job Task Type</p> -->\r\n              <input\r\n                type=\"text\"\r\n                formControlName=\"title\"\r\n                class=\"form-control sign\"\r\n                id=\"name\"\r\n              />\r\n            </div>\r\n            <div class=\"col-1 mt-2\">\r\n              <span class=\"material-icons\" (click)=\"addAction()\"\r\n                >add_circle_outline\r\n              </span>\r\n            </div>\r\n            <div class=\"col-1 mt-2\">\r\n              <span class=\"material-icons\" (click)=\"removeSafetyModule(i)\">\r\n                remove_circle_outline\r\n              </span>\r\n            </div>\r\n          </div>\r\n  \r\n          <hr />\r\n        </ng-container>\r\n      </ng-container>\r\n      <br />\r\n  \r\n      <div class=\"col-md-2\">\r\n        <button type=\"submit\" class=\"btn btn-primary\"[disabled]=\"contrlAndActFG.get('arrObj').invalid\">Add</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  ","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport {  ViewChild } from '@angular/core';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table'\r\nimport { AddEditProjMangComponent } from './add-edit-proj-mang/add-edit-proj-mang.component';\r\n@Component({\r\n  selector: 'app-project-manager',\r\n  templateUrl: './project-manager.component.html',\r\n  styleUrls: ['./project-manager.component.scss']\r\n})\r\nexport class ProjectManagerComponent implements OnInit {\r\n\r\n  mode: any;\r\n  jobTaskData: any = [];\r\n  ELEMENT_DATA = [];\r\n  /////////////mat table////////////////\r\n  displayedColumns: string[] = ['index', 'title' ,'edit','delete'];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n  /////////////mat table end////////////////\r\n\r\n  constructor(private logicalFormInfo: LogicalFormInfoService,private dialog:MatDialog) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getAllProjectMang();\r\n  }\r\n\r\n  getAllProjectMang() {\r\n    this.logicalFormInfo.getAllProjectMang().subscribe((res:any) => {\r\n      console.log('getAllProjectMang=>', res);\r\n      // this.jobTaskData = res.data[0].subComponents;\r\n      let data = res.data;\r\n      data.forEach((element, index) => {\r\n        element.index = index + 1; //adding index\r\n      });\r\n\r\n      this.ELEMENT_DATA = data;\r\n      this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n      this.dataSource.paginator = this.paginator;\r\n\r\n      //  this.task = res.data.subComponents;\r\n    });\r\n \r\n  }\r\n  \r\n  edit(element){\r\n    const dialogRef = this.dialog.open(AddEditProjMangComponent, {\r\n      width: \"550px\",\r\n      data: element,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if ((result == \"true\")) {\r\n        this.getAllProjectMang();\r\n      }\r\n      console.log(\"The dialog was closed\");\r\n    });\r\n  }\r\n\r\n  delete(item) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: `Do you want to delete \"${item.title}\"?`,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#00B96F',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Delete!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.logicalFormInfo\r\n        .deleteProjectMang(item._id)\r\n        .subscribe((res) => {\r\n          Swal.fire({\r\n            title: 'Project Manager Deleted successfully',\r\n            showConfirmButton: false,\r\n            timer: 1200,\r\n          });\r\n          console.log('deleted res', res);\r\n          this.getAllProjectMang();\r\n            \r\n        });\r\n      }\r\n    });\r\n  }\r\n}\r\n","\r\n<h2> Project Manager List</h2>\r\n<div class=\"col ml-2 mb-2\">\r\n  \r\n  <button  class=\"btn btn-outline-primary mt-1 mr-2 float-right\"(click)=\"edit('')\">\r\n    <i class=\"fas fa-folder-plus mr-2\"></i>Add Project Manager \r\n  </button>\r\n</div>\r\n<div class=\"mat-elevation-z8 ml-2\">\r\n  <table mat-table [dataSource]=\"dataSource\">\r\n\r\n    <!-- Position Column -->\r\n    <ng-container matColumnDef=\"index\">\r\n      <th mat-header-cell *matHeaderCellDef> No. </th>\r\n      <td mat-cell *matCellDef=\"let element\">{{element.index}}</td>\r\n    </ng-container>\r\n\r\n    <!-- Name Column -->\r\n   \r\n<!-- Name Column -->\r\n<ng-container matColumnDef=\"title\">\r\n  <th mat-header-cell *matHeaderCellDef> Name </th>\r\n  <td mat-cell *matCellDef=\"let element\"> {{element.title}} </td>\r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"edit\">\r\n  <th mat-header-cell *matHeaderCellDef> Edit </th>\r\n  <td mat-cell *matCellDef=\"let element\"(click)=\"edit(element)\"> <i class=\"fas fa-pencil-alt \"></i> \r\n  </td>\r\n</ng-container>\r\n<ng-container matColumnDef=\"delete\">\r\n  <th mat-header-cell *matHeaderCellDef> Delete </th>\r\n  <td mat-cell *matCellDef=\"let element\"(click)=\"delete(element)\"> <i class=\"fas fa-trash \"></i> \r\n  </td>\r\n</ng-container>\r\n\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n  </table>\r\n\r\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\"\r\n                 showFirstLastButtons \r\n                 aria-label=\"Select page of periodic elements\">\r\n  </mat-paginator>\r\n</div>\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-edit-cust',\r\n  templateUrl: './edit-cust.component.html',\r\n  styleUrls: ['./edit-cust.component.scss']\r\n})\r\nexport class EditCustComponent implements OnInit {\r\n\r\n  constructor(private dialogRef: MatDialogRef<EditCustComponent>,\r\n\t\t@Inject(MAT_DIALOG_DATA) public data: any,) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<section class=\"content\">\r\n    <div class=\"container px-4 py-4 bg-white\">\r\n        <h2>Add Customer</h2>\r\n      \r\n        <div class=\"row\">\r\n          <div class=\"my-3 col\">\r\n            <p for=\"exampleFormControlInput1\" class=\"form-Label\">Customer Name</p>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"siteName\"\r\n            />\r\n          </div>\r\n          <div class=\"my-3 col\">\r\n            <p for=\"exampleFormControlInput1\" class=\"form-Label\">Customer Contact</p>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"siteName\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"my-3 col\">\r\n            <p for=\"exampleFormControlInput1\" class=\"form-Label\">Customer Contact Phone</p>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"siteName\"\r\n            />\r\n          </div>\r\n          <div class=\"my-3 col\">\r\n            <p for=\"exampleFormControlInput1\" class=\"form-Label\">Customer Email</p>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"siteName\"\r\n            />\r\n          </div>\r\n        </div> \r\n      \r\n      <div class=\"btn btn-primary\">\r\n      Submit\r\n      </div>\r\n        <!-- <div class=\"row\">\r\n          <div class=\"my-3 col\">\r\n            <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n              Customer Contact Phone\r\n            </p>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              formControlName=\"CustomerContactPhone\"\r\n              id=\"siteName\"\r\n            />\r\n          </div>\r\n          <div class=\"my-3 col\">\r\n            <p for=\"exampleFormControlInput1\" class=\"form-Label\">Project Manager</p>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              formControlName=\"projectManager\"\r\n              id=\"siteName\"\r\n            />\r\n          </div>\r\n        </div> -->\r\n      </div>\r\n    </section>\r\n      ","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { SetTitleService } from 'src/app/utils/services/set-title.service';\r\nimport { AddSiteComponent } from './add-site/add-site.component';\r\nimport { EditSiteComponent } from './edit-site/edit-site.component';\r\n\r\n@Component({\r\n  selector: 'app-add-site-info',\r\n  templateUrl: './add-site-info.component.html',\r\n  styleUrls: ['./add-site-info.component.scss']\r\n})\r\nexport class AddSiteInfoComponent implements OnInit {\r\n  mode: any;\r\n  jobTaskData: any = [];\r\n  ELEMENT_DATA = [];\r\n  /////////////mat table////////////////\r\n  displayedColumns: string[] = ['index', 'siteName','siteForemen','streetAddress','Suburb','State', 'edit', 'delete'];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n  /////////////mat table end////////////////\r\n\r\n  constructor( private dialog: MatDialog, private setTitle: SetTitleService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.setTitle.setTitle('WHS-Add Site Info');\r\n  }\r\n\r\n  getAllJobTask() {\r\n    // this.logicalFormInfo.getAllJobtask().subscribe((res: any) => {\r\n    //   console.log('jobTaskDetails=>', res);\r\n    //   // this.jobTaskData = res.data[0].subComponents;\r\n    //   let data = res.data\r\n    //   data.forEach((element, index) => {\r\n    //     element.index = index + 1; //adding index\r\n    //   });\r\n\r\n    //   this.ELEMENT_DATA = data;\r\n    //   this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n    //   this.dataSource.paginator = this.paginator;\r\n\r\n    //   //  this.task = res.data.subComponents;\r\n    // });\r\n\r\n  }\r\n\r\n  openDialog(id) {\r\n\t\tlet dialogRef = this.dialog.open(AddSiteComponent, {\r\n\t\t\tdata: {\r\n\t\t\t\taction: \"new\",\r\n\t\t\t\tuserId: id,\r\n\t\t\t},\r\n\t\t});\r\n\t\tdialogRef.afterClosed().subscribe((result) => {\r\n\t\t\tconsole.log(\"CustomerInfoComponent -> openDialog -> result\", result);\r\n\t\t\t\r\n\t\t\tconsole.log(\"The dialog was closed\");\r\n\t\t});\r\n\t}\r\n  edit(element) {\r\n    const dialogRef = this.dialog.open(EditSiteComponent, {\r\n      width: \"550px\",\r\n      data: element,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if ((result == \"true\")) {\r\n        this.getAllJobTask();\r\n      }\r\n      console.log(\"The dialog was closed\");\r\n    });\r\n  }\r\n  delete(item) {\r\n    // Swal.fire({\r\n    //   title: 'Are you sure?',\r\n    //   text: `Do you want to delete \"${item.title}\"?`,\r\n    //   icon: 'warning',\r\n    //   showCancelButton: true,\r\n    //   confirmButtonColor: '#00B96F',\r\n    //   cancelButtonColor: '#d33',\r\n    //   confirmButtonText: 'Yes, Delete!',\r\n    // }).then((result) => {\r\n    //   if (result.value) {\r\n    //     this.logicalFormInfo\r\n    //       .deleteJobTask(item._id)\r\n    //       .subscribe((res) => {\r\n    //         Swal.fire({\r\n    //           title: 'Parameter Deleted successfully',\r\n    //           showConfirmButton: false,\r\n    //           timer: 1200,\r\n    //         }); console.log('deleted res', res);\r\n    //         this.getAllJobTask();\r\n\r\n    //       });\r\n    //   }\r\n    // });\r\n  }\r\n\r\n}\r\n","\r\n\r\n<h2>Site Information List</h2>\r\n    <div class=\"col ml-2 mb-2\">\r\n      \r\n      <div class=\"col-sm-9\" style=\"display: flex; justify-content: flex-end\">\r\n        <span class=\"material-icons\" (click)=\"openDialog('abcd')\" style=\"cursor: pointer\">\r\n            control_point\r\n        </span>\r\n    </div>\r\n    </div>\r\n    <div class=\"mat-elevation-z8 ml-2\">\r\n      <table mat-table [dataSource]=\"dataSource\">\r\n    \r\n        <!-- Position Column -->\r\n        <ng-container matColumnDef=\"index\">\r\n          <th mat-header-cell *matHeaderCellDef> No. </th>\r\n          <td mat-cell *matCellDef=\"let element\">{{element.index}}</td>\r\n        </ng-container>\r\n    \r\n        <!-- Name Column -->\r\n       \r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"siteName\">\r\n      <th mat-header-cell *matHeaderCellDef> Site Name </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.siteName}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"siteForemen\">\r\n      <th mat-header-cell *matHeaderCellDef> Site Foremen </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.siteForemen}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"streetAddress\">\r\n      <th mat-header-cell *matHeaderCellDef> Street Address </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.streetAddress}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"Suburb\">\r\n      <th mat-header-cell *matHeaderCellDef> Suburb </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.Suburb}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"State\">\r\n      <th mat-header-cell *matHeaderCellDef> State </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.State}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"edit\">\r\n      <th mat-header-cell *matHeaderCellDef> Edit </th>\r\n      <td mat-cell *matCellDef=\"let element\"(click)=\"edit(element)\"> <i class=\"fas fa-pencil-alt \"></i> \r\n      </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"delete\">\r\n      <th mat-header-cell *matHeaderCellDef> Delete </th>\r\n      <td mat-cell *matCellDef=\"let element\"(click)=\"delete(element)\"> <i class=\"fas fa-trash \"></i> \r\n      </td>\r\n    </ng-container>\r\n\r\n    \r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n      </table>\r\n    \r\n      <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\"\r\n                     showFirstLastButtons \r\n                     aria-label=\"Select page of periodic elements\">\r\n      </mat-paginator>\r\n    </div>\r\n    ","import { AddContrActComponent } from './contr-and-act-req/add-contr-act/add-contr-act.component';\r\nimport { ContrAndActReqComponent } from './contr-and-act-req/contr-and-act-req.component';\r\nimport { AddHazardComponent } from './identify-hazards/add-hazard/add-hazard.component';\r\nimport { IdentifyHazardsComponent } from './identify-hazards/identify-hazards.component';\r\nimport { ProjectManagerComponent } from './project-manager/project-manager.component';\r\nimport { UploadBulkDataComponent } from './upload-bulk-data/upload-bulk-data.component';\r\nimport { EditCOPComponent } from './code-of-pract/edit-cop/edit-cop.component';\r\nimport { AddCOPComponent } from './code-of-pract/add-cop/add-cop.component';\r\nimport { CodeOfPractComponent } from './code-of-pract/code-of-pract.component';\r\nimport { EditLicenceCatComponent } from './licence-and-qual/licence-cat/edit-licence-cat/edit-licence-cat.component';\r\nimport { LicenceCatComponent } from './licence-and-qual/licence-cat/licence-cat.component';\r\nimport { EditLicenceComponent } from './licence-and-qual/edit-licence/edit-licence.component';\r\nimport { AddLicenceComponent } from './licence-and-qual/add-licence/add-licence.component';\r\nimport { AddPPEComponent } from './ppe-select/add-ppe/add-ppe.component';\r\nimport { AddHighRiskConstructionComponent } from './high-risk-con/add-high-risk-construction/add-high-risk-construction.component';\r\nimport { AddJobTaskComponent } from './job-task/add-job-task/add-job-task.component';\r\nimport { AddCustomerComponent } from './add-customer/add-customer.component';\r\nimport { PpeSelectComponent } from './ppe-select/ppe-select.component';\r\nimport { LicenceAndQualComponent } from './licence-and-qual/licence-and-qual.component';\r\nimport { HighRiskConComponent } from './high-risk-con/high-risk-con.component';\r\nimport { JobTaskComponent } from './job-task/job-task.component';\r\nimport { AddSiteInfoComponent } from './add-site-info/add-site-info.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { SiteInfoComponent } from './site-info.component';\r\nimport { AddLicenceCatComponent } from './licence-and-qual/licence-cat/add-licence-cat/add-licence-cat.component';\r\nimport { AddSiteComponent } from './add-site-info/add-site/add-site.component';\r\nimport { EditSiteComponent } from './add-site-info/edit-site/edit-site.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'addSite', component: AddSiteInfoComponent, children:[\r\n    { path: 'addSite1', component: AddSiteComponent},\r\n    { path: 'editSite', component: EditSiteComponent}\r\n  ] },\r\n  { path: 'addCustomer', component: AddCustomerComponent },\r\n  { path: 'jobTask', component: JobTaskComponent},\r\n  {path:'addJobTask',component:AddJobTaskComponent},\r\n  {path:'addHighRisk',component:AddHighRiskConstructionComponent},\r\n  {path:'addPPE',component:AddPPEComponent},\r\n\r\n  { path: 'highRisk', component: HighRiskConComponent },\r\n  { path: 'licenceAndQual', component: LicenceAndQualComponent },\r\n  { path: 'addLicence', component: AddLicenceComponent },\r\n  { path: 'editLicence', component: EditLicenceComponent },\r\n  { path: 'licenceCat', component: LicenceCatComponent },\r\n  { path: 'addLicenceCat', component: AddLicenceCatComponent },\r\n  { path: 'editLicenceCat', component: EditLicenceCatComponent },\r\n  { path: 'ppeSel', component: PpeSelectComponent },\r\n  { path: 'codeOfpract', component: CodeOfPractComponent },\r\n  { path: 'addCOP', component: AddCOPComponent },\r\n  { path: 'editCOP', component: EditCOPComponent },\r\n  { path: 'uploadData', component: UploadBulkDataComponent },\r\n  { path: 'projMang', component: ProjectManagerComponent },\r\n  { path: 'hazards', component: IdentifyHazardsComponent },\r\n  { path: 'addHazards', component: AddHazardComponent },\r\n  { path: 'contrlActReq', component: ContrAndActReqComponent },\r\n  { path: 'addContrlActReq', component: AddContrActComponent },\r\n  { path: 'uploadDataInBulk', component: UploadBulkDataComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class SiteInfoRoutingModule { }\r\n"]}