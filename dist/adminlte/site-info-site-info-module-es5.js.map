{"version":3,"sources":["webpack:///src/app/site-info/identify-hazards/add-hazard/add-hazard.component.ts","webpack:///src/app/site-info/identify-hazards/add-hazard/add-hazard.component.html","webpack:///src/app/site-info/high-risk-con/add-high-risk-construction/add-high-risk-construction.component.ts","webpack:///src/app/site-info/high-risk-con/add-high-risk-construction/add-high-risk-construction.component.html","webpack:///src/app/site-info/licence-and-qual/edit-licence/edit-licence.component.ts","webpack:///src/app/site-info/licence-and-qual/edit-licence/edit-licence.component.html","webpack:///src/app/site-info/add-site-info/add-site/add-site.component.ts","webpack:///src/app/site-info/add-site-info/add-site/add-site.component.html","webpack:///src/app/site-info/site-info.module.ts","webpack:///src/app/site-info/residual-risk-level/residual-risk-level.component.ts","webpack:///src/app/site-info/residual-risk-level/residual-risk-level.component.html","webpack:///src/app/site-info/project-manager/add-edit-proj-mang/add-edit-proj-mang.component.ts","webpack:///src/app/site-info/project-manager/add-edit-proj-mang/add-edit-proj-mang.component.html","webpack:///src/app/site-info/staff/staff.component.ts","webpack:///src/app/site-info/staff/staff.component.html","webpack:///src/app/site-info/job-task/edit-task/edit-task.component.ts","webpack:///src/app/site-info/job-task/edit-task/edit-task.component.html","webpack:///src/app/site-info/identify-hazards/identify-hazards.component.ts","webpack:///src/app/site-info/identify-hazards/identify-hazards.component.html","webpack:///src/app/site-info/licence-and-qual/licence-cat/edit-licence-cat/edit-licence-cat.component.ts","webpack:///src/app/site-info/licence-and-qual/licence-cat/edit-licence-cat/edit-licence-cat.component.html","webpack:///src/app/site-info/contr-and-act-req/edit-cont-act/edit-cont-act.component.ts","webpack:///src/app/site-info/contr-and-act-req/edit-cont-act/edit-cont-act.component.html","webpack:///src/app/site-info/risk-level/edit-risk-level/edit-risk-level.component.ts","webpack:///src/app/site-info/risk-level/edit-risk-level/edit-risk-level.component.html","webpack:///src/app/site-info/add-customer/add-customer.component.ts","webpack:///src/app/site-info/add-customer/add-customer.component.html","webpack:///src/app/site-info/chemical/add-chemical/add-chemical.component.ts","webpack:///src/app/site-info/chemical/add-chemical/add-chemical.component.html","webpack:///src/app/site-info/code-of-pract/add-cop/add-cop.component.ts","webpack:///src/app/site-info/code-of-pract/add-cop/add-cop.component.html","webpack:///src/app/site-info/chemical/edit-chemical/edit-chemical.component.ts","webpack:///src/app/site-info/chemical/edit-chemical/edit-chemical.component.html","webpack:///src/app/site-info/residual-risk-level/edit-residual-risk-level/edit-residual-risk-level.component.ts","webpack:///src/app/site-info/residual-risk-level/edit-residual-risk-level/edit-residual-risk-level.component.html","webpack:///src/app/site-info/risk-level/risk-level.component.ts","webpack:///src/app/site-info/risk-level/risk-level.component.html","webpack:///src/app/site-info/ppe-select/ppe-select.component.ts","webpack:///src/app/site-info/ppe-select/ppe-select.component.html","webpack:///src/app/site-info/licence-and-qual/licence-cat/licence-cat.component.ts","webpack:///src/app/site-info/licence-and-qual/licence-cat/licence-cat.component.html","webpack:///src/app/site-info/add-customer/adding-cust/adding-cust.component.ts","webpack:///src/app/site-info/add-customer/adding-cust/adding-cust.component.html","webpack:///src/app/site-info/code-of-pract/code-of-pract.component.ts","webpack:///src/app/site-info/code-of-pract/code-of-pract.component.html","webpack:///src/app/site-info/code-of-pract/edit-cop/edit-cop.component.ts","webpack:///src/app/site-info/code-of-pract/edit-cop/edit-cop.component.html","webpack:///src/app/site-info/job-task/add-job-task/add-job-task.component.ts","webpack:///src/app/site-info/job-task/add-job-task/add-job-task.component.html","webpack:///src/app/site-info/chemical/chemical.component.ts","webpack:///src/app/site-info/chemical/chemical.component.html","webpack:///src/app/site-info/residual-risk-level/add-residual-risk-level/add-residual-risk-level.component.ts","webpack:///src/app/site-info/residual-risk-level/add-residual-risk-level/add-residual-risk-level.component.html","webpack:///src/app/site-info/licence-and-qual/add-licence/add-licence.component.ts","webpack:///src/app/site-info/licence-and-qual/add-licence/add-licence.component.html","webpack:///src/app/site-info/site-info.component.ts","webpack:///src/app/site-info/site-info.component.html","webpack:///src/app/site-info/ppe-select/edit-ppe/edit-ppe.component.ts","webpack:///src/app/site-info/ppe-select/edit-ppe/edit-ppe.component.html","webpack:///src/app/site-info/licence-and-qual/licence-cat/add-licence-cat/add-licence-cat.component.ts","webpack:///src/app/site-info/high-risk-con/high-risk-con.component.ts","webpack:///src/app/site-info/high-risk-con/high-risk-con.component.html","webpack:///src/app/site-info/ppe-select/add-ppe/add-ppe.component.ts","webpack:///src/app/site-info/ppe-select/add-ppe/add-ppe.component.html","webpack:///src/app/site-info/identify-hazards/edit-hazard/edit-hazard.component.ts","webpack:///src/app/site-info/identify-hazards/edit-hazard/edit-hazard.component.html","webpack:///src/app/site-info/staff/edit-staff/edit-staff.component.ts","webpack:///src/app/site-info/staff/edit-staff/edit-staff.component.html","webpack:///src/app/site-info/high-risk-con/edit-high-risk-construction/edit-high-risk-construction.component.ts","webpack:///src/app/site-info/high-risk-con/edit-high-risk-construction/edit-high-risk-construction.component.html","webpack:///src/app/site-info/job-task/job-task.component.ts","webpack:///src/app/site-info/job-task/job-task.component.html","webpack:///src/app/site-info/licence-and-qual/licence-and-qual.component.ts","webpack:///src/app/site-info/licence-and-qual/licence-and-qual.component.html","webpack:///src/app/site-info/contr-and-act-req/contr-and-act-req.component.ts","webpack:///src/app/site-info/contr-and-act-req/contr-and-act-req.component.html","webpack:///src/app/site-info/risk-level/add-risk-level/add-risk-level.component.ts","webpack:///src/app/site-info/risk-level/add-risk-level/add-risk-level.component.html","webpack:///src/app/site-info/contr-and-act-req/add-contr-act/add-contr-act.component.ts","webpack:///src/app/site-info/contr-and-act-req/add-contr-act/add-contr-act.component.html","webpack:///src/app/site-info/project-manager/project-manager.component.ts","webpack:///src/app/site-info/project-manager/project-manager.component.html","webpack:///src/app/site-info/add-customer/edit-cust/edit-cust.component.ts","webpack:///src/app/site-info/add-customer/edit-cust/edit-cust.component.html","webpack:///src/app/site-info/add-site-info/add-site-info.component.ts","webpack:///src/app/site-info/add-site-info/add-site-info.component.html","webpack:///src/app/site-info/staff/add-staff/add-staff.component.ts","webpack:///src/app/site-info/staff/add-staff/add-staff.component.html","webpack:///src/app/site-info/site-info-routing.module.ts"],"names":["AddHazardComponent","fb","router","logicalFormInfo","hazardFG","group","arrObj","array","addAction","add","push","newAction","get","title","required","i","item","controls","length","removeAt","console","log","value","data","addMultipleHazards","subscribe","fire","showConfirmButton","timer","navigate","err","error","onFormSubmit","selector","templateUrl","styleUrls","AddHighRiskConstructionComponent","riskConstr","addMultipleRisk","EditLicenceComponent","dialogRef","categories","dataRec","editTitle","tradeCategoryId","_id","getAllLicenceCat","res","updateLicence","resData","close","closeDialog","AddSiteComponent","logicalFormInfoService","state","label","addSitesForm","siteName","streetNumber","streetAddress","suburb","addSite","onSubmit","SiteInfoModule","declarations","imports","ResidualRiskLevelComponent","dialog","setTitle","spinner","ELEMENT_DATA","displayedColumns","dataSource","allResidualRiskLevel","paginator","getAllResidualRiskLevel","getAllResidual","forEach","element","index","open","width","afterClosed","result","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","show","deleteResidual","hide","AddEditProjMangComponent","componentId","updateProjectMang","addProjectMang","StaffComponent","allStaff","getAllStaff","deleteStaff","EditTaskComponent","PPE","codeOfPractice","licence","risk","updateJobTask","IdentifyHazardsComponent","jobTaskData","getAllHazards","deleteHazards","event","filterValue","target","filter","trim","toLowerCase","applyFilter","EditLicenceCatComponent","updateLicenceCat","addLicenceCat","EditContActComponent","updateContrlActReq","EditRiskLevelComponent","updateRiskLevel","AddCustomerComponent","getAllCustomers","getAllCustomer","id","height","action","userId","customerName","deleteCustomer","AddChemicalComponent","addChemicalForm","addChemical","addMultipleChemical","AddCOPComponent","codeOfPractFG","addMultipleCOP","EditChemicalComponent","updateChemical","EditResidualRiskLevelComponent","updateResidual","RiskLevelComponent","allRiskLevel","getAllRiskLevel","deleteRiskLevel","PpeSelectComponent","sort","getAllPPEs","getAllPPE","deletePPE","LicenceCatComponent","deleteLicenceCat","edit","AddingCustComponent","states","name","addCustomerForm","customerContact","customerStreetAddress","customerState","customerPostCode","businessName","addCustomerDetails","customerArr","customerForm","email","phone","position","addCustomer","CodeOfPractComponent","getAllCodeOfPractice","getAllCOP","deleteCOP","EditCOPComponent","updateCOP","AddJobTaskComponent","licenceCatAll","jobTaskDetails","getAllCategories","addMultipleJobTask","ChemicalComponent","allChemical","getAllChemical","deleteChemical","AddResidualRiskLevelComponent","addResidualForm","addResidual","addMultipleResidual","AddLicenceComponent","addLicenceFG","addMultipleLicence","SiteInfoComponent","EditPPEComponent","updatePPE","AddLicenceCatComponent","addLicenceCatFG","HighRiskConComponent","highRiskConstructionData","isEdit","Edit","Add","collectionSize","getAllHighRisk","getAllRisk","deleteRisk","AddPPEComponent","PPEformgp","addMultiplePPE","EditHazardComponent","updateHazards","EditStaffComponent","updateStaff","EditHighRiskConstructionComponent","updateRisk","JobTaskComponent","getAllJobTask","getAllJobtask","deleteJobTask","LicenceAndQualComponent","getAllLicence","deleteLicence","ContrAndActReqComponent","getAllContrlActReq","deleteContrlActReq","AddRiskLevelComponent","addRiskForm","addRisk","addMultipleRiskLevel","AddContrActComponent","contrlAndActFG","addMultipleContrlActReq","ProjectManagerComponent","getAllProjectMang","deleteProjectMang","EditCustComponent","editCustomerForm","customerContactPhone","customerEmail","updateCustomer","AddSiteInfoComponent","allSites","getAllSites","getAllSite","deleteSite","openDialog","AddStaffComponent","addStaffForm","addStaff","addMultipleStaff","routes","path","component","children","SiteInfoRoutingModule","forChild","exports"],"mappings":"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","file":"site-info-site-info-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, FormArray } from '@angular/forms';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { Router } from '@angular/router';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-add-hazard',\r\n  templateUrl: './add-hazard.component.html',\r\n  styleUrls: ['./add-hazard.component.scss'],\r\n})\r\nexport class AddHazardComponent implements OnInit {\r\n  hazardFG!: FormGroup;\r\n  formData: any;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private router: Router,\r\n    private logicalFormInfo: LogicalFormInfoService\r\n  ) {\r\n    this.hazardFG = this.fb.group({\r\n      arrObj: this.fb.array([]),\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.addAction();\r\n  }\r\n  addAction() {\r\n    {\r\n      this.add().push(this.newAction());\r\n    }\r\n  }\r\n  add(): FormArray {\r\n    return this.hazardFG.get('arrObj') as FormArray;\r\n  }\r\n  newAction(): FormGroup {\r\n    return this.fb.group({\r\n      title: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  removeSafetyModule(i) {\r\n    const item = <FormArray>this.hazardFG.controls['arrObj'];\r\n    if (item.length > 1) {\r\n      item.removeAt(i);\r\n    }\r\n  }\r\n  onFormSubmit() {\r\n    console.log(this.hazardFG.value);\r\n    let data = {\r\n      arrObj: this.hazardFG.get('arrObj').value,\r\n    };\r\n    this.logicalFormInfo.addMultipleHazards(data).subscribe(\r\n      (data) => {\r\n        console.log('PPE=>', data);\r\n        Swal.fire({\r\n          title: 'Parameter Added successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });  \r\n        this.router.navigate(['/admin/siteInfo/hazards']);\r\n      },\r\n      (err) => {\r\n        console.error(err);\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"btn btn-outline-primary\" [routerLink]=\"['/admin/siteInfo/hazards']\">\r\n    <i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\r\n  </div>\r\n  <div class=\"container px-4 py-4 bg-white\">\r\n    <form [formGroup]=\"hazardFG\" (ngSubmit)=\"onFormSubmit()\">\r\n      <h2 class=\"text-center\">Add Hazard</h2>\r\n      <br />\r\n      <hr />\r\n      <ng-container formArrayName=\"arrObj\">\r\n        <ng-container\r\n          *ngFor=\"let control of add().controls; let i = index\"\r\n          [formGroupName]=\"i\"\r\n        >\r\n          <div class=\"row justify-content-center\">\r\n            <div class=\"mr-1 mt-2\">\r\n              <span \r\n                >{{i+1}}.\r\n              </span>\r\n            </div>\r\n            <div class=\"col-8\">\r\n              <!-- <p for=\"exampleFormControlInput1\" class=\"form-Label\">Job Task Type</p> -->\r\n              <input\r\n                type=\"text\"\r\n                formControlName=\"title\"\r\n                class=\"form-control sign\"\r\n                id=\"name\"\r\n              />\r\n            </div>\r\n            <div class=\"col-1 mt-2\">\r\n              <span class=\"material-icons\" (click)=\"addAction()\"\r\n                >add_circle_outline\r\n              </span>\r\n            </div>\r\n            <div class=\"col-1 mt-2\">\r\n              <span class=\"material-icons\" (click)=\"removeSafetyModule(i)\">\r\n                remove_circle_outline\r\n              </span>\r\n            </div>\r\n          </div>\r\n  \r\n          <hr />\r\n        </ng-container>\r\n      </ng-container>\r\n      <br />\r\n  \r\n      <div class=\"col-md-2\">\r\n        <button type=\"submit\" class=\"btn btn-primary\"[disabled]=\"hazardFG.get('arrObj').invalid\">Add</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  ","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators,FormArray } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-add-high-risk-construction',\r\n  templateUrl: './add-high-risk-construction.component.html',\r\n  styleUrls: ['./add-high-risk-construction.component.scss'],\r\n})\r\nexport class AddHighRiskConstructionComponent implements OnInit {\r\n  // riskDetails!: FormGroup;\r\n  // riskData: any = [];\r\n  // ID: any;\r\n  // hide: boolean = true;\r\n  // constructor(\r\n  //   private logicalFormInfo: LogicalFormInfoService,\r\n  //   private fb: FormBuilder,\r\n  //   public dialogRef: MatDialogRef<AddHighRiskConstructionComponent>,\r\n  //   @Inject(MAT_DIALOG_DATA) public data: any\r\n  // ) {\r\n  //   {\r\n  //     this.riskDetails = this.fb.group({\r\n  //       title: ['', Validators.required],\r\n  //     });\r\n  //     console.log('riskDetails=>', this.riskDetails);\r\n  //   }\r\n  // }\r\n\r\n  // ngOnInit(): void {}\r\n\r\n  // onFormSubmit() {\r\n  //   console.log(this.riskDetails);\r\n  //   let data = {\r\n  //     componentId: this.data.EditData,\r\n  //     title: this.riskDetails.get('title').value,\r\n  //   };\r\n  //   this.logicalFormInfo.addSubComponent(data).subscribe((data) => {\r\n  //     console.log('riskDetails=>', data);\r\n  //     // this.riskData = data;\r\n  //     this.dialogRef.close('true');\r\n  //     this.riskDetails.reset();\r\n  //     Swal.fire('Parameter added successfully');\r\n  //   });\r\n  // }\r\n  \r\n  riskConstr!: FormGroup;\r\n  formData: any;;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private router: Router,\r\n    private logicalFormInfo:LogicalFormInfoService\r\n  ) { \r\n    this.riskConstr=this.fb.group({\r\n     // mode:\"JobTask\",\r\n      arrObj: this.fb.array([]),\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.addAction();\r\n  }\r\n  addAction() {\r\n    {\r\n      this.add().push(this.newAction());\r\n    }\r\n  }\r\n  add(): FormArray {\r\n    return this.riskConstr.get('arrObj') as FormArray;\r\n  }\r\n  newAction(): FormGroup {\r\n    return this.fb.group({\r\n     \r\n      title: ['', Validators.required],\r\n    });\r\n  }\r\n  \r\n  removeSafetyModule(i) {\r\n    const item = <FormArray>this.riskConstr.controls['arrObj'];\r\n    if (item.length > 1) {\r\n      item.removeAt(i);\r\n    \r\n    }\r\n  }\r\n  onFormSubmit() {\r\n    // console.log(this.riskConstr.value);\r\n    let data={\r\n      arrObj:this.riskConstr.get('arrObj').value\r\n    }\r\n    // console.log(data);\r\n    \r\n    this.logicalFormInfo.addMultipleRisk(data).subscribe((data) => {\r\n      console.log('Risk=>', data);\r\n      Swal.fire({\r\n        title: 'Parameter Added successfully',\r\n        showConfirmButton: false,\r\n        timer: 1200,\r\n      });  \r\n      this.router.navigate(['/admin/siteInfo/highRisk']);    \r\n    },(err)=>{console.error(err);} \r\n  \r\n    );\r\n}\r\n}","<!-- <div class=\"container px-4 py-4 card\">\r\n  <form [formGroup]=\"riskDetails\" (ngSubmit)=\"onFormSubmit()\">\r\n    <h1 class=\"text-center pt-3\">\r\n      <p style=\"text-align: center\">High Risk Construction</p>\r\n    </h1>\r\n    <hr />\r\n    <div>\r\n      <div class=\"row\">\r\n        <div class=\"col-8\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">Add Parameter</p>\r\n          <input\r\n            type=\"text\"\r\n            formControlName=\"title\"\r\n            class=\"form-control\"\r\n            id=\"name\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <br />\r\n    <hr />\r\n    <div class=\"col-md-2\">\r\n      <button\r\n        type=\"submit\"\r\n        [disabled]=\"riskDetails.get('title').hasError('required')\"\r\n        class=\"btn btn-primary\"\r\n      >\r\n        Add\r\n      </button>\r\n    </div>\r\n  </form>\r\n</div> -->\r\n<div class=\"btn btn-outline-primary\" [routerLink]=\"['/admin/siteInfo/highRisk']\">\r\n  <i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\r\n</div>\r\n<div class=\"container px-4 py-4 bg-white\">\r\n  <form [formGroup]=\"riskConstr\" (ngSubmit)=\"onFormSubmit()\">\r\n    <h2 class=\"text-center\">Add High Risk Construction Parameter</h2>\r\n    <br />\r\n    <hr />\r\n    <ng-container formArrayName=\"arrObj\">\r\n      <ng-container\r\n        *ngFor=\"let control of add().controls; let i = index\"\r\n        [formGroupName]=\"i\"\r\n      >\r\n        <div class=\"row justify-content-center\">\r\n          <div class=\"mr-1 mt-2\">\r\n            <span \r\n              >{{i+1}}.\r\n            </span>\r\n          </div>\r\n          <div class=\"col-8\">\r\n            <!-- <p for=\"exampleFormControlInput1\" class=\"form-Label\">Job Task Type</p> -->\r\n            <input\r\n              type=\"text\"\r\n              formControlName=\"title\"\r\n              class=\"form-control sign\"\r\n              id=\"name\"\r\n            />\r\n          </div>\r\n          <div class=\"col-1 mt-2\">\r\n            <span class=\"material-icons\" (click)=\"addAction()\"\r\n              >add_circle_outline\r\n            </span>\r\n          </div>\r\n          <div class=\"col-1 mt-2\">\r\n            <span class=\"material-icons\" (click)=\"removeSafetyModule(i)\">\r\n              remove_circle_outline\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        <hr />\r\n      </ng-container>\r\n    </ng-container>\r\n    <br />\r\n\r\n    <div class=\"col-md-2\">\r\n      <button type=\"submit\" class=\"btn btn-primary\"[disabled]=\"riskConstr.get('arrObj').invalid\">Add</button>\r\n    </div>\r\n  </form>\r\n</div>\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\n@Component({\r\n  selector: 'app-edit-licence',\r\n  templateUrl: './edit-licence.component.html',\r\n  styleUrls: ['./edit-licence.component.scss']\r\n})\r\nexport class EditLicenceComponent implements OnInit {\r\n\r\n  editTitle: FormGroup;\r\n  dataRec: any;\r\n  categories=[];\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    public dialogRef: MatDialogRef<EditLicenceComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.dataRec = data;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    console.log(this.dataRec);\r\n    \r\n    this.editTitle = this.fb.group({\r\n      title: [this.dataRec.title, Validators.required],\r\n      tradeCategoryId: [this.dataRec.tradeCategoryId._id, Validators.required],\r\n    });\r\n    console.log(this.editTitle.value)\r\n    this.getAllLicenceCat();\r\n  }\r\n  getAllLicenceCat() {\r\n    this.logicalFormInfo.getAllLicenceCat().subscribe((res) => {\r\n      console.log('getAllLicenceCat=>', res);\r\n      this.categories = res.data;\r\n      console.log('categories=>', res.data);\r\n    });\r\n \r\n  }\r\n  onFormSubmit() {\r\n\r\n    let data={\r\n      title :this.editTitle.get('title').value,\r\n      tradeCategoryId:this.editTitle.get('tradeCategoryId').value,\r\n    }\r\n    console.log('tradeCategoryId',data);\r\n    \r\n    this.logicalFormInfo\r\n      .updateLicence(this.dataRec._id,data)\r\n      .subscribe((resData) => {\r\n        console.log('updateLicence', resData);\r\n\r\n        this.dialogRef.close('true');\r\n        Swal.fire('Parameter Edited successfully');\r\n      });\r\n  }\r\n  closeDialog(){\r\n    this.dialogRef.close('false');\r\n\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"editTitle\">\r\n    <h1 mat-dialog-title>Edit Licence</h1>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-6\">\r\n      <!-- <mat-form-field\r\n        appearance=\"legacy\"\r\n        class=\"example-full-width\"\r\n        style=\"width: 1200px\"\r\n      >\r\n        <input\r\n          matInput\r\n          formControlName=\"title\"\r\n          style=\"text-transform: capitalize !important\"\r\n        />\r\n      </mat-form-field> -->\r\n      <input\r\n      type=\"text\"\r\n      formControlName=\"title\"\r\n      class=\"form-control sign\"\r\n      id=\"title\"\r\n      placeholder=\"Licence Name\"\r\n    />\r\n    </div>\r\n    <div class=\"col-6\">\r\n      <select\r\n        class=\"form-select form-control\"\r\n        aria-label=\"Default select example\"\r\n        formControlName=\"tradeCategoryId\"\r\n      >\r\n     \r\n        <option *ngFor=\"let item of categories\" [value]=\"item._id\">{{item.title}}</option>\r\n    \r\n      </select>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row mt-4\">\r\n    <div class=\"col-sm-2 offset-8\">\r\n      <button mat-raised-button (click)=\"closeDialog()\">Close</button>\r\n    </div>\r\n    <div class=\"col-sm-2\">\r\n      <button\r\n        mat-raised-button\r\n        [disabled]=\"!editTitle.valid\"\r\n        (click)=\"onFormSubmit()\"\r\n      >\r\n        Update\r\n      </button>\r\n    </div>\r\n  </div>\r\n</form>\r\n","import { value } from './../../../views/dynamic-form/global.model';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport Swal from 'sweetalert2';\r\n@Component({\r\n  selector: 'app-add-site',\r\n  templateUrl: './add-site.component.html',\r\n  styleUrls: ['./add-site.component.scss']\r\n})\r\nexport class AddSiteComponent implements OnInit {\r\n\r\n  addSitesForm\r\n  constructor( \r\n    private dialogRef: MatDialogRef<AddSiteComponent>,\r\n\t\t@Inject(MAT_DIALOG_DATA) public data: any,\r\n    private fb:FormBuilder,\r\n    private logicalFormInfoService: LogicalFormInfoService\r\n    ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.addSitesForm = this.fb.group({\r\n      siteName:[''],\r\n      streetNumber:[''],\r\n      streetAddress:[''],\r\n      suburb:[''],\r\n      state:[''],\r\n    })\r\n  }\r\n  state = [\r\n      { label: 'New South Wales', value: '' },\r\n      { label: 'Queensland', value: '' },\r\n      { label: 'South Australia', value: '' },\r\n      { label: 'Tasmania', value: '' },\r\n      { label: 'Victoria', value: '' },\r\n      { label: 'Western Australia', value: '' },\r\n    ];\r\n    onSubmit(){\r\n      console.log(this.addSitesForm.value)\r\n      this.logicalFormInfoService.addSite(this.addSitesForm.value).subscribe(res => {\r\n        console.log(res);\r\n        this.dialogRef.close('true');\r\n        Swal.fire({\r\n          title: 'Site Added successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });\r\n      });\r\n    }\r\n    close() {\r\n      this.dialogRef.close();\r\n  }\r\n}\r\n","<section  [formGroup]=\"addSitesForm\" class=\"content\">\r\n    <div class=\"container px-4 py-4 bg-white\">\r\n      <div mat-dialog-title class=\"dialog-title\">\r\n      <h2> Add Site Information</h2>\r\n      <button type=\"button\" class=\"close\" \r\n      style=\"font-size: 30px;\"\r\n      (click)=\"close()\" aria-label=\"Close\">\r\n      <span aria-hidden=\"true\">×</span>\r\n    </button>\r\n    </div>\r\n    <hr>\r\n      <div class=\"row\" [formGroup]=\"addSitesForm\">\r\n      <div class=\"my-3 col-6\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">Site Name</p>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            formControlName=\"siteName\"\r\n            id=\"siteName\"\r\n          />\r\n        </div>\r\n     </div>\r\n     <div class=\"row\">\r\n        <div class=\"my-3 col-2\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">Street No.</p>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            formControlName=\"streetNumber\"\r\n            id=\"streetNumber\"\r\n          />\r\n        </div>\r\n        <div class=\"my-3 col-4\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">Street Address</p>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            formControlName=\"streetAddress\"\r\n            id=\"streetAddress\"\r\n          />\r\n        </div>\r\n        <div class=\"my-3 col-2\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">Suburb</p>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            formControlName=\"suburb\"\r\n            id=\"suburb\"\r\n          />\r\n        </div>\r\n        <div class=\"my-3 col-4\">\r\n            <p for=\"exampleFormControlInput1\" class=\"form-label\"\r\n            >State</p\r\n          >  \r\n          <select\r\n          class=\"form-select form-control col\"\r\n          id=\"state\"\r\n          aria-label=\"Default select example\"\r\n          formControlName=\"state\"\r\n\r\n        >\r\n          <option selected hidden>Select</option>\r\n          <option value=\"NSW\">NSW</option>\r\n          <option value=\"ACT\">ACT</option>\r\n          <option value=\"QLD\">QLD</option>\r\n          <option value=\"NT\">NT</option>\r\n          <option value=\"SA\">SA</option>\r\n          <option value=\"NZ\">NZ</option>\r\n          <option value=\"TAS\">TAS</option>\r\n          <option value=\"VIC\">VIC</option>\r\n          <option value=\"WA\">WA</option>\r\n        </select>\r\n       \r\n        </div>\r\n      </div>\r\n      <hr>\r\n    <div >\r\n      <button class=\"btn btn-primary\" (click)=\"onSubmit()\">\r\n        Add\r\n      </button>\r\n    </div>\r\n  </div>\r\n    </section>\r\n    ","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { SiteInfoRoutingModule } from './site-info-routing.module';\r\nimport { SiteInfoComponent } from './site-info.component';\r\nimport { AddSiteInfoComponent } from './add-site-info/add-site-info.component';\r\nimport { JobTaskComponent } from './job-task/job-task.component';\r\nimport { HighRiskConComponent } from './high-risk-con/high-risk-con.component';\r\nimport { PpeSelectComponent } from './ppe-select/ppe-select.component';\r\nimport { LicenceAndQualComponent } from './licence-and-qual/licence-and-qual.component';\r\nimport { SharedModule } from './../shared/shared.module';\r\nimport { AddCustomerComponent } from './add-customer/add-customer.component';\r\n// import { AddLicenceAndQualificationComponent } from './licence-and-qual/add-licence-and-qualification/add-licence-and-qualification.component';\r\n// import { AddPPEselectComponent } from './ppe-select/add-ppeselect/add-ppeselect.component';\r\nimport { AddHighRiskConstructionComponent } from './high-risk-con/add-high-risk-construction/add-high-risk-construction.component';\r\nimport { EditHighRiskConstructionComponent } from './high-risk-con/edit-high-risk-construction/edit-high-risk-construction.component';\r\nimport { AddJobTaskComponent } from './job-task/add-job-task/add-job-task.component';\r\nimport { AddPPEComponent } from './ppe-select/add-ppe/add-ppe.component';\r\nimport { EditTaskComponent } from './job-task/edit-task/edit-task.component';\r\nimport { EditPPEComponent } from './ppe-select/edit-ppe/edit-ppe.component';\r\nimport { EditLicenceComponent } from './licence-and-qual/edit-licence/edit-licence.component';\r\nimport { AddLicenceComponent } from './licence-and-qual/add-licence/add-licence.component';\r\nimport { LicenceCatComponent } from './licence-and-qual/licence-cat/licence-cat.component';\r\nimport { AddLicenceCatComponent } from './licence-and-qual/licence-cat/add-licence-cat/add-licence-cat.component';\r\nimport { EditLicenceCatComponent } from './licence-and-qual/licence-cat/edit-licence-cat/edit-licence-cat.component';\r\nimport { CodeOfPractComponent } from './code-of-pract/code-of-pract.component';\r\nimport { AddCOPComponent } from './code-of-pract/add-cop/add-cop.component';\r\nimport { EditCOPComponent } from './code-of-pract/edit-cop/edit-cop.component';\r\nimport { AddSiteComponent } from './add-site-info/add-site/add-site.component';\r\nimport { EditSiteComponent } from './add-site-info/edit-site/edit-site.component';\r\nimport { AddingCustComponent } from './add-customer/adding-cust/adding-cust.component';\r\nimport { EditCustComponent } from './add-customer/edit-cust/edit-cust.component';\r\nimport { IdentifyHazardsComponent } from './identify-hazards/identify-hazards.component';\r\nimport { ContrAndActReqComponent } from './contr-and-act-req/contr-and-act-req.component';\r\nimport { AddHazardComponent } from './identify-hazards/add-hazard/add-hazard.component';\r\nimport { EditHazardComponent } from './identify-hazards/edit-hazard/edit-hazard.component';\r\nimport { AddContrActComponent } from './contr-and-act-req/add-contr-act/add-contr-act.component';\r\nimport { EditContActComponent } from './contr-and-act-req/edit-cont-act/edit-cont-act.component';\r\nimport { ProjectManagerComponent } from './project-manager/project-manager.component';\r\nimport { AddEditProjMangComponent } from './project-manager/add-edit-proj-mang/add-edit-proj-mang.component';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { StaffComponent } from './staff/staff.component';\r\nimport { RiskLevelComponent } from './risk-level/risk-level.component';\r\nimport { ResidualRiskLevelComponent } from './residual-risk-level/residual-risk-level.component';\r\nimport { ChemicalComponent } from './chemical/chemical.component';\r\nimport { AddChemicalComponent } from './chemical/add-chemical/add-chemical.component';\r\nimport { EditChemicalComponent } from './chemical/edit-chemical/edit-chemical.component';\r\nimport { AddRiskLevelComponent } from './risk-level/add-risk-level/add-risk-level.component';\r\nimport { EditRiskLevelComponent } from './risk-level/edit-risk-level/edit-risk-level.component';\r\nimport { AddResidualRiskLevelComponent } from './residual-risk-level/add-residual-risk-level/add-residual-risk-level.component';\r\nimport { EditResidualRiskLevelComponent } from './residual-risk-level/edit-residual-risk-level/edit-residual-risk-level.component';\r\nimport { AddStaffComponent } from './staff/add-staff/add-staff.component';\r\nimport { EditStaffComponent } from './staff/edit-staff/edit-staff.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SiteInfoComponent,\r\n    AddSiteInfoComponent,\r\n    JobTaskComponent,\r\n    HighRiskConComponent,\r\n    PpeSelectComponent,\r\n    LicenceAndQualComponent,\r\n    AddCustomerComponent,\r\n    AddHighRiskConstructionComponent,\r\n    EditHighRiskConstructionComponent,\r\n    AddJobTaskComponent,\r\n    AddPPEComponent,\r\n    EditTaskComponent,\r\n    EditPPEComponent,\r\n    EditLicenceComponent,\r\n    AddLicenceComponent,\r\n    LicenceCatComponent,\r\n    AddLicenceCatComponent,\r\n    EditLicenceCatComponent,\r\n    CodeOfPractComponent,\r\n    AddCOPComponent,\r\n    EditCOPComponent,\r\n    AddSiteComponent,\r\n    EditSiteComponent,\r\n    AddingCustComponent,\r\n    EditCustComponent,\r\n    IdentifyHazardsComponent,\r\n    ContrAndActReqComponent,\r\n    AddHazardComponent,\r\n    EditHazardComponent,\r\n    AddContrActComponent,\r\n    EditContActComponent,\r\n    ProjectManagerComponent,\r\n    AddEditProjMangComponent,\r\n    StaffComponent,\r\n    \r\n    RiskLevelComponent,\r\n    ResidualRiskLevelComponent,\r\n    ChemicalComponent,\r\n    AddChemicalComponent,\r\n    EditChemicalComponent,\r\n    AddRiskLevelComponent,\r\n    EditRiskLevelComponent,\r\n    AddResidualRiskLevelComponent,\r\n    EditResidualRiskLevelComponent,\r\n    AddStaffComponent,\r\n    EditStaffComponent,\r\n  ],\r\n\r\n  imports: [\r\n    CommonModule,\r\n    SiteInfoRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    MatStepperModule,\r\n  ],\r\n})\r\nexport class SiteInfoModule {}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport Swal from 'sweetalert2';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { SetTitleService } from 'src/app/utils/services/set-title.service';\r\nimport { EditResidualRiskLevelComponent } from './edit-residual-risk-level/edit-residual-risk-level.component';\r\n\r\n@Component({\r\n  selector: 'app-residual-risk-level',\r\n  templateUrl: './residual-risk-level.component.html',\r\n  styleUrls: ['./residual-risk-level.component.scss']\r\n})\r\nexport class ResidualRiskLevelComponent implements OnInit {\r\n  ELEMENT_DATA = [];\r\n  /////////////mat table////////////////\r\n  displayedColumns: string[] = ['index', 'title', 'action'];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  allResidualRiskLevel: any[]=[];\r\n  \r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n  constructor( \r\n    private dialog: MatDialog, \r\n    private setTitle: SetTitleService,\r\n    private logicalFormInfoService: LogicalFormInfoService,\r\n    private spinner: NgxSpinnerService\r\n    ) { }\r\n  ngOnInit(): void {\r\n    this.setTitle.setTitle('WHS-ResidualRiskLevel Info');\r\n    this.getAllResidualRiskLevel()\r\n  }\r\n  getAllResidualRiskLevel(){\r\n    this.logicalFormInfoService.getAllResidual().subscribe((res:any)=> {\r\n      console.log(res)\r\n      let data = res.data;\r\n      data.forEach((element, index) => {\r\n        element.index = index + 1; //adding index\r\n      });\r\n\r\n      this.ELEMENT_DATA = data;\r\n      this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n      this.dataSource.paginator = this.paginator;\r\n      console.log('this.ELEMENT_DATA', this.ELEMENT_DATA);\r\n   })\r\n  }\r\n \r\n  edit(element) {\r\n    const dialogRef = this.dialog.open(EditResidualRiskLevelComponent, {\r\n      width: \"550px\",\r\n     // height:'50%',\r\n      data: element,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if ((result == \"true\")) {\r\n        this.getAllResidualRiskLevel()\r\n      }\r\n      console.log(\"The dialog was closed\");\r\n    });\r\n  }\r\n  delete(item) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: `Do you want to delete \"${item.title}\"?`,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#00B96F',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Delete!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        console.log(result)\r\n        // this.model.attributes.splice(i,1);\r\n        this.spinner.show()\r\n        this.logicalFormInfoService.deleteResidual(item._id).subscribe((res => {\r\n        this.getAllResidualRiskLevel()\r\n        this.spinner.hide()\r\n        }))\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","\r\n<div class=\"col ml-2 pt-1\">\r\n    <h1>\r\n     Residual Risk Level Information List\r\n    </h1>\r\n  </div>\r\n  <div class=\"col ml-2 mb-2\">\r\n  \r\n    <button type=\"button\"  [routerLink]=\"['/admin/siteInfo/addResidual']\" \r\n      class=\"btn btn-outline-primary  mr-2 float-right\"><i  class=\"fas fa-plus\"></i> Add ResidualLevel\r\n    </button>\r\n  </div>\r\n  <div >\r\n    <table mat-table [dataSource]=\"dataSource\">\r\n  \r\n      <!-- Position Column -->\r\n      <ng-container matColumnDef=\"index\">\r\n        <th mat-header-cell *matHeaderCellDef> No. </th>\r\n        <td mat-cell *matCellDef=\"let element,let i = index\">{{element.index}}</td>\r\n      </ng-container>\r\n  \r\n      <!-- Name Column -->\r\n  \r\n      <!-- Name Column -->\r\n      <ng-container matColumnDef=\"title\">\r\n        <th mat-header-cell *matHeaderCellDef>Residual-Risklevel Name </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.title}} </td>\r\n      </ng-container>\r\n  \r\n      <ng-container matColumnDef=\"action\">\r\n        <th mat-header-cell *matHeaderCellDef> Action </th>\r\n        <td mat-cell *matCellDef=\"let element\"> <i class=\"fas fa-pencil-alt mr-2\" (click)=\"edit(element)\" title=\"edit\"></i>  <i  class=\"fas fa-trash ml-2 \" (click)=\"delete(element)\" title=\"delete\"></i> \r\n      \r\n        </td>\r\n      </ng-container>\r\n<!--      \r\n  \r\n      <ng-container matColumnDef=\"edit\">\r\n        <th mat-header-cell *matHeaderCellDef> Edit </th>\r\n        <td mat-cell *matCellDef=\"let element\" (click)=\"edit(element)\"> <i class=\"fas fa-pencil-alt \"></i>\r\n        </td>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"delete\">\r\n        <th mat-header-cell *matHeaderCellDef> Delete </th>\r\n        <td mat-cell *matCellDef=\"let element\" (click)=\"delete(element)\"> <i class=\"fas fa-trash \"></i>\r\n        </td>\r\n      </ng-container> -->\r\n  \r\n  \r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n    </table>\r\n  \r\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons aria-label=\"Select page of periodic elements\">\r\n    </mat-paginator>\r\n  </div>","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\n@Component({\r\n  selector: 'app-add-edit-proj-mang',\r\n  templateUrl: './add-edit-proj-mang.component.html',\r\n  styleUrls: ['./add-edit-proj-mang.component.scss']\r\n})\r\nexport class AddEditProjMangComponent implements OnInit {\r\n\r\n  editTitle: FormGroup;\r\n  dataRec: any;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    public dialogRef: MatDialogRef<AddEditProjMangComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.dataRec = data;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.editTitle = this.fb.group({\r\n      title: [this.dataRec.title, Validators.required],\r\n    });\r\n  }\r\n  onFormSubmit() {\r\n    let data = {\r\n      title: this.editTitle.get('title').value,\r\n      componentId: this.dataRec.componentId,\r\n    };\r\n    this.logicalFormInfo\r\n      .updateProjectMang(data, this.dataRec._id)\r\n      .subscribe((resData) => {\r\n        console.log('projectManager', resData);\r\n\r\n        this.dialogRef.close('true');\r\n        Swal.fire({\r\n          title: 'Project Manager Edited successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });\r\n      });\r\n  }\r\n  addForm() {\r\n    let data = {\r\n      title: this.editTitle.get('title').value,\r\n    };\r\n    this.logicalFormInfo.addProjectMang(data).subscribe((resData) => {\r\n      console.log('projectManager', resData);\r\n\r\n      this.dialogRef.close('true');\r\n    \r\n        Swal.fire({\r\n          title: 'Project Manager added successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });\r\n      \r\n    });\r\n  }\r\n  closeDialog() {\r\n    this.dialogRef.close('false');\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"editTitle\" >\r\n    <h3 *ngIf=\"!dataRec\">Add Project Manager</h3>\r\n    <h3 *ngIf=\"dataRec\">Edit Project Manager</h3>\r\n    <mat-form-field appearance=\"legacy\"\r\n    class=\"example-full-width\" style=\"width: 498px;\">\r\n    <!-- <mat-label >Add Licence Category</mat-label> -->\r\n    <!-- <mat-label >Edit Licence Category</mat-label> -->\r\n    <input matInput  formControlName=\"title\">\r\n    </mat-form-field>\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-2 offset-8 \">\r\n            <button mat-raised-button (click)=\"closeDialog()\">Close</button>\r\n        </div>\r\n        <div class=\"col-sm-2  \">\r\n            <button mat-raised-button *ngIf=\"dataRec\" [disabled]=\"!editTitle.valid\"(click)=\"onFormSubmit()\">Update</button>\r\n            <button mat-raised-button  *ngIf=\"!dataRec\"  [disabled]=\"!editTitle.valid\"(click)=\"addForm()\">Add</button>\r\n        </div>\r\n    </div>\r\n</form>   \r\n\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport Swal from 'sweetalert2';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { SetTitleService } from 'src/app/utils/services/set-title.service';\r\nimport { EditStaffComponent } from './edit-staff/edit-staff.component';\r\n\r\n@Component({\r\n  selector: 'app-staff',\r\n  templateUrl: './staff.component.html',\r\n  styleUrls: ['./staff.component.scss']\r\n})\r\nexport class StaffComponent implements OnInit {\r\n\r\n\r\n  ELEMENT_DATA = [];\r\n  /////////////mat table////////////////\r\n  displayedColumns: string[] = ['index', 'title', 'action'];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  allStaff: any[]=[];\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n  constructor( \r\n    private dialog: MatDialog, \r\n    private setTitle: SetTitleService,\r\n    private logicalFormInfoService: LogicalFormInfoService,\r\n    private spinner: NgxSpinnerService\r\n    ) { }\r\n  ngOnInit(): void {\r\n    this.setTitle.setTitle('WHS-Staff Info');\r\n    this.getAllStaff()\r\n  }\r\n  getAllStaff(){\r\n    this.logicalFormInfoService.getAllStaff().subscribe((res:any)=> {\r\n      console.log(res)\r\n      let data = res.data;\r\n      data.forEach((element, index) => {\r\n        element.index = index + 1; //adding index\r\n      });\r\n\r\n      this.ELEMENT_DATA = data;\r\n      this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n      this.dataSource.paginator = this.paginator;\r\n      console.log('this.ELEMENT_DATA', this.ELEMENT_DATA);\r\n   })\r\n  }\r\n \r\n  edit(element) {\r\n    const dialogRef = this.dialog.open(EditStaffComponent, {\r\n      width: \"550px\",\r\n     // height:'50%',\r\n      data: element,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if ((result == \"true\")) {\r\n        this.getAllStaff()\r\n      }\r\n      console.log(\"The dialog was closed\");\r\n    });\r\n  }\r\n  delete(item) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: `Do you want to delete \"${item.title}\"?`,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#00B96F',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Delete!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        console.log(result)\r\n        // this.model.attributes.splice(i,1);\r\n        this.spinner.show()\r\n        this.logicalFormInfoService.deleteStaff(item._id).subscribe((res => {\r\n        this.getAllStaff()\r\n        this.spinner.hide()\r\n        }))\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n\r\n","<div class=\"col ml-2 pt-1\">\r\n    <h1>\r\n      Staff Information List\r\n    </h1>\r\n  </div>\r\n  <div>\r\n  \r\n    <button type=\"button\"  [routerLink]=\"['/admin/siteInfo/addStaff']\" \r\n      class=\"btn btn-outline-primary  mr-2 float-right\"><i  class=\"fas fa-plus\"></i> Add Staff\r\n    </button>\r\n  </div>\r\n  <div >\r\n    <table mat-table [dataSource]=\"dataSource\">\r\n  \r\n      <!-- Position Column -->\r\n      <ng-container matColumnDef=\"index\">\r\n        <th mat-header-cell *matHeaderCellDef> No. </th>\r\n        <td mat-cell *matCellDef=\"let element,let i = index\">{{element.index}}</td>\r\n      </ng-container>\r\n  \r\n      <!-- Name Column -->\r\n  \r\n      <!-- Name Column -->\r\n      <ng-container matColumnDef=\"title\">\r\n        <th mat-header-cell *matHeaderCellDef> Staff Name </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.title}} </td>\r\n      </ng-container>\r\n  \r\n      <ng-container matColumnDef=\"action\">\r\n        <th mat-header-cell *matHeaderCellDef> Action </th>\r\n        <td mat-cell *matCellDef=\"let element\"> <i class=\"fas fa-pencil-alt mr-2 \" (click)=\"edit(element)\" title=\"edit\"></i>  <i  class=\"fas fa-trash ml-2 \" (click)=\"delete(element)\" title=\"delete\"></i> \r\n      \r\n        </td>\r\n      </ng-container>\r\n     \r\n<!--   \r\n      <ng-container matColumnDef=\"edit\">\r\n        <th mat-header-cell *matHeaderCellDef> Edit </th>\r\n        <td mat-cell *matCellDef=\"let element\" (click)=\"edit(element)\"> <i class=\"fas fa-pencil-alt \"></i>\r\n        </td>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"delete\">\r\n        <th mat-header-cell *matHeaderCellDef> Delete </th>\r\n        <td mat-cell *matCellDef=\"let element\" (click)=\"delete(element)\"> <i class=\"fas fa-trash \"></i>\r\n        </td>\r\n      </ng-container> -->\r\n  \r\n  \r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n    </table>\r\n  \r\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons aria-label=\"Select page of periodic elements\">\r\n    </mat-paginator>\r\n  </div>","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-task',\r\n  templateUrl: './edit-task.component.html',\r\n  styleUrls: ['./edit-task.component.scss'],\r\n})\r\nexport class EditTaskComponent implements OnInit {\r\n  editTitle: FormGroup;\r\n  dataRec: any;\r\n\r\n\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    public dialogRef: MatDialogRef<EditTaskComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.dataRec = data;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    console.log(\"this.dataRec\",this.dataRec);\r\n    \r\n    this.editTitle = this.fb.group({\r\n      title: [this.dataRec.title, Validators.required],\r\n    });\r\n  }\r\n  onFormSubmit() {\r\n     \r\n    let data={\r\n      title :this.editTitle.get('title').value,\r\n      PPE:this.dataRec.PPE,\r\n      codeOfPractice:this.dataRec.codeOfPractice,\r\n      licence:this.dataRec.licence,\r\n      risk:this.dataRec.risk,\r\n    }\r\n    this.logicalFormInfo\r\n      .updateJobTask(data, this.dataRec._id)\r\n      .subscribe((resData) => {\r\n        console.log('submodulesData', resData);\r\n\r\n        this.dialogRef.close('true');\r\n        Swal.fire({\r\n          title: 'Parameter Edited successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });  \r\n          });\r\n  }\r\n  closeDialog(){\r\n    this.dialogRef.close('false');\r\n\r\n  }\r\n}\r\n","<form [formGroup]=\"editTitle\" >\r\n    <h3>Edit Job Task</h3>\r\n    <mat-form-field appearance=\"legacy\"\r\n    class=\"example-full-width\" style=\"width: 498px;\">\r\n    <!-- <mat-label>Edit Job Task</mat-label> -->\r\n    <input matInput  formControlName=\"title\" style=\"text-transform: capitalize !important;\">\r\n    </mat-form-field>\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-2 offset-8 \">\r\n            <button mat-raised-button (click)=\"closeDialog()\">Close</button>\r\n        </div>\r\n        <div class=\"col-sm-2  \">\r\n            <button mat-raised-button  [disabled]=\"!editTitle.valid\"(click)=\"onFormSubmit()\">Update</button>\r\n        </div>\r\n    </div>\r\n</form>   \r\n\r\n","import { MatDialog } from '@angular/material/dialog';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { AfterViewInit, ViewChild } from '@angular/core';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { SetTitleService } from 'src/app/utils/services/set-title.service';\r\nimport { EditHazardComponent } from './edit-hazard/edit-hazard.component';\r\n@Component({\r\n  selector: 'app-identify-hazards',\r\n  templateUrl: './identify-hazards.component.html',\r\n  styleUrls: ['./identify-hazards.component.scss']\r\n})\r\nexport class IdentifyHazardsComponent implements OnInit {\r\n\r\n  mode: any;\r\n  jobTaskData: any = [];\r\n  ELEMENT_DATA = [];\r\n  /////////////mat table////////////////\r\n  displayedColumns: string[] = ['index', 'title','action'];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n  /////////////mat table end////////////////\r\n\r\n  constructor(\r\n\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    private dialog:MatDialog,\r\n    private setTitle:SetTitleService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getAllHazards();\r\n    this.setTitle.setTitle('WHS-PPE List');\r\n\r\n  }\r\n\r\n  getAllHazards() {\r\n    this.logicalFormInfo.getAllHazards().subscribe((res:any) => {\r\n      console.log('getAllHazards=>', res);\r\n      let data = res.data;\r\n      data.forEach((element, index) => {\r\n        element.index = index + 1; //adding index\r\n      });\r\n\r\n      this.ELEMENT_DATA = data;\r\n      this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n      this.dataSource.paginator = this.paginator;\r\n      console.log('this.ELEMENT_DATA', this.ELEMENT_DATA);\r\n\r\n      //  this.task = res.data.subComponents;\r\n    });\r\n  }\r\n  edit(element){\r\n    const dialogRef = this.dialog.open(EditHazardComponent, {\r\n      width: \"550px\",\r\n      data: element,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if ((result == \"true\")) {\r\n        this.getAllHazards();\r\n      }\r\n      console.log(\"The dialog was closed\");\r\n    });\r\n  }\r\n  delete(item) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: `Do you want to delete \"${item.title}\"?`,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#00B96F',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Delete!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.logicalFormInfo\r\n        .deleteHazards(item._id)\r\n        .subscribe((res) => {\r\n          Swal.fire({\r\n            title: 'Parameter Deleted successfully',\r\n            showConfirmButton: false,\r\n            timer: 1200,\r\n          });\r\n          console.log('deleted res', res);\r\n          this.getAllHazards();\r\n            \r\n        });\r\n      }\r\n    });\r\n  }\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n}\r\n","<div class=\"col ml-2 pt-3\">\r\n<h1> Identify Hazards List</h1>\r\n</div>\r\n    <div class=\"col ml-2 mb-2\">\r\n      \r\n      <button  class=\"btn btn-outline-primary mt-1 mr-2 float-right\"[routerLink]=\"['/admin/siteInfo/addHazards']\">\r\n        <i class=\"fas fa-folder-plus mr-2\"></i>Add Hazard \r\n      </button>\r\n    </div>\r\n    <div class=\"col-6\">\r\n      <mat-form-field>\r\n        <input\r\n          matInput\r\n          #input\r\n          placeholder=\"Search\"\r\n          (keyup)=\"applyFilter($event)\"\r\n        />\r\n      </mat-form-field>\r\n    </div>\r\n    <div class=\"\">\r\n      <table mat-table [dataSource]=\"dataSource\">\r\n    \r\n        <!-- Position Column -->\r\n        <ng-container matColumnDef=\"index\">\r\n          <th mat-header-cell *matHeaderCellDef> No. </th>\r\n          <td mat-cell *matCellDef=\"let element\">{{element.index}}</td>\r\n        </ng-container>\r\n    \r\n        <!-- Name Column -->\r\n       \r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"title\">\r\n      <th mat-header-cell *matHeaderCellDef> Name </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.title}} </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"action\">\r\n      <th mat-header-cell *matHeaderCellDef> Action </th>\r\n      <td mat-cell *matCellDef=\"let element\"> <i class=\"fas fa-pencil-alt mr-2\" (click)=\"edit(element)\" title=\"edit\"></i>  <i  class=\"fas fa-trash ml-2 \" (click)=\"delete(element)\" title=\"delete\"></i> \r\n    \r\n      </td>\r\n    </ng-container>\r\n    <!-- <ng-container matColumnDef=\"edit\">\r\n        <th mat-header-cell *matHeaderCellDef> Edit </th>\r\n        <td mat-cell *matCellDef=\"let element\"(click)=\"edit(element)\"> <i class=\"fas fa-pencil-alt \"></i> \r\n        </td>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"delete\">\r\n        <th mat-header-cell *matHeaderCellDef> Delete </th>\r\n        <td mat-cell *matCellDef=\"let element\"(click)=\"delete(element)\"> <i class=\"fas fa-trash \"></i> \r\n        </td>\r\n      </ng-container> -->\r\n    \r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n        <tr class=\"mat-row\" *matNoDataRow>\r\n          <td class=\"mat-cell\" colspan=\"4\">Data Not  Found  \"{{input.value}}\"</td>\r\n        </tr>\r\n      </table>\r\n    \r\n      <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\"\r\n                     showFirstLastButtons \r\n                     aria-label=\"Select page of periodic elements\">\r\n      </mat-paginator>\r\n    </div>\r\n    \r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\n@Component({\r\n  selector: 'app-edit-licence-cat',\r\n  templateUrl: './edit-licence-cat.component.html',\r\n  styleUrls: ['./edit-licence-cat.component.scss'],\r\n})\r\nexport class EditLicenceCatComponent implements OnInit {\r\n  editTitle: FormGroup;\r\n  dataRec: any;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    public dialogRef: MatDialogRef<EditLicenceCatComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.dataRec = data;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.editTitle = this.fb.group({\r\n      title: [this.dataRec.title, Validators.required],\r\n    });\r\n  }\r\n  onFormSubmit() {\r\n    let data = {\r\n      title: this.editTitle.get('title').value,\r\n      componentId: this.dataRec.componentId,\r\n    };\r\n    this.logicalFormInfo\r\n      .updateLicenceCat(data, this.dataRec._id)\r\n      .subscribe((resData) => {\r\n        console.log('submodulesData', resData);\r\n\r\n        this.dialogRef.close('true');\r\n        Swal.fire({\r\n          title: 'Category Edited successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });\r\n      });\r\n  }\r\n  addForm() {\r\n    let data = {\r\n      title: this.editTitle.get('title').value,\r\n    };\r\n    this.logicalFormInfo.addLicenceCat(data).subscribe((resData) => {\r\n      console.log('category', resData);\r\n\r\n      this.dialogRef.close('true');\r\n      if (this.dataRec) {\r\n        Swal.fire({\r\n          title: 'Category Edited successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });\r\n      } else {\r\n        Swal.fire({\r\n          title: 'Category Added successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });\r\n      }\r\n    });\r\n  }\r\n  closeDialog() {\r\n    this.dialogRef.close('false');\r\n  }\r\n}\r\n","<form [formGroup]=\"editTitle\" >\r\n    <h3 *ngIf=\"!dataRec\">Add Licence Category</h3>\r\n    <h3 *ngIf=\"dataRec\">Edit Licence Category</h3>\r\n    <mat-form-field appearance=\"legacy\"\r\n    class=\"example-full-width\" style=\"width: 498px;\">\r\n    <!-- <mat-label >Add Licence Category</mat-label> -->\r\n    <!-- <mat-label >Edit Licence Category</mat-label> -->\r\n    <input matInput  formControlName=\"title\" style=\"text-transform: capitalize !important;\">\r\n    </mat-form-field>\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-2 offset-8 \">\r\n            <button mat-raised-button (click)=\"closeDialog()\">Close</button>\r\n        </div>\r\n        <div class=\"col-sm-2  \">\r\n            <button mat-raised-button *ngIf=\"dataRec\" [disabled]=\"!editTitle.valid\"(click)=\"onFormSubmit()\">Update</button>\r\n            <button mat-raised-button  *ngIf=\"!dataRec\"  [disabled]=\"!editTitle.valid\"(click)=\"addForm()\">Add</button>\r\n        </div>\r\n    </div>\r\n</form>   \r\n\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormArray, FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\n@Component({\r\n  selector: 'app-edit-cont-act',\r\n  templateUrl: './edit-cont-act.component.html',\r\n  styleUrls: ['./edit-cont-act.component.scss'],\r\n})\r\nexport class EditContActComponent implements OnInit {\r\n  editTitle: FormGroup;\r\n  dataRec: any;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    public dialogRef: MatDialogRef<EditContActComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.dataRec = data;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    console.log('this.dataRec', this.dataRec);\r\n\r\n    this.editTitle = this.fb.group({\r\n      title: [this.dataRec.title, Validators.required],\r\n    });\r\n  }\r\n  onFormSubmit() {\r\n    let data = {\r\n      title: this.editTitle.get('title').value,\r\n    };\r\n    this.logicalFormInfo\r\n      .updateContrlActReq(data, this.dataRec._id)\r\n      .subscribe((resData) => {\r\n        this.dialogRef.close('true');\r\n        Swal.fire({\r\n          title: 'Parameter Edited successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });\r\n      });\r\n  }\r\n  closeDialog() {\r\n    this.dialogRef.close('false');\r\n  }\r\n}\r\n","<form [formGroup]=\"editTitle\" >\r\n    <h3>Edit High Risk</h3>\r\n    <mat-form-field appearance=\"legacy\"\r\n    class=\"example-full-width\" style=\"width: 498px;\">\r\n    <!-- <mat-label>Edit Job Task</mat-label> -->\r\n    <input matInput   style=\"text-transform: capitalize !important;\"formControlName=\"title\">\r\n    </mat-form-field>\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-2 offset-8 \">\r\n            <button mat-raised-button (click)=\"closeDialog()\">Close</button>\r\n        </div>\r\n        <div class=\"col-sm-2  \">\r\n            <button mat-raised-button  [disabled]=\"!editTitle.valid\"(click)=\"onFormSubmit()\">Update</button>\r\n        </div>\r\n    </div>\r\n  </form>   \r\n  \r\n  ","import { Component, OnInit,Inject } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport Swal from 'sweetalert2';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-risk-level',\r\n  templateUrl: './edit-risk-level.component.html',\r\n  styleUrls: ['./edit-risk-level.component.scss']\r\n})\r\nexport class EditRiskLevelComponent implements OnInit {\r\n\r\n  editTitle!: FormGroup;\r\n  dataRec: any;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    public dialogRef: MatDialogRef<EditRiskLevelComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.dataRec = data;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.editTitle = this.fb.group({\r\n      title: [this.dataRec.title, Validators.required],\r\n    });\r\n  }\r\n  onFormSubmit() {\r\n     \r\n    let data={\r\n      title :this.editTitle.get('title').value\r\n    }\r\n    this.logicalFormInfo\r\n      .updateRiskLevel(this.dataRec._id,data)\r\n      .subscribe((resData) => {\r\n        console.log('resData', resData);\r\n\r\n        this.dialogRef.close('true');\r\n        Swal.fire({\r\n          title: 'Risk Level Updated successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });     \r\n       });\r\n  }\r\n  closeDialog(){\r\n    this.dialogRef.close('false');\r\n\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"editTitle\" >\r\n    <h2>Edit RiskLevel</h2>\r\n    <mat-form-field appearance=\"legacy\"\r\n    class=\"example-full-width\" style=\"width: 498px;\">\r\n    <!-- <mat-label>Edit PPE</mat-label> -->\r\n    <input matInput  formControlName=\"title\" style=\"text-transform: capitalize !important;\">\r\n    </mat-form-field>\r\n    <br>\r\n    \r\n    <div class=\"row\">\r\n        <div class=\"col-sm-2 offset-8 \">\r\n            <button mat-raised-button (click)=\"closeDialog()\">Close</button>\r\n        </div>\r\n        <div class=\"col-sm-2  \">\r\n            <button mat-raised-button  [disabled]=\"!editTitle.valid\"(click)=\"onFormSubmit()\">Update</button>\r\n        </div>\r\n    </div>\r\n</form> ","import  Swal  from 'sweetalert2';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { SetTitleService } from 'src/app/utils/services/set-title.service';\r\nimport { AddingCustComponent } from './adding-cust/adding-cust.component';\r\nimport { EditCustComponent } from './edit-cust/edit-cust.component';\r\n\r\n@Component({\r\n  selector: 'app-add-customer',\r\n  templateUrl: './add-customer.component.html',\r\n  styleUrls: ['./add-customer.component.scss']\r\n})\r\nexport class AddCustomerComponent implements OnInit {\r\n  ELEMENT_DATA = [];\r\n  displayedColumns: string[] = ['index', 'customerName','customerContact','customerContactPhone','customerEmail', 'action'];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  constructor( \r\n    private setTitle: SetTitleService, \r\n    private dialog: MatDialog,\r\n    private logicalFormInfoService: LogicalFormInfoService\r\n    ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllCustomers()\r\n    this.setTitle.setTitle('WHS-Add Customer');\r\n    \r\n  }\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  getAllCustomers(){\r\n    this.logicalFormInfoService.getAllCustomer().subscribe((res:any) => {\r\n      console.log(res)\r\n      this.dataSource.data = res.data;\r\n      this.dataSource.paginator = this.paginator\r\n    })\r\n  }\r\n\r\n  getAllJobTask() {\r\n    // this.logicalFormInfo.getAllJobtask().subscribe((res: any) => {\r\n    //   console.log('jobTaskDetails=>', res);\r\n    //   // this.jobTaskData = res.data[0].subComponents;\r\n    //   let data = res.data\r\n    //   data.forEach((element, index) => {\r\n    //     element.index = index + 1; //adding index\r\n    //   });\r\n\r\n    //   this.ELEMENT_DATA = data;\r\n    //   this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n    //   this.dataSource.paginator = this.paginator;\r\n\r\n    //   //  this.task = res.data.subComponents;\r\n    // });\r\n\r\n  }\r\n\r\n  openDialog(id) {\r\n\t\tlet dialogRef = this.dialog.open(AddingCustComponent, {\r\n      height:'600px',\r\n      width:'700px',\r\n    \r\n\t\t\tdata: {\r\n\t\t\t\taction: \"new\",\r\n\t\t\t\tuserId: id,\r\n\t\t\t},\r\n\t\t});\r\n\t\tdialogRef.afterClosed().subscribe((result) => {\r\n      if(result === 'ok' ){\r\n        this.getAllCustomers()\r\n      }\r\n\t\t\tconsole.log(\"CustomerInfoComponent -> openDialog -> result\", result);\r\n\t\t\t\r\n\t\t\tconsole.log(\"The dialog was closed\");\r\n\t\t});\r\n\t}\r\n  edit(element) {\r\n    console.log(element)\r\n    const dialogRef = this.dialog.open(EditCustComponent, {\r\n      height:'500px',\r\n      width:'650px',\r\n  \r\n            // height:'400px',\r\n      data: element,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if ((result == \"ok\")) {\r\n        this.getAllCustomers();\r\n      }\r\n      console.log(\"The dialog was closed\");\r\n    });\r\n  }\r\n  delete(item) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: `Do you want to delete \"${item.customerName}\"?`,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#00B96F',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Delete!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.logicalFormInfoService\r\n          .deleteCustomer(item._id)\r\n          .subscribe((res) => {\r\n            Swal.fire({\r\n              title: 'Deleted successfully',\r\n              showConfirmButton: false,\r\n              timer: 1200,\r\n            }); console.log('deleted res', res);\r\n            this.getAllCustomers();\r\n\r\n          });\r\n      }\r\n    });\r\n  }\r\n}\r\n","\r\n \r\n<div class=\"col ml-2 pt-3\">\r\n<h1>\r\n  Customer List\r\n\r\n\r\n</h1>\r\n</div>\r\n<div class=\"col ml-2 mb-2\">\r\n  \r\n  <button [routerLink]=\"['/admin/siteInfo/addingCustomer']\"  type=\"button\" class=\"btn btn-outline-primary mt-1 mr-2 float-right\"><i  class=\"fas fa-plus\"></i> Add </button>\r\n</div>\r\n<div class=\"\">\r\n  <table mat-table [dataSource]=\"dataSource\">\r\n\r\n    <!-- Position Column -->\r\n    <ng-container matColumnDef=\"index\">\r\n      <th mat-header-cell *matHeaderCellDef> No. </th>\r\n      <td mat-cell *matCellDef=\"let element,let i = index\">{{i+1}}</td>\r\n    </ng-container>\r\n\r\n    <!-- Name Column -->\r\n   \r\n<!-- Name Column -->\r\n<ng-container matColumnDef=\"customerName\">\r\n  <th mat-header-cell *matHeaderCellDef> Name </th>\r\n  <td mat-cell *matCellDef=\"let element\"> {{element.customerName}} </td>\r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"customerContact\">\r\n  <th mat-header-cell *matHeaderCellDef> Contact </th>\r\n  <td mat-cell *matCellDef=\"let element\"> {{element.customerContact}} </td>\r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"customerContactPhone\">\r\n  <th mat-header-cell *matHeaderCellDef> Contact Phone </th>\r\n  <td mat-cell *matCellDef=\"let element\"> {{element.customerContactPhone}} </td>\r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"customerEmail\">\r\n  <th mat-header-cell *matHeaderCellDef> Email </th>\r\n  <td mat-cell *matCellDef=\"let element\"> {{element.customerEmail}} </td>\r\n</ng-container>\r\n\r\n<!-- <ng-container matColumnDef=\"State\">\r\n  <th mat-header-cell *matHeaderCellDef> State </th>\r\n  <td mat-cell *matCellDef=\"let element\"> {{element.State}} </td>\r\n</ng-container> -->\r\n\r\n<ng-container matColumnDef=\"action\">\r\n  <th mat-header-cell *matHeaderCellDef> Action </th>\r\n  <td mat-cell *matCellDef=\"let element\"> <i class=\"fas fa-pencil-alt mr-2 \" (click)=\"edit(element)\" title=\"edit\"></i>  <i  class=\"fas fa-trash ml-2 \" (click)=\"delete(element)\" title=\"delete\"></i> \r\n\r\n  </td>\r\n</ng-container>\r\n<!-- <ng-container matColumnDef=\"delete\">\r\n  <th mat-header-cell *matHeaderCellDef> Delete </th>\r\n  <td mat-cell *matCellDef=\"let element\"(click)=\"delete(element)\"> <i class=\"fas fa-trash \"></i> \r\n  </td>\r\n</ng-container> -->\r\n\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n  </table>\r\n\r\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\"\r\n                 showFirstLastButtons \r\n                 aria-label=\"Select page of periodic elements\">\r\n  </mat-paginator>\r\n</div>\r\n ","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { FormBuilder, FormGroup,  Validators,\r\n  FormArray,} from '@angular/forms';\r\n\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-add-chemical',\r\n  templateUrl: './add-chemical.component.html',\r\n  styleUrls: ['./add-chemical.component.scss']\r\n})\r\nexport class AddChemicalComponent implements OnInit {\r\n  addChemicalForm: FormGroup;\r\n  constructor( \r\n    private fb:FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    private router: Router,\r\n    ) { \r\n      this.addChemicalForm=this.fb.group({\r\n        arrObj: this.fb.array([]),\r\n      })\r\n    }\r\n\r\n    ngOnInit(): void {\r\n      this.addChemical();\r\n    }\r\n    addChemical() {\r\n      {\r\n        this.add().push(this.newAction());\r\n      }\r\n    }\r\n    add(): FormArray {\r\n      return this.addChemicalForm.get('arrObj') as FormArray;\r\n    }\r\n    newAction(): FormGroup {\r\n      return this.fb.group({\r\n       \r\n        title: ['', Validators.required],\r\n      });\r\n    }\r\n    \r\n    removeChemical(i) {\r\n      const item = <FormArray>this.addChemicalForm.controls['arrObj'];\r\n      if (item.length > 1) {\r\n        item.removeAt(i);\r\n      \r\n      }\r\n    }\r\n    onFormSubmit() {\r\n      console.log(this.addChemicalForm.value);\r\n      let data={\r\n        arrObj:this.addChemicalForm.get('arrObj').value\r\n      }\r\n      this.logicalFormInfo.addMultipleChemical(data).subscribe((data) => {\r\n        console.log('chemical=>', data);\r\n        this.router.navigate(['/admin/siteInfo/chemical']);      \r\n      },(err)=>{console.error(err);} \r\n    \r\n      );\r\n      \r\n    }\r\n  }","<div class=\"btn btn-outline-primary\" [routerLink]=\"['/admin/siteInfo/chemical']\">\r\n    <i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\r\n  </div>\r\n\r\n    <div class=\"container px-4 py-4 bg-white\" >\r\n        <form  [formGroup]=\"addChemicalForm\" (ngSubmit)=\"onFormSubmit()\">\r\n      <h2  class=\"text-center\"> Chemical Info</h2>\r\n      <br />\r\n      <hr />\r\n      <ng-container formArrayName=\"arrObj\">\r\n        <ng-container\r\n          *ngFor=\"let control of add().controls; let i = index\"\r\n          [formGroupName]=\"i\"\r\n        >\r\n          <div class=\"row justify-content-center\">\r\n            <div class=\"mr-1 mt-2\">\r\n              <span \r\n                >{{i+1}}.\r\n              </span>\r\n            </div>\r\n            <div class=\"col-8\">\r\n              <input\r\n                type=\"text\"\r\n                formControlName=\"title\"\r\n                class=\"form-control sign\"\r\n                id=\"title\"\r\n              />\r\n            </div>\r\n            <div class=\"col-1 mt-2\">\r\n              <span class=\"material-icons\" (click)=\"addChemical()\"\r\n                >add_circle_outline\r\n              </span>\r\n            </div>\r\n            <div class=\"col-1 mt-2\">\r\n              <span class=\"material-icons\" (click)=\"removeChemical(i)\">\r\n                remove_circle_outline\r\n              </span>\r\n            </div>\r\n          </div>\r\n  \r\n          <hr />\r\n        </ng-container>\r\n      </ng-container>\r\n      <br />\r\n          <div  class=\"col-md-2\">\r\n            <button class=\"btn btn-primary\"[disabled]=\"addChemicalForm.get('arrObj').invalid\" >\r\n              Add\r\n            </button>\r\n          </div>\r\n        \r\n        </form>\r\n        </div>","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n  FormArray,\r\n  \r\n} from '@angular/forms';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-add-cop',\r\n  templateUrl: './add-cop.component.html',\r\n  styleUrls: ['./add-cop.component.scss']\r\n})\r\nexport class AddCOPComponent implements OnInit {\r\n\r\n  codeOfPractFG!: FormGroup;\r\n  formData: any;;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private router: Router,\r\n    private logicalFormInfo:LogicalFormInfoService\r\n  ) { \r\n    this.codeOfPractFG=this.fb.group({\r\n     // mode:\"JobTask\",\r\n      arrObj: this.fb.array([]),\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.addAction();\r\n  }\r\n  addAction() {\r\n    {\r\n      this.add().push(this.newAction());\r\n    }\r\n  }\r\n  add(): FormArray {\r\n    return this.codeOfPractFG.get('arrObj') as FormArray;\r\n  }\r\n  newAction(): FormGroup {\r\n    return this.fb.group({\r\n     \r\n      title: ['', Validators.required],\r\n    });\r\n  }\r\n  \r\n  removeSafetyModule(i) {\r\n    const item = <FormArray>this.codeOfPractFG.controls['arrObj'];\r\n    if (item.length > 1) {\r\n      item.removeAt(i);\r\n    \r\n    }\r\n  }\r\n  onFormSubmit() {\r\n    let data={\r\n      arrObj:this.codeOfPractFG.get('arrObj').value\r\n    }\r\n    this.logicalFormInfo.addMultipleCOP(data).subscribe((data) => {\r\n      console.log('codeOfPractice=>', data);\r\n\r\n      this.router.navigate(['/admin/siteInfo/codeOfpract']);      \r\n    },(err)=>{console.error(err);} \r\n  \r\n    );\r\n    \r\n  }\r\n}\r\n","<div class=\"btn btn-outline-primary\" [routerLink]=\"['/admin/siteInfo/codeOfpract']\">\r\n    <i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\r\n  </div>\r\n  <div class=\"container px-4 py-4 bg-white\">\r\n    <form [formGroup]=\"codeOfPractFG\" (ngSubmit)=\"onFormSubmit()\">\r\n      <h2 class=\"text-center\">Add Code Of Practice</h2>\r\n      <br />\r\n      <hr />\r\n      <ng-container formArrayName=\"arrObj\">\r\n        <ng-container\r\n          *ngFor=\"let control of add().controls; let i = index\"\r\n          [formGroupName]=\"i\"\r\n        >\r\n          <div class=\"row justify-content-center\">\r\n            <div class=\"mr-1 mt-2\">\r\n              <span \r\n                >{{i+1}}.\r\n              </span>\r\n            </div>\r\n            <div class=\"col-8\">\r\n              <input\r\n                type=\"text\"\r\n                formControlName=\"title\"\r\n                class=\"form-control sign\"\r\n                id=\"name\"\r\n              />\r\n            </div>\r\n            <div class=\"col-1 mt-2\">\r\n              <span class=\"material-icons\" (click)=\"addAction()\"\r\n                >add_circle_outline\r\n              </span>\r\n            </div>\r\n            <div class=\"col-1 mt-2\">\r\n              <span class=\"material-icons\" (click)=\"removeSafetyModule(i)\">\r\n                remove_circle_outline\r\n              </span>\r\n            </div>\r\n          </div>\r\n  \r\n          <hr />\r\n        </ng-container>\r\n      </ng-container>\r\n      <br />\r\n  \r\n      <div class=\"col-md-2\">\r\n        <button type=\"submit\" class=\"btn btn-primary\"[disabled]=\"codeOfPractFG.get('arrObj').invalid\">Add</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  ","import { Component, OnInit,Inject } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport Swal from 'sweetalert2';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\n@Component({\r\n  selector: 'app-edit-chemical',\r\n  templateUrl: './edit-chemical.component.html',\r\n  styleUrls: ['./edit-chemical.component.scss']\r\n})\r\nexport class EditChemicalComponent implements OnInit {\r\n\r\n  editTitle!: FormGroup;\r\n  dataRec: any;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    public dialogRef: MatDialogRef<EditChemicalComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.dataRec = data;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.editTitle = this.fb.group({\r\n      title: [this.dataRec.title, Validators.required],\r\n    });\r\n  }\r\n  onFormSubmit() {\r\n     \r\n    let data={\r\n      title :this.editTitle.get('title').value\r\n    }\r\n    this.logicalFormInfo\r\n      .updateChemical(this.dataRec._id,data)\r\n      .subscribe((resData) => {\r\n        console.log('resData', resData);\r\n\r\n        this.dialogRef.close('true');\r\n        Swal.fire({\r\n          title: 'chemical Updated successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });     \r\n       });\r\n  }\r\n  closeDialog(){\r\n    this.dialogRef.close('false');\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n","<form [formGroup]=\"editTitle\" >\r\n    <h2>Edit Chemical</h2>\r\n    <mat-form-field appearance=\"legacy\"\r\n    class=\"example-full-width\" style=\"width: 498px;\">\r\n    <!-- <mat-label>Edit PPE</mat-label> -->\r\n    <input matInput  formControlName=\"title\" style=\"text-transform: capitalize !important;\">\r\n    </mat-form-field>\r\n    <br>\r\n    \r\n    <div class=\"row\">\r\n        <div class=\"col-sm-2 offset-8 \">\r\n            <button mat-raised-button (click)=\"closeDialog()\">Close</button>\r\n        </div>\r\n        <div class=\"col-sm-2  \">\r\n            <button mat-raised-button  [disabled]=\"!editTitle.valid\"(click)=\"onFormSubmit()\">Update</button>\r\n        </div>\r\n    </div>\r\n</form>   \r\n","import { Component, OnInit,Inject } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport Swal from 'sweetalert2';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-residual-risk-level',\r\n  templateUrl: './edit-residual-risk-level.component.html',\r\n  styleUrls: ['./edit-residual-risk-level.component.scss']\r\n})\r\nexport class EditResidualRiskLevelComponent implements OnInit {\r\n\r\n  editTitle!: FormGroup;\r\n  dataRec: any;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    public dialogRef: MatDialogRef<EditResidualRiskLevelComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.dataRec = data;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.editTitle = this.fb.group({\r\n      title: [this.dataRec.title, Validators.required],\r\n    });\r\n  }\r\n  onFormSubmit() {\r\n     \r\n    let data={\r\n      title :this.editTitle.get('title').value\r\n    }\r\n    this.logicalFormInfo\r\n      .updateResidual(this.dataRec._id,data)\r\n      .subscribe((resData) => {\r\n        console.log('resData', resData);\r\n\r\n        this.dialogRef.close('true');\r\n        Swal.fire({\r\n          title: 'Residual-Risk Updated successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });     \r\n       });\r\n  }\r\n  closeDialog(){\r\n    this.dialogRef.close('false');\r\n\r\n  }\r\n\r\n\r\n}\r\n","\r\n<form [formGroup]=\"editTitle\" >\r\n    <h2>Edit Residual</h2>\r\n    <mat-form-field appearance=\"legacy\"\r\n    class=\"example-full-width\" style=\"width: 498px;\">\r\n    <!-- <mat-label>Edit PPE</mat-label> -->\r\n    <input matInput  formControlName=\"title\" style=\"text-transform: capitalize !important;\">\r\n    </mat-form-field>\r\n    <br>\r\n    \r\n    <div class=\"row\">\r\n        <div class=\"col-sm-2 offset-8 \">\r\n            <button mat-raised-button (click)=\"closeDialog()\">Close</button>\r\n        </div>\r\n        <div class=\"col-sm-2  \">\r\n            <button mat-raised-button  [disabled]=\"!editTitle.valid\"(click)=\"onFormSubmit()\">Update</button>\r\n        </div>\r\n    </div>\r\n</form>   ","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport Swal from 'sweetalert2';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { SetTitleService } from 'src/app/utils/services/set-title.service';\r\nimport { EditRiskLevelComponent } from './edit-risk-level/edit-risk-level.component';\r\n\r\n\r\n@Component({\r\n  selector: 'app-risk-level',\r\n  templateUrl: './risk-level.component.html',\r\n  styleUrls: ['./risk-level.component.scss']\r\n})\r\nexport class RiskLevelComponent implements OnInit {\r\n\r\n  ELEMENT_DATA = [];\r\n  /////////////mat table////////////////\r\n  displayedColumns: string[] = ['index', 'title', 'action'];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  allRiskLevel: any[]=[];\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n  constructor( \r\n    private dialog: MatDialog, \r\n    private setTitle: SetTitleService,\r\n    private logicalFormInfoService: LogicalFormInfoService,\r\n    private spinner: NgxSpinnerService\r\n    ) { }\r\n  ngOnInit(): void {\r\n    this.setTitle.setTitle('WHS-RiskLevel Info');\r\n    this.getAllRiskLevel()\r\n  }\r\n  getAllRiskLevel(){\r\n    this.logicalFormInfoService.getAllRiskLevel().subscribe((res:any)=> {\r\n      console.log(res)\r\n      let data = res.data;\r\n      data.forEach((element, index) => {\r\n        element.index = index + 1; //adding index\r\n      });\r\n\r\n      this.ELEMENT_DATA = data;\r\n      this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n      this.dataSource.paginator = this.paginator;\r\n      console.log('this.ELEMENT_DATA', this.ELEMENT_DATA);\r\n   })\r\n  }\r\n \r\n  edit(element) {\r\n    const dialogRef = this.dialog.open(EditRiskLevelComponent, {\r\n      width: \"550px\",\r\n     // height:'50%',\r\n      data: element,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if ((result == \"true\")) {\r\n        this.getAllRiskLevel()\r\n      }\r\n      console.log(\"The dialog was closed\");\r\n    });\r\n  }\r\n  delete(item) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: `Do you want to delete \"${item.title}\"?`,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#00B96F',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Delete!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        console.log(result)\r\n        // this.model.attributes.splice(i,1);\r\n        this.spinner.show()\r\n        this.logicalFormInfoService.deleteRiskLevel(item._id).subscribe((res => {\r\n        this.getAllRiskLevel()\r\n        this.spinner.hide()\r\n        }))\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","\r\n<div class=\"col ml-2 pt-1\">\r\n    <h1>\r\n      Risk Level Information List\r\n    </h1>\r\n  </div>\r\n  <div class=\"col ml-2 mb-2\">\r\n  \r\n    <button type=\"button\"  [routerLink]=\"['/admin/siteInfo/addRisk']\" \r\n      class=\"btn btn-outline-primary  mr-2 float-right\"><i  class=\"fas fa-plus\"></i> Add RiskLevel\r\n    </button>\r\n  </div>\r\n  <div >\r\n    <table mat-table [dataSource]=\"dataSource\">\r\n  \r\n      <!-- Position Column -->\r\n      <ng-container matColumnDef=\"index\">\r\n        <th mat-header-cell *matHeaderCellDef> No. </th>\r\n        <td mat-cell *matCellDef=\"let element,let i = index\">{{element.index}}</td>\r\n      </ng-container>\r\n  \r\n      <!-- Name Column -->\r\n  \r\n      <!-- Name Column -->\r\n      <ng-container matColumnDef=\"title\">\r\n        <th mat-header-cell *matHeaderCellDef> Risklevel Name </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.title}} </td>\r\n      </ng-container>\r\n  \r\n      <ng-container matColumnDef=\"action\">\r\n        <th mat-header-cell *matHeaderCellDef> Action </th>\r\n        <td mat-cell *matCellDef=\"let element\"> <i class=\"fas fa-pencil-alt mr-2\" (click)=\"edit(element)\" title=\"edit\"></i>  <i  class=\"fas fa-trash ml-2 \" (click)=\"delete(element)\" title=\"delete\"></i> \r\n      \r\n        </td>\r\n      </ng-container>\r\n<!--      \r\n  \r\n      <ng-container matColumnDef=\"edit\">\r\n        <th mat-header-cell *matHeaderCellDef> Edit </th>\r\n        <td mat-cell *matCellDef=\"let element\" (click)=\"edit(element)\"> <i class=\"fas fa-pencil-alt \"></i>\r\n        </td>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"delete\">\r\n        <th mat-header-cell *matHeaderCellDef> Delete </th>\r\n        <td mat-cell *matCellDef=\"let element\" (click)=\"delete(element)\"> <i class=\"fas fa-trash \"></i>\r\n        </td>\r\n      </ng-container>\r\n   -->\r\n  \r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n    </table>\r\n  \r\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons aria-label=\"Select page of periodic elements\">\r\n    </mat-paginator>\r\n  </div>","import { MatDialog } from '@angular/material/dialog';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { AfterViewInit, ViewChild } from '@angular/core';\r\nimport Swal from 'sweetalert2';\r\nimport {MatSort} from '@angular/material/sort';\r\n\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { EditPPEComponent } from './edit-ppe/edit-ppe.component';\r\nimport { SetTitleService } from 'src/app/utils/services/set-title.service';\r\n@Component({\r\n  selector: 'app-ppe-select',\r\n  templateUrl: './ppe-select.component.html',\r\n  styleUrls: ['./ppe-select.component.scss'],\r\n})\r\nexport class PpeSelectComponent implements AfterViewInit,OnInit {\r\n  jobTaskData: any = [];\r\n  ELEMENT_DATA = [];\r\n  /////////////mat table////////////////\r\n  displayedColumns: string[] = ['index', 'title','action'];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n  /////////////mat table end////////////////\r\n\r\n  constructor(\r\n   \r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    private dialog:MatDialog,\r\n    private setTitle:SetTitleService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getAllPPEs();\r\n    this.setTitle.setTitle('WHS-PPE List');\r\n    \r\n  }\r\n\r\n  getAllPPEs() {\r\n    this.logicalFormInfo.getAllPPE().subscribe((res:any) => {\r\n      console.log('PPEAll=>', res);\r\n      let data = res.data;\r\n      data.forEach((element, index) => {\r\n        element.index = index + 1; //adding index\r\n      });\r\n\r\n      this.ELEMENT_DATA = data;\r\n      this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n      this.dataSource.paginator = this.paginator;\r\n      console.log('this.ELEMENT_DATA', this.ELEMENT_DATA);\r\n\r\n      //  this.task = res.data.subComponents;\r\n    });\r\n  }\r\n  edit(element){\r\n    const dialogRef = this.dialog.open(EditPPEComponent, {\r\n      width: \"550px\",\r\n      data: element,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if ((result == \"true\")) {\r\n        this.getAllPPEs();\r\n      }\r\n      console.log(\"The dialog was closed\");\r\n    });\r\n  }\r\n  delete(item) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: `Do you want to delete \"${item.title}\"?`,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#00B96F',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Delete!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.logicalFormInfo\r\n        .deletePPE(item._id)\r\n        .subscribe((res) => {\r\n          Swal.fire({\r\n            title: 'Parameter Deleted successfully',\r\n            showConfirmButton: false,\r\n            timer: 1200,\r\n          });\r\n          console.log('deleted res', res);\r\n          this.getAllPPEs();\r\n            \r\n        });\r\n      \r\n      }\r\n    });\r\n  }\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n}\r\n","<div class=\"col ml-2 pt-3\">\r\n<h1> PPE List</h1>\r\n</div>\r\n    <div class=\"col ml-2 mb-2\">\r\n      \r\n      <button  class=\"btn btn-outline-primary mt-1 mr-2 float-right\"[routerLink]=\"['/admin/siteInfo/addPPE']\">\r\n        <i class=\"fas fa-plus mr-2\"></i>Add PPE \r\n      </button>\r\n    </div>\r\n    <div class=\"col-6\">\r\n      <mat-form-field>\r\n        <input\r\n          matInput\r\n          #input\r\n          placeholder=\"Search\"\r\n          (keyup)=\"applyFilter($event)\"\r\n        />\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div class=\"\">\r\n      \r\n      <table mat-table [dataSource]=\"dataSource\" matSort >\r\n    \r\n        <!-- Position Column -->\r\n        <ng-container matColumnDef=\"index\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header=\"index\"> No. </th>\r\n          <td mat-cell *matCellDef=\"let element\">{{element.index}}</td>\r\n        </ng-container>\r\n    \r\n        <!-- Name Column -->\r\n       \r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"title\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header=\"title\"> Name </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.title}} </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"action\">\r\n      <th mat-header-cell *matHeaderCellDef> Action </th>\r\n      <td mat-cell *matCellDef=\"let element\"> <i class=\"fas fa-pencil-alt  mr-2\" (click)=\"edit(element)\" title=\"edit\"></i>  <i  class=\"fas fa-trash ml-2 \" (click)=\"delete(element)\" title=\"delete\"></i> \r\n    \r\n      </td>\r\n    </ng-container>\r\n    <!-- <ng-container matColumnDef=\"edit\">\r\n        <th mat-header-cell *matHeaderCellDef> Edit </th>\r\n        <td mat-cell *matCellDef=\"let element\"(click)=\"edit(element)\"> <i class=\"fas fa-pencil-alt \"></i> \r\n        </td>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"delete\">\r\n        <th mat-header-cell *matHeaderCellDef> Delete </th>\r\n        <td mat-cell *matCellDef=\"let element\"(click)=\"delete(element)\"> <i class=\"fas fa-trash \"></i> \r\n        </td>\r\n      </ng-container> -->\r\n    \r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n        <tr class=\"mat-row\" *matNoDataRow>\r\n          <td class=\"mat-cell\" colspan=\"4\">Data Not  Found  \"{{input.value}}\"</td>\r\n        </tr>\r\n      \r\n      </table>\r\n    \r\n      <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\"\r\n                     showFirstLastButtons \r\n                     aria-label=\"Select page of periodic elements\">\r\n      </mat-paginator>\r\n    </div>\r\n    \r\n","import { EditLicenceCatComponent } from './edit-licence-cat/edit-licence-cat.component';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport {  ViewChild } from '@angular/core';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table'\r\n@Component({\r\n  selector: 'app-licence-cat',\r\n  templateUrl: './licence-cat.component.html',\r\n  styleUrls: ['./licence-cat.component.scss']\r\n})\r\nexport class LicenceCatComponent implements OnInit {\r\n\r\n  mode: any;\r\n  jobTaskData: any = [];\r\n  ELEMENT_DATA = [];\r\n  /////////////mat table////////////////\r\n  displayedColumns: string[] = ['index', 'title' ,'action'];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n  /////////////mat table end////////////////\r\n\r\n  constructor(private logicalFormInfo: LogicalFormInfoService,private dialog:MatDialog) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getAllLicenceCat();\r\n  }\r\n\r\n  getAllLicenceCat() {\r\n    this.logicalFormInfo.getAllLicenceCat().subscribe((res) => {\r\n      console.log('getAllLicenceCat=>', res);\r\n      // this.jobTaskData = res.data[0].subComponents;\r\n      let data = res.data;\r\n      data.forEach((element, index) => {\r\n        element.index = index + 1; //adding index\r\n      });\r\n\r\n      this.ELEMENT_DATA = data;\r\n      this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n      this.dataSource.paginator = this.paginator;\r\n\r\n      //  this.task = res.data.subComponents;\r\n    });\r\n \r\n  }\r\n  \r\n  edit(element){\r\n    const dialogRef = this.dialog.open(EditLicenceCatComponent, {\r\n      width: \"550px\",\r\n      data: element,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if ((result == \"true\")) {\r\n        this.getAllLicenceCat();\r\n      }\r\n      console.log(\"The dialog was closed\");\r\n    });\r\n  }\r\n\r\n  delete(item) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: `Do you want to delete \"${item.title}\"?`,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#00B96F',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Delete!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.logicalFormInfo\r\n        .deleteLicenceCat(item._id)\r\n        .subscribe((res) => {\r\n          Swal.fire({\r\n            title: 'Category Deleted successfully',\r\n            showConfirmButton: false,\r\n            timer: 1200,\r\n          });\r\n          console.log('deleted res', res);\r\n          this.getAllLicenceCat();\r\n            \r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"col ml-2 pt-3\">\r\n<h1> Trade Category List</h1>\r\n</div>\r\n<div class=\"col ml-2 mb-2\">\r\n  \r\n  <button  class=\"btn btn-outline-primary mt-1 mr-2 float-right\"(click)=\"edit('')\">\r\n    <i class=\"fas fa-folder-plus mr-2\"></i>Add Category \r\n  </button>\r\n</div>\r\n<div class=\"\">\r\n  <table mat-table [dataSource]=\"dataSource\">\r\n\r\n    <!-- Position Column -->\r\n    <ng-container matColumnDef=\"index\">\r\n      <th mat-header-cell *matHeaderCellDef> No. </th>\r\n      <td mat-cell *matCellDef=\"let element\">{{element.index}}</td>\r\n    </ng-container>\r\n\r\n    <!-- Name Column -->\r\n   \r\n<!-- Name Column -->\r\n<ng-container matColumnDef=\"title\">\r\n  <th mat-header-cell *matHeaderCellDef> Name </th>\r\n  <td mat-cell *matCellDef=\"let element\"> {{element.title}} </td>\r\n</ng-container>\r\n<ng-container matColumnDef=\"action\">\r\n  <th mat-header-cell *matHeaderCellDef> Action </th>\r\n  <td mat-cell *matCellDef=\"let element\"> <i class=\"fas fa-pencil-alt mr-2 \" (click)=\"edit(element)\" title=\"edit\"></i>  <i  class=\"fas fa-trash ml-2 \" (click)=\"delete(element)\" title=\"delete\"></i> \r\n\r\n  </td>\r\n</ng-container>\r\n<!-- <ng-container matColumnDef=\"edit\">\r\n  <th mat-header-cell *matHeaderCellDef> Edit </th>\r\n  <td mat-cell *matCellDef=\"let element\"(click)=\"edit(element)\"> <i class=\"fas fa-pencil-alt \"></i> \r\n  </td>\r\n</ng-container>\r\n<ng-container matColumnDef=\"delete\">\r\n  <th mat-header-cell *matHeaderCellDef> Delete </th>\r\n  <td mat-cell *matCellDef=\"let element\"(click)=\"delete(element)\"> <i class=\"fas fa-trash \"></i> \r\n  </td>\r\n</ng-container> -->\r\n\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n  </table>\r\n\r\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\"\r\n                 showFirstLastButtons \r\n                 aria-label=\"Select page of periodic elements\">\r\n  </mat-paginator>\r\n</div>\r\n","import { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { FormGroup, FormBuilder, FormArray } from '@angular/forms';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-adding-cust',\r\n  templateUrl: './adding-cust.component.html',\r\n  styleUrls: ['./adding-cust.component.scss']\r\n})\r\nexport class AddingCustComponent implements OnInit {\r\n\r\n  addCustomerForm: FormGroup\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private logicalFormInfoService: LogicalFormInfoService,\r\n    private router: Router,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.addCustomerForm = this.fb.group({\r\n      customerName: [''],\r\n      customerContact: [''],\r\n      customerStreetAddress: [''],\r\n      customerState: [''],\r\n      customerPostCode: [''],\r\n      businessName: [''],\r\n      arrObj: this.fb.array([]),\r\n      // customerContactPhone:[''],\r\n      // customerEmail:[''],\r\n    })\r\n    this.addCustomerDetails();\r\n  }\r\n  addCustomerDetails() {\r\n    this.customerArr().push(this.customerForm());\r\n\r\n  }\r\n  customerArr(): FormArray {\r\n    return this.addCustomerForm.get('arrObj') as FormArray;\r\n  }\r\n  customerForm(): FormGroup {\r\n    return this.fb.group({\r\n      email: [],\r\n      phone: [],\r\n      position: []\r\n\r\n    });\r\n  }\r\n  removeCustomerDetails(i) {\r\n    const item = <FormArray>this.addCustomerForm.controls['arrObj'];\r\n    if (item.length > 1) {\r\n      item.removeAt(i);\r\n\r\n    }\r\n  }\r\n  onSubmit() {\r\n    console.log(this.addCustomerForm.value);\r\n\r\n    this.logicalFormInfoService.addCustomer(this.addCustomerForm.value).subscribe(res => {\r\n      console.log(\"addCustomerForm=>\", res)\r\n      // this.dialogRef.close('ok')\r\n      this.router.navigate(['/admin/siteInfo/addCustomer']);\r\n    }, (err) => {\r\n      console.error(err);\r\n    });\r\n  }\r\n  states = [\r\n    {\r\n      value: \"NSW\", name: \"NSW\"\r\n    },\r\n    { value: \"ACT\", name: \"ACT\" },\r\n    { value: \"QLD\", name: \"QLD\" },\r\n    { value: \"NT\", name: \"NT\" },\r\n    { value: \"SA\", name: \"SA\" },\r\n    { value: \"NZ\", name: \"NZ\" },\r\n    { value: \"TAS\", name: \"TAS\" },\r\n    { value: \"VIC\", name: \"VIC\" },\r\n    { value: \"WA\", name: \"WA\" },\r\n\r\n  ]\r\n  \r\n}\r\n","<div class=\"btn btn-outline-primary\" [routerLink]=\"['/admin/siteInfo/addCustomer']\">\r\n  <i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\r\n</div>\r\n\r\n   \r\n      \r\n<section class=\"content\" style=\"height: 60%;\">\r\n    <div [formGroup]=\"addCustomerForm\" class=\"container px-4 py-4 bg-white\">\r\n        <h2>Add Customer</h2>\r\n        <hr>\r\n        <div class=\"row\">\r\n          <div class=\"my-3 col\">\r\n            <p for=\"exampleFormControlInput1\" class=\"form-Label\">Customer Name</p>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"customerName\"\r\n              formControlName=\"customerName\"\r\n            />\r\n          </div>\r\n          <div class=\"my-3 col\">\r\n            <p for=\"exampleFormControlInput1\" class=\"form-Label\">Customer Contact</p>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"customerContact\"\r\n              formControlName=\"customerContact\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"my-3 col\">\r\n            <p for=\"exampleFormControlInput1\" class=\"form-Label\">Street Address</p>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"customerStreetAddress\"\r\n              formControlName=\"customerStreetAddress\"\r\n            />\r\n          </div>\r\n          <div class=\"my-3 col\">\r\n            <p for=\"exampleFormControlInput1\" class=\"form-Label\">State</p>\r\n            <select class=\"form-select form-control\" aria-label=\"Default select example\" formControlName=\"customerState\" >\r\n              <option value=\"\" selected hidden> Select State</option>\r\n             <option *ngFor=\"let state of states\" [value]=\"state._id\">{{state.name}}</option>\r\n           \r\n           </select>\r\n            <!-- <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"customerState\"\r\n              formControlName=\"customerState\"\r\n            /> -->\r\n          </div>\r\n          <div class=\"my-3 col\">\r\n            <p for=\"exampleFormControlInput1\" class=\"form-Label\">PostCode</p>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"customerPostCode\"\r\n              formControlName=\"customerPostCode\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n        <div class=\"my-3 col\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">Australian Business Name (ABN)</p>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            id=\"businessName\"\r\n            formControlName=\"businessName\"\r\n          />\r\n        </div>\r\n        </div>\r\n        <!-- <div class=\"row\">\r\n          <div class=\"my-3 col\">\r\n            <p for=\"exampleFormControlInput1\" class=\"form-Label\">Customer Contact Phone</p>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"siteName\"\r\n              formControlName=\"customerContactPhone\"\r\n            />\r\n          </div>\r\n          <div class=\"my-3 col\">\r\n            <p for=\"exampleFormControlInput1\" class=\"form-Label\">Customer Email</p>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"siteName\"\r\n              formControlName=\"customerEmail\"\r\n            />\r\n          </div>\r\n        </div>  -->\r\n        <ng-container formArrayName=\"arrObj\">\r\n          <ng-container\r\n            *ngFor=\"let control of customerArr().controls; let i = index\"\r\n            [formGroupName]=\"i\"\r\n          >\r\n            <div>\r\n            <h1> Contact {{i+1}}</h1>\r\n              <div class=\"row\">\r\n\r\n                <div class=\"my-3 col-3\">\r\n                  <p for=\"exampleFormControlInput1\" class=\"form-Label\"> Position</p>\r\n                  <input\r\n                    type=\"text\"\r\n                    formControlName=\"position\"\r\n                   \r\n                    class=\"form-control\"\r\n                    id=\"position\"\r\n                  />\r\n                </div>\r\n                <div class=\"my-3 col-3\">\r\n                  <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n                   Email\r\n                  </p>\r\n                  <input\r\n                  type=\"text\"\r\n                  formControlName=\"email\"\r\n             \r\n                  class=\"form-control\"\r\n                  id=\"email\"\r\n                />\r\n                </div>\r\n                <div class=\"my-3 col-3\">\r\n                  <p for=\"exampleFormControlInput1\" class=\"form-Label\">  Phone Number</p>\r\n                  <input\r\n                    type=\"text\"\r\n                    formControlName=\"phone\"\r\n                  \r\n                    class=\"form-control\"\r\n                    id=\"phone\"\r\n                  />\r\n                </div>\r\n              \r\n                <div class=\" my-3 col-1 my-auto\">\r\n                  <span class=\"material-icons\"  style=\"margin-top: 35%\"   (click)=\"addCustomerDetails()\"\r\n                    >add_circle_outline\r\n                  </span>\r\n                </div>\r\n                <div class=\"my-3 col-1 my-auto\">\r\n                  <span class=\"material-icons\"  style=\"margin-top: 35%\"  (click)=\"removeCustomerDetails(i)\">\r\n                    remove_circle_outline\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <hr />\r\n          </ng-container>\r\n        </ng-container>\r\n      <div >\r\n        <button (click)=\"onSubmit()\" class=\"btn btn-primary\">\r\n          Submit\r\n        </button>\r\n      </div>\r\n   \r\n     </div> \r\n     </section>","import { EditCOPComponent } from './edit-cop/edit-cop.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { SetTitleService } from 'src/app/utils/services/set-title.service';\r\n@Component({\r\n  selector: 'app-code-of-pract',\r\n  templateUrl: './code-of-pract.component.html',\r\n  styleUrls: ['./code-of-pract.component.scss']\r\n})\r\nexport class CodeOfPractComponent implements OnInit {\r\n\r\n  mode: any;\r\n  jobTaskData: any = [];\r\n  ELEMENT_DATA = [];\r\n  /////////////mat table////////////////\r\n  displayedColumns: string[] = ['index', 'title' ,'action'];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n  /////////////mat table end////////////////\r\n\r\n  constructor(private logicalFormInfo: LogicalFormInfoService,private dialog:MatDialog, private setTitle: SetTitleService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getAllCodeOfPractice();\r\n    this.setTitle.setTitle('WHS-Code of Practice');\r\n  }\r\n\r\n  getAllCodeOfPractice() {\r\n   \r\n    this.logicalFormInfo.getAllCOP().subscribe((res:any) => {\r\n      console.log('codeOfPractice=>', res);\r\n      // this.jobTaskData = res.data[0].subComponents;\r\n      let data = res.data;\r\n      data.forEach((element, index) => {\r\n        element.index = index + 1; //adding index\r\n      });\r\n\r\n      this.ELEMENT_DATA = data;\r\n      this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n      this.dataSource.paginator = this.paginator;\r\n\r\n      //  this.task = res.data.subComponents;\r\n    });\r\n \r\n  }\r\n  edit(element){\r\n    const dialogRef = this.dialog.open(EditCOPComponent, {\r\n      width: \"550px\",\r\n      data: element,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if ((result == \"true\")) {\r\n        this.getAllCodeOfPractice();\r\n      }\r\n      console.log(\"The dialog was closed\");\r\n    });\r\n  }\r\n  delete(item) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: `Do you want to delete \"${item.title}\"?`,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#00B96F',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Delete!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.logicalFormInfo\r\n        .deleteCOP(item._id)\r\n        .subscribe((res) => {\r\n          Swal.fire({\r\n            title: 'Parameter Deleted successfully',\r\n            showConfirmButton: false,\r\n            timer: 1200,\r\n          });          \r\n          this.getAllCodeOfPractice();\r\n            \r\n        });\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"col ml-2 pt-3\">\r\n<h1> Code Of Practice List</h1>\r\n</div>\r\n<div class=\"col ml-2 mb-2\">\r\n  \r\n  <button  class=\"btn btn-outline-primary mt-1 mr-2 float-right\"[routerLink]=\"['/admin/siteInfo/addCOP']\">\r\n    <i class=\"fas fa-folder-plus mr-2\"></i>Add Code Of Practice \r\n  </button>\r\n</div>\r\n<div class=\"\">\r\n  <table mat-table [dataSource]=\"dataSource\">\r\n\r\n    <!-- Position Column -->\r\n    <ng-container matColumnDef=\"index\">\r\n      <th mat-header-cell *matHeaderCellDef> No. </th>\r\n      <td mat-cell *matCellDef=\"let element\">{{element.index}}</td>\r\n    </ng-container>\r\n\r\n    <!-- Name Column -->\r\n   \r\n<!-- Name Column -->\r\n<ng-container matColumnDef=\"title\">\r\n  <th mat-header-cell *matHeaderCellDef> Name </th>\r\n  <td mat-cell *matCellDef=\"let element\"> {{element.title}} </td>\r\n</ng-container>\r\n<ng-container matColumnDef=\"action\">\r\n  <th mat-header-cell *matHeaderCellDef> Action </th>\r\n  <td mat-cell *matCellDef=\"let element\"> <i class=\"fas fa-pencil-alt mr-2\" (click)=\"edit(element)\" title=\"edit\"></i>  <i  class=\"fas fa-trash ml-2 \" (click)=\"delete(element)\" title=\"delete\"></i> \r\n\r\n  </td>\r\n</ng-container>\r\n<!-- <ng-container matColumnDef=\"edit\">\r\n  <th mat-header-cell *matHeaderCellDef> Edit </th>\r\n  <td mat-cell *matCellDef=\"let element\"(click)=\"edit(element)\"> <i class=\"fas fa-pencil-alt \"></i> \r\n  </td>\r\n</ng-container>\r\n<ng-container matColumnDef=\"delete\">\r\n  <th mat-header-cell *matHeaderCellDef> Delete </th>\r\n  <td mat-cell *matCellDef=\"let element\"(click)=\"delete(element)\"> <i class=\"fas fa-trash \"></i> \r\n  </td>\r\n</ng-container> -->\r\n\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n  </table>\r\n\r\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\"\r\n                 showFirstLastButtons \r\n                 aria-label=\"Select page of periodic elements\">\r\n  </mat-paginator>\r\n</div>\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\n@Component({\r\n  selector: 'app-edit-cop',\r\n  templateUrl: './edit-cop.component.html',\r\n  styleUrls: ['./edit-cop.component.scss']\r\n})\r\nexport class EditCOPComponent implements OnInit {\r\n\r\n  editTitle: FormGroup;\r\n  dataRec: any;\r\n\r\n\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    public dialogRef: MatDialogRef<EditCOPComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.dataRec = data;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.editTitle = this.fb.group({\r\n      title: [this.dataRec.title, Validators.required],\r\n    });\r\n  }\r\n  onFormSubmit() {\r\n     \r\n    let data={\r\n      title :this.editTitle.get('title').value,\r\n    }\r\n    this.logicalFormInfo\r\n      .updateCOP(data, this.dataRec._id)\r\n      .subscribe((resData) => {\r\n        console.log('resData', resData);\r\n\r\n        this.dialogRef.close('true');\r\n        Swal.fire({\r\n          title: 'Parameter Edited successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });  \r\n          });\r\n  }\r\n  closeDialog(){\r\n    this.dialogRef.close('false');\r\n\r\n  }\r\n}\r\n","<form [formGroup]=\"editTitle\" >\r\n    <mat-form-field appearance=\"legacy\"\r\n    class=\"example-full-width\" style=\"width: 498px;\">\r\n    <mat-label>Edit Code Of Practice</mat-label>\r\n    <input matInput  formControlName=\"title\" style=\"text-transform: capitalize !important;\">\r\n    </mat-form-field>\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-2 offset-8 \">\r\n            <button mat-raised-button (click)=\"closeDialog()\">Close</button>\r\n        </div>\r\n        <div class=\"col-sm-2  \">\r\n            <button mat-raised-button  [disabled]=\"!editTitle.valid\"(click)=\"onFormSubmit()\">Edit</button>\r\n        </div>\r\n    </div>\r\n</form>   \r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n  FormArray,\r\n  \r\n} from '@angular/forms';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-add-job-task',\r\n  templateUrl: './add-job-task.component.html',\r\n  styleUrls: ['./add-job-task.component.scss']\r\n})\r\nexport class AddJobTaskComponent implements OnInit {\r\n\r\n  jobTaskDetails!: FormGroup;\r\n  formData: any;;\r\n  licenceCatAll=[];\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private router: Router,\r\n    private logicalFormInfo:LogicalFormInfoService\r\n  ) { \r\n    this.jobTaskDetails=this.fb.group({\r\n     // mode:\"JobTask\",\r\n      arrObj: this.fb.array([]),\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.addAction();\r\n    this.getAllCategories();\r\n  }\r\n  getAllCategories() {\r\n    this.logicalFormInfo.getAllLicenceCat().subscribe((res) => {\r\n      console.log('getAllLicenceCat=>', res);\r\n      this.licenceCatAll = res.data;\r\n    });\r\n  }\r\n  addAction() {\r\n    {\r\n      this.add().push(this.newAction());\r\n    }\r\n  }\r\n  add(): FormArray {\r\n    return this.jobTaskDetails.get('arrObj') as FormArray;\r\n  }\r\n  newAction(): FormGroup {\r\n    return this.fb.group({     \r\n      title: ['', Validators.required],\r\n      tradeCategoryId: ['', Validators.required],      \r\n    });\r\n  }\r\n  \r\n  removeSafetyModule(i) {\r\n    const item = <FormArray>this.jobTaskDetails.controls['arrObj'];\r\n    if (item.length > 1) {\r\n      item.removeAt(i);\r\n    \r\n    }\r\n  }\r\n  onFormSubmit() {\r\n    console.log(this.jobTaskDetails.get('arrObj').value);\r\n    let data={\r\n      arrObj:this.jobTaskDetails.get('arrObj').value\r\n    }\r\n    this.logicalFormInfo.addMultipleJobTask(data).subscribe((data) => {\r\n      console.log('JOBTask=>', data);\r\n      Swal.fire({\r\n        title: 'Parameter Added successfully',\r\n        showConfirmButton: false,\r\n        timer: 1200,\r\n      }); \r\n      this.router.navigate(['/admin/siteInfo/jobTask']);      \r\n    },(err)=>{console.error(err);} \r\n  \r\n    );\r\n    \r\n  }\r\n \r\n}\r\n","<div class=\"btn btn-outline-primary\" [routerLink]=\"['/admin/siteInfo/jobTask']\">\r\n  <i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\r\n</div>\r\n<div class=\"container px-4 py-4 bg-white\">\r\n  <form [formGroup]=\"jobTaskDetails\" (ngSubmit)=\"onFormSubmit()\">\r\n    <h2 class=\"text-center\">Add Job Task</h2>\r\n    <br />\r\n    <hr />\r\n    <ng-container formArrayName=\"arrObj\">\r\n      <ng-container\r\n        *ngFor=\"let control of add().controls; let i = index\"\r\n        [formGroupName]=\"i\"\r\n      >\r\n        <div class=\"row justify-content-center\">\r\n          <div class=\"mr-1 mt-2\">\r\n            <span \r\n              >{{i+1}}.\r\n            </span>\r\n          </div>\r\n          <div class=\"col-4\">\r\n            <input\r\n              type=\"text\"\r\n              formControlName=\"title\"\r\n              class=\"form-control sign\"\r\n              id=\"title\"\r\n            />\r\n          </div>\r\n          <div class=\"col-4\">\r\n            <select class=\"form-select form-control\" aria-label=\"Default select example\" formControlName=\"tradeCategoryId\">\r\n              <option value=\"\" selected hidden>Select category</option>\r\n              <option *ngFor=\"let tradeCat of licenceCatAll\" [value]=\"tradeCat._id\">{{tradeCat.title}}</option>\r\n         \r\n            </select>\r\n          </div>\r\n          <div class=\"col-1 mt-2\">\r\n            <span class=\"material-icons\" (click)=\"addAction()\"\r\n              >add_circle_outline\r\n            </span>\r\n          </div>\r\n          <div class=\"col-1 mt-2\">\r\n            <span class=\"material-icons\" (click)=\"removeSafetyModule(i)\">\r\n              remove_circle_outline\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        <hr />\r\n      </ng-container>\r\n    </ng-container>\r\n    <br />\r\n\r\n    <div class=\"col-md-2\">\r\n      <button type=\"submit\" class=\"btn btn-primary\"[disabled]=\"jobTaskDetails.get('arrObj').invalid\">Add</button>\r\n    </div>\r\n  </form>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport Swal from 'sweetalert2';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { SetTitleService } from 'src/app/utils/services/set-title.service';\r\nimport { EditChemicalComponent } from './edit-chemical/edit-chemical.component';\r\n\r\n@Component({\r\n  selector: 'app-chemical',\r\n  templateUrl: './chemical.component.html',\r\n  styleUrls: ['./chemical.component.scss']\r\n})\r\nexport class ChemicalComponent implements OnInit {\r\n  jobTaskData: any = [];\r\n  ELEMENT_DATA = [];\r\n  /////////////mat table////////////////\r\n  displayedColumns: string[] = ['index', 'title', 'action'];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  allChemical: any[]=[];\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n  constructor( \r\n    private dialog: MatDialog, \r\n    private setTitle: SetTitleService,\r\n    private logicalFormInfoService: LogicalFormInfoService,\r\n    private spinner: NgxSpinnerService\r\n    ) { }\r\n  ngOnInit(): void {\r\n    this.setTitle.setTitle('WHS-Chemical Info');\r\n    this.getAllChemical()\r\n  }\r\n  getAllChemical(){\r\n    this.logicalFormInfoService.getAllChemical().subscribe((res:any)=> {\r\n      console.log(res)\r\n      let data = res.data;\r\n      data.forEach((element, index) => {\r\n        element.index = index + 1; //adding index\r\n      });\r\n\r\n      this.ELEMENT_DATA = data;\r\n      this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n      this.dataSource.paginator = this.paginator;\r\n      console.log('this.ELEMENT_DATA', this.ELEMENT_DATA);\r\n   })\r\n  }\r\n \r\n  edit(element) {\r\n    const dialogRef = this.dialog.open(EditChemicalComponent, {\r\n      width: \"550px\",\r\n     // height:'50%',\r\n      data: element,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if ((result == \"true\")) {\r\n        this.getAllChemical()\r\n      }\r\n      console.log(\"The dialog was closed\");\r\n    });\r\n  }\r\n  delete(item) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: `Do you want to delete \"${item.title}\"?`,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#00B96F',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Delete!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        console.log(result)\r\n        // this.model.attributes.splice(i,1);\r\n        this.spinner.show()\r\n        this.logicalFormInfoService.deleteChemical(item._id).subscribe((res => {\r\n        this.getAllChemical()\r\n        this.spinner.hide()\r\n        }))\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"col ml-2 pt-1\">\r\n    <h1>\r\n      Chemical Information List\r\n    </h1>\r\n  </div>\r\n  <div>\r\n  \r\n    <button type=\"button\"  [routerLink]=\"['/admin/siteInfo/addChemical']\" \r\n      class=\"btn btn-outline-primary  mr-2 float-right\"><i  class=\"fas fa-plus\"></i> Add Chemical\r\n    </button>\r\n  </div>\r\n  <div >\r\n    <table mat-table [dataSource]=\"dataSource\">\r\n  \r\n      <!-- Position Column -->\r\n      <ng-container matColumnDef=\"index\">\r\n        <th mat-header-cell *matHeaderCellDef> No. </th>\r\n        <td mat-cell *matCellDef=\"let element,let i = index\">{{element.index}}</td>\r\n      </ng-container>\r\n  \r\n      <!-- Name Column -->\r\n  \r\n      <!-- Name Column -->\r\n      <ng-container matColumnDef=\"title\">\r\n        <th mat-header-cell *matHeaderCellDef> Chemical Name </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.title}} </td>\r\n      </ng-container>\r\n  \r\n      <ng-container matColumnDef=\"action\">\r\n        <th mat-header-cell *matHeaderCellDef> Action </th>\r\n        <td mat-cell *matCellDef=\"let element\"> <i class=\"fas fa-pencil-alt mr-2\" (click)=\"edit(element)\" title=\"edit\"></i>  <i  class=\"fas fa-trash ml-2 \" (click)=\"delete(element)\" title=\"delete\"></i> \r\n      \r\n        </td>\r\n      </ng-container>\r\n     \r\n<!--   \r\n      <ng-container matColumnDef=\"edit\">\r\n        <th mat-header-cell *matHeaderCellDef> Edit </th>\r\n        <td mat-cell *matCellDef=\"let element\" (click)=\"edit(element)\"> <i class=\"fas fa-pencil-alt \"></i>\r\n        </td>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"delete\">\r\n        <th mat-header-cell *matHeaderCellDef> Delete </th>\r\n        <td mat-cell *matCellDef=\"let element\" (click)=\"delete(element)\"> <i class=\"fas fa-trash \"></i>\r\n        </td>\r\n      </ng-container> -->\r\n  \r\n  \r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n    </table>\r\n  \r\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons aria-label=\"Select page of periodic elements\">\r\n    </mat-paginator>\r\n  </div>","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { FormBuilder, FormGroup,  Validators,\r\n  FormArray,} from '@angular/forms';\r\n\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-add-residual-risk-level',\r\n  templateUrl: './add-residual-risk-level.component.html',\r\n  styleUrls: ['./add-residual-risk-level.component.scss']\r\n})\r\nexport class AddResidualRiskLevelComponent implements OnInit {\r\n\r\n  addResidualForm: FormGroup;\r\n  constructor( \r\n    private fb:FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    private router: Router,\r\n    ) { \r\n      this.addResidualForm=this.fb.group({\r\n        arrObj: this.fb.array([]),\r\n      })\r\n    }\r\n\r\n    ngOnInit(): void {\r\n      this.addResidual();\r\n    }\r\n    addResidual() {\r\n      {\r\n        this.add().push(this.newAction());\r\n      }\r\n    }\r\n    add(): FormArray {\r\n      return this.addResidualForm.get('arrObj') as FormArray;\r\n    }\r\n    newAction(): FormGroup {\r\n      return this.fb.group({\r\n       \r\n        title: ['', Validators.required],\r\n      });\r\n    }\r\n    \r\n    removeResidual(i) {\r\n      const item = <FormArray>this.addResidualForm.controls['arrObj'];\r\n      if (item.length > 1) {\r\n        item.removeAt(i);\r\n      \r\n      }\r\n    }\r\n    onFormSubmit() {\r\n      console.log(this.addResidualForm.value);\r\n      let data={\r\n        arrObj:this.addResidualForm.get('arrObj').value\r\n      }\r\n      this.logicalFormInfo.addMultipleResidual(data).subscribe((data) => {\r\n        console.log('chemical=>', data);\r\n        this.router.navigate(['/admin/siteInfo/residual']);      \r\n      },(err)=>{console.error(err);} \r\n    \r\n      );\r\n      \r\n    }\r\n\r\n}\r\n","\r\n<div class=\"btn btn-outline-primary\" [routerLink]=\"['/admin/siteInfo/addResidualForm']\">\r\n    <i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\r\n  </div>\r\n\r\n    <div class=\"container px-4 py-4 bg-white\" >\r\n        <form  [formGroup]=\"addResidualForm\" (ngSubmit)=\"onFormSubmit()\">\r\n      <h2  class=\"text-center\"> Residual-Risk-Level Info</h2>\r\n      <br />\r\n      <hr />\r\n      <ng-container formArrayName=\"arrObj\">\r\n        <ng-container\r\n          *ngFor=\"let control of add().controls; let i = index\"\r\n          [formGroupName]=\"i\"\r\n        >\r\n          <div class=\"row justify-content-center\">\r\n            <div class=\"mr-1 mt-2\">\r\n              <span \r\n                >{{i+1}}.\r\n              </span>\r\n            </div>\r\n            <div class=\"col-8\">\r\n              <input\r\n                type=\"text\"\r\n                formControlName=\"title\"\r\n                class=\"form-control sign\"\r\n                id=\"title\"\r\n              />\r\n            </div>\r\n            <div class=\"col-1 mt-2\">\r\n              <span class=\"material-icons\" (click)=\"addResidual()\"\r\n                >add_circle_outline\r\n              </span>\r\n            </div>\r\n            <div class=\"col-1 mt-2\">\r\n              <span class=\"material-icons\" (click)=\"removeResidual(i)\">\r\n                remove_circle_outline\r\n              </span>\r\n            </div>\r\n          </div>\r\n  \r\n          <hr />\r\n        </ng-container>\r\n      </ng-container>\r\n      <br />\r\n          <div  class=\"col-md-2\">\r\n            <button class=\"btn btn-primary\"[disabled]=\"addResidualForm.get('arrObj').invalid\" >\r\n              Add\r\n            </button>\r\n          </div>\r\n        \r\n        </form>\r\n        </div>","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n  FormArray,\r\n  \r\n} from '@angular/forms'\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { Router } from '@angular/router';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-add-licence',\r\n  templateUrl: './add-licence.component.html',\r\n  styleUrls: ['./add-licence.component.scss']\r\n})\r\nexport class AddLicenceComponent implements OnInit {\r\n  addLicenceFG!: FormGroup;\r\n  formData: any;\r\n  categories=[];\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private router: Router,\r\n    private logicalFormInfo:LogicalFormInfoService\r\n  ) { \r\n    this.addLicenceFG=this.fb.group({\r\n     // mode:\"JobTask\",\r\n      arrObj: this.fb.array([]),\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.addAction();\r\n    this.getAllLicenceCat();\r\n  }\r\n  addAction() {\r\n    {\r\n      this.add().push(this.newAction());\r\n    }\r\n  }\r\n  add(): FormArray {\r\n    return this.addLicenceFG.get('arrObj') as FormArray;\r\n  }\r\n  newAction(): FormGroup {\r\n    return this.fb.group({     \r\n      title: ['', Validators.required],\r\n      tradeCategoryId: ['', Validators.required],\r\n    });\r\n  }\r\n  \r\n  removeSafetyModule(i) {\r\n    const item = <FormArray>this.addLicenceFG.controls['arrObj'];\r\n    if (item.length > 1) {\r\n      item.removeAt(i);    \r\n    }\r\n  }\r\n  getAllLicenceCat() {\r\n    this.logicalFormInfo.getAllLicenceCat().subscribe((res) => {\r\n      console.log('getAllLicenceCat=>', res);\r\n      this.categories = res.data; \r\n    });\r\n \r\n  }\r\n  onFormSubmit() {\r\n    let data={\r\n      arrObj:this.addLicenceFG.get('arrObj').value\r\n    }\r\n    console.log(\"data li cat\",data);\r\n    \r\n    this.logicalFormInfo.addMultipleLicence(data).subscribe((res) => {\r\n      console.log('licence=>', res);\r\n      Swal.fire({\r\n        title: 'Parameter added successfully',\r\n        showConfirmButton: false,\r\n        timer: 1200,\r\n      });\r\n      this.router.navigate(['/admin/siteInfo/licenceAndQual']);      \r\n    },(err)=>{console.error(err);} \r\n  \r\n    );\r\n    \r\n  }\r\n \r\n\r\n}\r\n","<div class=\"btn btn-outline-primary\" [routerLink]=\"['/admin/siteInfo/licenceAndQual']\">\r\n    <i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\r\n  </div>\r\n  \r\n  <div class=\"container px-4 py-4 bg-white\">\r\n    \r\n    <form [formGroup]=\"addLicenceFG\" (ngSubmit)=\"onFormSubmit()\">\r\n      <h2 class=\"text-center\">Add Licence</h2>\r\n      <br />\r\n      <hr />\r\n      <ng-container formArrayName=\"arrObj\">\r\n        <ng-container\r\n          *ngFor=\"let control of add().controls; let i = index\"\r\n          [formGroupName]=\"i\"\r\n        >\r\n          <div class=\"row justify-content-center\">\r\n            <div class=\"mr-1 mt-2\">\r\n              <span \r\n                >{{i+1}}.\r\n              </span>\r\n            </div>\r\n            <div class=\"col-4\">\r\n              <input\r\n                type=\"text\"\r\n                formControlName=\"title\"\r\n                class=\"form-control sign\"\r\n                id=\"name\"\r\n                placeholder=\"Licence Name\"\r\n              />\r\n              \r\n            </div>\r\n            <div class=\"col-4\">            \r\n              <select class=\"form-select form-control\" formControlName=\"tradeCategoryId\"\r\n              aria-label=\"Default select example\">\r\n                <option value=\"\"selected hidden>Select category</option>\r\n                <option *ngFor=\"let category of categories\" [value]=\"category._id\">{{category.title}}</option>               \r\n              </select>\r\n            </div>\r\n            <div class=\"col-1 mt-2\">\r\n              <span class=\"material-icons\" (click)=\"addAction()\"\r\n                >add_circle_outline\r\n              </span>\r\n            </div>\r\n            <div class=\"col-1 mt-2\">\r\n              <span class=\"material-icons\" (click)=\"removeSafetyModule(i)\">\r\n                remove_circle_outline\r\n              </span>\r\n            </div>\r\n          </div>\r\n  \r\n          <hr />\r\n        </ng-container>\r\n      </ng-container>\r\n      <br />\r\n  \r\n      <div class=\"col-md-2\">\r\n        <button type=\"submit\" class=\"btn btn-primary\"[disabled]=\"addLicenceFG.get('arrObj').invalid\">Add</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  ","import { Component, OnInit } from '@angular/core';\r\nimport { SetTitleService } from '../utils/services/set-title.service';\r\n\r\n@Component({\r\n  selector: 'app-site-info',\r\n  templateUrl: './site-info.component.html',\r\n  styleUrls: ['./site-info.component.scss']\r\n})\r\nexport class SiteInfoComponent implements OnInit {\r\n\r\n  constructor(private setTitle:SetTitleService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.setTitle.setTitle('WHS-Site Info');\r\n  }\r\n\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport Swal from 'sweetalert2';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\n@Component({\r\n  selector: 'app-edit-ppe',\r\n  templateUrl: './edit-ppe.component.html',\r\n  styleUrls: ['./edit-ppe.component.scss']\r\n})\r\nexport class EditPPEComponent implements OnInit {\r\n  editTitle!: FormGroup;\r\n  dataRec: any;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    public dialogRef: MatDialogRef<EditPPEComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.dataRec = data;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.editTitle = this.fb.group({\r\n      title: [this.dataRec.title, Validators.required],\r\n    });\r\n  }\r\n  onFormSubmit() {\r\n     \r\n    let data={\r\n      title :this.editTitle.get('title').value\r\n    }\r\n    this.logicalFormInfo\r\n      .updatePPE(data, this.dataRec._id)\r\n      .subscribe((resData) => {\r\n        console.log('resData', resData);\r\n\r\n        this.dialogRef.close('true');\r\n        Swal.fire({\r\n          title: 'Parameter Updated successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });     \r\n       });\r\n  }\r\n  closeDialog(){\r\n    this.dialogRef.close('false');\r\n\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"editTitle\" >\r\n    <h2>Edit PPE</h2>\r\n    <mat-form-field appearance=\"legacy\"\r\n    class=\"example-full-width\" style=\"width: 498px;\">\r\n    <!-- <mat-label>Edit PPE</mat-label> -->\r\n    <input matInput  formControlName=\"title\" style=\"text-transform: capitalize !important;\">\r\n    </mat-form-field>\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-2 offset-8 \">\r\n            <button mat-raised-button (click)=\"closeDialog()\">Close</button>\r\n        </div>\r\n        <div class=\"col-sm-2  \">\r\n            <button mat-raised-button  [disabled]=\"!editTitle.valid\"(click)=\"onFormSubmit()\">Update</button>\r\n        </div>\r\n    </div>\r\n</form>   \r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n  FormArray,\r\n  \r\n} from '@angular/forms'\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-add-licence-cat',\r\n  templateUrl: './add-licence-cat.component.html',\r\n  styleUrls: ['./add-licence-cat.component.scss']\r\n})\r\nexport class AddLicenceCatComponent implements OnInit {\r\n\r\n  addLicenceCatFG!: FormGroup;\r\n  formData: any;;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private router: Router,\r\n    private logicalFormInfo:LogicalFormInfoService\r\n  ) { \r\n    this.addLicenceCatFG=this.fb.group({\r\n     // mode:\"JobTask\",\r\n      arrObj: this.fb.array([]),\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.addAction();\r\n  }\r\n  addAction() {\r\n    {\r\n      this.add().push(this.newAction());\r\n    }\r\n  }\r\n  add(): FormArray {\r\n    return this.addLicenceCatFG.get('arrObj') as FormArray;\r\n  }\r\n  newAction(): FormGroup {\r\n    return this.fb.group({\r\n     \r\n      title: ['', Validators.required],\r\n    });\r\n  }\r\n  \r\n  removeSafetyModule(i) {\r\n    const item = <FormArray>this.addLicenceCatFG.controls['arrObj'];\r\n    if (item.length > 1) {\r\n      item.removeAt(i);\r\n    \r\n    }\r\n  }\r\n  onFormSubmit() {\r\n    let data={\r\n      arrObj:this.addLicenceCatFG.get('arrObj').value\r\n    }\r\n    this.logicalFormInfo.addLicenceCat(data).subscribe((data) => {\r\n      console.log('JOBTask=>', data);\r\n      this.router.navigate(['/admin/siteInfo/licenceCat']);      \r\n    },(err)=>{console.error(err);} \r\n  \r\n    );\r\n    \r\n  }\r\n \r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { LandingPageInfoServiceService } from 'src/app/utils/services/landing-page-info-service.service';\r\n\r\nimport { UploadFileServiceService } from './../../utils/services/upload-file-service.service';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\n\r\nimport Swal from 'sweetalert2';\r\nimport { FormBuilder, FormGroup, Validators, FormArray } from '@angular/forms';\r\nimport { AddHighRiskConstructionComponent } from './add-high-risk-construction/add-high-risk-construction.component';\r\nimport { EditHighRiskConstructionComponent } from './edit-high-risk-construction/edit-high-risk-construction.component';\r\nimport { AfterViewInit,ViewChild } from '@angular/core';\r\n\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { SetTitleService } from 'src/app/utils/services/set-title.service';\r\n@Component({\r\n  selector: 'app-high-risk-con',\r\n  templateUrl: './high-risk-con.component.html',\r\n  styleUrls: ['./high-risk-con.component.scss'],\r\n})\r\nexport class HighRiskConComponent implements AfterViewInit, OnInit {\r\n  formData: any;\r\n  mode: any;\r\n  highRiskConstructionData: any = [];\r\n  myId: any;\r\n  isEdit = false;\r\n  Is_id: any;\r\n  Edit = false;\r\n  Add = false;\r\n  collectionSize = 10;\r\n  hide = false;\r\n  closeResult: string;\r\n  componentId = '';\r\n  ELEMENT_DATA = [];\r\n  /////////////mat table////////////////\r\n  displayedColumns: string[] = ['index', 'title' ,'action'];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  constructor(\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    public dialog: MatDialog,\r\n    private spinner: NgxSpinnerService,\r\n    public router: Router,\r\n    private setTitle:SetTitleService\r\n  ) {\r\n    \r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllHighRisk();\r\n    this.setTitle.setTitle('WHS-High Risk Construction List');\r\n  }\r\n  \r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n \r\n  // onFormSubmit() {\r\n  //   console.log(this.riskDetails);\r\n  //   this.logicalFormInfo\r\n  //     .addFormData(this.riskDetails.getRawValue())\r\n  //     .subscribe((data) => {\r\n  //       console.log('risk=>', data);\r\n  //       this.formData = data;\r\n  //     });\r\n  // }\r\n  // getAllHighRisk() {\r\n  //   this.mode = 'Risk';\r\n  //   this.logicalFormInfo.getFormDataById(this.mode).subscribe((res) => {\r\n  //     console.log('riskDetails data=>', res);\r\n  //     this.componentId = res.data[0]._id;\r\n  //     this.highRiskConstructionData = res.data[0];\r\n  //     console.log('highRiskConstructionData', this.highRiskConstructionData);\r\n  //   });\r\n  // }\r\n  // editTask(title,id, i) {\r\n  //   console.log('id', id);\r\n  //   this.myId = id;\r\n  //   this.isEdit = true;\r\n  //   this.mode = 'Risk';\r\n\r\n  //   let dialogRef = this.dialog.open(EditHighRiskConstructionComponent, {\r\n  //     data: {        \r\n  //       EditData: id,\r\n  //       componentId: this.componentId,\r\n  //       index: i,\r\n  //       title:title\r\n  //       // moduleName: name,\r\n  //     },\r\n\r\n  //     width: '1000px',\r\n  //     height: '500px',\r\n  //   });\r\n  //   dialogRef.afterClosed().subscribe((result) => {\r\n  //     console.log('-> openDialog -> result', result);\r\n\r\n  //     if ((result = 'true')) {\r\n  //       this.getAllHighRisk();\r\n  //     }\r\n  //     console.log('The dialog was closed');\r\n  //   });\r\n  // }\r\n\r\n  // addTask() {\r\n  //   let dialogRef = this.dialog.open(AddHighRiskConstructionComponent, {\r\n  //     data: {\r\n  //       action: 'new',\r\n  //       EditData: this.componentId,\r\n  //     },\r\n  //     width: '600px',\r\n  //     height: '400px',\r\n  //   });\r\n  //   dialogRef.afterClosed().subscribe((result) => {\r\n  //     console.log('openDialog->result', result);\r\n  //     if ((result = 'true')) {\r\n  //       this.getAllHighRisk();\r\n  //     }\r\n  //   });\r\n\r\n  // }\r\n  // deleteopen(content, id) {\r\n  //   console.log('deleteopen close id=>', id);\r\n  //   this.Is_id = id;\r\n  //   this.modalService\r\n  //     .open(content, { ariaLabelledBy: 'modal-basic-title' })\r\n  //     .result.then(\r\n  //       (result) => {\r\n  //         this.closeResult = `Closed with: ${result}`;\r\n  //         console.log('deleting');\r\n  //         this.logicalFormInfo\r\n  //           .deleteSubComponent(this.Is_id)\r\n  //           .subscribe((res) => {\r\n  //             Swal.fire('Deleted Successfully');\r\n  //             console.log('deleted res', res);\r\n  //             this.getAllHighRisk();\r\n  //           });\r\n  //       },\r\n  //       (reason) => {\r\n  //         this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n  //         console.log('dismissed');\r\n  //       }\r\n  //     );\r\n  // }\r\n\r\n  // delete(item) {\r\n  //   Swal.fire({\r\n  //     title: 'Are you sure?',\r\n  //     text: `Do you want to delete \"${item}\"?`,\r\n  //     icon: 'warning',\r\n  //     showCancelButton: true,\r\n  //     confirmButtonColor: '#00B96F',\r\n  //     cancelButtonColor: '#d33',\r\n  //     confirmButtonText: 'Yes, Delete!',\r\n  //   }).then((result) => {\r\n  //     if (result.value) {\r\n  //     }\r\n  //   });\r\n  // }\r\n  // private getDismissReason(reason: any): string {\r\n  //   if (reason === ModalDismissReasons.ESC) {\r\n  //     return 'by pressing ESC';\r\n  //   } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n  //     return 'by clicking on a backdrop';\r\n  //   } else {\r\n  //     return `with: ${reason}`;\r\n  //   }\r\n  // }\r\n  getAllHighRisk() {\r\n    this.logicalFormInfo.getAllRisk().subscribe((res:any) => {\r\n      console.log('Risk=>', res);\r\n      // this.jobTaskData = res.data[0].subComponents;\r\n      let data = res.data;\r\n      data.forEach((element, index) => {\r\n        element.index = index + 1; //adding index\r\n      });\r\n\r\n      this.ELEMENT_DATA = data;\r\n      this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n      this.dataSource.paginator = this.paginator;\r\n\r\n      //  this.task = res.data.subComponents;\r\n    });\r\n \r\n  }\r\n  edit(element){\r\n    const dialogRef = this.dialog.open(EditHighRiskConstructionComponent, {\r\n      width: \"550px\",\r\n      data: element,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if ((result == \"true\")) {\r\n        this.getAllHighRisk();\r\n      }\r\n      console.log(\"The dialog was closed\");\r\n    });\r\n  }\r\n  delete(item) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: `Do you want to delete \"${item.title}\"?`,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#00B96F',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Delete!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.logicalFormInfo\r\n        .deleteRisk(item._id)\r\n        .subscribe((res) => {\r\n          Swal.fire({\r\n            title: 'Parameter Deleted successfully',\r\n            showConfirmButton: false,\r\n            timer: 1200,\r\n          });\r\n          console.log('deleted res', res);\r\n          this.getAllHighRisk();\r\n            \r\n        });\r\n      }\r\n    });\r\n  }\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n}\r\n","  \r\n    <!-- <form [formGroup]=\"jobTaskDetails\" (ngSubmit)=\" onFormSubmit()\">\r\n\r\n      <h2 class=\"text-center\">High Risk Construction </h2>\r\n     <br>\r\n     <hr>\r\n      <ng-container formArrayName=\"arrObj\">\r\n          <ng-container\r\n            *ngFor=\"let control of add().controls; let i = index\"\r\n            [formGroupName]=\"i\"\r\n          >\r\n            <div>\r\n              <div class=\"row\">\r\n               \r\n                <div class=\"col-8\">\r\n               <input\r\n                    type=\"text\"\r\n                    formControlName=\"title\"\r\n                    class=\"form-control sign\"\r\n                    id=\"name\"\r\n                  />\r\n                </div>\r\n                <div class=\"col-1 mt-2\">\r\n                <span class=\"material-icons\" (click)=\"addAction()\"\r\n                  >add_circle_outline\r\n                </span>\r\n              </div> \r\n                 <div class=\"col-1 mt-2\">\r\n                <span class=\"material-icons\" (click)=\"removeSafetyModule(i)\">\r\n                  remove_circle_outline\r\n                </span>\r\n              </div> \r\n              </div>\r\n            </div>\r\n            <hr />\r\n          </ng-container>\r\n        </ng-container>\r\n        <br>\r\n      \r\n        <div class=\"col-md-2\"> \r\n          <button type=\"submit\" class=\"btn btn-primary \"> Submit</button>\r\n        </div>\r\n        </form>\r\n      </div> \r\n      \r\n      \r\n      <section class=\"content\">\r\n        <div class=\"text-center\">\r\n          <h1 class=\"card\"> High Risk Construction</h1>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"col ml-2 mb-2\">\r\n            <button (click)=\"addTask()\" class=\"btn btn-outline-primary mt-1 mr-2 float-right\">\r\n              <i class=\"fas fa-folder-plus mr-2\"></i>Add Parameter \r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div class=\"container-fluid\">\r\n          <div class=\"row\">\r\n            <div class=\"col-12\">\r\n              <div class=\"card\">\r\n                <div class=\"card-body p-0\">\r\n                  <table class=\"table table-hover text-wrap\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th style=\"width: 5%\">Index</th>\r\n                        <th style=\"width: 80%\">Title</th>\r\n                        <th  style=\"width: 5%\">Edit</th>\r\n                        <th style=\"width: 5%\" >Delete</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <tr *ngFor=\"let risk of highRiskConstructionData.subComponents; let i = index\">\r\n                        <td>{{ i+1 }}</td>\r\n                        <td>{{ risk.title }}</td>\r\n \r\n                        <td>\r\n                          <button class=\"btn btn-info btn-sm mr-2\" (click)=\"editTask(risk.title ,risk._id,i)\">\r\n                            <i class=\"fas fa-pencil-alt \"></i> \r\n                          </button>\r\n                        </td>\r\n                        <td>\r\n                          <button class=\"btn btn-danger btn-sm mr-2\" (click)=\"deleteopen(deletemodal, risk._id)\">\r\n                            <i class=\"fas fa-trash \"></i>\r\n                          </button>\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      <ng-template #deletemodal let-modal>\r\n        <div class=\"modal-header titel\">\r\n          <h2 class=\"modal-title titel\" id=\"modal-basic-title\">Are you sure?</h2>\r\n        </div>\r\n        <div class=\"modal-body deletebody\">\r\n          <p></p>\r\n          <p>Do you want to delete this Service</p>\r\n        </div>\r\n        <div class=\"modal-footer footer\">\r\n          <button type=\"button\" class=\"btn mr-3\" style=\"background-color: #eeeeee\" (click)=\"modal.dismiss('Save click')\">\r\n            Cancel\r\n          </button>\r\n          <button type=\"button\" class=\"btn btn-danger ml-3\" aria-label=\"Close\" (click)=\"modal.close('Cross click')\">\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </ng-template> -->\r\n      <div class=\"col ml-2 pt-3\">\r\n      <h1>High Risk List</h1>\r\n      </div>\r\n    <div class=\"col ml-2 mb-2\">\r\n      \r\n      <button  class=\"btn btn-outline-primary mt-1 mr-2 float-right\"[routerLink]=\"['/admin/siteInfo/addHighRisk']\">\r\n        <i class=\"fas fa-folder-plus mr-2\"></i>Add High Risk \r\n      </button>\r\n    </div>\r\n    <div class=\"col-6\">\r\n      <mat-form-field>\r\n        <input\r\n          matInput\r\n          #input\r\n          placeholder=\"Search\"\r\n          (keyup)=\"applyFilter($event)\"\r\n        />\r\n      </mat-form-field>\r\n    </div>\r\n    <div class=\"\">\r\n      <table mat-table [dataSource]=\"dataSource\">\r\n    \r\n        <!-- Position Column -->\r\n        <ng-container matColumnDef=\"index\">\r\n          <th mat-header-cell *matHeaderCellDef> No. </th>\r\n          <td mat-cell *matCellDef=\"let element\">{{element.index}}</td>\r\n        </ng-container>\r\n    \r\n        <!-- Name Column -->\r\n       \r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"title\">\r\n      <th mat-header-cell *matHeaderCellDef> Name </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.title}} </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"action\">\r\n      <th mat-header-cell *matHeaderCellDef> Action </th>\r\n      <td mat-cell *matCellDef=\"let element\"> <i class=\"fas fa-pencil-alt mr-2\" (click)=\"edit(element)\" title=\"edit\"></i>  <i  class=\"fas fa-trash ml-2 \" (click)=\"delete(element)\" title=\"delete\"></i> \r\n    \r\n      </td>\r\n    </ng-container>\r\n    <!-- <ng-container matColumnDef=\"edit\">\r\n      <th mat-header-cell *matHeaderCellDef> Edit </th>\r\n      <td mat-cell *matCellDef=\"let element\"(click)=\"edit(element)\"> <i class=\"fas fa-pencil-alt \"></i> \r\n      </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"delete\">\r\n      <th mat-header-cell *matHeaderCellDef> Delete </th>\r\n      <td mat-cell *matCellDef=\"let element\"(click)=\"delete(element)\"> <i class=\"fas fa-trash \"></i> \r\n      </td>\r\n    </ng-container> -->\r\n\r\n    \r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n        <tr class=\"mat-row\" *matNoDataRow>\r\n          <td class=\"mat-cell\" colspan=\"4\">Data Not  Found  \"{{input.value}}\"</td>\r\n        </tr>\r\n      </table>\r\n    \r\n      <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\"\r\n                     showFirstLastButtons \r\n                     aria-label=\"Select page of periodic elements\">\r\n      </mat-paginator>\r\n    </div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n  FormArray,\r\n  \r\n} from '@angular/forms'\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-add-ppe',\r\n  templateUrl: './add-ppe.component.html',\r\n  styleUrls: ['./add-ppe.component.scss']\r\n})\r\nexport class AddPPEComponent implements OnInit {\r\n  PPEformgp!: FormGroup;\r\n  formData: any;;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private router: Router,\r\n    private logicalFormInfo:LogicalFormInfoService\r\n  ) { \r\n    this.PPEformgp=this.fb.group({\r\n     // mode:\"JobTask\",\r\n      arrObj: this.fb.array([]),\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.addAction();\r\n  }\r\n  addAction() {\r\n    {\r\n      this.add().push(this.newAction());\r\n    }\r\n  }\r\n  add(): FormArray {\r\n    return this.PPEformgp.get('arrObj') as FormArray;\r\n  }\r\n  newAction(): FormGroup {\r\n    return this.fb.group({\r\n     \r\n      title: ['', Validators.required],\r\n    });\r\n  }\r\n  \r\n  removeSafetyModule(i) {\r\n    const item = <FormArray>this.PPEformgp.controls['arrObj'];\r\n    if (item.length > 1) {\r\n      item.removeAt(i);\r\n    \r\n    }\r\n  }\r\n  onFormSubmit() {\r\n    console.log(this.PPEformgp.value);\r\n    let data={\r\n      arrObj:this.PPEformgp.get('arrObj').value\r\n    }\r\n    this.logicalFormInfo.addMultiplePPE(data).subscribe((data) => {\r\n      console.log('PPE=>', data);\r\n      this.router.navigate(['/admin/siteInfo/ppeSel']);      \r\n    },(err)=>{console.error(err);} \r\n  \r\n    );\r\n    \r\n  }\r\n\r\n}\r\n","<div class=\"btn btn-outline-primary\" [routerLink]=\"['/admin/siteInfo/ppeSel']\">\r\n    <i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\r\n  </div>\r\n  <div class=\"container px-4 py-4 bg-white\">\r\n    <form [formGroup]=\"PPEformgp\" (ngSubmit)=\"onFormSubmit()\">\r\n      <h2 class=\"text-center\">Add PPE</h2>\r\n      <br />\r\n      <hr />\r\n      <ng-container formArrayName=\"arrObj\">\r\n        <ng-container\r\n          *ngFor=\"let control of add().controls; let i = index\"\r\n          [formGroupName]=\"i\"\r\n        >\r\n          <div class=\"row justify-content-center\">\r\n            <div class=\"mr-1 mt-2\">\r\n              <span \r\n                >{{i+1}}.\r\n              </span>\r\n            </div>\r\n            <div class=\"col-8\">\r\n              <input\r\n                type=\"text\"\r\n                formControlName=\"title\"\r\n                class=\"form-control sign\"\r\n                id=\"name\"\r\n              />\r\n            </div>\r\n            <div class=\"col-1 mt-2\">\r\n              <span class=\"material-icons\" (click)=\"addAction()\"\r\n                >add_circle_outline\r\n              </span>\r\n            </div>\r\n            <div class=\"col-1 mt-2\">\r\n              <span class=\"material-icons\" (click)=\"removeSafetyModule(i)\">\r\n                remove_circle_outline\r\n              </span>\r\n            </div>\r\n          </div>\r\n  \r\n          <hr />\r\n        </ng-container>\r\n      </ng-container>\r\n      <br />\r\n  \r\n      <div class=\"col-md-2\">\r\n        <button type=\"submit\" class=\"btn btn-primary\"[disabled]=\"PPEformgp.get('arrObj').invalid\">Add</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  ","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport Swal from 'sweetalert2';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\n@Component({\r\n  selector: 'app-edit-hazard',\r\n  templateUrl: './edit-hazard.component.html',\r\n  styleUrls: ['./edit-hazard.component.scss']\r\n})\r\nexport class EditHazardComponent implements OnInit {\r\n\r\n  editTitle!: FormGroup;\r\n  dataRec: any;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    public dialogRef: MatDialogRef<EditHazardComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.dataRec = data;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.editTitle = this.fb.group({\r\n      title: [this.dataRec.title, Validators.required],\r\n    });\r\n  }\r\n  onFormSubmit() {\r\n     \r\n    let data={\r\n      title :this.editTitle.get('title').value\r\n    }\r\n    this.logicalFormInfo\r\n      .updateHazards(data, this.dataRec._id)\r\n      .subscribe((resData) => {\r\n        console.log('resData', resData);\r\n\r\n        this.dialogRef.close('true');\r\n        Swal.fire({\r\n          title: 'Parameter Updated successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });     \r\n       });\r\n  }\r\n  closeDialog(){\r\n    this.dialogRef.close('false');\r\n\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"editTitle\" >\r\n    <h2>Edit Hazard</h2>\r\n    <mat-form-field appearance=\"legacy\"\r\n    class=\"example-full-width\" style=\"width: 498px;\">\r\n    <!-- <mat-label>Edit PPE</mat-label> -->\r\n    <input matInput  formControlName=\"title\" style=\"text-transform: capitalize !important;\">\r\n    </mat-form-field>\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-2 offset-8 \">\r\n            <button mat-raised-button (click)=\"closeDialog()\">Close</button>\r\n        </div>\r\n        <div class=\"col-sm-2  \">\r\n            <button mat-raised-button  [disabled]=\"!editTitle.valid\"(click)=\"onFormSubmit()\">Update</button>\r\n        </div>\r\n    </div>\r\n</form>   \r\n","import { Component, OnInit,Inject } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport Swal from 'sweetalert2';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-staff',\r\n  templateUrl: './edit-staff.component.html',\r\n  styleUrls: ['./edit-staff.component.scss']\r\n})\r\nexport class EditStaffComponent implements OnInit {\r\n\r\n  editTitle!: FormGroup;\r\n  dataRec: any;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    public dialogRef: MatDialogRef<EditStaffComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.dataRec = data;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.editTitle = this.fb.group({\r\n      title: [this.dataRec.title, Validators.required],\r\n    });\r\n  }\r\n  onFormSubmit() {\r\n     \r\n    let data={\r\n      title :this.editTitle.get('title').value\r\n    }\r\n    this.logicalFormInfo\r\n      .updateStaff(this.dataRec._id,data)\r\n      .subscribe((resData) => {\r\n        console.log('resData', resData);\r\n\r\n        this.dialogRef.close('true');\r\n        Swal.fire({\r\n          title: 'Staff  Updated successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });     \r\n       });\r\n  }\r\n  closeDialog(){\r\n    this.dialogRef.close('false');\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n","<form [formGroup]=\"editTitle\" >\r\n    <h2>Edit Staff</h2>\r\n    <mat-form-field appearance=\"legacy\"\r\n    class=\"example-full-width\" style=\"width: 498px;\">\r\n    <input matInput  formControlName=\"title\" style=\"text-transform: capitalize !important;\">\r\n    </mat-form-field>\r\n    <br>\r\n    \r\n    <div class=\"row\">\r\n        <div class=\"col-sm-2 offset-8 \">\r\n            <button mat-raised-button (click)=\"closeDialog()\">Close</button>\r\n        </div>\r\n        <div class=\"col-sm-2  \">\r\n            <button mat-raised-button  [disabled]=\"!editTitle.valid\"(click)=\"onFormSubmit()\">Update</button>\r\n        </div>\r\n    </div>\r\n</form>   \r\n\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormArray, FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { UploadFileServiceService } from 'src/app/utils/services/upload-file-service.service';\r\nimport { Router } from '@angular/router';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\n@Component({\r\n  selector: 'app-edit-high-risk-construction',\r\n  templateUrl: './edit-high-risk-construction.component.html',\r\n  styleUrls: ['./edit-high-risk-construction.component.scss'],\r\n})\r\nexport class EditHighRiskConstructionComponent implements OnInit {\r\n  editTitle: FormGroup;\r\n  dataRec: any;\r\n\r\n\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    public dialogRef: MatDialogRef<EditHighRiskConstructionComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.dataRec = data;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    console.log(\"this.dataRec\",this.dataRec);\r\n    \r\n    this.editTitle = this.fb.group({\r\n      title: [this.dataRec.title, Validators.required],\r\n    });\r\n  }\r\n  onFormSubmit() {\r\n     \r\n    let data={\r\n      title :this.editTitle.get('title').value,\r\n    }\r\n    this.logicalFormInfo\r\n      .updateRisk(data, this.dataRec._id)\r\n      .subscribe((resData) => {\r\n\r\n        this.dialogRef.close('true');\r\n        Swal.fire({\r\n          title: 'Parameter Edited successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });  \r\n          });\r\n  }\r\n  closeDialog(){\r\n    this.dialogRef.close('false');\r\n\r\n  }\r\n}\r\n","<form [formGroup]=\"editTitle\" >\r\n  <h3>Edit High Risk</h3>\r\n  <mat-form-field appearance=\"legacy\"\r\n  class=\"example-full-width\" style=\"width: 498px;\">\r\n  <!-- <mat-label>Edit Job Task</mat-label> -->\r\n  <input matInput   style=\"text-transform: capitalize !important;\"formControlName=\"title\">\r\n  </mat-form-field>\r\n  <div class=\"row\">\r\n      <div class=\"col-sm-2 offset-8 \">\r\n          <button mat-raised-button (click)=\"closeDialog()\">Close</button>\r\n      </div>\r\n      <div class=\"col-sm-2  \">\r\n          <button mat-raised-button  [disabled]=\"!editTitle.valid\"(click)=\"onFormSubmit()\">Update</button>\r\n      </div>\r\n  </div>\r\n</form>   \r\n\r\n","import { MatDialog } from '@angular/material/dialog';\r\nimport { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { EditTaskComponent } from './edit-task/edit-task.component';\r\nimport { SetTitleService } from 'src/app/utils/services/set-title.service';\r\n\r\n@Component({\r\n  selector: 'app-job-task',\r\n  templateUrl: './job-task.component.html',\r\n  styleUrls: ['./job-task.component.scss'],\r\n})\r\nexport class JobTaskComponent implements AfterViewInit, OnInit {\r\n  mode: any;\r\n  jobTaskData: any = [];\r\n  ELEMENT_DATA = [];\r\n  /////////////mat table////////////////\r\n  displayedColumns: string[] = ['index', 'title','tradeCategoryId', 'action'];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n  /////////////mat table end////////////////\r\n\r\n  constructor(private logicalFormInfo: LogicalFormInfoService, private dialog: MatDialog,\r\n    private setTitle: SetTitleService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllJobTask();\r\n    this.setTitle.setTitle('WHS-Job Task List');\r\n  }\r\n \r\n  getAllJobTask() {\r\n    this.logicalFormInfo.getAllJobtask().subscribe((res: any) => {\r\n      console.log('jobTaskDetails=>', res);\r\n      // this.jobTaskData = res.data[0].subComponents;\r\n      let data = res.data\r\n      data.forEach((element, index) => {\r\n        element.index = index + 1; //adding index\r\n      });\r\n\r\n      this.ELEMENT_DATA = data;\r\n      this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n      this.dataSource.paginator = this.paginator;\r\n\r\n      //  this.task = res.data.subComponents;\r\n    });\r\n\r\n  }\r\n  edit(element) {\r\n    const dialogRef = this.dialog.open(EditTaskComponent, {\r\n      width: \"550px\",\r\n      data: element,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if ((result == \"true\")) {\r\n        this.getAllJobTask();\r\n      }\r\n      console.log(\"The dialog was closed\");\r\n    });\r\n  }\r\n  delete(item) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: `Do you want to delete \"${item.title}\"?`,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#00B96F',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Delete!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.logicalFormInfo\r\n          .deleteJobTask(item._id)\r\n          .subscribe((res) => {\r\n            Swal.fire({\r\n              title: 'Parameter Deleted successfully',\r\n              showConfirmButton: false,\r\n              timer: 1200,\r\n            }); console.log('deleted res', res);\r\n            this.getAllJobTask();\r\n\r\n          });\r\n      }\r\n    });\r\n  }\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n}\r\n","<div class=\"col ml-2 pt-3\">\r\n<h1> Job task List</h1>\r\n</div>\r\n    <div class=\"col ml-2 mb-2\">\r\n      \r\n      <button  class=\"btn btn-outline-primary mt-1 mr-2 float-right\"[routerLink]=\"['/admin/siteInfo/addJobTask']\">\r\n        <i class=\"fas fa-folder-plus mr-2\"></i>Add Job Task \r\n      </button>\r\n    </div>\r\n    <div class=\"col-6\">\r\n      <mat-form-field>\r\n        <input\r\n          matInput\r\n          #input\r\n          placeholder=\"Search\"\r\n          (keyup)=\"applyFilter($event)\"\r\n        />\r\n      </mat-form-field>\r\n    </div>\r\n    <div class=\"\">\r\n      <table mat-table [dataSource]=\"dataSource\">\r\n    \r\n        <!-- Position Column -->\r\n        <ng-container matColumnDef=\"index\">\r\n          <th mat-header-cell *matHeaderCellDef> No. </th>\r\n          <td mat-cell *matCellDef=\"let element\">{{element.index}}</td>\r\n        </ng-container>\r\n    \r\n        <!-- Name Column -->\r\n       \r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"title\">\r\n      <th mat-header-cell *matHeaderCellDef> Name </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.title}} </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"tradeCategoryId\">\r\n      <th mat-header-cell *matHeaderCellDef>Category</th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element?.tradeCategoryId?.title}} </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"action\">\r\n      <th mat-header-cell *matHeaderCellDef> Action </th>\r\n      <td mat-cell *matCellDef=\"let element\"> <i class=\"fas fa-pencil-alt mr-2\" (click)=\"edit(element)\" title=\"edit\"></i>  <i  class=\"fas fa-trash ml-2 \" (click)=\"delete(element)\" title=\"delete\"></i> \r\n    \r\n      </td>\r\n    </ng-container>\r\n    <!-- <ng-container matColumnDef=\"edit\">\r\n      <th mat-header-cell *matHeaderCellDef> Edit </th>\r\n      <td mat-cell *matCellDef=\"let element\"(click)=\"edit(element)\"> <i class=\"fas fa-pencil-alt \"></i> \r\n      </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"delete\">\r\n      <th mat-header-cell *matHeaderCellDef> Delete </th>\r\n      <td mat-cell *matCellDef=\"let element\"(click)=\"delete(element)\"> <i class=\"fas fa-trash \"></i> \r\n      </td>\r\n    </ng-container> -->\r\n\r\n    \r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n        <tr class=\"mat-row\" *matNoDataRow>\r\n          <td class=\"mat-cell\" colspan=\"4\">Data Not  Found  \"{{input.value}}\"</td>\r\n        </tr>\r\n      </table>\r\n    \r\n      <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\"\r\n                     showFirstLastButtons \r\n                     aria-label=\"Select page of periodic elements\">\r\n      </mat-paginator>\r\n    </div>\r\n    ","import { EditLicenceComponent } from './edit-licence/edit-licence.component';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { AfterViewInit,ViewChild } from '@angular/core';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { SetTitleService } from 'src/app/utils/services/set-title.service';\r\n@Component({\r\n  selector: 'app-licence-and-qual',\r\n  templateUrl: './licence-and-qual.component.html',\r\n  styleUrls: ['./licence-and-qual.component.scss']\r\n})\r\nexport class LicenceAndQualComponent implements OnInit {\r\n  licenceAndQual: FormGroup;\r\n  formData: any;\r\n\r\n  mode: any;\r\n  jobTaskData: any = [];\r\n  ELEMENT_DATA = [];\r\n  /////////////mat table////////////////\r\n  displayedColumns: string[] = ['index', 'title','action'];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n  /////////////mat table end////////////////\r\n\r\n  constructor(private logicalFormInfo: LogicalFormInfoService,private dialog:MatDialog,\r\n    private setTitle: SetTitleService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getAllLicence();\r\n    this.setTitle.setTitle('WHS-License and Qualification List');\r\n  }\r\n\r\n  getAllLicence() {\r\n    this.logicalFormInfo.getAllLicence().subscribe((res) => {\r\n      console.log('getAllLicence=>', res);\r\n      // this.jobTaskData = res.data[0].subComponents;\r\n      let data = res.data;\r\n      data.forEach((element, index) => {\r\n        element.index = index + 1; //adding index\r\n      });\r\n\r\n      this.ELEMENT_DATA = data;\r\n      this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n      this.dataSource.paginator = this.paginator;\r\n\r\n      //  this.task = res.data.subComponents;\r\n    });\r\n \r\n  }\r\n  edit(element){\r\n    const dialogRef = this.dialog.open(EditLicenceComponent, {\r\n      width: \"550px\",\r\n      data: element,\r\n    });\r\n    console.log(element)\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if ((result == \"true\")) {\r\n        this.getAllLicence();\r\n      }\r\n      console.log(\"The dialog was closed\");\r\n    });\r\n  }\r\n  delete(item) {\r\n    console.log(\"delete\",item);\r\n    \r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: `Do you want to delete \"${item.title}\"?`,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#00B96F',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Delete!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.logicalFormInfo\r\n        .deleteLicence(item._id)\r\n        .subscribe((res) => {\r\n          Swal.fire({\r\n            title: 'Deleted successfully',\r\n            showConfirmButton: false,\r\n            timer: 1000,\r\n          });          console.log('deleted res', res);\r\n          this.getAllLicence();\r\n            \r\n        });\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"col ml-2 pt-3\">\r\n<h1> Licence and Qualification List</h1>\r\n</div>\r\n<div class=\"col ml-2 mb-2\">\r\n  \r\n  <button  class=\"btn btn-outline-primary mt-1 mr-2 float-right\"[routerLink]=\"['/admin/siteInfo/addLicence']\">\r\n    <i class=\"fas fa-folder-plus mr-2\"></i>Add Licence \r\n  </button>\r\n</div>\r\n<div class=\"\">\r\n  <table mat-table [dataSource]=\"dataSource\">\r\n\r\n    <!-- Position Column -->\r\n    <ng-container matColumnDef=\"index\">\r\n      <th mat-header-cell *matHeaderCellDef> No. </th>\r\n      <td mat-cell *matCellDef=\"let element\">{{element.index}}</td>\r\n    </ng-container>\r\n\r\n    <!-- Name Column -->\r\n   \r\n<!-- Name Column -->\r\n<ng-container matColumnDef=\"title\">\r\n  <th mat-header-cell *matHeaderCellDef> Name </th>\r\n  <td mat-cell *matCellDef=\"let element\"> {{element.title}} </td>\r\n</ng-container>\r\n<!-- <ng-container matColumnDef=\"category\">\r\n  <th mat-header-cell *matHeaderCellDef> Category </th>\r\n  <td mat-cell *matCellDef=\"let element\"> {{element.licenceCategoryId?.title}} </td>\r\n</ng-container> -->\r\n<ng-container matColumnDef=\"action\">\r\n  <th mat-header-cell *matHeaderCellDef> Action </th>\r\n  <td mat-cell *matCellDef=\"let element\"> <i class=\"fas fa-pencil-alt mr-2\" (click)=\"edit(element)\" title=\"edit\"></i>  <i  class=\"fas fa-trash ml-2 \" (click)=\"delete(element)\" title=\"delete\"></i> \r\n\r\n  </td>\r\n</ng-container>\r\n<!-- \r\n<ng-container matColumnDef=\"edit\">\r\n  <th mat-header-cell *matHeaderCellDef> Edit </th>\r\n  <td mat-cell *matCellDef=\"let element\"(click)=\"edit(element)\"> <i class=\"fas fa-pencil-alt \"></i> \r\n  </td>\r\n</ng-container>\r\n<ng-container matColumnDef=\"delete\">\r\n  <th mat-header-cell *matHeaderCellDef> Delete </th>\r\n  <td mat-cell *matCellDef=\"let element\"(click)=\"delete(element)\"> <i class=\"fas fa-trash \"></i> \r\n  </td>\r\n</ng-container> -->\r\n\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n  </table>\r\n\r\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\"\r\n                 showFirstLastButtons \r\n                 aria-label=\"Select page of periodic elements\">\r\n  </mat-paginator>\r\n</div>\r\n","import { MatDialog } from '@angular/material/dialog';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport {  ViewChild } from '@angular/core';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { SetTitleService } from 'src/app/utils/services/set-title.service';\r\nimport { EditContActComponent } from './edit-cont-act/edit-cont-act.component';\r\n@Component({\r\n  selector: 'app-contr-and-act-req',\r\n  templateUrl: './contr-and-act-req.component.html',\r\n  styleUrls: ['./contr-and-act-req.component.scss']\r\n})\r\nexport class ContrAndActReqComponent implements OnInit {\r\n\r\n  jobTaskData: any = [];\r\n  ELEMENT_DATA = [];\r\n  /////////////mat table////////////////\r\n  displayedColumns: string[] = ['index', 'title','action'];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n  /////////////mat table end////////////////\r\n\r\n  constructor(\r\n\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    private dialog:MatDialog,\r\n    private setTitle:SetTitleService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getAllContrlActReq();\r\n    this.setTitle.setTitle('WHS-PPE List');\r\n\r\n  }\r\n\r\n  getAllContrlActReq() {\r\n    this.logicalFormInfo.getAllContrlActReq().subscribe((res:any) => {\r\n      console.log('PPEAll=>', res);\r\n      let data = res.data;\r\n      data.forEach((element, index) => {\r\n        element.index = index + 1; //adding index\r\n      });\r\n\r\n      this.ELEMENT_DATA = data;\r\n      this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n      this.dataSource.paginator = this.paginator;\r\n      console.log('this.ELEMENT_DATA', this.ELEMENT_DATA);\r\n\r\n      //  this.task = res.data.subComponents;\r\n    });\r\n  }\r\n  edit(element){\r\n    const dialogRef = this.dialog.open(EditContActComponent, {\r\n      width: \"550px\",\r\n      data: element,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if ((result == \"true\")) {\r\n        this.getAllContrlActReq();\r\n      }\r\n      console.log(\"The dialog was closed\");\r\n    });\r\n  }\r\n  delete(item) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: `Do you want to delete \"${item.title}\"?`,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#00B96F',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Delete!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.logicalFormInfo\r\n        .deleteContrlActReq(item._id)\r\n        .subscribe((res) => {\r\n          Swal.fire({\r\n            title: 'Parameter Deleted successfully',\r\n            showConfirmButton: false,\r\n            timer: 1200,\r\n          });\r\n          console.log('deleted res', res);\r\n          this.getAllContrlActReq();\r\n            \r\n        });\r\n      }\r\n    });\r\n  }\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n}\r\n","<div class=\"col ml-2 pt-3\">\r\n<h1 > Control And Action Required List</h1>\r\n</div>\r\n    <div class=\"col ml-2 mb-2\">\r\n      \r\n      <button  class=\"btn btn-outline-primary mt-1 mr-2 float-right\"[routerLink]=\"['/admin/siteInfo/addContrlActReq']\">\r\n        <i class=\"fas fa-folder-plus mr-2\"></i>Add Control and Action \r\n      </button>\r\n    </div>\r\n    <div class=\"col-6\">\r\n      <mat-form-field>\r\n        <input\r\n          matInput\r\n          #input\r\n          placeholder=\"Search\"\r\n          (keyup)=\"applyFilter($event)\"\r\n        />\r\n      </mat-form-field>\r\n    </div>\r\n    <div class=\"\">\r\n      <table mat-table [dataSource]=\"dataSource\">\r\n    \r\n        <!-- Position Column -->\r\n        <ng-container matColumnDef=\"index\">\r\n          <th mat-header-cell *matHeaderCellDef> No. </th>\r\n          <td mat-cell *matCellDef=\"let element\">{{element.index}}</td>\r\n        </ng-container>\r\n    \r\n        <!-- Name Column -->\r\n       \r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"title\" >\r\n      <th mat-header-cell *matHeaderCellDef> Name </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.title}}</td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"action\">\r\n      <th mat-header-cell *matHeaderCellDef> Action </th>\r\n      <td mat-cell *matCellDef=\"let element\">\r\n         <div class=\"row\">\r\n           <div class=\"col-1\"><i class=\"fas fa-pencil-alt mr-2\" (click)=\"edit(element)\" title=\"edit\"></i> </div>\r\n            <div class=\"col-1\"><i  class=\"fas fa-trash ml-2 \" (click)=\"delete(element)\" title=\"delete\"></i> </div>\r\n    </div>\r\n \r\n    \r\n      </td>\r\n    </ng-container>\r\n    <!-- <ng-container matColumnDef=\"edit\">\r\n        <th mat-header-cell *matHeaderCellDef> Edit </th>\r\n        <td mat-cell *matCellDef=\"let element\"(click)=\"edit(element)\"> <i class=\"fas fa-pencil-alt \"></i> \r\n        </td>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"delete\">\r\n        <th mat-header-cell *matHeaderCellDef> Delete </th>\r\n        <td mat-cell *matCellDef=\"let element\"(click)=\"delete(element)\"> <i class=\"fas fa-trash \"></i> \r\n        </td>\r\n      </ng-container> -->\r\n    \r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n        <tr class=\"mat-row\" *matNoDataRow>\r\n          <td class=\"mat-cell\" colspan=\"4\">Data Not  Found  \"{{input.value}}\"</td>\r\n        </tr>\r\n      </table>\r\n    \r\n      <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\"\r\n                     showFirstLastButtons \r\n                     aria-label=\"Select page of periodic elements\">\r\n      </mat-paginator>\r\n    </div>\r\n    \r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { FormBuilder, FormGroup,  Validators,FormArray,} from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-add-risk-level',\r\n  templateUrl: './add-risk-level.component.html',\r\n  styleUrls: ['./add-risk-level.component.scss']\r\n})\r\nexport class AddRiskLevelComponent implements OnInit {\r\n  addRiskForm:FormGroup;\r\n  constructor( \r\n    private fb:FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    private router: Router,\r\n    ) { \r\n      this.addRiskForm=this.fb.group({\r\n        arrObj: this.fb.array([]),\r\n      })\r\n    }\r\n\r\n  ngOnInit(): void {\r\n    this.addRisk();\r\n  }\r\n  addRisk() {\r\n    {\r\n      this.add().push(this.newAction());\r\n    }\r\n  }\r\n  add(): FormArray {\r\n    return this.addRiskForm.get('arrObj') as FormArray;\r\n  }\r\n  newAction(): FormGroup {\r\n    return this.fb.group({\r\n     \r\n      title: ['', Validators.required],\r\n    });\r\n  }\r\n  \r\n  removeRisk(i) {\r\n    const item = <FormArray>this.addRiskForm.controls['arrObj'];\r\n    if (item.length > 1) {\r\n      item.removeAt(i);\r\n    \r\n    }\r\n  }\r\n  onFormSubmit() {\r\n    console.log(this.addRiskForm.value);\r\n    let data={\r\n      arrObj:this.addRiskForm.get('arrObj').value\r\n    }\r\n    this.logicalFormInfo.addMultipleRiskLevel(data).subscribe((data) => {\r\n      console.log('chemical=>', data);\r\n      this.router.navigate(['/admin/siteInfo/riskLevel']);      \r\n    },(err)=>{console.error(err);} \r\n  \r\n    );\r\n    \r\n  }\r\n\r\n}\r\n","<div class=\"btn btn-outline-primary\" [routerLink]=\"['/admin/siteInfo/riskLevel']\">\r\n    <i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\r\n  </div>\r\n\r\n    <div class=\"container px-4 py-4 bg-white\" >\r\n        <form  [formGroup]=\"addRiskForm\" (ngSubmit)=\"onFormSubmit()\">\r\n      <h2  class=\"text-center\"> RiskLevel Info</h2>\r\n      <br />\r\n      <hr />\r\n      <ng-container formArrayName=\"arrObj\">\r\n        <ng-container\r\n          *ngFor=\"let control of add().controls; let i = index\"\r\n          [formGroupName]=\"i\"\r\n        >\r\n          <div class=\"row justify-content-center\">\r\n            <div class=\"mr-1 mt-2\">\r\n              <span \r\n                >{{i+1}}.\r\n              </span>\r\n            </div>\r\n            <div class=\"col-8\">\r\n              <input\r\n                type=\"text\"\r\n                formControlName=\"title\"\r\n                class=\"form-control sign\"\r\n                id=\"title\"\r\n              />\r\n            </div>\r\n            <div class=\"col-1 mt-2\">\r\n              <span class=\"material-icons\" (click)=\"addRisk()\"\r\n                >add_circle_outline\r\n              </span>\r\n            </div>\r\n            <div class=\"col-1 mt-2\">\r\n              <span class=\"material-icons\" (click)=\"removeRisk(i)\">\r\n                remove_circle_outline\r\n              </span>\r\n            </div>\r\n          </div>\r\n  \r\n          <hr />\r\n        </ng-container>\r\n      </ng-container>\r\n      <br />\r\n          <div  class=\"col-md-2\">\r\n            <button class=\"btn btn-primary\"[disabled]=\"addRiskForm.get('arrObj').invalid\" >\r\n              Add\r\n            </button>\r\n          </div>\r\n        \r\n        </form>\r\n        </div>","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n  FormArray,\r\n  \r\n} from '@angular/forms'\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { Router } from '@angular/router';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-add-contr-act',\r\n  templateUrl: './add-contr-act.component.html',\r\n  styleUrls: ['./add-contr-act.component.scss']\r\n})\r\nexport class AddContrActComponent implements OnInit {\r\n\r\n  contrlAndActFG!: FormGroup;\r\n  formData: any;;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private router: Router,\r\n    private logicalFormInfo:LogicalFormInfoService\r\n  ) { \r\n    this.contrlAndActFG=this.fb.group({\r\n     // mode:\"JobTask\",\r\n      arrObj: this.fb.array([]),\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.addAction();\r\n  }\r\n  addAction() {\r\n    {\r\n      this.add().push(this.newAction());\r\n    }\r\n  }\r\n  add(): FormArray {\r\n    return this.contrlAndActFG.get('arrObj') as FormArray;\r\n  }\r\n  newAction(): FormGroup {\r\n    return this.fb.group({\r\n     \r\n      title: ['', Validators.required],\r\n    });\r\n  }\r\n  \r\n  removeSafetyModule(i) {\r\n    const item = <FormArray>this.contrlAndActFG.controls['arrObj'];\r\n    if (item.length > 1) {\r\n      item.removeAt(i);\r\n    \r\n    }\r\n  }\r\n  onFormSubmit() {\r\n    console.log(this.contrlAndActFG.value);\r\n    let data={\r\n      arrObj:this.contrlAndActFG.get('arrObj').value\r\n    }\r\n    this.logicalFormInfo.addMultipleContrlActReq(data).subscribe((data) => {\r\n      console.log('PPE=>', data);\r\n      Swal.fire({\r\n        title: 'Parameter Added successfully',\r\n        showConfirmButton: false,\r\n        timer: 1200,\r\n      });\r\n      this.router.navigate(['/admin/siteInfo/contrlActReq']);      \r\n    },(err)=>{console.error(err);} \r\n  \r\n    );\r\n    \r\n  }\r\n}\r\n","<div class=\"btn btn-outline-primary\" [routerLink]=\"['/admin/siteInfo/contrlActReq']\">\r\n    <i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\r\n  </div>\r\n  <div class=\"container px-4 py-4 bg-white\">\r\n    <form [formGroup]=\"contrlAndActFG\" (ngSubmit)=\"onFormSubmit()\">\r\n      <h2 class=\"text-center\">Add Control And Action</h2>\r\n      <br />\r\n      <hr />\r\n      <ng-container formArrayName=\"arrObj\">\r\n        <ng-container\r\n          *ngFor=\"let control of add().controls; let i = index\"\r\n          [formGroupName]=\"i\"\r\n        >\r\n          <div class=\"row justify-content-center\">\r\n            <div class=\"mr-1 mt-2\">\r\n              <span \r\n                >{{i+1}}.\r\n              </span>\r\n            </div>\r\n            <div class=\"col-8\">\r\n              <!-- <p for=\"exampleFormControlInput1\" class=\"form-Label\">Job Task Type</p> -->\r\n              <input\r\n                type=\"text\"\r\n                formControlName=\"title\"\r\n                class=\"form-control sign\"\r\n                id=\"name\"\r\n              />\r\n            </div>\r\n            <div class=\"col-1 mt-2\">\r\n              <span class=\"material-icons\" (click)=\"addAction()\"\r\n                >add_circle_outline\r\n              </span>\r\n            </div>\r\n            <div class=\"col-1 mt-2\">\r\n              <span class=\"material-icons\" (click)=\"removeSafetyModule(i)\">\r\n                remove_circle_outline\r\n              </span>\r\n            </div>\r\n          </div>\r\n  \r\n          <hr />\r\n        </ng-container>\r\n      </ng-container>\r\n      <br />\r\n  \r\n      <div class=\"col-md-2\">\r\n        <button type=\"submit\" class=\"btn btn-primary\"[disabled]=\"contrlAndActFG.get('arrObj').invalid\">Add</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  ","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport {  ViewChild } from '@angular/core';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table'\r\nimport { AddEditProjMangComponent } from './add-edit-proj-mang/add-edit-proj-mang.component';\r\n@Component({\r\n  selector: 'app-project-manager',\r\n  templateUrl: './project-manager.component.html',\r\n  styleUrls: ['./project-manager.component.scss']\r\n})\r\nexport class ProjectManagerComponent implements OnInit {\r\n\r\n  mode: any;\r\n  jobTaskData: any = [];\r\n  ELEMENT_DATA = [];\r\n  /////////////mat table////////////////\r\n  displayedColumns: string[] = ['index', 'title' ,'action'];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n  /////////////mat table end////////////////\r\n\r\n  constructor(private logicalFormInfo: LogicalFormInfoService,private dialog:MatDialog) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getAllProjectMang();\r\n  }\r\n\r\n  getAllProjectMang() {\r\n    this.logicalFormInfo.getAllProjectMang().subscribe((res:any) => {\r\n      console.log('getAllProjectMang=>', res);\r\n      // this.jobTaskData = res.data[0].subComponents;\r\n      let data = res.data;\r\n      data.forEach((element, index) => {\r\n        element.index = index + 1; //adding index\r\n      });\r\n\r\n      this.ELEMENT_DATA = data;\r\n      this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n      this.dataSource.paginator = this.paginator;\r\n\r\n      //  this.task = res.data.subComponents;\r\n    });\r\n \r\n  }\r\n  \r\n  edit(element){\r\n    const dialogRef = this.dialog.open(AddEditProjMangComponent, {\r\n      width: \"550px\",\r\n      data: element,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if ((result == \"true\")) {\r\n        this.getAllProjectMang();\r\n      }\r\n      console.log(\"The dialog was closed\");\r\n    });\r\n  }\r\n\r\n  delete(item) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: `Do you want to delete \"${item.title}\"?`,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#00B96F',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Delete!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.logicalFormInfo\r\n        .deleteProjectMang(item._id)\r\n        .subscribe((res) => {\r\n          Swal.fire({\r\n            title: 'Project Manager Deleted successfully',\r\n            showConfirmButton: false,\r\n            timer: 1200,\r\n          });\r\n          console.log('deleted res', res);\r\n          this.getAllProjectMang();\r\n            \r\n        });\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"col ml-2 pt-3\">\r\n<h1> Project Manager List</h1>\r\n</div>\r\n<div class=\"col ml-2 mb-2\">\r\n  \r\n  <button  class=\"btn btn-outline-primary mt-1 mr-2 float-right\"(click)=\"edit('')\">\r\n    <i class=\"fas fa-folder-plus mr-2\"></i>Add Project Manager \r\n  </button>\r\n</div>\r\n<div class=\"\">\r\n  <table mat-table [dataSource]=\"dataSource\">\r\n\r\n    <!-- Position Column -->\r\n    <ng-container matColumnDef=\"index\">\r\n      <th mat-header-cell *matHeaderCellDef> No. </th>\r\n      <td mat-cell *matCellDef=\"let element\">{{element.index}}</td>\r\n    </ng-container>\r\n\r\n    <!-- Name Column -->\r\n   \r\n<!-- Name Column -->\r\n<ng-container matColumnDef=\"title\">\r\n  <th mat-header-cell *matHeaderCellDef> Name </th>\r\n  <td mat-cell *matCellDef=\"let element\"> {{element.title}} </td>\r\n</ng-container>\r\n<ng-container matColumnDef=\"action\">\r\n  <th mat-header-cell *matHeaderCellDef> Action </th>\r\n  <td mat-cell *matCellDef=\"let element\"> <i class=\"fas fa-pencil-alt mr-2\" (click)=\"edit(element)\" title=\"edit\"></i>  <i  class=\"fas fa-trash ml-2 \" (click)=\"delete(element)\" title=\"delete\"></i> \r\n\r\n  </td>\r\n</ng-container>\r\n<!-- <ng-container matColumnDef=\"edit\">\r\n  <th mat-header-cell *matHeaderCellDef> Edit </th>\r\n  <td mat-cell *matCellDef=\"let element\"(click)=\"edit(element)\"> <i class=\"fas fa-pencil-alt \"></i> \r\n  </td>\r\n</ng-container>\r\n<ng-container matColumnDef=\"delete\">\r\n  <th mat-header-cell *matHeaderCellDef> Delete </th>\r\n  <td mat-cell *matCellDef=\"let element\"(click)=\"delete(element)\"> <i class=\"fas fa-trash \"></i> \r\n  </td>\r\n</ng-container> -->\r\n\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n  </table>\r\n\r\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\"\r\n                 showFirstLastButtons \r\n                 aria-label=\"Select page of periodic elements\">\r\n  </mat-paginator>\r\n</div>\r\n","import { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport Swal from 'sweetalert2';\r\n@Component({\r\n  selector: 'app-edit-cust',\r\n  templateUrl: './edit-cust.component.html',\r\n  styleUrls: ['./edit-cust.component.scss']\r\n})\r\nexport class EditCustComponent implements OnInit {\r\n  editCustomerForm:FormGroup\r\n  constructor(\r\n    private dialogRef: MatDialogRef<EditCustComponent>,\r\n\t\t@Inject(MAT_DIALOG_DATA) public data: any,\r\n    private fb : FormBuilder,\r\n    private logicalFormInfoService: LogicalFormInfoService\r\n    ) { }\r\n\r\n  ngOnInit(): void {\r\n    console.log(this.data);\r\n    \r\n    this.editCustomerForm = this.fb.group({\r\n      customerName:[this.data.customerName],\r\n      customerContact:[this.data.customerContact],\r\n      customerContactPhone:[this.data.customerContactPhone],\r\n      customerEmail:[this.data.customerEmail],\r\n    })\r\n  }\r\n  onSubmit(){\r\n    \r\n    this.logicalFormInfoService.updateCustomer(this.data._id,this.editCustomerForm.value).subscribe(res => {\r\n      console.log(res);\r\n      this.dialogRef.close('true');\r\n      Swal.fire({\r\n        title: 'Customer Edited successfully',\r\n        showConfirmButton: false,\r\n        timer: 1200,\r\n      });\r\n    });\r\n  }\r\n  close() {\r\n    this.dialogRef.close();\r\n}\r\n}\r\n","<section [formGroup]=\"editCustomerForm\" class=\"content\" style=\"height: 100%;\">\r\n    <div class=\"container px-4 py-4 bg-white\">\r\n      <div mat-dialog-title class=\"dialog-title\">\r\n        <h2>Update Customer</h2>\r\n        <button type=\"button\"  class=\"close\" \r\n        style=\"font-size: 30px;\"\r\n        (click)=\"close()\" aria-label=\"Close\">\r\n        <span aria-hidden=\"true\">×</span>\r\n      </button>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"my-3 col\">\r\n            <p for=\"exampleFormControlInput1\" class=\"form-Label\">Customer Name</p>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"customerName\"\r\n              formControlName=\"customerName\"\r\n            />\r\n          </div>\r\n          <div class=\"my-3 col\">\r\n            <p for=\"exampleFormControlInput1\" class=\"form-Label\">Customer Contact</p>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"customerContact\"\r\n              formControlName=\"customerContact\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"my-3 col\">\r\n            <p for=\"exampleFormControlInput1\" class=\"form-Label\">Customer Contact Phone</p>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"customerContactPhone\"\r\n              formControlName=\"customerContactPhone\"\r\n            />\r\n          </div>\r\n          <div class=\"my-3 col\">\r\n            <p for=\"exampleFormControlInput1\" class=\"form-Label\">Customer Email</p>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"customerEmail\"\r\n              formControlName=\"customerEmail\"\r\n            />\r\n          </div>\r\n        </div> \r\n      <hr>\r\n      <div >\r\n        <button class=\"btn btn-primary\" (click)=\"onSubmit()\">\r\n         Update        </button>\r\n      </div>\r\n   </div>\r\n    </section>\r\n      ","import { NgxSpinnerService } from 'ngx-spinner';\r\nimport Swal from 'sweetalert2';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { SetTitleService } from 'src/app/utils/services/set-title.service';\r\nimport { AddSiteComponent } from './add-site/add-site.component';\r\nimport { EditSiteComponent } from './edit-site/edit-site.component';\r\n\r\n@Component({\r\n  selector: 'app-add-site-info',\r\n  templateUrl: './add-site-info.component.html',\r\n  styleUrls: ['./add-site-info.component.scss']\r\n})\r\nexport class AddSiteInfoComponent implements OnInit {\r\n  mode: any;\r\n  jobTaskData: any = [];\r\n  ELEMENT_DATA = [];\r\n  /////////////mat table////////////////\r\n  displayedColumns: string[] = ['index', 'siteName',/* 'siteForemen', */'streetNo','streetAddress','Suburb','State', 'action'];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  allSites: any[]=[];\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n  /////////////mat table end////////////////\r\n\r\n  constructor( \r\n    private dialog: MatDialog, \r\n    private setTitle: SetTitleService,\r\n    private logicalFormInfoService: LogicalFormInfoService,\r\n    private spinner: NgxSpinnerService\r\n    ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.setTitle.setTitle('WHS-Add Site Info');\r\n    this.getAllSites()\r\n  }\r\n  getAllSites(){\r\n    this.logicalFormInfoService.getAllSite().subscribe((res:any)=> {\r\n      console.log(res)\r\n   this.dataSource.data = res.data\r\n   this.dataSource.paginator = this.paginator;\r\n\r\n   })\r\n  }\r\n\r\n  getAllJobTask() {\r\n    // this.logicalFormInfo.getAllJobtask().subscribe((res: any) => {\r\n    //   console.log('jobTaskDetails=>', res);\r\n    //   // this.jobTaskData = res.data[0].subComponents;\r\n    //   let data = res.data\r\n    //   data.forEach((element, index) => {\r\n    //     element.index = index + 1; //adding index\r\n    //   });\r\n\r\n    //   this.ELEMENT_DATA = data;\r\n    //   this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n    //   this.dataSource.paginator = this.paginator;\r\n\r\n    //   //  this.task = res.data.subComponents;\r\n    // });\r\n\r\n  }\r\n\r\n  openDialog(id) {\r\n\t\tlet dialogRef = this.dialog.open(AddSiteComponent, {\r\n      // width: \"550px\",\r\n      height:'500px',\r\n\t\t\tdata: {\r\n\t\t\t\taction: \"new\",\r\n\t\t\t\tuserId: id,\r\n\t\t\t},\r\n      width: \"630px\",\r\n\t\t});\r\n\t\tdialogRef.afterClosed().subscribe((result) => {\r\n      if(result == 'ok'){\r\n        this.getAllSites()\r\n      }\r\n\t\t\tconsole.log(\"CustomerInfoComponent -> openDialog -> result\", result);\r\n\t\t\t\r\n\t\t\tconsole.log(\"The dialog was closed\");\r\n\t\t});\r\n\t}\r\n  edit(element) {\r\n    const dialogRef = this.dialog.open(EditSiteComponent, {\r\n      width: \"600px\",\r\n      // width: \"550px\",\r\n      height:'500px',\r\n      data: element,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if ((result == \"ok\")) {\r\n        this.getAllSites()\r\n      }\r\n      console.log(\"The dialog was closed\");\r\n    });\r\n  }\r\n  delete(item) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: `Do you want to delete \"${item.siteName}\"?`,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#00B96F',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Delete!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        console.log(result)\r\n        // this.model.attributes.splice(i,1);\r\n        this.spinner.show()\r\n        this.logicalFormInfoService.deleteSite(item._id).subscribe((res => {\r\n        this.getAllSites()\r\n        this.spinner.hide()\r\n        }))\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"col ml-2 pt-3\">\r\n  <h1>\r\n    Site Information List\r\n  </h1>\r\n</div>\r\n<div class=\"col ml-2 mb-2\">\r\n\r\n  <button (click)=\"openDialog('abcd')\" _ngcontent-hqi-c400=\"\" type=\"button\"\r\n    class=\"btn btn-outline-primary mt-1 mr-2 float-right\"><i _ngcontent-hqi-c400=\"\" class=\"fas fa-plus\"></i> Add Site\r\n  </button>\r\n</div>\r\n<div class=\"\">\r\n  <table mat-table [dataSource]=\"dataSource\">\r\n\r\n    <!-- Position Column -->\r\n    <ng-container matColumnDef=\"index\">\r\n      <th mat-header-cell *matHeaderCellDef> No. </th>\r\n      <td mat-cell *matCellDef=\"let element,let i = index\">{{i+1}}</td>\r\n    </ng-container>\r\n\r\n    <!-- Name Column -->\r\n\r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"siteName\">\r\n      <th mat-header-cell *matHeaderCellDef> Site Name </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.siteName}} </td>\r\n    </ng-container>\r\n\r\n    <!-- <ng-container matColumnDef=\"siteForemen\">\r\n      <th mat-header-cell *matHeaderCellDef> Site Foremen </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.siteForemen}} </td>\r\n    </ng-container> -->\r\n\r\n    <ng-container matColumnDef=\"streetNo\">\r\n      <th mat-header-cell *matHeaderCellDef> Street No </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.streetNumber}} </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"streetAddress\">\r\n      <th mat-header-cell *matHeaderCellDef> Street Address </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.streetAddress}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"Suburb\">\r\n      <th mat-header-cell *matHeaderCellDef> Suburb </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.suburb}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"State\">\r\n      <th mat-header-cell *matHeaderCellDef> State </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.state}} </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"action\">\r\n      <th mat-header-cell *matHeaderCellDef> Action </th>\r\n      <td mat-cell *matCellDef=\"let element\"> <i class=\"fas fa-pencil-alt mr-2\" (click)=\"edit(element)\" title=\"edit\"></i>  <i  class=\"fas fa-trash ml-2 \" (click)=\"delete(element)\" title=\"delete\"></i> \r\n    \r\n      </td>\r\n    </ng-container>\r\n    <!-- <ng-container matColumnDef=\"edit\">\r\n      <th mat-header-cell *matHeaderCellDef> Edit </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"edit(element)\"> <i class=\"fas fa-pencil-alt \"></i>\r\n      </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"delete\">\r\n      <th mat-header-cell *matHeaderCellDef> Delete </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"delete(element)\"> <i class=\"fas fa-trash \"></i>\r\n      </td>\r\n    </ng-container> -->\r\n\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n  </table>\r\n\r\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons aria-label=\"Select page of periodic elements\">\r\n  </mat-paginator>\r\n</div>","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { FormBuilder, FormGroup,  Validators,\r\n  FormArray,} from '@angular/forms';\r\n\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-add-staff',\r\n  templateUrl: './add-staff.component.html',\r\n  styleUrls: ['./add-staff.component.scss']\r\n})\r\nexport class AddStaffComponent implements OnInit {\r\n  addStaffForm:FormGroup;\r\n  constructor( \r\n    private fb:FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    private router: Router,\r\n    ) { \r\n      this.addStaffForm=this.fb.group({\r\n        arrObj: this.fb.array([]),\r\n      })\r\n    }\r\n\r\n    ngOnInit(): void {\r\n      this.addStaff();\r\n    }\r\n    addStaff() {\r\n      {\r\n        this.add().push(this.newAction());\r\n      }\r\n    }\r\n    add(): FormArray {\r\n      return this.addStaffForm.get('arrObj') as FormArray;\r\n    }\r\n    newAction(): FormGroup {\r\n      return this.fb.group({\r\n       \r\n        title: ['', Validators.required],\r\n      });\r\n    }\r\n    \r\n    removeStaff(i) {\r\n      const item = <FormArray>this.addStaffForm.controls['arrObj'];\r\n      if (item.length > 1) {\r\n        item.removeAt(i);\r\n      \r\n      }\r\n    }\r\n    onFormSubmit() {\r\n      console.log(this.addStaffForm.value);\r\n      let data={\r\n        arrObj:this.addStaffForm.get('arrObj').value\r\n      }\r\n      this.logicalFormInfo.addMultipleStaff(data).subscribe((data) => {\r\n        console.log('chemical=>', data);\r\n        this.router.navigate(['/admin/siteInfo/staff']);      \r\n      },(err)=>{console.error(err);} \r\n    \r\n      );\r\n      \r\n    }\r\n\r\n}\r\n","<div class=\"btn btn-outline-primary\" [routerLink]=\"['/admin/siteInfo/staff']\">\r\n    <i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\r\n  </div>\r\n\r\n    <div class=\"container px-4 py-4 bg-white\" >\r\n        <form  [formGroup]=\"addStaffForm\" (ngSubmit)=\"onFormSubmit()\">\r\n      <h2  class=\"text-center\"> Staff Info</h2>\r\n      <br />\r\n      <hr />\r\n      <ng-container formArrayName=\"arrObj\">\r\n        <ng-container\r\n          *ngFor=\"let control of add().controls; let i = index\"\r\n          [formGroupName]=\"i\"\r\n        >\r\n          <div class=\"row justify-content-center\">\r\n            <div class=\"mr-1 mt-2\">\r\n              <span \r\n                >{{i+1}}\r\n              </span>\r\n            </div>\r\n            <div class=\"col-8\">\r\n              <input\r\n                type=\"text\"\r\n                formControlName=\"title\"\r\n                class=\"form-control sign\"\r\n                id=\"title\"\r\n              />\r\n            </div>\r\n            <div class=\"col-1 mt-2\">\r\n              <span class=\"material-icons\" (click)=\"addStaff()\"\r\n                >add_circle_outline\r\n              </span>\r\n            </div>\r\n            <div class=\"col-1 mt-2\">\r\n              <span class=\"material-icons\" (click)=\"removeStaff(i)\">\r\n                remove_circle_outline\r\n              </span>\r\n            </div>\r\n          </div>\r\n  \r\n          <hr />\r\n        </ng-container>\r\n      </ng-container>\r\n      <br />\r\n          <div  class=\"col-md-2\">\r\n            <button class=\"btn btn-primary\"[disabled]=\"addStaffForm.get('arrObj').invalid\" >\r\n              Add\r\n            </button>\r\n          </div>\r\n        \r\n        </form>\r\n        </div>","import { AddContrActComponent } from './contr-and-act-req/add-contr-act/add-contr-act.component';\r\nimport { ContrAndActReqComponent } from './contr-and-act-req/contr-and-act-req.component';\r\nimport { AddHazardComponent } from './identify-hazards/add-hazard/add-hazard.component';\r\nimport { IdentifyHazardsComponent } from './identify-hazards/identify-hazards.component';\r\nimport { ProjectManagerComponent } from './project-manager/project-manager.component';\r\nimport { EditCOPComponent } from './code-of-pract/edit-cop/edit-cop.component';\r\nimport { AddCOPComponent } from './code-of-pract/add-cop/add-cop.component';\r\nimport { CodeOfPractComponent } from './code-of-pract/code-of-pract.component';\r\nimport { EditLicenceCatComponent } from './licence-and-qual/licence-cat/edit-licence-cat/edit-licence-cat.component';\r\nimport { LicenceCatComponent } from './licence-and-qual/licence-cat/licence-cat.component';\r\nimport { EditLicenceComponent } from './licence-and-qual/edit-licence/edit-licence.component';\r\nimport { AddLicenceComponent } from './licence-and-qual/add-licence/add-licence.component';\r\nimport { AddPPEComponent } from './ppe-select/add-ppe/add-ppe.component';\r\nimport { AddHighRiskConstructionComponent } from './high-risk-con/add-high-risk-construction/add-high-risk-construction.component';\r\nimport { AddJobTaskComponent } from './job-task/add-job-task/add-job-task.component';\r\nimport { AddCustomerComponent } from './add-customer/add-customer.component';\r\nimport { PpeSelectComponent } from './ppe-select/ppe-select.component';\r\nimport { LicenceAndQualComponent } from './licence-and-qual/licence-and-qual.component';\r\nimport { HighRiskConComponent } from './high-risk-con/high-risk-con.component';\r\nimport { JobTaskComponent } from './job-task/job-task.component';\r\nimport { AddSiteInfoComponent } from './add-site-info/add-site-info.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { SiteInfoComponent } from './site-info.component';\r\nimport { AddLicenceCatComponent } from './licence-and-qual/licence-cat/add-licence-cat/add-licence-cat.component';\r\nimport { AddSiteComponent } from './add-site-info/add-site/add-site.component';\r\nimport { EditSiteComponent } from './add-site-info/edit-site/edit-site.component';\r\nimport { ChemicalComponent } from './chemical/chemical.component';\r\nimport { RiskLevelComponent } from './risk-level/risk-level.component';\r\nimport { ResidualRiskLevelComponent } from './residual-risk-level/residual-risk-level.component';\r\nimport { StaffComponent } from './staff/staff.component';\r\nimport { AddChemicalComponent } from './chemical/add-chemical/add-chemical.component';\r\nimport { AddRiskLevelComponent } from './risk-level/add-risk-level/add-risk-level.component';\r\nimport { AddResidualRiskLevelComponent } from './residual-risk-level/add-residual-risk-level/add-residual-risk-level.component';\r\nimport { AddStaffComponent } from './staff/add-staff/add-staff.component';\r\nimport { EditStaffComponent } from './staff/edit-staff/edit-staff.component';\r\nimport { AddingCustComponent } from './add-customer/adding-cust/adding-cust.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'addSite', component: AddSiteInfoComponent, children: [\r\n      { path: 'addSite1', component: AddSiteComponent },\r\n      { path: 'editSite', component: EditSiteComponent }\r\n    ]\r\n  },\r\n  { path: 'addCustomer', component: AddCustomerComponent },\r\n  { path: 'addingCustomer', component: AddingCustComponent },\r\n  { path: 'jobTask', component: JobTaskComponent },\r\n  { path: 'addJobTask', component: AddJobTaskComponent },\r\n  { path: 'addHighRisk', component: AddHighRiskConstructionComponent },\r\n  { path: 'addPPE', component: AddPPEComponent },\r\n\r\n  { path: 'highRisk', component: HighRiskConComponent },\r\n  { path: 'licenceAndQual', component: LicenceAndQualComponent },\r\n  { path: 'addLicence', component: AddLicenceComponent },\r\n  { path: 'editLicence', component: EditLicenceComponent },\r\n  { path: 'licenceCat', component: LicenceCatComponent },\r\n  { path: 'addLicenceCat', component: AddLicenceCatComponent },\r\n  { path: 'editLicenceCat', component: EditLicenceCatComponent },\r\n  { path: 'ppeSel', component: PpeSelectComponent },\r\n  { path: 'codeOfpract', component: CodeOfPractComponent },\r\n  { path: 'addCOP', component: AddCOPComponent },\r\n  { path: 'editCOP', component: EditCOPComponent },\r\n  // { path: 'uploadData', component: UploadBulkDataComponent },\r\n  { path: 'projMang', component: ProjectManagerComponent },\r\n  { path: 'hazards', component: IdentifyHazardsComponent },\r\n  { path: 'addHazards', component: AddHazardComponent },\r\n  { path: 'contrlActReq', component: ContrAndActReqComponent },\r\n  { path: 'addContrlActReq', component: AddContrActComponent },\r\n  { path: 'chemical', component: ChemicalComponent },\r\n  { path: 'addChemical', component: AddChemicalComponent },\r\n  { path: 'riskLevel', component: RiskLevelComponent },\r\n  { path: 'addRisk', component: AddRiskLevelComponent },\r\n  { path: 'residual', component: ResidualRiskLevelComponent },\r\n  { path: 'addResidual', component: AddResidualRiskLevelComponent },\r\n  { path: 'staff', component: StaffComponent },\r\n  { path: 'addStaff', component: AddStaffComponent },\r\n  { path: 'editStaff', component: EditStaffComponent }\r\n\r\n  // { path: 'uploadDataInBulk', component: UploadBulkDataComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class SiteInfoRoutingModule { }\r\n"]}