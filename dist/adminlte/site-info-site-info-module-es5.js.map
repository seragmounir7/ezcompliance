{"version":3,"sources":["webpack:///src/app/site-info/root-cause-of-incident/edit-root-cause-of-incident/edit-root-cause-of-incident.component.ts","webpack:///src/app/site-info/root-cause-of-incident/edit-root-cause-of-incident/edit-root-cause-of-incident.component.html","webpack:///src/app/site-info/manager/edit-manager/edit-manager.component.ts","webpack:///src/app/site-info/manager/edit-manager/edit-manager.component.html","webpack:///src/app/site-info/identify-hazards/add-hazard/add-hazard.component.ts","webpack:///src/app/site-info/identify-hazards/add-hazard/add-hazard.component.html","webpack:///src/app/site-info/high-risk-con/add-high-risk-construction/add-high-risk-construction.component.ts","webpack:///src/app/site-info/high-risk-con/add-high-risk-construction/add-high-risk-construction.component.html","webpack:///src/app/site-info/licence-and-qual/edit-licence/edit-licence.component.ts","webpack:///src/app/site-info/licence-and-qual/edit-licence/edit-licence.component.html","webpack:///src/app/site-info/manager/manager.component.ts","webpack:///src/app/site-info/manager/manager.component.html","webpack:///src/app/site-info/add-site-info/add-site/add-site.component.ts","webpack:///src/app/site-info/add-site-info/add-site/add-site.component.html","webpack:///src/app/site-info/site-info.module.ts","webpack:///src/app/site-info/changes-made/changes-made.component.ts","webpack:///src/app/site-info/changes-made/changes-made.component.html","webpack:///src/app/site-info/nature-of-incident/edit-nature-incident/edit-nature-incident.component.ts","webpack:///src/app/site-info/nature-of-incident/edit-nature-incident/edit-nature-incident.component.html","webpack:///src/app/site-info/residual-risk-level/residual-risk-level.component.ts","webpack:///src/app/site-info/residual-risk-level/residual-risk-level.component.html","webpack:///src/app/site-info/project-manager/add-edit-proj-mang/add-edit-proj-mang.component.ts","webpack:///src/app/site-info/project-manager/add-edit-proj-mang/add-edit-proj-mang.component.html","webpack:///src/app/site-info/staff/staff.component.ts","webpack:///src/app/site-info/staff/staff.component.html","webpack:///src/app/site-info/site-inspection-category/site-inspection-topic/site-inspection-topic.component.ts","webpack:///src/app/site-info/site-inspection-category/site-inspection-topic/site-inspection-topic.component.html","webpack:///src/app/site-info/root-cause-of-incident/add-root-cause-of-incident/add-root-cause-of-incident.component.ts","webpack:///src/app/site-info/root-cause-of-incident/add-root-cause-of-incident/add-root-cause-of-incident.component.html","webpack:///src/app/site-info/whs-manager/edit-whs-manager/edit-whs-manager.component.ts","webpack:///src/app/site-info/whs-manager/edit-whs-manager/edit-whs-manager.component.html","webpack:///src/app/site-info/job-task/edit-task/edit-task.component.ts","webpack:///src/app/site-info/job-task/edit-task/edit-task.component.html","webpack:///src/app/site-info/identify-hazards/identify-hazards.component.ts","webpack:///src/app/site-info/identify-hazards/identify-hazards.component.html","webpack:///src/app/site-info/licence-and-qual/licence-cat/edit-licence-cat/edit-licence-cat.component.ts","webpack:///src/app/site-info/licence-and-qual/licence-cat/edit-licence-cat/edit-licence-cat.component.html","webpack:///src/app/site-info/contr-and-act-req/edit-cont-act/edit-cont-act.component.ts","webpack:///src/app/site-info/contr-and-act-req/edit-cont-act/edit-cont-act.component.html","webpack:///src/app/site-info/risk-level/edit-risk-level/edit-risk-level.component.ts","webpack:///src/app/site-info/risk-level/edit-risk-level/edit-risk-level.component.html","webpack:///src/app/site-info/add-customer/add-customer.component.ts","webpack:///src/app/site-info/add-customer/add-customer.component.html","webpack:///src/app/site-info/site-inspection-category/edit-site-inspection-category/edit-site-inspection-category.component.ts","webpack:///src/app/site-info/site-inspection-category/edit-site-inspection-category/edit-site-inspection-category.component.html","webpack:///src/app/site-info/chemical/add-chemical/add-chemical.component.ts","webpack:///src/app/site-info/chemical/add-chemical/add-chemical.component.html","webpack:///src/app/site-info/code-of-pract/add-cop/add-cop.component.ts","webpack:///src/app/site-info/code-of-pract/add-cop/add-cop.component.html","webpack:///src/app/site-info/root-cause-of-incident/root-cause-of-incident.component.ts","webpack:///src/app/site-info/root-cause-of-incident/root-cause-of-incident.component.html","webpack:///src/app/site-info/site-inspection-category/site-inspection-category.component.ts","webpack:///src/app/site-info/site-inspection-category/site-inspection-category.component.html","webpack:///src/app/site-info/changes-made/add-changes-made/add-changes-made.component.ts","webpack:///src/app/site-info/changes-made/add-changes-made/add-changes-made.component.html","webpack:///src/app/site-info/chemical/edit-chemical/edit-chemical.component.ts","webpack:///src/app/site-info/chemical/edit-chemical/edit-chemical.component.html","webpack:///src/app/site-info/residual-risk-level/edit-residual-risk-level/edit-residual-risk-level.component.ts","webpack:///src/app/site-info/residual-risk-level/edit-residual-risk-level/edit-residual-risk-level.component.html","webpack:///src/app/site-info/risk-level/risk-level.component.ts","webpack:///src/app/site-info/risk-level/risk-level.component.html","webpack:///src/app/site-info/changes-made/edit-changes-made/edit-changes-made.component.ts","webpack:///src/app/site-info/changes-made/edit-changes-made/edit-changes-made.component.html","webpack:///src/app/site-info/ppe-select/ppe-select.component.ts","webpack:///src/app/site-info/ppe-select/ppe-select.component.html","webpack:///src/app/site-info/licence-and-qual/licence-cat/licence-cat.component.ts","webpack:///src/app/site-info/licence-and-qual/licence-cat/licence-cat.component.html","webpack:///src/app/site-info/add-customer/adding-cust/adding-cust.component.ts","webpack:///src/app/site-info/add-customer/adding-cust/adding-cust.component.html","webpack:///src/app/site-info/code-of-pract/code-of-pract.component.ts","webpack:///src/app/site-info/code-of-pract/code-of-pract.component.html","webpack:///src/app/site-info/code-of-pract/edit-cop/edit-cop.component.ts","webpack:///src/app/site-info/code-of-pract/edit-cop/edit-cop.component.html","webpack:///src/app/site-info/job-task/add-job-task/add-job-task.component.ts","webpack:///src/app/site-info/job-task/add-job-task/add-job-task.component.html","webpack:///src/app/site-info/nature-of-incident/add-and-edit-nature-incident/add-and-edit-nature-incident.component.ts","webpack:///src/app/site-info/nature-of-incident/add-and-edit-nature-incident/add-and-edit-nature-incident.component.html","webpack:///src/app/site-info/whs-manager/whs-manager.component.ts","webpack:///src/app/site-info/whs-manager/whs-manager.component.html","webpack:///src/app/site-info/chemical/chemical.component.ts","webpack:///src/app/site-info/chemical/chemical.component.html","webpack:///src/app/site-info/residual-risk-level/add-residual-risk-level/add-residual-risk-level.component.ts","webpack:///src/app/site-info/residual-risk-level/add-residual-risk-level/add-residual-risk-level.component.html","webpack:///src/app/site-info/site-inspection-category/site-inspection-topic/edit-site-inspection-topic/edit-site-inspection-topic.component.ts","webpack:///src/app/site-info/site-inspection-category/site-inspection-topic/edit-site-inspection-topic/edit-site-inspection-topic.component.html","webpack:///src/app/site-info/manager/add-manager/add-manager.component.ts","webpack:///src/app/site-info/manager/add-manager/add-manager.component.html","webpack:///src/app/site-info/type-of-incident/type-of-incident.component.ts","webpack:///src/app/site-info/type-of-incident/type-of-incident.component.html","webpack:///src/app/site-info/licence-and-qual/add-licence/add-licence.component.ts","webpack:///src/app/site-info/licence-and-qual/add-licence/add-licence.component.html","webpack:///src/app/site-info/site-inspection-category/site-inspection-topic/add-site-inspection-topic/add-site-inspection-topic.component.ts","webpack:///src/app/site-info/site-inspection-category/site-inspection-topic/add-site-inspection-topic/add-site-inspection-topic.component.html","webpack:///src/app/site-info/whs-manager/add-whs-manager/add-whs-manager.component.ts","webpack:///src/app/site-info/whs-manager/add-whs-manager/add-whs-manager.component.html","webpack:///src/app/site-info/site-info.component.ts","webpack:///src/app/site-info/site-info.component.html","webpack:///src/app/site-info/ppe-select/edit-ppe/edit-ppe.component.ts","webpack:///src/app/site-info/ppe-select/edit-ppe/edit-ppe.component.html","webpack:///src/app/site-info/licence-and-qual/licence-cat/add-licence-cat/add-licence-cat.component.ts","webpack:///src/app/site-info/high-risk-con/high-risk-con.component.ts","webpack:///src/app/site-info/high-risk-con/high-risk-con.component.html","webpack:///src/app/site-info/ppe-select/add-ppe/add-ppe.component.ts","webpack:///src/app/site-info/ppe-select/add-ppe/add-ppe.component.html","webpack:///src/app/site-info/identify-hazards/edit-hazard/edit-hazard.component.ts","webpack:///src/app/site-info/identify-hazards/edit-hazard/edit-hazard.component.html","webpack:///src/app/site-info/staff/edit-staff/edit-staff.component.ts","webpack:///src/app/site-info/staff/edit-staff/edit-staff.component.html","webpack:///src/app/site-info/high-risk-con/edit-high-risk-construction/edit-high-risk-construction.component.ts","webpack:///src/app/site-info/high-risk-con/edit-high-risk-construction/edit-high-risk-construction.component.html","webpack:///src/app/services/snackbar.service.ts","webpack:///src/app/site-info/job-task/job-task.component.ts","webpack:///src/app/site-info/job-task/job-task.component.html","webpack:///src/app/site-info/licence-and-qual/licence-and-qual.component.ts","webpack:///src/app/site-info/licence-and-qual/licence-and-qual.component.html","webpack:///src/app/site-info/nature-of-incident/nature-of-incident.component.ts","webpack:///src/app/site-info/nature-of-incident/nature-of-incident.component.html","webpack:///src/app/site-info/type-of-incident/edit-type-of-incident/edit-type-of-incident.component.ts","webpack:///src/app/site-info/type-of-incident/edit-type-of-incident/edit-type-of-incident.component.html","webpack:///src/app/site-info/type-of-incident/add-type-of-incident/add-type-of-incident.component.ts","webpack:///src/app/site-info/type-of-incident/add-type-of-incident/add-type-of-incident.component.html","webpack:///src/app/site-info/contr-and-act-req/contr-and-act-req.component.ts","webpack:///src/app/site-info/contr-and-act-req/contr-and-act-req.component.html","webpack:///src/app/site-info/risk-level/add-risk-level/add-risk-level.component.ts","webpack:///src/app/site-info/risk-level/add-risk-level/add-risk-level.component.html","webpack:///src/app/site-info/contr-and-act-req/add-contr-act/add-contr-act.component.ts","webpack:///src/app/site-info/contr-and-act-req/add-contr-act/add-contr-act.component.html","webpack:///src/app/site-info/project-manager/project-manager.component.ts","webpack:///src/app/site-info/project-manager/project-manager.component.html","webpack:///src/app/site-info/add-customer/edit-cust/edit-cust.component.ts","webpack:///src/app/site-info/add-customer/edit-cust/edit-cust.component.html","webpack:///src/app/site-info/add-site-info/add-site-info.component.ts","webpack:///src/app/site-info/add-site-info/add-site-info.component.html","webpack:///src/app/site-info/staff/add-staff/add-staff.component.ts","webpack:///src/app/site-info/staff/add-staff/add-staff.component.html","webpack:///src/app/site-info/site-info-routing.module.ts","webpack:///src/app/site-info/site-inspection-category/add-site-inspection-category/add-site-inspection-category.component.ts","webpack:///src/app/site-info/site-inspection-category/add-site-inspection-category/add-site-inspection-category.component.html"],"names":["EditRootCauseOfIncidentComponent","fb","logicalFormInfo","dialogRef","data","dataRec","editTitle","group","title","required","get","value","updateRootCause","_id","subscribe","resData","console","log","close","fire","showConfirmButton","timer","closeDialog","onFormSubmit","selector","templateUrl","styleUrls","EditManagerComponent","name","email","editManager","AddHazardComponent","router","hazardFG","arrObj","array","addAction","add","push","newAction","i","item","controls","length","removeAt","addMultipleHazards","navigate","err","error","numberOfLineBreaks","match","AddHighRiskConstructionComponent","riskConstr","addMultipleRisk","EditLicenceComponent","categories","tradeCategoryId","getAllLicenceCat","res","updateLicence","ManagerComponent","dialog","setTitle","jobTaskData","ELEMENT_DATA","displayedColumns","dataSource","paginator","getAllManager","forEach","element","index","sort","open","width","afterClosed","result","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","deleteManager","event","filterValue","target","filter","trim","toLowerCase","applyFilter","AddSiteComponent","logicalFormInfoService","allState","getAllStates","addSitesForm","siteName","streetNumber","streetAddress","suburb","stateId","addSite","onSubmit","SiteInfoModule","declarations","imports","ChangesMadeComponent","getAllChanges","getAllChangesMade","deleteChangesMade","EditNatureIncidentComponent","updateNatOfInc","ResidualRiskLevelComponent","spinner","allResidualRiskLevel","getAllResidualRiskLevel","getAllResidual","show","deleteResidual","hide","AddEditProjMangComponent","componentId","updateProjectMang","addProjectMang","StaffComponent","allStaff","getAllStaff","deleteStaff","SiteInspectionTopicComponent","activatedRoute","id","snapshot","params","getAllTopic","getTopicByCategoryID","topic","height","action","userId","categoryId","deleteSiteInspectionTopic","AddRootCauseOfIncidentComponent","rootformgp","addMultipleRootCause","EditWhsManagerComponent","editWHSManager","EditTaskComponent","updateJobTask","IdentifyHazardsComponent","snack","getAllHazards","deleteHazards","openSnackBar","EditLicenceCatComponent","updateLicenceCat","addLicenceCat","EditContActComponent","updateContrlActReq","EditRiskLevelComponent","updateRiskLevel","AddCustomerComponent","getAllCustomers","getAllCustomer","customerName","deleteCustomer","EditSiteInspectionCategoryComponent","formData","siteInspectionCategoryEdit","category","updateSiteInspectionCategory","AddChemicalComponent","addChemicalForm","addChemical","addMultipleChemical","AddCOPComponent","codeOfPractFG","addMultipleCOP","RootCauseOfIncidentComponent","getAllRoot","getAllRootCause","deleteRootCause","SiteInspectionCategoryComponent","getAllCategory","getAllSiteInspectionCategory","deleteSiteInspectionCategory","AddChangesMadeComponent","changesformgp","addMultipleChangesMade","EditChemicalComponent","updateChemical","EditResidualRiskLevelComponent","updateResidual","RiskLevelComponent","allRiskLevel","getAllRiskLevel","deleteRiskLevel","EditChangesMadeComponent","updateChangesMade","PpeSelectComponent","getAllPPEs","getAllPPE","deletePPE","LicenceCatComponent","deleteLicenceCat","edit","AddingCustComponent","StatesData","addCustomerForm","customerContact","postCode","ABN","contacts","addCustomerDetails","customerArr","customerForm","phone","position","addCustomer","CodeOfPractComponent","getAllCodeOfPractice","getAllCOP","deleteCOP","EditCOPComponent","updateCOP","AddJobTaskComponent","licenceCatAll","jobTaskDetails","getAllCategories","addMultipleJobTask","AddAndEditNatureIncidentComponent","natureformgp","addMultipleNatOfInc","WHSManagerComponent","getAllWHSManager","deleteWHSManager","ChemicalComponent","allChemical","getAllChemical","deleteChemical","AddResidualRiskLevelComponent","addResidualForm","addResidual","addMultipleResidual","EditSiteInspectionTopicComponent","siteInspectionTopicEdit","updateSiteInspectionTopic","AddManagerComponent","ManagerDetails","addMultipleManager","TypeOfIncidentComponent","getAllTypeOfInc","getAllTypeOfIncident","deleteTypeOfIncident","AddLicenceComponent","addLicenceFG","addMultipleLicence","AddSiteInspectionTopicComponent","siteInspectionTopicAdd","addTopic","topicArr","topicForm","addMultipleSiteInspectionTopic","AddWhsManagerComponent","WHSManagerDetails","addMultipleWHSManager","SiteInfoComponent","EditPPEComponent","updatePPE","AddLicenceCatComponent","addLicenceCatFG","HighRiskConComponent","highRiskConstructionData","isEdit","Edit","Add","collectionSize","getAllHighRisk","getAllRisk","deleteRisk","AddPPEComponent","PPEformgp","addMultiplePPE","EditHazardComponent","updateHazards","EditStaffComponent","updateStaff","EditHighRiskConstructionComponent","updateRisk","SnackbarService","snackbar","msg","duration","horizontalPosition","providedIn","NameComponent","template","styles","JobTaskComponent","getAllJobTask","getAllJobtask","deleteJobTask","LicenceAndQualComponent","getAllLicence","deleteLicence","NatureOfIncidentComponent","getAllNatureOfInc","getAllNatOfInc","deleteNatOfInc","EditTypeOfIncidentComponent","updateTypeOfIncident","AddTypeOfIncidentComponent","typeformgp","addMultipleTypeOfIncident","ContrAndActReqComponent","getAllContrlActReq","deleteContrlActReq","AddRiskLevelComponent","addRiskForm","addRisk","addMultipleRiskLevel","AddContrActComponent","contrlAndActFG","addMultipleContrlActReq","ProjectManagerComponent","getAllProjectMang","deleteProjectMang","EditCustComponent","editCustomerForm","updateCustomer","AddSiteInfoComponent","allSites","getAllSites","getAllSite","deleteSite","openDialog","AddStaffComponent","addStaffForm","addStaff","addMultipleStaff","routes","path","component","children","SiteInfoRoutingModule","forChild","exports","AddSiteInspectionCategoryComponent","siteInspectionCategoryAdd","addSiteInspectionCategory"],"mappings":"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","file":"site-info-site-info-module-es5.js","sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-edit-root-cause-of-incident',\r\n  templateUrl: './edit-root-cause-of-incident.component.html',\r\n  styleUrls: ['./edit-root-cause-of-incident.component.scss']\r\n})\r\nexport class EditRootCauseOfIncidentComponent implements OnInit {\r\n  editTitle!: FormGroup;\r\n  dataRec: any;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    public dialogRef: MatDialogRef<EditRootCauseOfIncidentComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.dataRec = data;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.editTitle = this.fb.group({\r\n      title: [this.dataRec.title, Validators.required],\r\n    });\r\n  }\r\n  onFormSubmit() {\r\n     \r\n    let data={\r\n      title :this.editTitle.get('title').value\r\n    }\r\n    this.logicalFormInfo\r\n      .updateRootCause(data, this.dataRec._id)\r\n      .subscribe((resData) => {\r\n        console.log('resData', resData);\r\n\r\n        this.dialogRef.close('true');\r\n        Swal.fire({\r\n          title: 'Parameter Updated successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });     \r\n       });\r\n  }\r\n  closeDialog(){\r\n    this.dialogRef.close('false');\r\n\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"editTitle\" >\r\n    <h2>Edit Root Cause Of Incident</h2>\r\n    <mat-form-field appearance=\"legacy\"\r\n    class=\"example-full-width\" style=\"width: 498px;\">\r\n    <!-- <mat-label>Edit PPE</mat-label> -->\r\n    <input matInput  formControlName=\"title\" >\r\n    </mat-form-field>\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-2 offset-8 \">\r\n            <button mat-raised-button (click)=\"closeDialog()\">Close</button>\r\n        </div>\r\n        <div class=\"col-sm-2  \">\r\n            <button mat-raised-button  [disabled]=\"!editTitle.valid\"(click)=\"onFormSubmit()\">Update</button>\r\n        </div>\r\n    </div>\r\n</form>   \r\n\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-manager',\r\n  templateUrl: './edit-manager.component.html',\r\n  styleUrls: ['./edit-manager.component.scss']\r\n})\r\nexport class EditManagerComponent implements OnInit {\r\n\r\n  editTitle: FormGroup;\r\n  dataRec: any;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    public dialogRef: MatDialogRef<EditManagerComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.dataRec = data;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    console.log(\"this.dataRec\",this.dataRec);\r\n    \r\n    this.editTitle = this.fb.group({\r\n      name: [this.dataRec.name, Validators.required],\r\n      email: [this.dataRec.email, Validators.required],\r\n    });\r\n  }\r\n  onFormSubmit() {\r\n     \r\n    let data={\r\n      name :this.editTitle.get('name').value,\r\n    email:this.editTitle.get('email').value\r\n    }\r\n    this.logicalFormInfo\r\n      .editManager(this.dataRec._id,data)\r\n      .subscribe((resData) => {\r\n        console.log('submodulesData', resData);\r\n\r\n        this.dialogRef.close('true');\r\n        Swal.fire({\r\n          title: 'Parameter Edited successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });  \r\n          });\r\n  }\r\n  closeDialog(){\r\n    this.dialogRef.close('false');\r\n\r\n  }\r\n\r\n}\r\n","\r\n<form [formGroup]=\"editTitle\" >\r\n    <h2>Edit WHS Manager</h2>\r\n    <mat-form-field appearance=\"legacy\"\r\n    class=\"example-full-width\" style=\"width: 498px;\">\r\n\r\n    <input matInput  formControlName=\"name\" >\r\n    </mat-form-field>\r\n    <mat-form-field appearance=\"legacy\"\r\n    class=\"example-full-width\" style=\"width: 498px;\">\r\n \r\n    <input matInput   formControlName=\"email\" >\r\n    </mat-form-field>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-2 offset-8 \">\r\n            <button mat-raised-button (click)=\"closeDialog()\">Close</button>\r\n        </div>\r\n        <div class=\"col-sm-2  \">\r\n            <button mat-raised-button  [disabled]=\"!editTitle.valid\"(click)=\"onFormSubmit()\">Update</button>\r\n        </div>\r\n    </div>\r\n</form>   \r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, FormArray } from '@angular/forms';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { Router } from '@angular/router';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-add-hazard',\r\n  templateUrl: './add-hazard.component.html',\r\n  styleUrls: ['./add-hazard.component.scss'],\r\n})\r\nexport class AddHazardComponent implements OnInit {\r\n  hazardFG!: FormGroup;\r\n  formData: any;\r\n  numberOfLineBreaks: any;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private router: Router,\r\n    private logicalFormInfo: LogicalFormInfoService\r\n  ) {\r\n    this.hazardFG = this.fb.group({\r\n      arrObj: this.fb.array([]),\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.addAction();\r\n  }\r\n  addAction() {\r\n    {\r\n      this.add().push(this.newAction());\r\n    }\r\n  }\r\n  add(): FormArray {\r\n    return this.hazardFG.get('arrObj') as FormArray;\r\n  }\r\n  newAction(): FormGroup {\r\n    return this.fb.group({\r\n      title: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  removeSafetyModule(i) {\r\n    const item = <FormArray>this.hazardFG.controls['arrObj'];\r\n    if (item.length > 1) {\r\n      item.removeAt(i);\r\n    }\r\n  }\r\n  onFormSubmit() {\r\n    console.log(this.hazardFG.value);\r\n    let data = {\r\n      arrObj: this.hazardFG.get('arrObj').value,\r\n    };\r\n    this.logicalFormInfo.addMultipleHazards(data).subscribe(\r\n      (data) => {\r\n        console.log('PPE=>', data);\r\n        Swal.fire({\r\n          title: 'Parameter Added successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });  \r\n        this.router.navigate(['/admin/siteInfo/hazards']);\r\n      },\r\n      (err) => {\r\n        console.error(err);\r\n      }\r\n    );\r\n  }\r\n  calcHeight(value) {\r\n    this.numberOfLineBreaks = (value.match(/\\n/g) || []).length+1;\r\n    console.log(\"numberOfLineBreaks\",this.numberOfLineBreaks)\r\n  }\r\n}\r\n","<div class=\"btn btn-outline-primary\" [routerLink]=\"['/admin/siteInfo/hazards']\">\r\n    <i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\r\n  </div>\r\n  <div class=\"container px-4 py-4 bg-white\">\r\n    <form [formGroup]=\"hazardFG\" (ngSubmit)=\"onFormSubmit()\">\r\n      <h2 class=\"text-center\">Add Hazard</h2>\r\n      <br />\r\n      <hr />\r\n      <ng-container formArrayName=\"arrObj\">\r\n        <ng-container\r\n          *ngFor=\"let control of add().controls; let i = index\"\r\n          [formGroupName]=\"i\"\r\n        >\r\n          <div class=\"row justify-content-center\">\r\n            <div class=\"mr-1 mt-2\">\r\n              <span \r\n                >{{i+1}}.\r\n              </span>\r\n            </div>\r\n            <div class=\"col-8\">\r\n              <!-- <p for=\"exampleFormControlInput1\" class=\"form-Label\">Job Task Type</p> -->\r\n              <textarea autosize\r\n          \r\n                type=\"text\"\r\n                formControlName=\"title\"\r\n                class=\"form-control sign\"\r\n                id=\"name\"\r\n              ></textarea>\r\n            </div>\r\n            <div class=\"col-1 mt-2\">\r\n              <span class=\"material-icons\" (click)=\"addAction()\"\r\n                >add_circle_outline\r\n              </span>\r\n            </div>\r\n            <div class=\"col-1 mt-2\">\r\n              <span class=\"material-icons\" (click)=\"removeSafetyModule(i)\">\r\n                remove_circle_outline\r\n              </span>\r\n            </div>\r\n          </div>\r\n  \r\n          <hr />\r\n        </ng-container>\r\n      </ng-container>\r\n      <br />\r\n  \r\n      <div class=\"col-md-2\">\r\n        <button type=\"submit\" class=\"btn btn-primary\"[disabled]=\"hazardFG.get('arrObj').invalid\">Add</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  ","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators,FormArray } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-add-high-risk-construction',\r\n  templateUrl: './add-high-risk-construction.component.html',\r\n  styleUrls: ['./add-high-risk-construction.component.scss'],\r\n})\r\nexport class AddHighRiskConstructionComponent implements OnInit {\r\n  // riskDetails!: FormGroup;\r\n  // riskData: any = [];\r\n  // ID: any;\r\n  // hide: boolean = true;\r\n  // constructor(\r\n  //   private logicalFormInfo: LogicalFormInfoService,\r\n  //   private fb: FormBuilder,\r\n  //   public dialogRef: MatDialogRef<AddHighRiskConstructionComponent>,\r\n  //   @Inject(MAT_DIALOG_DATA) public data: any\r\n  // ) {\r\n  //   {\r\n  //     this.riskDetails = this.fb.group({\r\n  //       title: ['', Validators.required],\r\n  //     });\r\n  //     console.log('riskDetails=>', this.riskDetails);\r\n  //   }\r\n  // }\r\n\r\n  // ngOnInit(): void {}\r\n\r\n  // onFormSubmit() {\r\n  //   console.log(this.riskDetails);\r\n  //   let data = {\r\n  //     componentId: this.data.EditData,\r\n  //     title: this.riskDetails.get('title').value,\r\n  //   };\r\n  //   this.logicalFormInfo.addSubComponent(data).subscribe((data) => {\r\n  //     console.log('riskDetails=>', data);\r\n  //     // this.riskData = data;\r\n  //     this.dialogRef.close('true');\r\n  //     this.riskDetails.reset();\r\n  //     Swal.fire('Parameter added successfully');\r\n  //   });\r\n  // }\r\n  \r\n  riskConstr!: FormGroup;\r\n  formData: any;numberOfLineBreaks: any;\r\n;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private router: Router,\r\n    private logicalFormInfo:LogicalFormInfoService\r\n  ) { \r\n    this.riskConstr=this.fb.group({\r\n     // mode:\"JobTask\",\r\n      arrObj: this.fb.array([]),\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.addAction();\r\n  }\r\n  addAction() {\r\n    {\r\n      this.add().push(this.newAction());\r\n    }\r\n  }\r\n  add(): FormArray {\r\n    return this.riskConstr.get('arrObj') as FormArray;\r\n  }\r\n  newAction(): FormGroup {\r\n    return this.fb.group({\r\n     \r\n      title: ['', Validators.required],\r\n    });\r\n  }\r\n  \r\n  removeSafetyModule(i) {\r\n    const item = <FormArray>this.riskConstr.controls['arrObj'];\r\n    if (item.length > 1) {\r\n      item.removeAt(i);\r\n    \r\n    }\r\n  }\r\n  onFormSubmit() {\r\n    // console.log(this.riskConstr.value);\r\n    let data={\r\n      arrObj:this.riskConstr.get('arrObj').value\r\n    }\r\n    // console.log(data);\r\n    \r\n    this.logicalFormInfo.addMultipleRisk(data).subscribe((data) => {\r\n      console.log('Risk=>', data);\r\n      Swal.fire({\r\n        title: 'Parameter Added successfully',\r\n        showConfirmButton: false,\r\n        timer: 1200,\r\n      });  \r\n      this.router.navigate(['/admin/siteInfo/highRisk']);    \r\n    },(err)=>{console.error(err);} \r\n  \r\n    );\r\n}\r\ncalcHeight(value) {\r\n  this.numberOfLineBreaks = (value.match(/\\n/g) || []).length+1;\r\n  console.log(\"numberOfLineBreaks\",this.numberOfLineBreaks)\r\n}\r\n}","<!-- <div class=\"container px-4 py-4 card\">\r\n  <form [formGroup]=\"riskDetails\" (ngSubmit)=\"onFormSubmit()\">\r\n    <h1 class=\"text-center pt-3\">\r\n      <p style=\"text-align: center\">High Risk Construction</p>\r\n    </h1>\r\n    <hr />\r\n    <div>\r\n      <div class=\"row\">\r\n        <div class=\"col-8\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">Add Parameter</p>\r\n          <input\r\n            type=\"text\"\r\n            formControlName=\"title\"\r\n            class=\"form-control\"\r\n            id=\"name\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <br />\r\n    <hr />\r\n    <div class=\"col-md-2\">\r\n      <button\r\n        type=\"submit\"\r\n        [disabled]=\"riskDetails.get('title').hasError('required')\"\r\n        class=\"btn btn-primary\"\r\n      >\r\n        Add\r\n      </button>\r\n    </div>\r\n  </form>\r\n</div> -->\r\n<div class=\"btn btn-outline-primary\" [routerLink]=\"['/admin/siteInfo/highRisk']\">\r\n  <i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\r\n</div>\r\n<div class=\"container px-4 py-4 bg-white\">\r\n  <form [formGroup]=\"riskConstr\" (ngSubmit)=\"onFormSubmit()\">\r\n    <h2 class=\"text-center\">Add High Risk Construction Parameter</h2>\r\n    <br />\r\n    <hr />\r\n    <ng-container formArrayName=\"arrObj\">\r\n      <ng-container\r\n        *ngFor=\"let control of add().controls; let i = index\"\r\n        [formGroupName]=\"i\"\r\n      >\r\n        <div class=\"row justify-content-center\">\r\n          <div class=\"mr-1 mt-2\">\r\n            <span \r\n              >{{i+1}}.\r\n            </span>\r\n          </div>\r\n          <div class=\"col-8\">\r\n            <!-- <p for=\"exampleFormControlInput1\" class=\"form-Label\">Job Task Type</p> -->\r\n            <textarea autosize\r\n           \r\n              type=\"text\"\r\n              formControlName=\"title\"\r\n              class=\"form-control sign\"\r\n              id=\"name\"\r\n            ></textarea>\r\n          </div>\r\n          <div class=\"col-1 mt-2\">\r\n            <span class=\"material-icons\" (click)=\"addAction()\"\r\n              >add_circle_outline\r\n            </span>\r\n          </div>\r\n          <div class=\"col-1 mt-2\">\r\n            <span class=\"material-icons\" (click)=\"removeSafetyModule(i)\">\r\n              remove_circle_outline\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        <hr />\r\n      </ng-container>\r\n    </ng-container>\r\n    <br />\r\n\r\n    <div class=\"col-md-2\">\r\n      <button type=\"submit\" class=\"btn btn-primary\"[disabled]=\"riskConstr.get('arrObj').invalid\">Add</button>\r\n    </div>\r\n  </form>\r\n</div>\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\n@Component({\r\n  selector: 'app-edit-licence',\r\n  templateUrl: './edit-licence.component.html',\r\n  styleUrls: ['./edit-licence.component.scss']\r\n})\r\nexport class EditLicenceComponent implements OnInit {\r\n\r\n  editTitle: FormGroup;\r\n  dataRec: any;\r\n  categories=[];\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    public dialogRef: MatDialogRef<EditLicenceComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.dataRec = data;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    console.log(this.dataRec);\r\n    \r\n    this.editTitle = this.fb.group({\r\n      title: [this.dataRec.title, Validators.required],\r\n      tradeCategoryId: [this.dataRec.tradeCategoryId._id, Validators.required],\r\n    });\r\n    console.log(this.editTitle.value)\r\n    this.getAllLicenceCat();\r\n  }\r\n  getAllLicenceCat() {\r\n    this.logicalFormInfo.getAllLicenceCat().subscribe((res) => {\r\n      console.log('getAllLicenceCat=>', res);\r\n      this.categories = res.data;\r\n      console.log('categories=>', res.data);\r\n    });\r\n \r\n  }\r\n  onFormSubmit() {\r\n\r\n    let data={\r\n      title :this.editTitle.get('title').value,\r\n      tradeCategoryId:this.editTitle.get('tradeCategoryId').value,\r\n    }\r\n    console.log('tradeCategoryId',data);\r\n    \r\n    this.logicalFormInfo\r\n      .updateLicence(this.dataRec._id,data)\r\n      .subscribe((resData) => {\r\n        console.log('updateLicence', resData);\r\n\r\n        this.dialogRef.close('true');\r\n        Swal.fire('Parameter Edited successfully');\r\n      });\r\n  }\r\n  closeDialog(){\r\n    this.dialogRef.close('false');\r\n\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"editTitle\">\r\n    <h2 mat-dialog-title>Edit Licence</h2>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-6\">\r\n      <!-- <mat-form-field\r\n        appearance=\"legacy\"\r\n        class=\"example-full-width\"\r\n        style=\"width: 1200px\"\r\n      >\r\n        <input\r\n          matInput\r\n          formControlName=\"title\"\r\n          style=\"text-transform: capitalize !important\"\r\n        />\r\n      </mat-form-field> -->\r\n      <input\r\n      type=\"text\"\r\n      formControlName=\"title\"\r\n      class=\"form-control sign\"\r\n      id=\"title\"\r\n      placeholder=\"Licence Name\"\r\n    />\r\n    </div>\r\n    <div class=\"col-6\">\r\n      <select\r\n        class=\"form-select form-control\"\r\n        aria-label=\"Default select example\"\r\n        formControlName=\"tradeCategoryId\"\r\n      >\r\n     \r\n        <option *ngFor=\"let item of categories\" [value]=\"item._id\">{{item.title}}</option>\r\n    \r\n      </select>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row mt-4\">\r\n    <div class=\"col-sm-2 offset-8\">\r\n      <button mat-raised-button (click)=\"closeDialog()\">Close</button>\r\n    </div>\r\n    <div class=\"col-sm-2\">\r\n      <button\r\n        mat-raised-button\r\n        [disabled]=\"!editTitle.valid\"\r\n        (click)=\"onFormSubmit()\"\r\n      >\r\n        Update\r\n      </button>\r\n    </div>\r\n  </div>\r\n</form>\r\n","import { Component, OnInit ,ViewChild} from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport Swal from 'sweetalert2';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\n\r\nimport { SetTitleService } from 'src/app/utils/services/set-title.service';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { EditManagerComponent } from './edit-manager/edit-manager.component';\r\n\r\n\r\n@Component({\r\n  selector: 'app-manager',\r\n  templateUrl: './manager.component.html',\r\n  styleUrls: ['./manager.component.scss']\r\n})\r\nexport class ManagerComponent implements OnInit {\r\n  mode: any;\r\n  jobTaskData: any = [];\r\n  ELEMENT_DATA = [];\r\n  displayedColumns: string[] = ['index', 'name','email', 'action'];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n  constructor(private logicalFormInfo: LogicalFormInfoService, private dialog: MatDialog,\r\n    private setTitle: SetTitleService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllManager();\r\n      this.setTitle.setTitle('WHS-Manager');\r\n  }\r\n  getAllManager() {\r\n    this.logicalFormInfo.getAllManager().subscribe((res: any) => {\r\n      console.log('getAllManager=>', res);\r\n      // this.jobTaskData = res.data[0].subComponents;\r\n      let data = res.data\r\n      data.forEach((element, index) => {\r\n        element.index = index + 1; //adding index\r\n      });\r\n\r\n      this.ELEMENT_DATA = data;\r\n      this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n      //  this.task = res.data.subComponents;\r\n    });\r\n\r\n  }\r\n  edit(element) {\r\n    const dialogRef = this.dialog.open(EditManagerComponent, {\r\n      width: \"550px\",\r\n      data: element,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if ((result == \"true\")) {\r\n        this.getAllManager();\r\n      }\r\n      console.log(\"The dialog was closed\");\r\n    });\r\n  }\r\n  delete(item) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: `Do you want to delete \"${item.name}\"?`,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#00B96F',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Delete!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.logicalFormInfo\r\n          .deleteManager(item._id)\r\n          .subscribe((res) => {\r\n            Swal.fire({\r\n              title: 'Details Deleted successfully',\r\n              showConfirmButton: false,\r\n              timer: 1200,\r\n            }); console.log('deleted res', res);\r\n            this.getAllManager();\r\n\r\n          });\r\n      }\r\n    });\r\n  }\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n}\r\n","<div class=\"col ml-2 pt-3\">\r\n    <h1> Manager List</h1>\r\n    </div>\r\n        <div class=\"col ml-2 mb-2\">\r\n          \r\n          <button  class=\"btn btn-outline-primary mt-1 mr-2 float-right\"[routerLink]=\"['/admin/siteInfo/addManager']\">\r\n            <i class=\"fas fa-folder-plus mr-2\"></i>Add Manager\r\n          </button>\r\n        </div>\r\n        <div class=\"col-6\">\r\n          <mat-form-field>\r\n            <input\r\n              matInput\r\n              #input\r\n              placeholder=\"Search\"\r\n              (keyup)=\"applyFilter($event)\"\r\n            />\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n        \r\n            <!-- Position Column -->\r\n            <ng-container matColumnDef=\"index\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> No. </th>\r\n              <td mat-cell *matCellDef=\"let element\">{{element.index}}</td>\r\n            </ng-container>\r\n        \r\n            <!-- Name Column -->\r\n           \r\n        <!-- Name Column -->\r\n        <ng-container matColumnDef=\"name\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\r\n          <td mat-cell *matCellDef=\"let element\"> <span class=\"flex-start\">{{element.name}} </span></td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"email\">\r\n          <th mat-header-cell *matHeaderCellDef>Email</th>\r\n          <td mat-cell *matCellDef=\"let element\"> <span class=\"flex-start\">{{element.email}} </span></td>\r\n        </ng-container>\r\n      \r\n    <ng-container matColumnDef=\"action\">\r\n      <th mat-header-cell *matHeaderCellDef> Action </th>\r\n      <td mat-cell *matCellDef=\"let element\"> \r\n        <!-- <i class=\"fas fa-pencil-alt mr-2 \" (click)=\"edit(element)\" title=\"edit\"></i>  <i  class=\"fas fa-trash ml-2 \" (click)=\"delete(element)\" title=\"delete\"></i>  -->\r\n        <button mat-icon-button class=\"mr-2\" aria-label=\"Example icon button with a delete icon\" (click)=\"edit(element)\">\r\n          <mat-icon >edit</mat-icon>\r\n        </button>\r\n        <button mat-icon-button aria-label=\"Example icon button with a delete icon\" (click)=\"delete(element)\">\r\n          <mat-icon >delete</mat-icon>\r\n        </button>\r\n      </td>\r\n    </ng-container>\r\n        <!-- <ng-container matColumnDef=\"edit\">\r\n          <th mat-header-cell *matHeaderCellDef> Edit </th>\r\n          <td mat-cell *matCellDef=\"let element\"(click)=\"edit(element)\"> <i class=\"fas fa-pencil-alt \"></i> \r\n          </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"delete\">\r\n          <th mat-header-cell *matHeaderCellDef> Delete </th>\r\n          <td mat-cell *matCellDef=\"let element\"(click)=\"delete(element)\"> <i class=\"fas fa-trash \"></i> \r\n          </td>\r\n        </ng-container> -->\r\n    \r\n        \r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">Data Not  Found  \"{{input.value}}\"</td>\r\n            </tr>\r\n          </table>\r\n        \r\n          <mat-paginator [pageSizeOptions]=\"[20]\"\r\n                         showFirstLastButtons \r\n                         aria-label=\"Select page of periodic elements\">\r\n          </mat-paginator>\r\n        </div>\r\n        \r\n","import { value } from './../../../views/dynamic-form/global.model';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport Swal from 'sweetalert2';\r\n@Component({\r\n  selector: 'app-add-site',\r\n  templateUrl: './add-site.component.html',\r\n  styleUrls: ['./add-site.component.scss']\r\n})\r\nexport class AddSiteComponent implements OnInit {\r\nallState:any=[];\r\n  addSitesForm;\r\n  numberOfLineBreaks:any;\r\n  constructor( \r\n    private dialogRef: MatDialogRef<AddSiteComponent>,\r\n\t\t@Inject(MAT_DIALOG_DATA) public data: any,\r\n    private fb:FormBuilder,\r\n    private logicalFormInfoService: LogicalFormInfoService\r\n    ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllStates();\r\n    this.addSitesForm = this.fb.group({\r\n      siteName:['',Validators.required],\r\n      streetNumber:['',Validators.required],\r\n      streetAddress:['',Validators.required],\r\n      suburb:['',Validators.required],\r\n      stateId:['',Validators.required],\r\n    })\r\n  }\r\n  getAllStates() {\r\n    this.logicalFormInfoService.getAllStates().subscribe((res) => {\r\n      console.log('getAllStates=>', res);\r\n  this.allState=res.data;\r\n    });\r\n \r\n  }\r\n\r\n    onSubmit(){\r\n      console.log(this.addSitesForm.value)\r\n      this.logicalFormInfoService.addSite(this.addSitesForm.value).subscribe(res => {\r\n        console.log(res);\r\n        this.dialogRef.close('true');\r\n        Swal.fire({\r\n          title: 'Site Added successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });\r\n      });\r\n    }\r\n    close() {\r\n      this.dialogRef.close();\r\n  }\r\n  calcHeight(value) {\r\n    this.numberOfLineBreaks = (value.match(/\\n/g) || []).length+1;\r\n    console.log(\"numberOfLineBreaks\",this.numberOfLineBreaks)\r\n }\r\n}\r\n","<section  [formGroup]=\"addSitesForm\" >\r\n    <div >\r\n      <div mat-dialog-title class=\"dialog-title\">\r\n      <h2> Add Site Information</h2>\r\n      <button type=\"button\" class=\"close\" \r\n      style=\"font-size: 30px;\"\r\n      (click)=\"close()\" aria-label=\"Close\">\r\n      <span aria-hidden=\"true\">×</span>\r\n    </button>\r\n    </div>\r\n    <hr>\r\n      <div class=\"row\" [formGroup]=\"addSitesForm\">\r\n      <div class=\"my-3 col-6\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">Site Name</p>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            formControlName=\"siteName\"\r\n            id=\"siteName\"\r\n          />\r\n        </div>\r\n     </div>\r\n     <div class=\"row\">\r\n        <div class=\"my-3 col-2\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">Street No.</p>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            formControlName=\"streetNumber\"\r\n            id=\"streetNumber\"\r\n          />\r\n        </div>\r\n        <div class=\"my-3 col-4\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">Street Address</p>\r\n          <textarea autosize\r\n        \r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            formControlName=\"streetAddress\"\r\n            id=\"streetAddress\"\r\n          ></textarea>\r\n        </div>\r\n        <div class=\"my-3 col-3\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">Suburb</p>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            formControlName=\"suburb\"\r\n            id=\"suburb\"\r\n          />\r\n        </div>\r\n        <div class=\"my-3 col-3\">\r\n            <p for=\"exampleFormControlInput1\" class=\"form-label\"\r\n            >State</p\r\n          >  \r\n          <select\r\n          class=\"form-select form-control col\"\r\n          id=\"stateId\"\r\n          aria-label=\"Default select example\"\r\n          formControlName=\"stateId\"\r\n\r\n        >\r\n          <option selected hidden>Select</option>\r\n          <option *ngFor =\"let item of allState\" [value]=\"item._id\">{{item.title}}</option>\r\n        </select>\r\n       \r\n        </div>\r\n      </div>\r\n      <hr>\r\n    <div >\r\n      <button class=\"btn btn-primary\" (click)=\"onSubmit()\"  [disabled]=\"addSitesForm.invalid\" >\r\n        Add\r\n      </button>\r\n    </div>\r\n  </div>\r\n    </section>\r\n    ","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { SiteInfoRoutingModule } from './site-info-routing.module';\r\nimport { SiteInfoComponent } from './site-info.component';\r\nimport { AddSiteInfoComponent } from './add-site-info/add-site-info.component';\r\nimport { JobTaskComponent } from './job-task/job-task.component';\r\nimport { HighRiskConComponent } from './high-risk-con/high-risk-con.component';\r\nimport { PpeSelectComponent } from './ppe-select/ppe-select.component';\r\nimport { LicenceAndQualComponent } from './licence-and-qual/licence-and-qual.component';\r\nimport { SharedModule } from './../shared/shared.module';\r\nimport { AddCustomerComponent } from './add-customer/add-customer.component';\r\n// import { AddLicenceAndQualificationComponent } from './licence-and-qual/add-licence-and-qualification/add-licence-and-qualification.component';\r\n// import { AddPPEselectComponent } from './ppe-select/add-ppeselect/add-ppeselect.component';\r\nimport { AddHighRiskConstructionComponent } from './high-risk-con/add-high-risk-construction/add-high-risk-construction.component';\r\nimport { EditHighRiskConstructionComponent } from './high-risk-con/edit-high-risk-construction/edit-high-risk-construction.component';\r\nimport { AddJobTaskComponent } from './job-task/add-job-task/add-job-task.component';\r\nimport { AddPPEComponent } from './ppe-select/add-ppe/add-ppe.component';\r\nimport { EditTaskComponent } from './job-task/edit-task/edit-task.component';\r\nimport { EditPPEComponent } from './ppe-select/edit-ppe/edit-ppe.component';\r\nimport { EditLicenceComponent } from './licence-and-qual/edit-licence/edit-licence.component';\r\nimport { AddLicenceComponent } from './licence-and-qual/add-licence/add-licence.component';\r\nimport { LicenceCatComponent } from './licence-and-qual/licence-cat/licence-cat.component';\r\nimport { AddLicenceCatComponent } from './licence-and-qual/licence-cat/add-licence-cat/add-licence-cat.component';\r\nimport { EditLicenceCatComponent } from './licence-and-qual/licence-cat/edit-licence-cat/edit-licence-cat.component';\r\nimport { CodeOfPractComponent } from './code-of-pract/code-of-pract.component';\r\nimport { AddCOPComponent } from './code-of-pract/add-cop/add-cop.component';\r\nimport { EditCOPComponent } from './code-of-pract/edit-cop/edit-cop.component';\r\nimport { AddSiteComponent } from './add-site-info/add-site/add-site.component';\r\nimport { EditSiteComponent } from './add-site-info/edit-site/edit-site.component';\r\nimport { AddingCustComponent } from './add-customer/adding-cust/adding-cust.component';\r\nimport { EditCustComponent } from './add-customer/edit-cust/edit-cust.component';\r\nimport { IdentifyHazardsComponent } from './identify-hazards/identify-hazards.component';\r\nimport { ContrAndActReqComponent } from './contr-and-act-req/contr-and-act-req.component';\r\nimport { AddHazardComponent } from './identify-hazards/add-hazard/add-hazard.component';\r\nimport { EditHazardComponent } from './identify-hazards/edit-hazard/edit-hazard.component';\r\nimport { AddContrActComponent } from './contr-and-act-req/add-contr-act/add-contr-act.component';\r\nimport { EditContActComponent } from './contr-and-act-req/edit-cont-act/edit-cont-act.component';\r\nimport { ProjectManagerComponent } from './project-manager/project-manager.component';\r\nimport { AddEditProjMangComponent } from './project-manager/add-edit-proj-mang/add-edit-proj-mang.component';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { StaffComponent } from './staff/staff.component';\r\nimport { RiskLevelComponent } from './risk-level/risk-level.component';\r\nimport { ResidualRiskLevelComponent } from './residual-risk-level/residual-risk-level.component';\r\nimport { ChemicalComponent } from './chemical/chemical.component';\r\nimport { AddChemicalComponent } from './chemical/add-chemical/add-chemical.component';\r\nimport { EditChemicalComponent } from './chemical/edit-chemical/edit-chemical.component';\r\nimport { AddRiskLevelComponent } from './risk-level/add-risk-level/add-risk-level.component';\r\nimport { EditRiskLevelComponent } from './risk-level/edit-risk-level/edit-risk-level.component';\r\nimport { AddResidualRiskLevelComponent } from './residual-risk-level/add-residual-risk-level/add-residual-risk-level.component';\r\nimport { EditResidualRiskLevelComponent } from './residual-risk-level/edit-residual-risk-level/edit-residual-risk-level.component';\r\nimport { AddStaffComponent } from './staff/add-staff/add-staff.component';\r\nimport { EditStaffComponent } from './staff/edit-staff/edit-staff.component';\r\nimport {AutosizeModule} from 'ngx-autosize';\r\nimport { SiteInspectionCategoryComponent } from './site-inspection-category/site-inspection-category.component';\r\nimport { AddSiteInspectionCategoryComponent } from './site-inspection-category/add-site-inspection-category/add-site-inspection-category.component';\r\nimport { EditSiteInspectionCategoryComponent } from './site-inspection-category/edit-site-inspection-category/edit-site-inspection-category.component';\r\nimport { SiteInspectionTopicComponent } from './site-inspection-category/site-inspection-topic/site-inspection-topic.component';\r\nimport { AddSiteInspectionTopicComponent } from './site-inspection-category/site-inspection-topic/add-site-inspection-topic/add-site-inspection-topic.component';\r\nimport { EditSiteInspectionTopicComponent } from './site-inspection-category/site-inspection-topic/edit-site-inspection-topic/edit-site-inspection-topic.component';\r\nimport { NatureOfIncidentComponent } from './nature-of-incident/nature-of-incident.component';\r\nimport { AddAndEditNatureIncidentComponent } from './nature-of-incident/add-and-edit-nature-incident/add-and-edit-nature-incident.component';\r\nimport { EditNatureIncidentComponent } from './nature-of-incident/edit-nature-incident/edit-nature-incident.component';\r\nimport { ChangesMadeComponent } from './changes-made/changes-made.component';\r\nimport { AddChangesMadeComponent } from './changes-made/add-changes-made/add-changes-made.component';\r\nimport { EditChangesMadeComponent } from './changes-made/edit-changes-made/edit-changes-made.component';\r\nimport { RootCauseOfIncidentComponent } from './root-cause-of-incident/root-cause-of-incident.component';\r\nimport { TypeOfIncidentComponent } from './type-of-incident/type-of-incident.component';\r\nimport { AddTypeOfIncidentComponent } from './type-of-incident/add-type-of-incident/add-type-of-incident.component';\r\nimport { EditTypeOfIncidentComponent } from './type-of-incident/edit-type-of-incident/edit-type-of-incident.component';\r\nimport { AddRootCauseOfIncidentComponent } from './root-cause-of-incident/add-root-cause-of-incident/add-root-cause-of-incident.component';\r\nimport { EditRootCauseOfIncidentComponent } from './root-cause-of-incident/edit-root-cause-of-incident/edit-root-cause-of-incident.component';\r\nimport { ManagerComponent } from './manager/manager.component';\r\nimport { WHSManagerComponent } from './whs-manager/whs-manager.component';\r\nimport { EditWhsManagerComponent } from './whs-manager/edit-whs-manager/edit-whs-manager.component';\r\nimport { AddWhsManagerComponent } from './whs-manager/add-whs-manager/add-whs-manager.component';\r\nimport { AddManagerComponent } from './manager/add-manager/add-manager.component';\r\nimport { EditManagerComponent } from './manager/edit-manager/edit-manager.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SiteInfoComponent,\r\n    AddSiteInfoComponent,\r\n    JobTaskComponent,\r\n    HighRiskConComponent,\r\n    PpeSelectComponent,\r\n    LicenceAndQualComponent,\r\n    AddCustomerComponent,\r\n    AddHighRiskConstructionComponent,\r\n    EditHighRiskConstructionComponent,\r\n    AddJobTaskComponent,\r\n    AddPPEComponent,\r\n    EditTaskComponent,\r\n    EditPPEComponent,\r\n    EditLicenceComponent,\r\n    AddLicenceComponent,\r\n    LicenceCatComponent,\r\n    AddLicenceCatComponent,\r\n    EditLicenceCatComponent,\r\n    CodeOfPractComponent,\r\n    AddCOPComponent,\r\n    EditCOPComponent,\r\n    AddSiteComponent,\r\n    EditSiteComponent,\r\n    AddingCustComponent,\r\n    EditCustComponent,\r\n    IdentifyHazardsComponent,\r\n    ContrAndActReqComponent,\r\n    AddHazardComponent,\r\n    EditHazardComponent,\r\n    AddContrActComponent,\r\n    EditContActComponent,\r\n    ProjectManagerComponent,\r\n    AddEditProjMangComponent,\r\n    StaffComponent,\r\n    \r\n    RiskLevelComponent,\r\n    ResidualRiskLevelComponent,\r\n    ChemicalComponent,\r\n    AddChemicalComponent,\r\n    EditChemicalComponent,\r\n    AddRiskLevelComponent,\r\n    EditRiskLevelComponent,\r\n    AddResidualRiskLevelComponent,\r\n    EditResidualRiskLevelComponent,\r\n    AddStaffComponent,\r\n    EditStaffComponent,\r\n    SiteInspectionCategoryComponent,\r\n    AddSiteInspectionCategoryComponent,\r\n    EditSiteInspectionCategoryComponent,\r\n    SiteInspectionTopicComponent,\r\n    AddSiteInspectionTopicComponent,\r\n    EditSiteInspectionTopicComponent,\r\n    NatureOfIncidentComponent,\r\n    AddAndEditNatureIncidentComponent,\r\n    EditNatureIncidentComponent,\r\n    ChangesMadeComponent,\r\n    AddChangesMadeComponent,\r\n    EditChangesMadeComponent,\r\n    RootCauseOfIncidentComponent,\r\n    TypeOfIncidentComponent,\r\n    AddTypeOfIncidentComponent,\r\n    EditTypeOfIncidentComponent,\r\n    AddRootCauseOfIncidentComponent,\r\n    EditRootCauseOfIncidentComponent,\r\n    ManagerComponent,\r\n    WHSManagerComponent,\r\n    EditWhsManagerComponent,\r\n    AddWhsManagerComponent,\r\n    AddManagerComponent,\r\n    EditManagerComponent,\r\n   \r\n  ],\r\n\r\n  imports: [\r\n    CommonModule,\r\n    SiteInfoRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    MatStepperModule,\r\n    AutosizeModule\r\n  ],\r\n})\r\nexport class SiteInfoModule {}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { SetTitleService } from 'src/app/utils/services/set-title.service';\r\nimport Swal from 'sweetalert2';\r\nimport { EditChangesMadeComponent } from './edit-changes-made/edit-changes-made.component';\r\n\r\n@Component({\r\n  selector: 'app-changes-made',\r\n  templateUrl: './changes-made.component.html',\r\n  styleUrls: ['./changes-made.component.scss']\r\n})\r\nexport class ChangesMadeComponent implements OnInit {\r\n  jobTaskData: any = [];\r\n  ELEMENT_DATA = [];\r\n  /////////////mat table////////////////\r\n  displayedColumns: string[] = ['index', 'title','action'];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n  /////////////mat table end////////////////\r\n\r\n  constructor(\r\n   \r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    private dialog:MatDialog,\r\n    private setTitle:SetTitleService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getAllChanges();\r\n    this.setTitle.setTitle('WHS-Changes Made');\r\n    \r\n  }\r\n\r\n  getAllChanges() {\r\n    this.logicalFormInfo.getAllChangesMade().subscribe((res:any) => {\r\n      console.log('Changes=>', res);\r\n      let data = res.data;\r\n      data.forEach((element, index) => {\r\n        element.index = index + 1; //adding index\r\n      });\r\n\r\n      this.ELEMENT_DATA = data;\r\n      this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n      console.log('this.ELEMENT_DATA', this.ELEMENT_DATA);\r\n\r\n      //  this.task = res.data.subComponents;\r\n    });\r\n  }\r\n\r\n  edit(element){\r\n    const dialogRef = this.dialog.open(EditChangesMadeComponent, {\r\n      width: \"550px\",\r\n      data: element,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if ((result == \"true\")) {\r\n        this.getAllChanges();\r\n      }\r\n      console.log(\"The dialog was closed\");\r\n    });\r\n  }\r\n  delete(item) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: `Do you want to delete \"${item.title}\"?`,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#00B96F',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Delete!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.logicalFormInfo\r\n        .deleteChangesMade(item._id)\r\n        .subscribe((res) => {\r\n          Swal.fire({\r\n            title: 'Parameter Deleted successfully',\r\n            showConfirmButton: false,\r\n            timer: 1200,\r\n          });\r\n          console.log('deleted res', res);\r\n          this.getAllChanges();\r\n            \r\n        });\r\n      \r\n      }\r\n    });\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n}\r\n","<div class=\"col ml-2 pt-3\">\r\n    <h1> Changes Made List</h1>\r\n    </div>\r\n        <div class=\"col ml-2 mb-2\">\r\n          \r\n          <button  class=\"btn btn-outline-primary mt-1 mr-2 float-right\"[routerLink]=\"['/admin/siteInfo/addChangesMade']\">\r\n            <i class=\"fas fa-plus mr-2\"></i>Add Changes Made \r\n          </button>\r\n        </div>\r\n        <div class=\"col-6\">\r\n          <mat-form-field>\r\n            <input\r\n              matInput\r\n              #input\r\n              placeholder=\"Search\"\r\n              (keyup)=\"applyFilter($event)\"\r\n            />\r\n          </mat-form-field>\r\n        </div>\r\n    \r\n        <div class=\"\">\r\n          \r\n          <table mat-table [dataSource]=\"dataSource\" matSort >\r\n        \r\n            <!-- Position Column -->\r\n            <ng-container matColumnDef=\"index\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header=\"index\"> No. </th>\r\n              <td mat-cell *matCellDef=\"let element\">{{element.index}}</td>\r\n            </ng-container>\r\n        \r\n            <!-- Name Column -->\r\n           \r\n        <!-- Name Column -->\r\n        <ng-container matColumnDef=\"title\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header=\"title\"> Name </th>\r\n          <td mat-cell *matCellDef=\"let element\"><span class=\"flex-start\">{{element.title}}</span>  </td>\r\n        </ng-container>\r\n    \r\n        <ng-container matColumnDef=\"action\">\r\n          <th mat-header-cell *matHeaderCellDef> Action </th>\r\n          <td mat-cell *matCellDef=\"let element\"> \r\n            <!-- <i class=\"fas fa-pencil-alt mr-2 \" (click)=\"edit(element)\" title=\"edit\"></i>  <i  class=\"fas fa-trash ml-2 \" (click)=\"delete(element)\" title=\"delete\"></i>  -->\r\n            <button mat-icon-button class=\"mr-2\" aria-label=\"Example icon button with a delete icon\" (click)=\"edit(element)\">\r\n              <mat-icon >edit</mat-icon>\r\n            </button>\r\n            <button mat-icon-button aria-label=\"Example icon button with a delete icon\" (click)=\"delete(element)\">\r\n              <mat-icon >delete</mat-icon>\r\n            </button>\r\n          </td>\r\n        </ng-container>\r\n        <!-- <ng-container matColumnDef=\"edit\">\r\n            <th mat-header-cell *matHeaderCellDef> Edit </th>\r\n            <td mat-cell *matCellDef=\"let element\"(click)=\"edit(element)\"> <i class=\"fas fa-pencil-alt \"></i> \r\n            </td>\r\n          </ng-container>\r\n          <ng-container matColumnDef=\"delete\">\r\n            <th mat-header-cell *matHeaderCellDef> Delete </th>\r\n            <td mat-cell *matCellDef=\"let element\"(click)=\"delete(element)\"> <i class=\"fas fa-trash \"></i> \r\n            </td>\r\n          </ng-container> -->\r\n        \r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">Data Not  Found  \"{{input.value}}\"</td>\r\n            </tr>\r\n          \r\n          </table>\r\n        \r\n          <mat-paginator [pageSizeOptions]=\"[20]\"\r\n                         showFirstLastButtons \r\n                         aria-label=\"Select page of periodic elements\">\r\n          </mat-paginator>\r\n        </div>\r\n        \r\n    ","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-edit-nature-incident',\r\n  templateUrl: './edit-nature-incident.component.html',\r\n  styleUrls: ['./edit-nature-incident.component.scss']\r\n})\r\nexport class EditNatureIncidentComponent implements OnInit {\r\n  editTitle!: FormGroup;\r\n  dataRec: any;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    public dialogRef: MatDialogRef<EditNatureIncidentComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.dataRec = data;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.editTitle = this.fb.group({\r\n      title: [this.dataRec.title, Validators.required],\r\n    });\r\n  }\r\n  onFormSubmit() {\r\n     \r\n    let data={\r\n      title :this.editTitle.get('title').value\r\n    }\r\n    this.logicalFormInfo\r\n      .updateNatOfInc(data, this.dataRec._id)\r\n      .subscribe((resData) => {\r\n        console.log('resData', resData);\r\n\r\n        this.dialogRef.close('true');\r\n        Swal.fire({\r\n          title: 'Parameter Updated successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });     \r\n       });\r\n  }\r\n  closeDialog(){\r\n    this.dialogRef.close('false');\r\n\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"editTitle\" >\r\n    <h2>Edit Nature Of Incident</h2>\r\n    <mat-form-field appearance=\"legacy\"\r\n    class=\"example-full-width\" style=\"width: 498px;\">\r\n    <!-- <mat-label>Edit PPE</mat-label> -->\r\n    <input matInput  formControlName=\"title\" >\r\n    </mat-form-field>\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-2 offset-8 \">\r\n            <button mat-raised-button (click)=\"closeDialog()\">Close</button>\r\n        </div>\r\n        <div class=\"col-sm-2  \">\r\n            <button mat-raised-button  [disabled]=\"!editTitle.valid\"(click)=\"onFormSubmit()\">Update</button>\r\n        </div>\r\n    </div>\r\n</form>   \r\n\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport Swal from 'sweetalert2';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { SetTitleService } from 'src/app/utils/services/set-title.service';\r\nimport { EditResidualRiskLevelComponent } from './edit-residual-risk-level/edit-residual-risk-level.component';\r\nimport { MatSort } from '@angular/material/sort';\r\n\r\n@Component({\r\n  selector: 'app-residual-risk-level',\r\n  templateUrl: './residual-risk-level.component.html',\r\n  styleUrls: ['./residual-risk-level.component.scss']\r\n})\r\nexport class ResidualRiskLevelComponent implements OnInit {\r\n  ELEMENT_DATA = [];\r\n  /////////////mat table////////////////\r\n  displayedColumns: string[] = ['index', 'title', 'action'];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  allResidualRiskLevel: any[]=[];\r\n  \r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n  constructor( \r\n    private dialog: MatDialog, \r\n    private setTitle: SetTitleService,\r\n    private logicalFormInfoService: LogicalFormInfoService,\r\n    private spinner: NgxSpinnerService\r\n    ) { }\r\n  ngOnInit(): void {\r\n    this.setTitle.setTitle('WHS-ResidualRiskLevel Info');\r\n    this.getAllResidualRiskLevel()\r\n  }\r\n  getAllResidualRiskLevel(){\r\n    this.logicalFormInfoService.getAllResidual().subscribe((res:any)=> {\r\n      console.log(res)\r\n      let data = res.data;\r\n      data.forEach((element, index) => {\r\n        element.index = index + 1; //adding index\r\n      });\r\n\r\n      this.ELEMENT_DATA = data;\r\n      this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n      console.log('this.ELEMENT_DATA', this.ELEMENT_DATA);\r\n   })\r\n  }\r\n \r\n  edit(element) {\r\n    const dialogRef = this.dialog.open(EditResidualRiskLevelComponent, {\r\n      width: \"550px\",\r\n     // height:'50%',\r\n      data: element,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if ((result == \"true\")) {\r\n        this.getAllResidualRiskLevel()\r\n      }\r\n      console.log(\"The dialog was closed\");\r\n    });\r\n  }\r\n  delete(item) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: `Do you want to delete \"${item.title}\"?`,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#00B96F',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Delete!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        console.log(result)\r\n        // this.model.attributes.splice(i,1);\r\n        this.spinner.show()\r\n        this.logicalFormInfoService.deleteResidual(item._id).subscribe((res => {\r\n        this.getAllResidualRiskLevel()\r\n        this.spinner.hide()\r\n        }))\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","\r\n<div class=\"col ml-2 pt-1\">\r\n    <h1>\r\n     Residual Risk Level Information List\r\n    </h1>\r\n  </div>\r\n  <div class=\"col ml-2 mb-2\">\r\n  \r\n    <button type=\"button\"  [routerLink]=\"['/admin/siteInfo/addResidual']\" \r\n      class=\"btn btn-outline-primary  mr-2 float-right\"><i  class=\"fas fa-plus\"></i> Add ResidualLevel\r\n    </button>\r\n  </div>\r\n  <div >\r\n    <table mat-table [dataSource]=\"dataSource\" matSort>\r\n  \r\n      <!-- Position Column -->\r\n      <ng-container matColumnDef=\"index\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> No. </th>\r\n        <td mat-cell *matCellDef=\"let element,let i = index\">{{element.index}}</td>\r\n      </ng-container>\r\n  \r\n      <!-- Name Column -->\r\n  \r\n      <!-- Name Column -->\r\n      <ng-container matColumnDef=\"title\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Residual-Risklevel Name </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.title}} </td>\r\n      </ng-container>\r\n  \r\n<ng-container matColumnDef=\"action\">\r\n  <th mat-header-cell *matHeaderCellDef> Action </th>\r\n  <td mat-cell *matCellDef=\"let element\"> \r\n    <!-- <i class=\"fas fa-pencil-alt mr-2 \" (click)=\"edit(element)\" title=\"edit\"></i>  <i  class=\"fas fa-trash ml-2 \" (click)=\"delete(element)\" title=\"delete\"></i>  -->\r\n    <button mat-icon-button class=\"mr-2\" aria-label=\"Example icon button with a delete icon\" (click)=\"edit(element)\">\r\n      <mat-icon >edit</mat-icon>\r\n    </button>\r\n    <button mat-icon-button aria-label=\"Example icon button with a delete icon\" (click)=\"delete(element)\">\r\n      <mat-icon >delete</mat-icon>\r\n    </button>\r\n  </td>\r\n</ng-container>\r\n<!--      \r\n  \r\n      <ng-container matColumnDef=\"edit\">\r\n        <th mat-header-cell *matHeaderCellDef> Edit </th>\r\n        <td mat-cell *matCellDef=\"let element\" (click)=\"edit(element)\"> <i class=\"fas fa-pencil-alt \"></i>\r\n        </td>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"delete\">\r\n        <th mat-header-cell *matHeaderCellDef> Delete </th>\r\n        <td mat-cell *matCellDef=\"let element\" (click)=\"delete(element)\"> <i class=\"fas fa-trash \"></i>\r\n        </td>\r\n      </ng-container> -->\r\n  \r\n  \r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n    </table>\r\n  \r\n    <mat-paginator [pageSizeOptions]=\"[20]\" showFirstLastButtons aria-label=\"Select page of periodic elements\">\r\n    </mat-paginator>\r\n  </div>","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\n@Component({\r\n  selector: 'app-add-edit-proj-mang',\r\n  templateUrl: './add-edit-proj-mang.component.html',\r\n  styleUrls: ['./add-edit-proj-mang.component.scss']\r\n})\r\nexport class AddEditProjMangComponent implements OnInit {\r\n\r\n  editTitle: FormGroup;\r\n  dataRec: any;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    public dialogRef: MatDialogRef<AddEditProjMangComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.dataRec = data;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.editTitle = this.fb.group({\r\n      title: [this.dataRec.title, Validators.required],\r\n    });\r\n  }\r\n  onFormSubmit() {\r\n    let data = {\r\n      title: this.editTitle.get('title').value,\r\n      componentId: this.dataRec.componentId,\r\n    };\r\n    this.logicalFormInfo\r\n      .updateProjectMang(data, this.dataRec._id)\r\n      .subscribe((resData) => {\r\n        console.log('projectManager', resData);\r\n\r\n        this.dialogRef.close('true');\r\n        Swal.fire({\r\n          title: 'Project Manager Edited successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });\r\n      });\r\n  }\r\n  addForm() {\r\n    let data = {\r\n      title: this.editTitle.get('title').value,\r\n    };\r\n    this.logicalFormInfo.addProjectMang(data).subscribe((resData) => {\r\n      console.log('projectManager', resData);\r\n\r\n      this.dialogRef.close('true');\r\n    \r\n        Swal.fire({\r\n          title: 'Project Manager added successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });\r\n      \r\n    });\r\n  }\r\n  closeDialog() {\r\n    this.dialogRef.close('false');\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"editTitle\" >\r\n    <h2 *ngIf=\"!dataRec\">Add Project Manager</h2>\r\n    <h2 *ngIf=\"dataRec\">Edit Project Manager</h2>\r\n    <mat-form-field appearance=\"legacy\"\r\n    class=\"example-full-width\" style=\"width: 498px;\">\r\n    <!-- <mat-label >Add Licence Category</mat-label> -->\r\n    <!-- <mat-label >Edit Licence Category</mat-label> -->\r\n    <input matInput  formControlName=\"title\">\r\n    </mat-form-field>\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-2 offset-8 \">\r\n            <button mat-raised-button (click)=\"closeDialog()\">Close</button>\r\n        </div>\r\n        <div class=\"col-sm-2  \">\r\n            <button mat-raised-button *ngIf=\"dataRec\" [disabled]=\"!editTitle.valid\"(click)=\"onFormSubmit()\">Update</button>\r\n            <button mat-raised-button  *ngIf=\"!dataRec\"  [disabled]=\"!editTitle.valid\"(click)=\"addForm()\">Add</button>\r\n        </div>\r\n    </div>\r\n</form>   \r\n\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport Swal from 'sweetalert2';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { SetTitleService } from 'src/app/utils/services/set-title.service';\r\nimport { EditStaffComponent } from './edit-staff/edit-staff.component';\r\nimport { MatSort } from '@angular/material/sort';\r\n\r\n@Component({\r\n  selector: 'app-staff',\r\n  templateUrl: './staff.component.html',\r\n  styleUrls: ['./staff.component.scss']\r\n})\r\nexport class StaffComponent implements OnInit {\r\n\r\n\r\n  ELEMENT_DATA = [];\r\n  /////////////mat table////////////////\r\n  displayedColumns: string[] = ['index', 'title', 'action'];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  allStaff: any[]=[];\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n  constructor( \r\n    private dialog: MatDialog, \r\n    private setTitle: SetTitleService,\r\n    private logicalFormInfoService: LogicalFormInfoService,\r\n    private spinner: NgxSpinnerService\r\n    ) { }\r\n  ngOnInit(): void {\r\n    this.setTitle.setTitle('WHS-Staff Info');\r\n    this.getAllStaff()\r\n  }\r\n  getAllStaff(){\r\n    this.logicalFormInfoService.getAllStaff().subscribe((res:any)=> {\r\n      console.log(res)\r\n      let data = res.data;\r\n      data.forEach((element, index) => {\r\n        element.index = index + 1; //adding index\r\n      });\r\n\r\n      this.ELEMENT_DATA = data;\r\n      this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n      console.log('this.ELEMENT_DATA', this.ELEMENT_DATA);\r\n   })\r\n  }\r\n \r\n  edit(element) {\r\n    const dialogRef = this.dialog.open(EditStaffComponent, {\r\n      width: \"550px\",\r\n     // height:'50%',\r\n      data: element,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if ((result == \"true\")) {\r\n        this.getAllStaff()\r\n      }\r\n      console.log(\"The dialog was closed\");\r\n    });\r\n  }\r\n  delete(item) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: `Do you want to delete \"${item.title}\"?`,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#00B96F',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Delete!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        console.log(result)\r\n        // this.model.attributes.splice(i,1);\r\n        this.spinner.show()\r\n        this.logicalFormInfoService.deleteStaff(item._id).subscribe((res => {\r\n        this.getAllStaff()\r\n        this.spinner.hide()\r\n        }))\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n\r\n","<div class=\"col ml-2 pt-1\">\r\n    <h1>\r\n      Staff Information List\r\n    </h1>\r\n  </div>\r\n  <div>\r\n  \r\n    <button type=\"button\"  [routerLink]=\"['/admin/siteInfo/addStaff']\" \r\n      class=\"btn btn-outline-primary  mr-2 float-right\"><i  class=\"fas fa-plus\"></i> Add Staff\r\n    </button>\r\n  </div>\r\n  <div >\r\n    <table mat-table [dataSource]=\"dataSource\" matSort>\r\n  \r\n      <!-- Position Column -->\r\n      <ng-container matColumnDef=\"index\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> No. </th>\r\n        <td mat-cell *matCellDef=\"let element,let i = index\">{{element.index}}</td>\r\n      </ng-container>\r\n  \r\n      <!-- Name Column -->\r\n  \r\n      <!-- Name Column -->\r\n      <ng-container matColumnDef=\"title\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Staff Name </th>\r\n        <td mat-cell *matCellDef=\"let element\"><span class=\"flex-start\"> {{element.title}}</span> </td>\r\n      </ng-container>\r\n  \r\n     \r\n<ng-container matColumnDef=\"action\">\r\n  <th mat-header-cell *matHeaderCellDef> Action </th>\r\n  <td mat-cell *matCellDef=\"let element\"> \r\n    <!-- <i class=\"fas fa-pencil-alt mr-2 \" (click)=\"edit(element)\" title=\"edit\"></i>  <i  class=\"fas fa-trash ml-2 \" (click)=\"delete(element)\" title=\"delete\"></i>  -->\r\n    <button mat-icon-button class=\"mr-2\" aria-label=\"Example icon button with a delete icon\" (click)=\"edit(element)\">\r\n      <mat-icon >edit</mat-icon>\r\n    </button>\r\n    <button mat-icon-button aria-label=\"Example icon button with a delete icon\" (click)=\"delete(element)\">\r\n      <mat-icon >delete</mat-icon>\r\n    </button>\r\n  </td>\r\n</ng-container>\r\n     \r\n<!--   \r\n      <ng-container matColumnDef=\"edit\">\r\n        <th mat-header-cell *matHeaderCellDef> Edit </th>\r\n        <td mat-cell *matCellDef=\"let element\" (click)=\"edit(element)\"> <i class=\"fas fa-pencil-alt \"></i>\r\n        </td>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"delete\">\r\n        <th mat-header-cell *matHeaderCellDef> Delete </th>\r\n        <td mat-cell *matCellDef=\"let element\" (click)=\"delete(element)\"> <i class=\"fas fa-trash \"></i>\r\n        </td>\r\n      </ng-container> -->\r\n  \r\n  \r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n    </table>\r\n  \r\n    <mat-paginator [pageSizeOptions]=\"[20]\" showFirstLastButtons aria-label=\"Select page of periodic elements\">\r\n    </mat-paginator>\r\n  </div>","import Swal from 'sweetalert2';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { SetTitleService } from 'src/app/utils/services/set-title.service';\r\nimport { AddSiteInspectionTopicComponent } from '../site-inspection-topic/add-site-inspection-topic/add-site-inspection-topic.component';\r\nimport { EditSiteInspectionTopicComponent } from '../site-inspection-topic/edit-site-inspection-topic/edit-site-inspection-topic.component';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-site-inspection-topic',\r\n  templateUrl: './site-inspection-topic.component.html',\r\n  styleUrls: ['./site-inspection-topic.component.scss'],\r\n})\r\nexport class SiteInspectionTopicComponent implements OnInit {\r\n  ELEMENT_DATA = [];\r\n  displayedColumns: string[] = [\r\n    'index',\r\n    'topic',\r\n    'item',\r\n    'getaction',\r\n    'action',\r\n  ];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  id: any;\r\n  constructor(\r\n    private setTitle: SetTitleService,\r\n    private dialog: MatDialog,\r\n    private logicalFormInfoService: LogicalFormInfoService,\r\n    private activatedRoute: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.setTitle.setTitle('Add Site Inspection Topic');\r\n    this.id = this.activatedRoute.snapshot.params.id;\r\n    this.getAllTopic();\r\n  }\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  getAllTopic() {\r\n    this.logicalFormInfoService\r\n      .getTopicByCategoryID(this.id)\r\n      .subscribe((res: any) => {\r\n        console.log(res);\r\n        this.dataSource.data = res.data[0].topic;\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n      });\r\n  }\r\n  openDialog(id) {\r\n    let dialogRef = this.dialog.open(AddSiteInspectionTopicComponent, {\r\n      height: '600px',\r\n      width: '700px',\r\n\r\n      data: {\r\n        action: 'new',\r\n        userId: id,\r\n      },\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result === 'ok') {\r\n        this.getAllTopic();\r\n      }\r\n      console.log('CustomerInfoComponent -> openDialog -> result', result);\r\n\r\n      console.log('The dialog was closed');\r\n    });\r\n  }\r\n  edit(element) {\r\n    console.log(element);\r\n    const dialogRef = this.dialog.open(EditSiteInspectionTopicComponent, {\r\n      height: '700px',\r\n      width: '750px',\r\n\r\n      // height:'400px',\r\n      data: {\r\n        element: element,\r\n        categoryId: this.id,\r\n      },\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result == 'true') {\r\n        this.getAllTopic();\r\n      }\r\n      console.log('The dialog was closed');\r\n    });\r\n  }\r\n  delete(item) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: `Do you want to delete \"${item.topic}\"?`,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#00B96F',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Delete!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.logicalFormInfoService\r\n          .deleteSiteInspectionTopic(item._id)\r\n          .subscribe((res) => {\r\n            Swal.fire({\r\n              title: 'Deleted successfully',\r\n              showConfirmButton: false,\r\n              timer: 1200,\r\n            });\r\n            console.log('deleted res', res);\r\n            this.getAllTopic();\r\n          });\r\n      }\r\n    });\r\n  }\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n}\r\n","<div\r\n  class=\"btn btn-outline-primary\"\r\n  [routerLink]=\"['/admin/siteInfo/siteinspectioncategory/']\"\r\n>\r\n  <i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\r\n</div>\r\n<div class=\"col ml-2 pt-3\">\r\n  <h1>Topic List</h1>\r\n</div>\r\n<div class=\"col ml-2 mb-2\">\r\n  <button\r\n    [routerLink]=\"['/admin/siteInfo/addsiteinspectiontopic/' + id]\"\r\n    type=\"button\"\r\n    class=\"btn btn-outline-primary mt-1 mr-2 float-right\"\r\n  >\r\n    <i class=\"fas fa-plus\"></i> Add Topic\r\n  </button>\r\n</div>\r\n<div class=\"col-6\">\r\n  <mat-form-field>\r\n    <input matInput #input placeholder=\"Search\" (keyup)=\"applyFilter($event)\" />\r\n  </mat-form-field>\r\n</div>\r\n<div class=\"\">\r\n  <table mat-table [dataSource]=\"dataSource\" matSort>\r\n    <!-- Position Column -->\r\n    <ng-container matColumnDef=\"index\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>No.</th>\r\n      <td mat-cell *matCellDef=\"let element; let i = index\">{{ i + 1 }}</td>\r\n    </ng-container>\r\n\r\n    <!-- Name Column -->\r\n\r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"topic\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Topic</th>\r\n      <td mat-cell *matCellDef=\"let element\">\r\n        <span class=\"flex-start\">{{ element.topic }}</span>\r\n      </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"item\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Item</th>\r\n      <td mat-cell *matCellDef=\"let element\">\r\n        <span class=\"flex-start\">{{ element.item }}</span>\r\n      </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"getaction\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Get Action</th>\r\n      <td mat-cell *matCellDef=\"let element\">\r\n        <span class=\"flex-start\">{{ element.action }}</span>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"action\">\r\n      <th mat-header-cell *matHeaderCellDef>Action</th>\r\n      <td mat-cell *matCellDef=\"let element\">\r\n        <button\r\n          mat-icon-button\r\n          class=\"mr-2\"\r\n          aria-label=\"Example icon button with a delete icon\"\r\n          (click)=\"edit(element)\"\r\n        >\r\n          <mat-icon>edit</mat-icon>\r\n        </button>\r\n        <button\r\n          mat-icon-button\r\n          aria-label=\"Example icon button with a delete icon\"\r\n          (click)=\"delete(element)\"\r\n        >\r\n          <mat-icon>delete</mat-icon>\r\n        </button>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n    <tr class=\"mat-row\" *matNoDataRow>\r\n      <td class=\"mat-cell\" colspan=\"4\">Data Not Found \"{{ input.value }}\"</td>\r\n    </tr>\r\n  </table>\r\n\r\n  <mat-paginator\r\n    [pageSizeOptions]=\"[20]\"\r\n    showFirstLastButtons\r\n    aria-label=\"Select page of periodic elements\"\r\n  >\r\n  </mat-paginator>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\n\r\n@Component({\r\n  selector: 'app-add-root-cause-of-incident',\r\n  templateUrl: './add-root-cause-of-incident.component.html',\r\n  styleUrls: ['./add-root-cause-of-incident.component.scss']\r\n})\r\nexport class AddRootCauseOfIncidentComponent implements OnInit {\r\n  rootformgp!: FormGroup;\r\n  formData: any;\r\n  numberOfLineBreaks:any;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private router: Router,\r\n    private logicalFormInfo:LogicalFormInfoService\r\n  ) { \r\n    this.rootformgp=this.fb.group({\r\n     // mode:\"JobTask\",\r\n      arrObj: this.fb.array([]),\r\n      \r\n    });\r\n    \r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.addAction();\r\n    \r\n  }\r\n  addAction() {\r\n    {\r\n      this.add().push(this.newAction());\r\n    }\r\n  }\r\n  add(): FormArray {\r\n    return this.rootformgp.get('arrObj') as FormArray;\r\n  }\r\n  newAction(): FormGroup {\r\n    return this.fb.group({\r\n     \r\n      title: ['', Validators.required],\r\n    });\r\n  }\r\n  \r\n  removeSafetyModule(i) {\r\n    const item = <FormArray>this.rootformgp.controls['arrObj'];\r\n    if (item.length > 1) {\r\n      item.removeAt(i);\r\n    \r\n    }\r\n  }\r\n  onFormSubmit() {\r\n    console.log(this.rootformgp.value);\r\n    let data={\r\n      arrObj:this.rootformgp.get('arrObj').value\r\n    }\r\n    this.logicalFormInfo.addMultipleRootCause(data).subscribe((data) => {\r\n      console.log('nature=>', data);\r\n      this.router.navigate(['/admin/siteInfo/rootCauseOfIncident']);      \r\n    },(err)=>{console.error(err);} \r\n  \r\n    );\r\n    \r\n  }\r\n calcHeight(value) {\r\n    this.numberOfLineBreaks = (value.match(/\\n/g) || []).length+1;\r\n    console.log(\"numberOfLineBreaks\",this.numberOfLineBreaks)\r\n }\r\n\r\n\r\n}\r\n","<div class=\"btn btn-outline-primary\" [routerLink]=\"['/admin/siteInfo/rootCauseOfIncident']\">\r\n    <i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\r\n  </div>\r\n  <div class=\"container px-4 py-4 bg-white\">\r\n    <form [formGroup]=\"rootformgp\" (ngSubmit)=\"onFormSubmit()\">\r\n      <h2 class=\"text-center\">Add Root Cause Of Incdent</h2>\r\n      <br />\r\n      <hr />\r\n      <ng-container formArrayName=\"arrObj\">\r\n        <ng-container\r\n          *ngFor=\"let control of add().controls; let i = index\"\r\n          [formGroupName]=\"i\"\r\n        >\r\n          <div class=\"row justify-content-center\">\r\n            <div class=\"mr-1 mt-2\">\r\n              <span \r\n                >{{i+1}}.\r\n              </span>\r\n            </div>\r\n            <div class=\"col-8\">\r\n              <textarea autosize\r\n               (keyup)=\" calcHeight($event.target.value)\"\r\n               [rows]=\"numberOfLineBreaks\"\r\n                type=\"text\"\r\n                formControlName=\"title\"\r\n                class=\"form-control sign\"\r\n                id=\"name\"\r\n              ></textarea>\r\n            </div>\r\n            <div class=\"col-1 mt-2\">\r\n              <span class=\"material-icons\" (click)=\"addAction()\"\r\n                >add_circle_outline\r\n              </span>\r\n            </div>\r\n            <div class=\"col-1 mt-2\">\r\n              <span class=\"material-icons\" (click)=\"removeSafetyModule(i)\">\r\n                remove_circle_outline\r\n              </span>\r\n            </div>\r\n          </div>\r\n  \r\n          <hr />\r\n        </ng-container>\r\n      </ng-container>\r\n      <br />\r\n  \r\n      <div class=\"col-md-2\">\r\n        <button type=\"submit\" class=\"btn btn-primary\"[disabled]=\"rootformgp.get('arrObj').invalid\">Add</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  ","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-whs-manager',\r\n  templateUrl: './edit-whs-manager.component.html',\r\n  styleUrls: ['./edit-whs-manager.component.scss']\r\n})\r\nexport class EditWhsManagerComponent implements OnInit {\r\n  editTitle: FormGroup;\r\n  dataRec: any;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    public dialogRef: MatDialogRef<EditWhsManagerComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.dataRec = data;\r\n  }\r\n  ngOnInit(): void {\r\n    console.log(\"this.dataRec\",this.dataRec);\r\n    \r\n    this.editTitle = this.fb.group({\r\n      name: [this.dataRec.name, Validators.required],\r\n      email: [this.dataRec.email, Validators.required],\r\n    });\r\n  }\r\n  onFormSubmit() {\r\n     \r\n    let data={\r\n      name :this.editTitle.get('name').value,\r\n    email:this.editTitle.get('email').value\r\n    }\r\n    this.logicalFormInfo\r\n      .editWHSManager(this.dataRec._id,data)\r\n      .subscribe((resData) => {\r\n        console.log('submodulesData', resData);\r\n\r\n        this.dialogRef.close('true');\r\n        Swal.fire({\r\n          title: 'Parameter Edited successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });  \r\n          });\r\n  }\r\n  closeDialog(){\r\n    this.dialogRef.close('false');\r\n\r\n  }\r\n}\r\n\r\n","\r\n<form [formGroup]=\"editTitle\" >\r\n    <h2>Edit WHS Manager</h2>\r\n    <mat-form-field appearance=\"legacy\"\r\n    class=\"example-full-width\" style=\"width: 498px;\">\r\n\r\n    <input matInput  formControlName=\"name\" >\r\n    </mat-form-field>\r\n    <mat-form-field appearance=\"legacy\"\r\n    class=\"example-full-width\" style=\"width: 498px;\">\r\n \r\n    <input matInput   formControlName=\"email\" >\r\n    </mat-form-field>\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-2 offset-8 \">\r\n            <button mat-raised-button (click)=\"closeDialog()\">Close</button>\r\n        </div>\r\n        <div class=\"col-sm-2  \">\r\n            <button mat-raised-button  [disabled]=\"!editTitle.valid\"(click)=\"onFormSubmit()\">Update</button>\r\n        </div>\r\n    </div>\r\n</form>   ","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-task',\r\n  templateUrl: './edit-task.component.html',\r\n  styleUrls: ['./edit-task.component.scss'],\r\n})\r\nexport class EditTaskComponent implements OnInit {\r\n  editTitle: FormGroup;\r\n  dataRec: any;\r\n\r\n  categories=[];\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    public dialogRef: MatDialogRef<EditTaskComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.dataRec = data;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    console.log(\"this.dataRec\",this.dataRec);\r\n    \r\n    this.editTitle = this.fb.group({\r\n      title: [this.dataRec.title, Validators.required],\r\n      tradeCategoryId:[this.dataRec.tradeCategoryId._id, Validators.required],\r\n    });\r\n    this.getAllLicenceCat() \r\n  }\r\n  onFormSubmit() {\r\n     \r\n    let data={\r\n      title :this.editTitle.get('title').value,\r\n      // PPE:this.dataRec.PPE,\r\n      // codeOfPractice:this.dataRec.codeOfPractice,\r\n      // licence:this.dataRec.licence,\r\n      // risk:this.dataRec.risk,\r\n      tradeCategoryId:this.editTitle.get('tradeCategoryId').value,\r\n    }\r\n    this.logicalFormInfo\r\n      .updateJobTask(data, this.dataRec._id)\r\n      .subscribe((resData) => {\r\n        console.log('submodulesData', resData);\r\n\r\n        this.dialogRef.close('true');\r\n        Swal.fire({\r\n          title: 'Parameter Edited successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });  \r\n          });\r\n  }\r\n  closeDialog(){\r\n    this.dialogRef.close('false');\r\n\r\n  }\r\n  getAllLicenceCat() {\r\n    this.logicalFormInfo.getAllLicenceCat().subscribe((res) => {\r\n      console.log('getAllLicenceCat=>', res);\r\n      this.categories = res.data;\r\n      console.log('categories=>', res.data);\r\n    });\r\n \r\n  }\r\n}\r\n","<form [formGroup]=\"editTitle\" >\r\n    <h2>Edit Job Task</h2>\r\n    <div class=\"row\">\r\n        <div class=\"col-6\">\r\n    <mat-form-field appearance=\"legacy\"\r\n    class=\"example-full-width\" style=\"width: 208px;\">\r\n    <!-- <mat-label>Edit Job Task</mat-label> -->\r\n    <input matInput  formControlName=\"title\" >\r\n    \r\n    </mat-form-field>\r\n    </div>\r\n    <div class=\"col-6\">\r\n        <select\r\n          class=\"form-select form-control\"\r\n          aria-label=\"Default select example\"\r\n          formControlName=\"tradeCategoryId\"\r\n        >\r\n       \r\n          <option *ngFor=\"let item of categories\" [value]=\"item._id\">{{item.title}}</option>\r\n      \r\n        </select>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-2 offset-8 \">\r\n            <button mat-raised-button (click)=\"closeDialog()\">Close</button>\r\n        </div>\r\n        <div class=\"col-sm-2  \">\r\n            <button mat-raised-button  [disabled]=\"!editTitle.valid\"(click)=\"onFormSubmit()\">Update</button>\r\n        </div>\r\n    </div>\r\n</form>   \r\n\r\n","import { SnackbarService } from './../../services/snackbar.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { AfterViewInit, ViewChild } from '@angular/core';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { SetTitleService } from 'src/app/utils/services/set-title.service';\r\nimport { EditHazardComponent } from './edit-hazard/edit-hazard.component';\r\nimport { MatSort } from '@angular/material/sort';\r\n@Component({\r\n  selector: 'app-identify-hazards',\r\n  templateUrl: './identify-hazards.component.html',\r\n  styleUrls: ['./identify-hazards.component.scss']\r\n})\r\nexport class IdentifyHazardsComponent implements OnInit {\r\n\r\n  mode: any;\r\n  jobTaskData: any = [];\r\n  ELEMENT_DATA = [];\r\n  /////////////mat table////////////////\r\n  displayedColumns: string[] = ['index', 'title','action'];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n  /////////////mat table end////////////////\r\n\r\n  constructor(\r\n    private snack: SnackbarService,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    private dialog:MatDialog,\r\n    private setTitle:SetTitleService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getAllHazards();\r\n    this.setTitle.setTitle('WHS-PPE List');\r\n\r\n  }\r\n\r\n  getAllHazards() {\r\n    this.logicalFormInfo.getAllHazards().subscribe((res:any) => {\r\n      console.log('getAllHazards=>', res);\r\n      let data = res.data;\r\n      data.forEach((element, index) => {\r\n        element.index = index + 1; //adding index\r\n      });\r\n\r\n      this.ELEMENT_DATA = data;\r\n      this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n      console.log('this.ELEMENT_DATA', this.ELEMENT_DATA);\r\n\r\n      //  this.task = res.data.subComponents;\r\n    });\r\n  }\r\n  edit(element){\r\n    const dialogRef = this.dialog.open(EditHazardComponent, {\r\n      width: \"550px\",\r\n      data: element,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if ((result == \"true\")) {\r\n        this.getAllHazards();\r\n      }\r\n      console.log(\"The dialog was closed\");\r\n    });\r\n  }\r\n  delete(item) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: `Do you want to delete \"${item.title}\"?`,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#00B96F',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Delete!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.logicalFormInfo\r\n        .deleteHazards(item._id)\r\n        .subscribe((res) => {\r\n          Swal.fire({\r\n            title: 'Parameter Deleted successfully',\r\n            showConfirmButton: false,\r\n            timer: 1200,\r\n          });\r\n          console.log('deleted res', res);\r\n          this.getAllHazards();\r\n            \r\n        });\r\n      }\r\n    });\r\n  }\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  copySuccess(){\r\n    console.log('copy successfull')\r\n    this.snack.openSnackBar('Copied to clipboard');\r\n  }\r\n}\r\n","<div class=\"col ml-2 pt-3\">\r\n<h1> Identify Hazards List</h1>\r\n</div>\r\n    <div class=\"col ml-2 mb-2\">\r\n      \r\n      <button  class=\"btn btn-outline-primary mt-1 mr-2 float-right\"[routerLink]=\"['/admin/siteInfo/addHazards']\">\r\n        <i class=\"fas fa-folder-plus mr-2\"></i>Add Hazard \r\n      </button>\r\n    </div>\r\n    <div class=\"col-6\">\r\n      <mat-form-field>\r\n        <input\r\n          matInput\r\n          #input\r\n          placeholder=\"Search\"\r\n          (keyup)=\"applyFilter($event)\"\r\n        />\r\n      </mat-form-field>\r\n    </div>\r\n    <div class=\"\">\r\n      <table mat-table [dataSource]=\"dataSource\" matSort>\r\n    \r\n        <!-- Position Column -->\r\n        <ng-container matColumnDef=\"index\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> No. </th>\r\n          <td mat-cell *matCellDef=\"let element\">{{element.index}}</td>\r\n        </ng-container>\r\n    \r\n        <!-- Name Column -->\r\n       \r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"title\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\r\n      <td mat-cell *matCellDef=\"let element\" [cdkCopyToClipboard]=\"element.title.toString()\" (cdkCopyToClipboardCopied)=\"copySuccess()\" [matTooltip]=\"element.title\"><span class=\"flex-start\"> {{element.title.length > 90? element.title.slice(0,90)+ '...' :element.title }}</span> </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"action\">\r\n      <th mat-header-cell *matHeaderCellDef style=\"width: 10%;\"> Action </th>\r\n      <td mat-cell *matCellDef=\"let element\"> \r\n        <!-- <i class=\"fas fa-pencil-alt mr-2\" (click)=\"edit(element)\" title=\"edit\"></i>  <i  class=\"fas fa-trash ml-2 \" (click)=\"delete(element)\" title=\"delete\"></i>  -->\r\n        <button mat-icon-button class=\"mr-2\" aria-label=\"Example icon button with a delete icon\">\r\n          <mat-icon (click)=\"edit(element)\">edit</mat-icon>\r\n        </button>\r\n        <button mat-icon-button aria-label=\"Example icon button with a delete icon\">\r\n          <mat-icon (click)=\"delete(element)\">delete</mat-icon>\r\n        </button>\r\n      </td>\r\n    </ng-container>\r\n    <!-- <ng-container matColumnDef=\"edit\">\r\n        <th mat-header-cell *matHeaderCellDef> Edit </th>\r\n        <td mat-cell *matCellDef=\"let element\"(click)=\"edit(element)\"> <i class=\"fas fa-pencil-alt \"></i> \r\n        </td>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"delete\">\r\n        <th mat-header-cell *matHeaderCellDef> Delete </th>\r\n        <td mat-cell *matCellDef=\"let element\"(click)=\"delete(element)\"> <i class=\"fas fa-trash \"></i> \r\n        </td>\r\n      </ng-container> -->\r\n    \r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n        <tr class=\"mat-row\" *matNoDataRow>\r\n          <td class=\"mat-cell\" colspan=\"4\">Data Not  Found  \"{{input.value}}\"</td>\r\n        </tr>\r\n      </table>\r\n    \r\n      <mat-paginator [pageSizeOptions]=\"[20]\"\r\n                     showFirstLastButtons \r\n                     aria-label=\"Select page of periodic elements\">\r\n      </mat-paginator>\r\n    </div>\r\n    \r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\n@Component({\r\n  selector: 'app-edit-licence-cat',\r\n  templateUrl: './edit-licence-cat.component.html',\r\n  styleUrls: ['./edit-licence-cat.component.scss'],\r\n})\r\nexport class EditLicenceCatComponent implements OnInit {\r\n  editTitle: FormGroup;\r\n  dataRec: any;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    public dialogRef: MatDialogRef<EditLicenceCatComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.dataRec = data;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.editTitle = this.fb.group({\r\n      title: [this.dataRec.title, Validators.required],\r\n    });\r\n  }\r\n  onFormSubmit() {\r\n    let data = {\r\n      title: this.editTitle.get('title').value,\r\n      componentId: this.dataRec.componentId,\r\n    };\r\n    this.logicalFormInfo\r\n      .updateLicenceCat(data, this.dataRec._id)\r\n      .subscribe((resData) => {\r\n        console.log('submodulesData', resData);\r\n\r\n        this.dialogRef.close('true');\r\n        Swal.fire({\r\n          title: 'Category Edited successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });\r\n      });\r\n  }\r\n  addForm() {\r\n    let data = {\r\n      title: this.editTitle.get('title').value,\r\n    };\r\n    this.logicalFormInfo.addLicenceCat(data).subscribe((resData) => {\r\n      console.log('category', resData);\r\n\r\n      this.dialogRef.close('true');\r\n      if (this.dataRec) {\r\n        Swal.fire({\r\n          title: 'Category Edited successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });\r\n      } else {\r\n        Swal.fire({\r\n          title: 'Category Added successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });\r\n      }\r\n    });\r\n  }\r\n  closeDialog() {\r\n    this.dialogRef.close('false');\r\n  }\r\n}\r\n","<form [formGroup]=\"editTitle\" >\r\n    <h2 *ngIf=\"!dataRec\">Add Licence Category</h2>\r\n    <h2 *ngIf=\"dataRec\">Edit Licence Category</h2>\r\n    <mat-form-field appearance=\"legacy\"\r\n    class=\"example-full-width\" style=\"width: 498px;\">\r\n    <!-- <mat-label >Add Licence Category</mat-label> -->\r\n    <!-- <mat-label >Edit Licence Category</mat-label> -->\r\n    <input matInput  formControlName=\"title\" >\r\n    </mat-form-field>\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-2 offset-8 \">\r\n            <button mat-raised-button (click)=\"closeDialog()\">Close</button>\r\n        </div>\r\n        <div class=\"col-sm-2  \">\r\n            <button mat-raised-button *ngIf=\"dataRec\" [disabled]=\"!editTitle.valid\"(click)=\"onFormSubmit()\">Update</button>\r\n            <button mat-raised-button  *ngIf=\"!dataRec\"  [disabled]=\"!editTitle.valid\"(click)=\"addForm()\">Add</button>\r\n        </div>\r\n    </div>\r\n</form>   \r\n\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormArray, FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\n@Component({\r\n  selector: 'app-edit-cont-act',\r\n  templateUrl: './edit-cont-act.component.html',\r\n  styleUrls: ['./edit-cont-act.component.scss'],\r\n})\r\nexport class EditContActComponent implements OnInit {\r\n  editTitle: FormGroup;\r\n  dataRec: any;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    public dialogRef: MatDialogRef<EditContActComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.dataRec = data;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    console.log('this.dataRec', this.dataRec);\r\n\r\n    this.editTitle = this.fb.group({\r\n      title: [this.dataRec.title, Validators.required],\r\n    });\r\n  }\r\n  onFormSubmit() {\r\n    let data = {\r\n      title: this.editTitle.get('title').value,\r\n    };\r\n    this.logicalFormInfo\r\n      .updateContrlActReq(data, this.dataRec._id)\r\n      .subscribe((resData) => {\r\n        this.dialogRef.close('true');\r\n        Swal.fire({\r\n          title: 'Parameter Edited successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });\r\n      });\r\n  }\r\n  closeDialog() {\r\n    this.dialogRef.close('false');\r\n  }\r\n}\r\n","<form [formGroup]=\"editTitle\" >\r\n    <h2>Edit Control And Action</h2>\r\n    <textarea   autosize \r\n    class=\"form-control sign\"   formControlName=\"title\" ></textarea>\r\n    <br>\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-2 offset-8 \">\r\n            <button mat-raised-button (click)=\"closeDialog()\">Close</button>\r\n        </div>\r\n        <div class=\"col-sm-2  \">\r\n            <button mat-raised-button  [disabled]=\"!editTitle.valid\"(click)=\"onFormSubmit()\">Update</button>\r\n        </div>\r\n    </div>\r\n  </form>   \r\n  \r\n  ","import { Component, OnInit,Inject } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport Swal from 'sweetalert2';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-risk-level',\r\n  templateUrl: './edit-risk-level.component.html',\r\n  styleUrls: ['./edit-risk-level.component.scss']\r\n})\r\nexport class EditRiskLevelComponent implements OnInit {\r\n\r\n  editTitle!: FormGroup;\r\n  dataRec: any;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    public dialogRef: MatDialogRef<EditRiskLevelComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.dataRec = data;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.editTitle = this.fb.group({\r\n      title: [this.dataRec.title, Validators.required],\r\n    });\r\n  }\r\n  onFormSubmit() {\r\n     \r\n    let data={\r\n      title :this.editTitle.get('title').value\r\n    }\r\n    this.logicalFormInfo\r\n      .updateRiskLevel(this.dataRec._id,data)\r\n      .subscribe((resData) => {\r\n        console.log('resData', resData);\r\n\r\n        this.dialogRef.close('true');\r\n        Swal.fire({\r\n          title: 'Risk Level Updated successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });     \r\n       });\r\n  }\r\n  closeDialog(){\r\n    this.dialogRef.close('false');\r\n\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"editTitle\" >\r\n    <h2>Edit RiskLevel</h2>\r\n    <mat-form-field appearance=\"legacy\"\r\n    class=\"example-full-width\" style=\"width: 498px;\">\r\n    <!-- <mat-label>Edit PPE</mat-label> -->\r\n    <input matInput  formControlName=\"title\" >\r\n    </mat-form-field>\r\n    <br>\r\n    \r\n    <div class=\"row\">\r\n        <div class=\"col-sm-2 offset-8 \">\r\n            <button mat-raised-button (click)=\"closeDialog()\">Close</button>\r\n        </div>\r\n        <div class=\"col-sm-2  \">\r\n            <button mat-raised-button  [disabled]=\"!editTitle.valid\"(click)=\"onFormSubmit()\">Update</button>\r\n        </div>\r\n    </div>\r\n</form> ","import  Swal  from 'sweetalert2';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { SetTitleService } from 'src/app/utils/services/set-title.service';\r\nimport { AddingCustComponent } from './adding-cust/adding-cust.component';\r\nimport { EditCustComponent } from './edit-cust/edit-cust.component';\r\nimport { MatSort } from '@angular/material/sort';\r\n\r\n@Component({\r\n  selector: 'app-add-customer',\r\n  templateUrl: './add-customer.component.html',\r\n  styleUrls: ['./add-customer.component.scss']\r\n})\r\nexport class AddCustomerComponent implements OnInit {\r\n  ELEMENT_DATA = [];\r\n  displayedColumns: string[] = ['index', 'customerName','customerContact','customerContactPhone','customerEmail', 'action'];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor( \r\n    private setTitle: SetTitleService, \r\n    private dialog: MatDialog,\r\n    private logicalFormInfoService: LogicalFormInfoService\r\n    ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllCustomers()\r\n    this.setTitle.setTitle('WHS-Add Customer');\r\n    \r\n  }\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  getAllCustomers(){\r\n    this.logicalFormInfoService.getAllCustomer().subscribe((res:any) => {\r\n      console.log(res)\r\n      this.dataSource.data = res.data;\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    })\r\n  }\r\n\r\n  // getAllJobTask() {\r\n  //   // this.logicalFormInfo.getAllJobtask().subscribe((res: any) => {\r\n  //   //   console.log('jobTaskDetails=>', res);\r\n  //   //   // this.jobTaskData = res.data[0].subComponents;\r\n  //   //   let data = res.data\r\n  //   //   data.forEach((element, index) => {\r\n  //   //     element.index = index + 1; //adding index\r\n  //   //   });\r\n\r\n  //   //   this.ELEMENT_DATA = data;\r\n  //   //   this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n  //   //   this.dataSource.paginator = this.paginator;\r\n\r\n  //   //   //  this.task = res.data.subComponents;\r\n  //   // });\r\n\r\n  // }\r\n\r\n  openDialog(id) {\r\n\t\tlet dialogRef = this.dialog.open(AddingCustComponent, {\r\n      height:'600px',\r\n      width:'700px',\r\n    \r\n\t\t\tdata: {\r\n\t\t\t\taction: \"new\",\r\n\t\t\t\tuserId: id,\r\n\t\t\t},\r\n\t\t});\r\n\t\tdialogRef.afterClosed().subscribe((result) => {\r\n      if(result === 'ok' ){\r\n        this.getAllCustomers()\r\n      }\r\n\t\t\tconsole.log(\"CustomerInfoComponent -> openDialog -> result\", result);\r\n\t\t\t\r\n\t\t\tconsole.log(\"The dialog was closed\");\r\n\t\t});\r\n\t}\r\n  edit(element) {\r\n    console.log(element)\r\n    const dialogRef = this.dialog.open(EditCustComponent, {\r\n      height:'700px',\r\n      width:'750px',\r\n  \r\n            // height:'400px',\r\n      data: element,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if ((result == \"true\")) {\r\n        this.getAllCustomers();\r\n      }\r\n      console.log(\"The dialog was closed\");\r\n    });\r\n  }\r\n  delete(item) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: `Do you want to delete \"${item.customerName}\"?`,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#00B96F',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Delete!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.logicalFormInfoService\r\n          .deleteCustomer(item._id)\r\n          .subscribe((res) => {\r\n            Swal.fire({\r\n              title: 'Deleted successfully',\r\n              showConfirmButton: false,\r\n              timer: 1200,\r\n            }); console.log('deleted res', res);\r\n            this.getAllCustomers();\r\n\r\n          });\r\n      }\r\n    });\r\n  }\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n}\r\n","\r\n \r\n<div class=\"col ml-2 pt-3\">\r\n<h1>\r\n  Customer List\r\n\r\n\r\n</h1>\r\n</div>\r\n<div class=\"col ml-2 mb-2\">\r\n  \r\n  <button [routerLink]=\"['/admin/siteInfo/addingCustomer']\"  type=\"button\" class=\"btn btn-outline-primary mt-1 mr-2 float-right\"><i  class=\"fas fa-plus\"></i> Add </button>\r\n</div>\r\n<div class=\"col-6\">\r\n  <mat-form-field>\r\n    <input\r\n      matInput\r\n      #input\r\n      placeholder=\"Search\"\r\n      (keyup)=\"applyFilter($event)\"\r\n    />\r\n  </mat-form-field>\r\n</div>\r\n<div class=\"\">\r\n  <table mat-table [dataSource]=\"dataSource\" matSort>\r\n\r\n    <!-- Position Column -->\r\n    <ng-container matColumnDef=\"index\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> No. </th>\r\n      <td mat-cell *matCellDef=\"let element,let i = index\">{{i+1}}</td>\r\n    </ng-container>\r\n\r\n    <!-- Name Column -->\r\n   \r\n<!-- Name Column -->\r\n<ng-container matColumnDef=\"customerName\">\r\n  <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\r\n  <td mat-cell *matCellDef=\"let element\"> <span class=\"flex-start\">{{element.customerName}}</span>  </td>\r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"customerContact\">\r\n  <th mat-header-cell *matHeaderCellDef mat-sort-header> Contact </th>\r\n  <td mat-cell *matCellDef=\"let element\"><span class=\"flex-start\"> {{element.customerContact}}</span> </td>\r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"customerContactPhone\">\r\n  <th mat-header-cell *matHeaderCellDef mat-sort-header> Contact Phone </th>\r\n  <td mat-cell *matCellDef=\"let element\"><span class=\"flex-start\"> {{element.contacts[0]?.phone}}</span> </td>\r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"customerEmail\">\r\n  <th mat-header-cell *matHeaderCellDef mat-sort-header> Email </th>\r\n  <td mat-cell *matCellDef=\"let element\"><span class=\"flex-start\">{{element.contacts[0]?.email}}</span>  </td>\r\n</ng-container>\r\n\r\n<!-- <ng-container matColumnDef=\"State\">\r\n  <th mat-header-cell *matHeaderCellDef> State </th>\r\n  <td mat-cell *matCellDef=\"let element\"> {{element.State}} </td>\r\n</ng-container> -->\r\n\r\n<ng-container matColumnDef=\"action\">\r\n  <th mat-header-cell *matHeaderCellDef> Action </th>\r\n  <td mat-cell *matCellDef=\"let element\"> \r\n    <!-- <i class=\"fas fa-pencil-alt mr-2 \" (click)=\"edit(element)\" title=\"edit\"></i>  <i  class=\"fas fa-trash ml-2 \" (click)=\"delete(element)\" title=\"delete\"></i>  -->\r\n    <button mat-icon-button class=\"mr-2\" aria-label=\"Example icon button with a delete icon\" (click)=\"edit(element)\">\r\n      <mat-icon >edit</mat-icon>\r\n    </button>\r\n    <button mat-icon-button aria-label=\"Example icon button with a delete icon\" (click)=\"delete(element)\">\r\n      <mat-icon >delete</mat-icon>\r\n    </button>\r\n  </td>\r\n</ng-container>\r\n<!-- <ng-container matColumnDef=\"delete\">\r\n  <th mat-header-cell *matHeaderCellDef> Delete </th>\r\n  <td mat-cell *matCellDef=\"let element\"(click)=\"delete(element)\"> <i class=\"fas fa-trash \"></i> \r\n  </td>\r\n</ng-container> -->\r\n\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n    <tr class=\"mat-row\" *matNoDataRow>\r\n      <td class=\"mat-cell\" colspan=\"4\">Data Not  Found  \"{{input.value}}\"</td>\r\n    </tr>\r\n  </table>\r\n\r\n  <mat-paginator [pageSizeOptions]=\"[20]\"\r\n                 showFirstLastButtons \r\n                 aria-label=\"Select page of periodic elements\">\r\n  </mat-paginator>\r\n</div>\r\n ","import { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { FormGroup, FormBuilder, FormArray, Validators } from '@angular/forms';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-edit-site-inspection-category',\r\n  templateUrl: './edit-site-inspection-category.component.html',\r\n  styleUrls: ['./edit-site-inspection-category.component.scss'],\r\n})\r\nexport class EditSiteInspectionCategoryComponent implements OnInit {\r\n  siteInspectionCategoryEdit: FormGroup;\r\n  formData: any;\r\n  constructor(\r\n    private dialogRef: MatDialogRef<EditSiteInspectionCategoryComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private fb: FormBuilder,\r\n    private logicalFormInfoService: LogicalFormInfoService,\r\n    private router: Router\r\n  ) {\r\n    this.formData = data;\r\n    console.log('fdata', this.formData);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.siteInspectionCategoryEdit = this.fb.group({\r\n      category: [this.formData.category, Validators.required],\r\n    });\r\n  }\r\n  onSubmit() {\r\n    console.log(this.siteInspectionCategoryEdit.value);\r\n\r\n    this.logicalFormInfoService\r\n      .updateSiteInspectionCategory(\r\n        this.formData._id,\r\n        this.siteInspectionCategoryEdit.value\r\n      )\r\n      .subscribe(\r\n        (res) => {\r\n          console.log('addCustomerForm=>', res);\r\n          this.dialogRef.close('true');\r\n          this.router.navigate(['/admin/siteInfo/siteinspectioncategory']);\r\n        },\r\n        (err) => {\r\n          console.error(err);\r\n        }\r\n      );\r\n  }\r\n}\r\n","<section class=\"content\" style=\"height: 60%\">\r\n  <div\r\n    [formGroup]=\"siteInspectionCategoryEdit\"\r\n    class=\"container px-4 py-4 bg-white\"\r\n  >\r\n    <h2>Update Site Inspection Category</h2>\r\n    <hr />\r\n    <div class=\"row\">\r\n      <div class=\"my-3 col\">\r\n        <p for=\"exampleFormControlInput1\" class=\"form-Label\">Category</p>\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          id=\"customerName\"\r\n          formControlName=\"category\"\r\n        />\r\n      </div>\r\n    </div>\r\n    <div>\r\n      <button\r\n        (click)=\"onSubmit()\"\r\n        class=\"btn btn-primary\"\r\n        [disabled]=\"\r\n          siteInspectionCategoryEdit.invalid &&\r\n          siteInspectionCategoryEdit.get('category').invalid\r\n        \"\r\n      >\r\n        Update\r\n      </button>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { FormBuilder, FormGroup,  Validators,\r\n  FormArray,} from '@angular/forms';\r\n\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-add-chemical',\r\n  templateUrl: './add-chemical.component.html',\r\n  styleUrls: ['./add-chemical.component.scss']\r\n})\r\nexport class AddChemicalComponent implements OnInit {\r\n  addChemicalForm: FormGroup;\r\n  numberOfLineBreaks:any;\r\n  constructor( \r\n    private fb:FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    private router: Router,\r\n    ) { \r\n      this.addChemicalForm=this.fb.group({\r\n        arrObj: this.fb.array([]),\r\n      })\r\n    }\r\n\r\n    ngOnInit(): void {\r\n      this.addChemical();\r\n    }\r\n    addChemical() {\r\n      {\r\n        this.add().push(this.newAction());\r\n      }\r\n    }\r\n    add(): FormArray {\r\n      return this.addChemicalForm.get('arrObj') as FormArray;\r\n    }\r\n    newAction(): FormGroup {\r\n      return this.fb.group({\r\n       \r\n        title: ['', Validators.required],\r\n      });\r\n    }\r\n    \r\n    removeChemical(i) {\r\n      const item = <FormArray>this.addChemicalForm.controls['arrObj'];\r\n      if (item.length > 1) {\r\n        item.removeAt(i);\r\n      \r\n      }\r\n    }\r\n    onFormSubmit() {\r\n     \r\n      \r\n      console.log(this.addChemicalForm.value);\r\n      let data={\r\n        arrObj:this.addChemicalForm.get('arrObj').value\r\n      }\r\n      this.logicalFormInfo.addMultipleChemical(data).subscribe((data) => {\r\n        console.log('chemical=>', data);\r\n        this.router.navigate(['/admin/siteInfo/chemical']);      \r\n      },(err)=>{console.error(err);} \r\n    \r\n      );\r\n      \r\n    }\r\n    calcHeight(value) {\r\n      this.numberOfLineBreaks = (value.match(/\\n/g) || []).length+1;\r\n      console.log(\"numberOfLineBreaks\",this.numberOfLineBreaks)\r\n   }\r\n  }","<div class=\"btn btn-outline-primary\" [routerLink]=\"['/admin/siteInfo/chemical']\">\r\n    <i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\r\n  </div>\r\n\r\n    <div class=\"container px-4 py-4 bg-white\" >\r\n        <form  [formGroup]=\"addChemicalForm\" (ngSubmit)=\"onFormSubmit()\">\r\n      <h2  class=\"text-center\"> Chemical Info</h2>\r\n      <br />\r\n      <hr />\r\n      <ng-container formArrayName=\"arrObj\">\r\n        <ng-container\r\n          *ngFor=\"let control of add().controls; let i = index\"\r\n          [formGroupName]=\"i\"\r\n        >\r\n          <div class=\"row justify-content-center\">\r\n            <div class=\"mr-1 mt-2\">\r\n              <span \r\n                >{{i+1}}.\r\n              </span>\r\n            </div>\r\n            <div class=\"col-8\">\r\n              <textarea autosize\r\n         \r\n                type=\"text\"\r\n                formControlName=\"title\"\r\n                class=\"form-control sign\"\r\n                id=\"title\"\r\n              ></textarea>\r\n            </div>\r\n            <div class=\"col-1 mt-2\">\r\n              <span class=\"material-icons\" (click)=\"addChemical()\"\r\n                >add_circle_outline\r\n              </span>\r\n            </div>\r\n            <div class=\"col-1 mt-2\">\r\n              <span class=\"material-icons\" (click)=\"removeChemical(i)\">\r\n                remove_circle_outline\r\n              </span>\r\n            </div>\r\n          </div>\r\n  \r\n          <hr />\r\n        </ng-container>\r\n      </ng-container>\r\n      <br />\r\n          <div  class=\"col-md-2\">\r\n            <button class=\"btn btn-primary\"[disabled]=\"addChemicalForm.get('arrObj').invalid\" >\r\n              Add\r\n            </button>\r\n          </div>\r\n        \r\n        </form>\r\n        </div>","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n  FormArray,\r\n  \r\n} from '@angular/forms';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-add-cop',\r\n  templateUrl: './add-cop.component.html',\r\n  styleUrls: ['./add-cop.component.scss']\r\n})\r\nexport class AddCOPComponent implements OnInit {\r\n\r\n  codeOfPractFG!: FormGroup;\r\n  formData: any;numberOfLineBreaks: any;\r\n;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private router: Router,\r\n    private logicalFormInfo:LogicalFormInfoService\r\n  ) { \r\n    this.codeOfPractFG=this.fb.group({\r\n     // mode:\"JobTask\",\r\n      arrObj: this.fb.array([]),\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.addAction();\r\n  }\r\n  addAction() {\r\n    {\r\n      this.add().push(this.newAction());\r\n    }\r\n  }\r\n  add(): FormArray {\r\n    return this.codeOfPractFG.get('arrObj') as FormArray;\r\n  }\r\n  newAction(): FormGroup {\r\n    return this.fb.group({\r\n     \r\n      title: ['', Validators.required],\r\n    });\r\n  }\r\n  \r\n  removeSafetyModule(i) {\r\n    const item = <FormArray>this.codeOfPractFG.controls['arrObj'];\r\n    if (item.length > 1) {\r\n      item.removeAt(i);\r\n    \r\n    }\r\n  }\r\n  onFormSubmit() {\r\n    let data={\r\n      arrObj:this.codeOfPractFG.get('arrObj').value\r\n    }\r\n    this.logicalFormInfo.addMultipleCOP(data).subscribe((data) => {\r\n      console.log('codeOfPractice=>', data);\r\n\r\n      this.router.navigate(['/admin/siteInfo/codeOfpract']);      \r\n    },(err)=>{console.error(err);} \r\n  \r\n    );\r\n    \r\n  }\r\n  calcHeight(value) {\r\n    this.numberOfLineBreaks = (value.match(/\\n/g) || []).length+1;\r\n    console.log(\"numberOfLineBreaks\",this.numberOfLineBreaks)\r\n }\r\n}\r\n","<div class=\"btn btn-outline-primary\" [routerLink]=\"['/admin/siteInfo/codeOfpract']\">\r\n    <i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\r\n  </div>\r\n  <div class=\"container px-4 py-4 bg-white\">\r\n    <form [formGroup]=\"codeOfPractFG\" (ngSubmit)=\"onFormSubmit()\">\r\n      <h2 class=\"text-center\">Add Code Of Practice</h2>\r\n      <br />\r\n      <hr />\r\n      <ng-container formArrayName=\"arrObj\">\r\n        <ng-container\r\n          *ngFor=\"let control of add().controls; let i = index\"\r\n          [formGroupName]=\"i\"\r\n        >\r\n          <div class=\"row justify-content-center\">\r\n            <div class=\"mr-1 mt-2\">\r\n              <span \r\n                >{{i+1}}.\r\n              </span>\r\n            </div>\r\n            <div class=\"col-8\">\r\n              <textarea autosize\r\n           \r\n                type=\"text\"\r\n                formControlName=\"title\"\r\n                class=\"form-control sign\"\r\n                id=\"name\"\r\n              ></textarea>\r\n            </div>\r\n            <div class=\"col-1 mt-2\">\r\n              <span class=\"material-icons\" (click)=\"addAction()\"\r\n                >add_circle_outline\r\n              </span>\r\n            </div>\r\n            <div class=\"col-1 mt-2\">\r\n              <span class=\"material-icons\" (click)=\"removeSafetyModule(i)\">\r\n                remove_circle_outline\r\n              </span>\r\n            </div>\r\n          </div>\r\n  \r\n          <hr />\r\n        </ng-container>\r\n      </ng-container>\r\n      <br />\r\n  \r\n      <div class=\"col-md-2\">\r\n        <button type=\"submit\" class=\"btn btn-primary\"[disabled]=\"codeOfPractFG.get('arrObj').invalid\">Add</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  ","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { SetTitleService } from 'src/app/utils/services/set-title.service';\r\nimport Swal from 'sweetalert2';\r\nimport { EditRootCauseOfIncidentComponent } from './edit-root-cause-of-incident/edit-root-cause-of-incident.component';\r\n\r\n@Component({\r\n  selector: 'app-root-cause-of-incident',\r\n  templateUrl: './root-cause-of-incident.component.html',\r\n  styleUrls: ['./root-cause-of-incident.component.scss']\r\n})\r\nexport class RootCauseOfIncidentComponent implements OnInit {\r\n  jobTaskData: any = [];\r\n  ELEMENT_DATA = [];\r\n  /////////////mat table////////////////\r\n  displayedColumns: string[] = ['index', 'title','action'];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n  /////////////mat table end////////////////\r\n\r\n  constructor(\r\n   \r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    private dialog:MatDialog,\r\n    private setTitle:SetTitleService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getAllRoot();\r\n    this.setTitle.setTitle('WHS-Root Cause Of Incident');\r\n    \r\n  }\r\n\r\n  getAllRoot() {\r\n    this.logicalFormInfo.getAllRootCause().subscribe((res:any) => {\r\n      console.log('root=>', res);\r\n      let data = res.data;\r\n      data.forEach((element, index) => {\r\n        element.index = index + 1; //adding index\r\n      });\r\n\r\n      this.ELEMENT_DATA = data;\r\n      this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n      console.log('this.ELEMENT_DATA', this.ELEMENT_DATA);\r\n\r\n      //  this.task = res.data.subComponents;\r\n    });\r\n  }\r\n\r\n  edit(element){\r\n    const dialogRef = this.dialog.open(EditRootCauseOfIncidentComponent, {\r\n      width: \"550px\",\r\n      data: element,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if ((result == \"true\")) {\r\n        this.getAllRoot();\r\n      }\r\n      console.log(\"The dialog was closed\");\r\n    });\r\n  }\r\n  delete(item) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: `Do you want to delete \"${item.title}\"?`,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#00B96F',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Delete!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.logicalFormInfo\r\n        .deleteRootCause(item._id)\r\n        .subscribe((res) => {\r\n          Swal.fire({\r\n            title: 'Parameter Deleted successfully',\r\n            showConfirmButton: false,\r\n            timer: 1200,\r\n          });\r\n          console.log('deleted res', res);\r\n          this.getAllRoot();\r\n            \r\n        });\r\n      \r\n      }\r\n    });\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n}\r\n","<div class=\"col ml-2 pt-3\">\r\n    <h1> Root Cause Of Incident </h1>\r\n    </div>\r\n        <div class=\"col ml-2 mb-2\">\r\n          \r\n          <button  class=\"btn btn-outline-primary mt-1 mr-2 float-right\"[routerLink]=\"['/admin/siteInfo/addRootCauseOfIncident']\">\r\n            <i class=\"fas fa-plus mr-2\"></i>Add Root Cause Of Incident \r\n          </button>\r\n        </div>\r\n        <div class=\"col-6\">\r\n          <mat-form-field>\r\n            <input\r\n              matInput\r\n              #input\r\n              placeholder=\"Search\"\r\n              (keyup)=\"applyFilter($event)\"\r\n            />\r\n          </mat-form-field>\r\n        </div>\r\n    \r\n        <div class=\"\">\r\n          \r\n          <table mat-table [dataSource]=\"dataSource\" matSort >\r\n        \r\n            <!-- Position Column -->\r\n            <ng-container matColumnDef=\"index\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header=\"index\"> No. </th>\r\n              <td mat-cell *matCellDef=\"let element\">{{element.index}}</td>\r\n            </ng-container>\r\n        \r\n            <!-- Name Column -->\r\n           \r\n        <!-- Name Column -->\r\n        <ng-container matColumnDef=\"title\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header=\"title\"> Name </th>\r\n          <td mat-cell *matCellDef=\"let element\"><span class=\"flex-start\">{{element.title}}</span>  </td>\r\n        </ng-container>\r\n    \r\n        <ng-container matColumnDef=\"action\">\r\n          <th mat-header-cell *matHeaderCellDef> Action </th>\r\n          <td mat-cell *matCellDef=\"let element\"> \r\n            <!-- <i class=\"fas fa-pencil-alt mr-2 \" (click)=\"edit(element)\" title=\"edit\"></i>  <i  class=\"fas fa-trash ml-2 \" (click)=\"delete(element)\" title=\"delete\"></i>  -->\r\n            <button mat-icon-button class=\"mr-2\" aria-label=\"Example icon button with a delete icon\" (click)=\"edit(element)\">\r\n              <mat-icon >edit</mat-icon>\r\n            </button>\r\n            <button mat-icon-button aria-label=\"Example icon button with a delete icon\" (click)=\"delete(element)\">\r\n              <mat-icon >delete</mat-icon>\r\n            </button>\r\n          </td>\r\n        </ng-container>\r\n        <!-- <ng-container matColumnDef=\"edit\">\r\n            <th mat-header-cell *matHeaderCellDef> Edit </th>\r\n            <td mat-cell *matCellDef=\"let element\"(click)=\"edit(element)\"> <i class=\"fas fa-pencil-alt \"></i> \r\n            </td>\r\n          </ng-container>\r\n          <ng-container matColumnDef=\"delete\">\r\n            <th mat-header-cell *matHeaderCellDef> Delete </th>\r\n            <td mat-cell *matCellDef=\"let element\"(click)=\"delete(element)\"> <i class=\"fas fa-trash \"></i> \r\n            </td>\r\n          </ng-container> -->\r\n        \r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">Data Not  Found  \"{{input.value}}\"</td>\r\n            </tr>\r\n          \r\n          </table>\r\n        \r\n          <mat-paginator [pageSizeOptions]=\"[20]\"\r\n                         showFirstLastButtons \r\n                         aria-label=\"Select page of periodic elements\">\r\n          </mat-paginator>\r\n        </div>\r\n        \r\n    ","import Swal from 'sweetalert2';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { SetTitleService } from 'src/app/utils/services/set-title.service';\r\nimport { AddSiteInspectionCategoryComponent } from './add-site-inspection-category/add-site-inspection-category.component';\r\nimport { EditSiteInspectionCategoryComponent } from './edit-site-inspection-category/edit-site-inspection-category.component';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { SiteInspectionTopicComponent } from './site-inspection-topic/site-inspection-topic.component';\r\n\r\n@Component({\r\n  selector: 'app-site-inspection-category',\r\n  templateUrl: './site-inspection-category.component.html',\r\n  styleUrls: ['./site-inspection-category.component.scss'],\r\n})\r\nexport class SiteInspectionCategoryComponent implements OnInit {\r\n  ELEMENT_DATA = [];\r\n  displayedColumns: string[] = ['index', 'Category', 'action'];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor(\r\n    private setTitle: SetTitleService,\r\n    private dialog: MatDialog,\r\n    private logicalFormInfoService: LogicalFormInfoService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getAllCategory();\r\n    this.setTitle.setTitle('Add Site Inspection Category');\r\n  }\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  getAllCategory() {\r\n    this.logicalFormInfoService\r\n      .getAllSiteInspectionCategory()\r\n      .subscribe((res: any) => {\r\n        console.log(res);\r\n        this.dataSource.data = res.data;\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n      });\r\n  }\r\n\r\n  openDialog(id) {\r\n    let dialogRef = this.dialog.open(AddSiteInspectionCategoryComponent, {\r\n      height: '600px',\r\n      width: '700px',\r\n\r\n      data: {\r\n        action: 'new',\r\n        userId: id,\r\n      },\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result === 'ok') {\r\n        this.getAllCategory();\r\n      }\r\n      console.log('CustomerInfoComponent -> openDialog -> result', result);\r\n\r\n      console.log('The dialog was closed');\r\n    });\r\n  }\r\n  edit(element) {\r\n    console.log(element);\r\n    const dialogRef = this.dialog.open(EditSiteInspectionCategoryComponent, {\r\n      height: '700px',\r\n      width: '750px',\r\n\r\n      // height:'400px',\r\n      data: element,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result == 'true') {\r\n        this.getAllCategory();\r\n      }\r\n      console.log('The dialog was closed');\r\n    });\r\n  }\r\n  delete(item) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: `Do you want to delete \"${item.category}\"?`,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#00B96F',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Delete!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.logicalFormInfoService\r\n          .deleteSiteInspectionCategory(item._id)\r\n          .subscribe((res) => {\r\n            Swal.fire({\r\n              title: 'Deleted successfully',\r\n              showConfirmButton: false,\r\n              timer: 1200,\r\n            });\r\n            console.log('deleted res', res);\r\n            this.getAllCategory();\r\n          });\r\n      }\r\n    });\r\n  }\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n}\r\n","<div class=\"col ml-2 pt-3\">\r\n  <h1>Site Inspection Category List</h1>\r\n</div>\r\n<div class=\"col ml-2 mb-2\">\r\n  <button\r\n    [routerLink]=\"['/admin/siteInfo/addsiteinspection']\"\r\n    type=\"button\"\r\n    class=\"btn btn-outline-primary mt-1 mr-2 float-right\"\r\n  >\r\n    <i class=\"fas fa-plus\"></i> Add\r\n  </button>\r\n</div>\r\n<div class=\"col-6\">\r\n  <mat-form-field>\r\n    <input matInput #input placeholder=\"Search\" (keyup)=\"applyFilter($event)\" />\r\n  </mat-form-field>\r\n</div>\r\n<div class=\"\">\r\n  <table mat-table [dataSource]=\"dataSource\" matSort>\r\n    <!-- Position Column -->\r\n    <ng-container matColumnDef=\"index\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>No.</th>\r\n      <td mat-cell *matCellDef=\"let element; let i = index\">{{ i + 1 }}</td>\r\n    </ng-container>\r\n\r\n    <!-- Name Column -->\r\n\r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"Category\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Category</th>\r\n      <td mat-cell *matCellDef=\"let element\">\r\n        <span class=\"flex-start\">{{ element.category }}</span>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"action\">\r\n      <th mat-header-cell *matHeaderCellDef>Action</th>\r\n      <td mat-cell *matCellDef=\"let element\">\r\n        <button\r\n          mat-icon-button\r\n          class=\"mr-2\"\r\n          aria-label=\"Example icon button with a delete icon\"\r\n          (click)=\"edit(element)\"\r\n        >\r\n          <mat-icon>edit</mat-icon>\r\n        </button>\r\n        <button\r\n          mat-icon-button\r\n          aria-label=\"Example icon button with a delete icon\"\r\n          (click)=\"delete(element)\"\r\n        >\r\n          <mat-icon>delete</mat-icon>\r\n        </button>\r\n        <button\r\n          mat-icon-button\r\n          class=\"mr-2\"\r\n          aria-label=\"Example icon button with a delete icon\"\r\n          [routerLink]=\"['/admin/siteInfo/siteinspectiontopic/' + element._id]\"\r\n        >\r\n          <mat-icon>launch</mat-icon>\r\n        </button>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n    <tr class=\"mat-row\" *matNoDataRow>\r\n      <td class=\"mat-cell\" colspan=\"4\">Data Not Found \"{{ input.value }}\"</td>\r\n    </tr>\r\n  </table>\r\n\r\n  <mat-paginator\r\n    [pageSizeOptions]=\"[20]\"\r\n    showFirstLastButtons\r\n    aria-label=\"Select page of periodic elements\"\r\n  >\r\n  </mat-paginator>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\n\r\n@Component({\r\n  selector: 'app-add-changes-made',\r\n  templateUrl: './add-changes-made.component.html',\r\n  styleUrls: ['./add-changes-made.component.scss']\r\n})\r\nexport class AddChangesMadeComponent implements OnInit {\r\n  changesformgp!: FormGroup;\r\n  formData: any;\r\n  numberOfLineBreaks:any;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private router: Router,\r\n    private logicalFormInfo:LogicalFormInfoService\r\n  ) { \r\n    this.changesformgp=this.fb.group({\r\n     // mode:\"JobTask\",\r\n      arrObj: this.fb.array([]),\r\n      \r\n    });\r\n    \r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.addAction();\r\n    \r\n  }\r\n  addAction() {\r\n    {\r\n      this.add().push(this.newAction());\r\n    }\r\n  }\r\n  add(): FormArray {\r\n    return this.changesformgp.get('arrObj') as FormArray;\r\n  }\r\n  newAction(): FormGroup {\r\n    return this.fb.group({\r\n     \r\n      title: ['', Validators.required],\r\n    });\r\n  }\r\n  \r\n  removeSafetyModule(i) {\r\n    const item = <FormArray>this.changesformgp.controls['arrObj'];\r\n    if (item.length > 1) {\r\n      item.removeAt(i);\r\n    \r\n    }\r\n  }\r\n  onFormSubmit() {\r\n    console.log(this.changesformgp.value);\r\n    let data={\r\n      arrObj:this.changesformgp.get('arrObj').value\r\n    }\r\n    this.logicalFormInfo.addMultipleChangesMade(data).subscribe((data) => {\r\n      console.log('nature=>', data);\r\n      this.router.navigate(['/admin/siteInfo/changesMade']);      \r\n    },(err)=>{console.error(err);} \r\n  \r\n    );\r\n    \r\n  }\r\n calcHeight(value) {\r\n    this.numberOfLineBreaks = (value.match(/\\n/g) || []).length+1;\r\n    console.log(\"numberOfLineBreaks\",this.numberOfLineBreaks)\r\n }\r\n\r\n\r\n}\r\n","<div class=\"btn btn-outline-primary\" [routerLink]=\"['/admin/siteInfo/changesMade']\">\r\n    <i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\r\n  </div>\r\n  <div class=\"container px-4 py-4 bg-white\">\r\n    <form [formGroup]=\"changesformgp\" (ngSubmit)=\"onFormSubmit()\">\r\n      <h2 class=\"text-center\">Add Changes Made</h2>\r\n      <br />\r\n      <hr />\r\n      <ng-container formArrayName=\"arrObj\">\r\n        <ng-container\r\n          *ngFor=\"let control of add().controls; let i = index\"\r\n          [formGroupName]=\"i\"\r\n        >\r\n          <div class=\"row justify-content-center\">\r\n            <div class=\"mr-1 mt-2\">\r\n              <span \r\n                >{{i+1}}.\r\n              </span>\r\n            </div>\r\n            <div class=\"col-8\">\r\n              <textarea autosize\r\n               (keyup)=\" calcHeight($event.target.value)\"\r\n               [rows]=\"numberOfLineBreaks\"\r\n                type=\"text\"\r\n                formControlName=\"title\"\r\n                class=\"form-control sign\"\r\n                id=\"name\"\r\n              ></textarea>\r\n            </div>\r\n            <div class=\"col-1 mt-2\">\r\n              <span class=\"material-icons\" (click)=\"addAction()\"\r\n                >add_circle_outline\r\n              </span>\r\n            </div>\r\n            <div class=\"col-1 mt-2\">\r\n              <span class=\"material-icons\" (click)=\"removeSafetyModule(i)\">\r\n                remove_circle_outline\r\n              </span>\r\n            </div>\r\n          </div>\r\n  \r\n          <hr />\r\n        </ng-container>\r\n      </ng-container>\r\n      <br />\r\n  \r\n      <div class=\"col-md-2\">\r\n        <button type=\"submit\" class=\"btn btn-primary\"[disabled]=\"changesformgp.get('arrObj').invalid\">Add</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  ","import { Component, OnInit,Inject } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport Swal from 'sweetalert2';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\n@Component({\r\n  selector: 'app-edit-chemical',\r\n  templateUrl: './edit-chemical.component.html',\r\n  styleUrls: ['./edit-chemical.component.scss']\r\n})\r\nexport class EditChemicalComponent implements OnInit {\r\n\r\n  editTitle!: FormGroup;\r\n  dataRec: any;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    public dialogRef: MatDialogRef<EditChemicalComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.dataRec = data;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.editTitle = this.fb.group({\r\n      title: [this.dataRec.title, Validators.required],\r\n    });\r\n  }\r\n  onFormSubmit() {\r\n     \r\n    let data={\r\n      title :this.editTitle.get('title').value\r\n    }\r\n    this.logicalFormInfo\r\n      .updateChemical(this.dataRec._id,data)\r\n      .subscribe((resData) => {\r\n        console.log('resData', resData);\r\n\r\n        this.dialogRef.close('true');\r\n        Swal.fire({\r\n          title: 'chemical Updated successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });     \r\n       });\r\n  }\r\n  closeDialog(){\r\n    this.dialogRef.close('false');\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n","<form [formGroup]=\"editTitle\" >\r\n    <h2>Edit Chemical</h2>\r\n    <textarea   autosize \r\n    class=\"form-control sign\"   formControlName=\"title\" ></textarea>\r\n    <br>\r\n    <br>\r\n    \r\n    <div class=\"row\">\r\n        <div class=\"col-sm-2 offset-8 \">\r\n            <button mat-raised-button (click)=\"closeDialog()\">Close</button>\r\n        </div>\r\n        <div class=\"col-sm-2  \">\r\n            <button mat-raised-button  [disabled]=\"!editTitle.valid\"(click)=\"onFormSubmit()\">Update</button>\r\n        </div>\r\n    </div>\r\n</form>   \r\n","import { Component, OnInit,Inject } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport Swal from 'sweetalert2';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-residual-risk-level',\r\n  templateUrl: './edit-residual-risk-level.component.html',\r\n  styleUrls: ['./edit-residual-risk-level.component.scss']\r\n})\r\nexport class EditResidualRiskLevelComponent implements OnInit {\r\n\r\n  editTitle!: FormGroup;\r\n  dataRec: any;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    public dialogRef: MatDialogRef<EditResidualRiskLevelComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.dataRec = data;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.editTitle = this.fb.group({\r\n      title: [this.dataRec.title, Validators.required],\r\n    });\r\n  }\r\n  onFormSubmit() {\r\n     \r\n    let data={\r\n      title :this.editTitle.get('title').value\r\n    }\r\n    this.logicalFormInfo\r\n      .updateResidual(this.dataRec._id,data)\r\n      .subscribe((resData) => {\r\n        console.log('resData', resData);\r\n\r\n        this.dialogRef.close('true');\r\n        Swal.fire({\r\n          title: 'Residual-Risk Updated successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });     \r\n       });\r\n  }\r\n  closeDialog(){\r\n    this.dialogRef.close('false');\r\n\r\n  }\r\n\r\n\r\n}\r\n","\r\n<form [formGroup]=\"editTitle\" >\r\n    <h2>Edit Residual</h2>\r\n    <mat-form-field appearance=\"legacy\"\r\n    class=\"example-full-width\" style=\"width: 498px;\">\r\n    <!-- <mat-label>Edit PPE</mat-label> -->\r\n    <input matInput  formControlName=\"title\" >\r\n    </mat-form-field>\r\n    <br>\r\n    \r\n    <div class=\"row\">\r\n        <div class=\"col-sm-2 offset-8 \">\r\n            <button mat-raised-button (click)=\"closeDialog()\">Close</button>\r\n        </div>\r\n        <div class=\"col-sm-2  \">\r\n            <button mat-raised-button  [disabled]=\"!editTitle.valid\"(click)=\"onFormSubmit()\">Update</button>\r\n        </div>\r\n    </div>\r\n</form>   ","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport Swal from 'sweetalert2';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { SetTitleService } from 'src/app/utils/services/set-title.service';\r\nimport { EditRiskLevelComponent } from './edit-risk-level/edit-risk-level.component';\r\nimport { MatSort } from '@angular/material/sort';\r\n\r\n\r\n@Component({\r\n  selector: 'app-risk-level',\r\n  templateUrl: './risk-level.component.html',\r\n  styleUrls: ['./risk-level.component.scss']\r\n})\r\nexport class RiskLevelComponent implements OnInit {\r\n\r\n  ELEMENT_DATA = [];\r\n  /////////////mat table////////////////\r\n  displayedColumns: string[] = ['index', 'title', 'action'];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  allRiskLevel: any[]=[];\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n  constructor( \r\n    private dialog: MatDialog, \r\n    private setTitle: SetTitleService,\r\n    private logicalFormInfoService: LogicalFormInfoService,\r\n    private spinner: NgxSpinnerService\r\n    ) { }\r\n  ngOnInit(): void {\r\n    this.setTitle.setTitle('WHS-RiskLevel Info');\r\n    this.getAllRiskLevel()\r\n  }\r\n  getAllRiskLevel(){\r\n    this.logicalFormInfoService.getAllRiskLevel().subscribe((res:any)=> {\r\n      console.log(res)\r\n      let data = res.data;\r\n      data.forEach((element, index) => {\r\n        element.index = index + 1; //adding index\r\n      });\r\n\r\n      this.ELEMENT_DATA = data;\r\n      this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n      console.log('this.ELEMENT_DATA', this.ELEMENT_DATA);\r\n   })\r\n  }\r\n \r\n  edit(element) {\r\n    const dialogRef = this.dialog.open(EditRiskLevelComponent, {\r\n      width: \"550px\",\r\n     // height:'50%',\r\n      data: element,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if ((result == \"true\")) {\r\n        this.getAllRiskLevel()\r\n      }\r\n      console.log(\"The dialog was closed\");\r\n    });\r\n  }\r\n  delete(item) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: `Do you want to delete \"${item.title}\"?`,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#00B96F',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Delete!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        console.log(result)\r\n        // this.model.attributes.splice(i,1);\r\n        this.spinner.show()\r\n        this.logicalFormInfoService.deleteRiskLevel(item._id).subscribe((res => {\r\n        this.getAllRiskLevel()\r\n        this.spinner.hide()\r\n        }))\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","\r\n<div class=\"col ml-2 pt-1\">\r\n    <h1>\r\n      Risk Level Information List\r\n    </h1>\r\n  </div>\r\n  <div class=\"col ml-2 mb-2\">\r\n  \r\n    <button type=\"button\"  [routerLink]=\"['/admin/siteInfo/addRisk']\" \r\n      class=\"btn btn-outline-primary  mr-2 float-right\"><i  class=\"fas fa-plus\"></i> Add RiskLevel\r\n    </button>\r\n  </div>\r\n  <div >\r\n    <table mat-table [dataSource]=\"dataSource\" matSort>\r\n  \r\n      <!-- Position Column -->\r\n      <ng-container matColumnDef=\"index\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> No. </th>\r\n        <td mat-cell *matCellDef=\"let element,let i = index\">{{element.index}}</td>\r\n      </ng-container>\r\n  \r\n      <!-- Name Column -->\r\n  \r\n      <!-- Name Column -->\r\n      <ng-container matColumnDef=\"title\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Risklevel Name </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.title}} </td>\r\n      </ng-container>\r\n  \r\n   \r\n<ng-container matColumnDef=\"action\">\r\n  <th mat-header-cell *matHeaderCellDef> Action </th>\r\n  <td mat-cell *matCellDef=\"let element\"> \r\n    <!-- <i class=\"fas fa-pencil-alt mr-2 \" (click)=\"edit(element)\" title=\"edit\"></i>  <i  class=\"fas fa-trash ml-2 \" (click)=\"delete(element)\" title=\"delete\"></i>  -->\r\n    <button mat-icon-button class=\"mr-2\" aria-label=\"Example icon button with a delete icon\" (click)=\"edit(element)\">\r\n      <mat-icon >edit</mat-icon>\r\n    </button>\r\n    <button mat-icon-button aria-label=\"Example icon button with a delete icon\" (click)=\"delete(element)\">\r\n      <mat-icon >delete</mat-icon>\r\n    </button>\r\n  </td>\r\n</ng-container>\r\n<!--      \r\n  \r\n      <ng-container matColumnDef=\"edit\">\r\n        <th mat-header-cell *matHeaderCellDef> Edit </th>\r\n        <td mat-cell *matCellDef=\"let element\" (click)=\"edit(element)\"> <i class=\"fas fa-pencil-alt \"></i>\r\n        </td>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"delete\">\r\n        <th mat-header-cell *matHeaderCellDef> Delete </th>\r\n        <td mat-cell *matCellDef=\"let element\" (click)=\"delete(element)\"> <i class=\"fas fa-trash \"></i>\r\n        </td>\r\n      </ng-container>\r\n   -->\r\n  \r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n    </table>\r\n  \r\n    <mat-paginator [pageSizeOptions]=\"[20]\" showFirstLastButtons aria-label=\"Select page of periodic elements\">\r\n    </mat-paginator>\r\n  </div>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-edit-changes-made',\r\n  templateUrl: './edit-changes-made.component.html',\r\n  styleUrls: ['./edit-changes-made.component.scss']\r\n})\r\nexport class EditChangesMadeComponent implements OnInit {\r\n  editTitle!: FormGroup;\r\n  dataRec: any;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    public dialogRef: MatDialogRef<EditChangesMadeComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.dataRec = data;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.editTitle = this.fb.group({\r\n      title: [this.dataRec.title, Validators.required],\r\n    });\r\n  }\r\n  onFormSubmit() {\r\n     \r\n    let data={\r\n      title :this.editTitle.get('title').value\r\n    }\r\n    this.logicalFormInfo\r\n      .updateChangesMade(data, this.dataRec._id)\r\n      .subscribe((resData) => {\r\n        console.log('resData', resData);\r\n\r\n        this.dialogRef.close('true');\r\n        Swal.fire({\r\n          title: 'Parameter Updated successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });     \r\n       });\r\n  }\r\n  closeDialog(){\r\n    this.dialogRef.close('false');\r\n\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"editTitle\" >\r\n    <h2>Edit Changes Made</h2>\r\n    <mat-form-field appearance=\"legacy\"\r\n    class=\"example-full-width\" style=\"width: 498px;\">\r\n    <!-- <mat-label>Edit PPE</mat-label> -->\r\n    <input matInput  formControlName=\"title\" >\r\n    </mat-form-field>\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-2 offset-8 \">\r\n            <button mat-raised-button (click)=\"closeDialog()\">Close</button>\r\n        </div>\r\n        <div class=\"col-sm-2  \">\r\n            <button mat-raised-button  [disabled]=\"!editTitle.valid\"(click)=\"onFormSubmit()\">Update</button>\r\n        </div>\r\n    </div>\r\n</form>   \r\n\r\n","import { MatDialog } from '@angular/material/dialog';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { AfterViewInit, ViewChild } from '@angular/core';\r\nimport Swal from 'sweetalert2';\r\nimport {MatSort} from '@angular/material/sort';\r\n\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { EditPPEComponent } from './edit-ppe/edit-ppe.component';\r\nimport { SetTitleService } from 'src/app/utils/services/set-title.service';\r\n@Component({\r\n  selector: 'app-ppe-select',\r\n  templateUrl: './ppe-select.component.html',\r\n  styleUrls: ['./ppe-select.component.scss'],\r\n})\r\nexport class PpeSelectComponent implements AfterViewInit,OnInit {\r\n  jobTaskData: any = [];\r\n  ELEMENT_DATA = [];\r\n  /////////////mat table////////////////\r\n  displayedColumns: string[] = ['index', 'title','action'];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n  /////////////mat table end////////////////\r\n\r\n  constructor(\r\n   \r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    private dialog:MatDialog,\r\n    private setTitle:SetTitleService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getAllPPEs();\r\n    this.setTitle.setTitle('WHS-PPE List');\r\n    \r\n  }\r\n\r\n  getAllPPEs() {\r\n    this.logicalFormInfo.getAllPPE().subscribe((res:any) => {\r\n      console.log('PPEAll=>', res);\r\n      let data = res.data;\r\n      data.forEach((element, index) => {\r\n        element.index = index + 1; //adding index\r\n      });\r\n\r\n      this.ELEMENT_DATA = data;\r\n      this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n      console.log('this.ELEMENT_DATA', this.ELEMENT_DATA);\r\n\r\n      //  this.task = res.data.subComponents;\r\n    });\r\n  }\r\n  edit(element){\r\n    const dialogRef = this.dialog.open(EditPPEComponent, {\r\n      width: \"550px\",\r\n      data: element,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if ((result == \"true\")) {\r\n        this.getAllPPEs();\r\n      }\r\n      console.log(\"The dialog was closed\");\r\n    });\r\n  }\r\n  delete(item) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: `Do you want to delete \"${item.title}\"?`,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#00B96F',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Delete!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.logicalFormInfo\r\n        .deletePPE(item._id)\r\n        .subscribe((res) => {\r\n          Swal.fire({\r\n            title: 'Parameter Deleted successfully',\r\n            showConfirmButton: false,\r\n            timer: 1200,\r\n          });\r\n          console.log('deleted res', res);\r\n          this.getAllPPEs();\r\n            \r\n        });\r\n      \r\n      }\r\n    });\r\n  }\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n}\r\n","<div class=\"col ml-2 pt-3\">\r\n<h1> PPE List</h1>\r\n</div>\r\n    <div class=\"col ml-2 mb-2\">\r\n      \r\n      <button  class=\"btn btn-outline-primary mt-1 mr-2 float-right\"[routerLink]=\"['/admin/siteInfo/addPPE']\">\r\n        <i class=\"fas fa-plus mr-2\"></i>Add PPE \r\n      </button>\r\n    </div>\r\n    <div class=\"col-6\">\r\n      <mat-form-field>\r\n        <input\r\n          matInput\r\n          #input\r\n          placeholder=\"Search\"\r\n          (keyup)=\"applyFilter($event)\"\r\n        />\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div class=\"\">\r\n      \r\n      <table mat-table [dataSource]=\"dataSource\" matSort >\r\n    \r\n        <!-- Position Column -->\r\n        <ng-container matColumnDef=\"index\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header=\"index\"> No. </th>\r\n          <td mat-cell *matCellDef=\"let element\">{{element.index}}</td>\r\n        </ng-container>\r\n    \r\n        <!-- Name Column -->\r\n       \r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"title\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header=\"title\"> Name </th>\r\n      <td mat-cell *matCellDef=\"let element\"><span   class=\"flex-start\" > <pre  style=\" font-family: Roboto, Helvetica Neue, sans-serif; font-size: 14px;\">{{element.title}} </pre> </span>  </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"action\">\r\n      <th mat-header-cell *matHeaderCellDef> Action </th>\r\n      <td mat-cell *matCellDef=\"let element\"> \r\n        <!-- <i class=\"fas fa-pencil-alt mr-2 \" (click)=\"edit(element)\" title=\"edit\"></i>  <i  class=\"fas fa-trash ml-2 \" (click)=\"delete(element)\" title=\"delete\"></i>  -->\r\n        <button mat-icon-button class=\"mr-2\" aria-label=\"Example icon button with a delete icon\" (click)=\"edit(element)\">\r\n          <mat-icon >edit</mat-icon>\r\n        </button>\r\n        <button mat-icon-button aria-label=\"Example icon button with a delete icon\" (click)=\"delete(element)\">\r\n          <mat-icon >delete</mat-icon>\r\n        </button>\r\n      </td>\r\n    </ng-container>\r\n    <!-- <ng-container matColumnDef=\"edit\">\r\n        <th mat-header-cell *matHeaderCellDef> Edit </th>\r\n        <td mat-cell *matCellDef=\"let element\"(click)=\"edit(element)\"> <i class=\"fas fa-pencil-alt \"></i> \r\n        </td>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"delete\">\r\n        <th mat-header-cell *matHeaderCellDef> Delete </th>\r\n        <td mat-cell *matCellDef=\"let element\"(click)=\"delete(element)\"> <i class=\"fas fa-trash \"></i> \r\n        </td>\r\n      </ng-container> -->\r\n    \r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n        <tr class=\"mat-row\" *matNoDataRow>\r\n          <td class=\"mat-cell\" colspan=\"4\">Data Not  Found  \"{{input.value}}\"</td>\r\n        </tr>\r\n      \r\n      </table>\r\n    \r\n      <mat-paginator [pageSizeOptions]=\"[20]\"\r\n                     showFirstLastButtons \r\n                     aria-label=\"Select page of periodic elements\">\r\n      </mat-paginator>\r\n    </div>\r\n    \r\n","import { EditLicenceCatComponent } from './edit-licence-cat/edit-licence-cat.component';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport {  ViewChild } from '@angular/core';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table'\r\nimport { MatSort } from '@angular/material/sort';\r\n@Component({\r\n  selector: 'app-licence-cat',\r\n  templateUrl: './licence-cat.component.html',\r\n  styleUrls: ['./licence-cat.component.scss']\r\n})\r\nexport class LicenceCatComponent implements OnInit {\r\n\r\n  mode: any;\r\n  jobTaskData: any = [];\r\n  ELEMENT_DATA = [];\r\n  /////////////mat table////////////////\r\n  displayedColumns: string[] = ['index', 'title' ,'action'];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n  /////////////mat table end////////////////\r\n\r\n  constructor(private logicalFormInfo: LogicalFormInfoService,private dialog:MatDialog) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getAllLicenceCat();\r\n  }\r\n\r\n  getAllLicenceCat() {\r\n    this.logicalFormInfo.getAllLicenceCat().subscribe((res) => {\r\n      console.log('getAllLicenceCat=>', res);\r\n      // this.jobTaskData = res.data[0].subComponents;\r\n      let data = res.data;\r\n      data.forEach((element, index) => {\r\n        element.index = index + 1; //adding index\r\n      });\r\n\r\n      this.ELEMENT_DATA = data;\r\n      this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n      //  this.task = res.data.subComponents;\r\n    });\r\n \r\n  }\r\n  \r\n  edit(element){\r\n    const dialogRef = this.dialog.open(EditLicenceCatComponent, {\r\n      width: \"550px\",\r\n      data: element,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if ((result == \"true\")) {\r\n        this.getAllLicenceCat();\r\n      }\r\n      console.log(\"The dialog was closed\");\r\n    });\r\n  }\r\n\r\n  delete(item) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: `Do you want to delete \"${item.title}\"?`,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#00B96F',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Delete!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.logicalFormInfo\r\n        .deleteLicenceCat(item._id)\r\n        .subscribe((res) => {\r\n          Swal.fire({\r\n            title: 'Category Deleted successfully',\r\n            showConfirmButton: false,\r\n            timer: 1200,\r\n          });\r\n          console.log('deleted res', res);\r\n          this.getAllLicenceCat();\r\n            \r\n        });\r\n      }\r\n    });\r\n  }\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n}\r\n","<div class=\"col ml-2 pt-3\">\r\n<h1> Trade Category List</h1>\r\n</div>\r\n<div class=\"col ml-2 mb-2\">\r\n  \r\n  <button  class=\"btn btn-outline-primary mt-1 mr-2 float-right\"(click)=\"edit('')\">\r\n    <i class=\"fas fa-folder-plus mr-2\"></i>Add Category \r\n  </button>\r\n</div>\r\n<div class=\"col-6\">\r\n  <mat-form-field>\r\n    <input\r\n      matInput\r\n      #input\r\n      placeholder=\"Search\"\r\n      (keyup)=\"applyFilter($event)\"\r\n    />\r\n  </mat-form-field>\r\n</div>\r\n<div class=\"\">\r\n  <table mat-table [dataSource]=\"dataSource\" matSort>\r\n\r\n    <!-- Position Column -->\r\n    <ng-container matColumnDef=\"index\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> No. </th>\r\n      <td mat-cell *matCellDef=\"let element\">{{element.index}}</td>\r\n    </ng-container>\r\n\r\n    <!-- Name Column -->\r\n   \r\n<!-- Name Column -->\r\n<ng-container matColumnDef=\"title\">\r\n  <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\r\n  <td mat-cell *matCellDef=\"let element\"> <span class=\"flex-start\">{{element.title}} </span></td>\r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"action\">\r\n  <th mat-header-cell *matHeaderCellDef> Action </th>\r\n  <td mat-cell *matCellDef=\"let element\"> \r\n    <!-- <i class=\"fas fa-pencil-alt mr-2 \" (click)=\"edit(element)\" title=\"edit\"></i>  <i  class=\"fas fa-trash ml-2 \" (click)=\"delete(element)\" title=\"delete\"></i>  -->\r\n    <button mat-icon-button class=\"mr-2\" aria-label=\"Example icon button with a delete icon\" (click)=\"edit(element)\">\r\n      <mat-icon >edit</mat-icon>\r\n    </button>\r\n    <button mat-icon-button aria-label=\"Example icon button with a delete icon\" (click)=\"delete(element)\">\r\n      <mat-icon >delete</mat-icon>\r\n    </button>\r\n  </td>\r\n</ng-container>\r\n<!-- <ng-container matColumnDef=\"edit\">\r\n  <th mat-header-cell *matHeaderCellDef> Edit </th>\r\n  <td mat-cell *matCellDef=\"let element\"(click)=\"edit(element)\"> <i class=\"fas fa-pencil-alt \"></i> \r\n  </td>\r\n</ng-container>\r\n<ng-container matColumnDef=\"delete\">\r\n  <th mat-header-cell *matHeaderCellDef> Delete </th>\r\n  <td mat-cell *matCellDef=\"let element\"(click)=\"delete(element)\"> <i class=\"fas fa-trash \"></i> \r\n  </td>\r\n</ng-container> -->\r\n\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n    <tr class=\"mat-row\" *matNoDataRow>\r\n      <td class=\"mat-cell\" colspan=\"4\"> Data Not  Found  \"{{input.value}}\"</td>\r\n    </tr>\r\n  </table>\r\n\r\n  <mat-paginator [pageSizeOptions]=\"[20]\"\r\n                 showFirstLastButtons \r\n                 aria-label=\"Select page of periodic elements\">\r\n  </mat-paginator>\r\n</div>\r\n","import { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { FormGroup, FormBuilder, FormArray, Validators } from '@angular/forms';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-adding-cust',\r\n  templateUrl: './adding-cust.component.html',\r\n  styleUrls: ['./adding-cust.component.scss']\r\n})\r\nexport class AddingCustComponent implements OnInit {\r\n  StatesData:any=[''];\r\n  addCustomerForm: FormGroup;\r\n  numberOfLineBreaks:any;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private logicalFormInfoService: LogicalFormInfoService,\r\n    private router: Router,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.addCustomerForm = this.fb.group({\r\n      customerName: ['',Validators.required],\r\n      customerContact: ['',Validators.required],\r\n      streetAddress: ['',Validators.required],\r\n      stateId: ['',Validators.required],\r\n      postCode: ['',Validators.required],\r\n      ABN: ['',Validators.required],\r\n      contacts: this.fb.array([]),\r\n      // customerContactPhone:[''],\r\n      // customerEmail:[''],\r\n    })\r\n    this.addCustomerDetails();\r\n    this.getAllStates();\r\n  }\r\n  addCustomerDetails() {\r\n    this.customerArr().push(this.customerForm());\r\n\r\n  }\r\n  customerArr(): FormArray {\r\n    return this.addCustomerForm.get('contacts') as FormArray;\r\n  }\r\n  customerForm(): FormGroup {\r\n    return this.fb.group({\r\n      email: ['',Validators.required],\r\n      phone: ['',Validators.required],\r\n      position: ['',Validators.required]\r\n\r\n    });\r\n  }\r\n  removeCustomerDetails(i) {\r\n    const item = <FormArray>this.addCustomerForm.controls['contacts'];\r\n    if (item.length > 1) {\r\n      item.removeAt(i);\r\n\r\n    }\r\n  }\r\n  onSubmit() {\r\n    console.log(this.addCustomerForm.value);\r\n\r\n    this.logicalFormInfoService.addCustomer(this.addCustomerForm.value).subscribe(res => {\r\n      console.log(\"addCustomerForm=>\", res)\r\n      //this.dialogRef.close('ok')\r\n      this.router.navigate(['/admin/siteInfo/addCustomer']);\r\n    }, (err) => {\r\n      console.error(err);\r\n    });\r\n  }\r\n  \r\n  getAllStates() {\r\n    this.logicalFormInfoService.getAllStates().subscribe((res: any) => {\r\n      console.log('setStatesDetails=>', res);\r\n      this.StatesData = res.data;\r\n    });\r\n  }\r\n  calcHeight(value) {\r\n    this.numberOfLineBreaks = (value.match(/\\n/g) || []).length+1;\r\n    console.log(\"numberOfLineBreaks\",this.numberOfLineBreaks)\r\n }\r\n}\r\n","<div class=\"btn btn-outline-primary\" [routerLink]=\"['/admin/siteInfo/addCustomer']\">\r\n  <i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\r\n</div>\r\n\r\n   \r\n      \r\n<section class=\"content\" style=\"height: 60%;\">\r\n    <div [formGroup]=\"addCustomerForm\" class=\"container px-4 py-4 bg-white\">\r\n        <h2>Add Customer</h2>\r\n        <hr>\r\n        <div class=\"row\">\r\n          <div class=\"my-3 col\">\r\n            <p for=\"exampleFormControlInput1\" class=\"form-Label\">Customer Name</p>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"customerName\"\r\n              formControlName=\"customerName\"\r\n            />\r\n          </div>\r\n          <div class=\"my-3 col\">\r\n            <p for=\"exampleFormControlInput1\" class=\"form-Label\">Customer Contact</p>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"customerContact\"\r\n              formControlName=\"customerContact\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"my-3 col\">\r\n            <p for=\"exampleFormControlInput1\" class=\"form-Label\">Street Address</p>\r\n            <textarea autosize\r\n        \r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"customerStreetAddress\"\r\n              formControlName=\"streetAddress\"\r\n            ></textarea>\r\n          </div>\r\n          <div class=\"my-3 col\">\r\n            <p for=\"exampleFormControlInput1\" class=\"form-Label\">State</p>\r\n            <select class=\"form-select form-control\" aria-label=\"Default select example\" formControlName=\"stateId\" >\r\n              <option value=\"\" selected hidden> Select State</option>\r\n             <option *ngFor=\"let state of StatesData\" [value]=\"state._id\">{{state.title}}</option>\r\n           \r\n           </select>\r\n            <!-- <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"customerState\"\r\n              formControlName=\"customerState\"\r\n            /> -->\r\n          </div>\r\n          <div class=\"my-3 col\">\r\n            <p for=\"exampleFormControlInput1\" class=\"form-Label\">PostCode</p>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"customerPostCode\"\r\n              formControlName=\"postCode\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n        <div class=\"my-3 col\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">Australian Business Name (ABN)</p>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            id=\"businessName\"\r\n            formControlName=\"ABN\"\r\n          />\r\n        </div>\r\n        </div>\r\n        <!-- <div class=\"row\">\r\n          <div class=\"my-3 col\">\r\n            <p for=\"exampleFormControlInput1\" class=\"form-Label\">Customer Contact Phone</p>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"siteName\"\r\n              formControlName=\"customerContactPhone\"\r\n            />\r\n          </div>\r\n          <div class=\"my-3 col\">\r\n            <p for=\"exampleFormControlInput1\" class=\"form-Label\">Customer Email</p>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"siteName\"\r\n              formControlName=\"customerEmail\"\r\n            />\r\n          </div>\r\n        </div>  -->\r\n        <ng-container formArrayName=\"contacts\">\r\n          <ng-container\r\n            *ngFor=\"let control of customerArr().controls; let i = index\"\r\n            [formGroupName]=\"i\"\r\n          >\r\n            <div>\r\n            <h1> Contact {{i+1}}</h1>\r\n              <div class=\"row\">\r\n\r\n                <div class=\"my-3 col-3\">\r\n                  <p for=\"exampleFormControlInput1\" class=\"form-Label\"> Position</p>\r\n                  <input\r\n                    type=\"text\"\r\n                    formControlName=\"position\"\r\n                   \r\n                    class=\"form-control\"\r\n                    id=\"position\"\r\n                  />\r\n                </div>\r\n                <div class=\"my-3 col-3\">\r\n                  <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n                   Email\r\n                  </p>\r\n                  <input\r\n                  type=\"text\"\r\n                  formControlName=\"email\"\r\n             \r\n                  class=\"form-control\"\r\n                  id=\"email\"\r\n                />\r\n                </div>\r\n                <div class=\"my-3 col-3\">\r\n                  <p for=\"exampleFormControlInput1\" class=\"form-Label\">  Phone Number</p>\r\n                  <input\r\n                    type=\"text\"\r\n                    formControlName=\"phone\"\r\n                  \r\n                    class=\"form-control\"\r\n                    id=\"phone\"\r\n                  />\r\n                </div>\r\n              \r\n                <div class=\" my-3 col-1 my-auto\">\r\n                  <span class=\"material-icons\"  style=\"margin-top: 35%\"   (click)=\"addCustomerDetails()\"\r\n                    >add_circle_outline\r\n                  </span>\r\n                </div>\r\n                <div class=\"my-3 col-1 my-auto\">\r\n                  <span class=\"material-icons\"  style=\"margin-top: 35%\"  (click)=\"removeCustomerDetails(i)\">\r\n                    remove_circle_outline\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <hr />\r\n          </ng-container>\r\n        </ng-container>\r\n      <div >\r\n        <button (click)=\"onSubmit()\" class=\"btn btn-primary\" [disabled]=\"addCustomerForm.invalid && addCustomerForm.get('contacts').invalid\">\r\n          Submit\r\n        </button>\r\n      </div>\r\n   \r\n     </div> \r\n     </section>","import { EditCOPComponent } from './edit-cop/edit-cop.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { SetTitleService } from 'src/app/utils/services/set-title.service';\r\nimport { MatSort } from '@angular/material/sort';\r\n@Component({\r\n  selector: 'app-code-of-pract',\r\n  templateUrl: './code-of-pract.component.html',\r\n  styleUrls: ['./code-of-pract.component.scss']\r\n})\r\nexport class CodeOfPractComponent implements OnInit {\r\n\r\n  mode: any;\r\n  jobTaskData: any = [];\r\n  ELEMENT_DATA = [];\r\n  /////////////mat table////////////////\r\n  displayedColumns: string[] = ['index', 'title' ,'action'];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n  /////////////mat table end////////////////\r\n\r\n  constructor(private logicalFormInfo: LogicalFormInfoService,private dialog:MatDialog, private setTitle: SetTitleService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getAllCodeOfPractice();\r\n    this.setTitle.setTitle('WHS-Code of Practice');\r\n  }\r\n\r\n  getAllCodeOfPractice() {\r\n   \r\n    this.logicalFormInfo.getAllCOP().subscribe((res:any) => {\r\n      console.log('codeOfPractice=>', res);\r\n      // this.jobTaskData = res.data[0].subComponents;\r\n      let data = res.data;\r\n      data.forEach((element, index) => {\r\n        element.index = index + 1; //adding index\r\n      });\r\n\r\n      this.ELEMENT_DATA = data;\r\n      this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort=this.sort;\r\n      //  this.task = res.data.subComponents;\r\n    });\r\n \r\n  }\r\n  edit(element){\r\n    const dialogRef = this.dialog.open(EditCOPComponent, {\r\n      width: \"550px\",\r\n      data: element,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if ((result == \"true\")) {\r\n        this.getAllCodeOfPractice();\r\n      }\r\n      console.log(\"The dialog was closed\");\r\n    });\r\n  }\r\n  delete(item) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: `Do you want to delete \"${item.title}\"?`,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#00B96F',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Delete!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.logicalFormInfo\r\n        .deleteCOP(item._id)\r\n        .subscribe((res) => {\r\n          Swal.fire({\r\n            title: 'Parameter Deleted successfully',\r\n            showConfirmButton: false,\r\n            timer: 1200,\r\n          });          \r\n          this.getAllCodeOfPractice();\r\n            \r\n        });\r\n      }\r\n    });\r\n  }\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n}\r\n","<div class=\"col ml-2 pt-3\">\r\n<h1> Code Of Practice List</h1>\r\n</div>\r\n<div class=\"col ml-2 mb-2\">\r\n  \r\n  <button  class=\"btn btn-outline-primary mt-1 mr-2 float-right\"[routerLink]=\"['/admin/siteInfo/addCOP']\">\r\n    <i class=\"fas fa-folder-plus mr-2\"></i>Add Code Of Practice \r\n  </button>\r\n</div>\r\n<div class=\"col-6\">\r\n  <mat-form-field>\r\n    <input\r\n      matInput\r\n      #input\r\n      placeholder=\"Search\"\r\n      (keyup)=\"applyFilter($event)\"\r\n    />\r\n  </mat-form-field>\r\n</div>\r\n<div class=\"\">\r\n  <table mat-table [dataSource]=\"dataSource\" matSort>\r\n\r\n    <!-- Position Column -->\r\n    <ng-container matColumnDef=\"index\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> No. </th>\r\n      <td mat-cell *matCellDef=\"let element\">{{element.index}}</td>\r\n    </ng-container>\r\n\r\n    <!-- Name Column -->\r\n   \r\n<!-- Name Column -->\r\n<ng-container matColumnDef=\"title\">\r\n  <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\r\n  <td mat-cell *matCellDef=\"let element\"><span class=\"flex-start\"> <pre  style=\" font-family: Roboto, Helvetica Neue, sans-serif; font-size: 14px;\"> {{element.title}} </pre></span> </td>\r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"action\">\r\n  <th mat-header-cell *matHeaderCellDef> Action </th>\r\n  <td mat-cell *matCellDef=\"let element\"> \r\n    <!-- <i class=\"fas fa-pencil-alt mr-2 \" (click)=\"edit(element)\" title=\"edit\"></i>  <i  class=\"fas fa-trash ml-2 \" (click)=\"delete(element)\" title=\"delete\"></i>  -->\r\n    <button mat-icon-button class=\"mr-2\" aria-label=\"Example icon button with a delete icon\" (click)=\"edit(element)\">\r\n      <mat-icon >edit</mat-icon>\r\n    </button>\r\n    <button mat-icon-button aria-label=\"Example icon button with a delete icon\" (click)=\"delete(element)\">\r\n      <mat-icon >delete</mat-icon>\r\n    </button>\r\n  </td>\r\n</ng-container>\r\n<!-- <ng-container matColumnDef=\"edit\">\r\n  <th mat-header-cell *matHeaderCellDef> Edit </th>\r\n  <td mat-cell *matCellDef=\"let element\"(click)=\"edit(element)\"> <i class=\"fas fa-pencil-alt \"></i> \r\n  </td>\r\n</ng-container>\r\n<ng-container matColumnDef=\"delete\">\r\n  <th mat-header-cell *matHeaderCellDef> Delete </th>\r\n  <td mat-cell *matCellDef=\"let element\"(click)=\"delete(element)\"> <i class=\"fas fa-trash \"></i> \r\n  </td>\r\n</ng-container> -->\r\n\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n    <tr class=\"mat-row\" *matNoDataRow>\r\n      <td class=\"mat-cell\" colspan=\"4\"> Data Not  Found  \"{{input.value}}\"</td>\r\n    </tr>\r\n  </table>\r\n\r\n  <mat-paginator [pageSizeOptions]=\"[20]\"\r\n                 showFirstLastButtons \r\n                 aria-label=\"Select page of periodic elements\">\r\n  </mat-paginator>\r\n</div>\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\n@Component({\r\n  selector: 'app-edit-cop',\r\n  templateUrl: './edit-cop.component.html',\r\n  styleUrls: ['./edit-cop.component.scss']\r\n})\r\nexport class EditCOPComponent implements OnInit {\r\n\r\n  editTitle: FormGroup;\r\n  dataRec: any;\r\n\r\n\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    public dialogRef: MatDialogRef<EditCOPComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.dataRec = data;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.editTitle = this.fb.group({\r\n      title: [this.dataRec.title, Validators.required],\r\n    });\r\n  }\r\n  onFormSubmit() {\r\n     \r\n    let data={\r\n      title :this.editTitle.get('title').value,\r\n    }\r\n    this.logicalFormInfo\r\n      .updateCOP(data, this.dataRec._id)\r\n      .subscribe((resData) => {\r\n        console.log('resData', resData);\r\n\r\n        this.dialogRef.close('true');\r\n        Swal.fire({\r\n          title: 'Parameter Edited successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });  \r\n          });\r\n  }\r\n  closeDialog(){\r\n    this.dialogRef.close('false');\r\n\r\n  }\r\n}\r\n","<form [formGroup]=\"editTitle\" >\r\n    <h2>Edit Code Of Practice</h2>\r\n    <textarea   autosize \r\n    class=\"form-control sign\"   formControlName=\"title\" ></textarea>\r\n    <br>\r\n    \r\n    <div class=\"row\">\r\n        <div class=\"col-sm-2 offset-8 \">\r\n            <button mat-raised-button (click)=\"closeDialog()\">Close</button>\r\n        </div>\r\n        <div class=\"col-sm-2  \">\r\n            <button mat-raised-button  [disabled]=\"!editTitle.valid\"(click)=\"onFormSubmit()\">Edit</button>\r\n        </div>\r\n    </div>\r\n</form>   \r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n  FormArray,\r\n  \r\n} from '@angular/forms';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-add-job-task',\r\n  templateUrl: './add-job-task.component.html',\r\n  styleUrls: ['./add-job-task.component.scss']\r\n})\r\nexport class AddJobTaskComponent implements OnInit {\r\n\r\n  jobTaskDetails!: FormGroup;\r\n  formData: any;numberOfLineBreaks: any;\r\n;\r\n  licenceCatAll=[];\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private router: Router,\r\n    private logicalFormInfo:LogicalFormInfoService\r\n  ) { \r\n    this.jobTaskDetails=this.fb.group({\r\n     // mode:\"JobTask\",\r\n      arrObj: this.fb.array([]),\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.addAction();\r\n    this.getAllCategories();\r\n  }\r\n  getAllCategories() {\r\n    this.logicalFormInfo.getAllLicenceCat().subscribe((res) => {\r\n      console.log('getAllLicenceCat=>', res);\r\n      this.licenceCatAll = res.data;\r\n    });\r\n  }\r\n  addAction() {\r\n    {\r\n      this.add().push(this.newAction());\r\n    }\r\n  }\r\n  add(): FormArray {\r\n    return this.jobTaskDetails.get('arrObj') as FormArray;\r\n  }\r\n  newAction(): FormGroup {\r\n    return this.fb.group({     \r\n      title: ['', Validators.required],\r\n      tradeCategoryId: ['', Validators.required],      \r\n    });\r\n  }\r\n  \r\n  removeSafetyModule(i) {\r\n    const item = <FormArray>this.jobTaskDetails.controls['arrObj'];\r\n    if (item.length > 1) {\r\n      item.removeAt(i);\r\n    \r\n    }\r\n  }\r\n  onFormSubmit() {\r\n    console.log(this.jobTaskDetails.get('arrObj').value);\r\n    let data={\r\n      arrObj:this.jobTaskDetails.get('arrObj').value\r\n    }\r\n    this.logicalFormInfo.addMultipleJobTask(data).subscribe((data) => {\r\n      console.log('JOBTask=>', data);\r\n      Swal.fire({\r\n        title: 'Parameter Added successfully',\r\n        showConfirmButton: false,\r\n        timer: 1200,\r\n      }); \r\n      this.router.navigate(['/admin/siteInfo/jobTask']);      \r\n    },(err)=>{console.error(err);} \r\n  \r\n    );\r\n    \r\n  }\r\n  calcHeight(value) {\r\n    this.numberOfLineBreaks = (value.match(/\\n/g) || []).length+1;\r\n    console.log(\"numberOfLineBreaks\",this.numberOfLineBreaks)\r\n  }\r\n \r\n}\r\n","<div class=\"btn btn-outline-primary\" [routerLink]=\"['/admin/siteInfo/jobTask']\">\r\n  <i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\r\n</div>\r\n<div class=\"container px-4 py-4 bg-white\">\r\n  <form [formGroup]=\"jobTaskDetails\" (ngSubmit)=\"onFormSubmit()\">\r\n    <h2 class=\"text-center\">Add Job Task</h2>\r\n    <br />\r\n    <hr />\r\n    <ng-container formArrayName=\"arrObj\">\r\n      <ng-container\r\n        *ngFor=\"let control of add().controls; let i = index\"\r\n        [formGroupName]=\"i\"\r\n      >\r\n        <div class=\"row justify-content-center\">\r\n          <div class=\"mr-1 mt-2\">\r\n            <span \r\n              >{{i+1}}.\r\n            </span>\r\n          </div>\r\n          <div class=\"col-4\">\r\n            <textarea autosize\r\n        \r\n              type=\"text\"\r\n              formControlName=\"title\"\r\n              class=\"form-control sign\"\r\n              id=\"title\"\r\n            ></textarea>\r\n          </div>\r\n          <div class=\"col-4\">\r\n            <select class=\"form-select form-control\" aria-label=\"Default select example\" formControlName=\"tradeCategoryId\">\r\n              <option value=\"\" selected hidden>Select category</option>\r\n              <option *ngFor=\"let tradeCat of licenceCatAll\" [value]=\"tradeCat._id\">{{tradeCat.title}}</option>\r\n         \r\n            </select>\r\n          </div>\r\n          <div class=\"col-1 mt-2\">\r\n            <span class=\"material-icons\" (click)=\"addAction()\"\r\n              >add_circle_outline\r\n            </span>\r\n          </div>\r\n          <div class=\"col-1 mt-2\">\r\n            <span class=\"material-icons\" (click)=\"removeSafetyModule(i)\">\r\n              remove_circle_outline\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        <hr />\r\n      </ng-container>\r\n    </ng-container>\r\n    <br />\r\n\r\n    <div class=\"col-md-2\">\r\n      <button type=\"submit\" class=\"btn btn-primary\"[disabled]=\"jobTaskDetails.get('arrObj').invalid\">Add</button>\r\n    </div>\r\n  </form>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\n\r\n@Component({\r\n  selector: 'app-add-and-edit-nature-incident',\r\n  templateUrl: './add-and-edit-nature-incident.component.html',\r\n  styleUrls: ['./add-and-edit-nature-incident.component.scss']\r\n})\r\nexport class AddAndEditNatureIncidentComponent implements OnInit {\r\n  natureformgp!: FormGroup;\r\n  formData: any;\r\n  numberOfLineBreaks:any;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private router: Router,\r\n    private logicalFormInfo:LogicalFormInfoService\r\n  ) { \r\n    this.natureformgp=this.fb.group({\r\n     // mode:\"JobTask\",\r\n      arrObj: this.fb.array([]),\r\n      \r\n    });\r\n    \r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.addAction();\r\n    \r\n  }\r\n  addAction() {\r\n    {\r\n      this.add().push(this.newAction());\r\n    }\r\n  }\r\n  add(): FormArray {\r\n    return this.natureformgp.get('arrObj') as FormArray;\r\n  }\r\n  newAction(): FormGroup {\r\n    return this.fb.group({\r\n     \r\n      title: ['', Validators.required],\r\n    });\r\n  }\r\n  \r\n  removeSafetyModule(i) {\r\n    const item = <FormArray>this.natureformgp.controls['arrObj'];\r\n    if (item.length > 1) {\r\n      item.removeAt(i);\r\n    \r\n    }\r\n  }\r\n  onFormSubmit() {\r\n    console.log(this.natureformgp.value);\r\n    let data={\r\n      arrObj:this.natureformgp.get('arrObj').value\r\n    }\r\n    this.logicalFormInfo.addMultipleNatOfInc(data).subscribe((data) => {\r\n      console.log('nature=>', data);\r\n      this.router.navigate(['/admin/siteInfo/natureOfIncident']);      \r\n    },(err)=>{console.error(err);} \r\n  \r\n    );\r\n    \r\n  }\r\n calcHeight(value) {\r\n    this.numberOfLineBreaks = (value.match(/\\n/g) || []).length+1;\r\n    console.log(\"numberOfLineBreaks\",this.numberOfLineBreaks)\r\n }\r\n\r\n\r\n}\r\n","<div class=\"btn btn-outline-primary\" [routerLink]=\"['/admin/siteInfo/natureOfIncident']\">\r\n    <i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\r\n  </div>\r\n  <div class=\"container px-4 py-4 bg-white\">\r\n    <form [formGroup]=\"natureformgp\" (ngSubmit)=\"onFormSubmit()\">\r\n      <h2 class=\"text-center\">Add Nature Of Incdent</h2>\r\n      <br />\r\n      <hr />\r\n      <ng-container formArrayName=\"arrObj\">\r\n        <ng-container\r\n          *ngFor=\"let control of add().controls; let i = index\"\r\n          [formGroupName]=\"i\"\r\n        >\r\n          <div class=\"row justify-content-center\">\r\n            <div class=\"mr-1 mt-2\">\r\n              <span \r\n                >{{i+1}}.\r\n              </span>\r\n            </div>\r\n            <div class=\"col-8\">\r\n              <textarea autosize\r\n               (keyup)=\" calcHeight($event.target.value)\"\r\n               [rows]=\"numberOfLineBreaks\"\r\n                type=\"text\"\r\n                formControlName=\"title\"\r\n                class=\"form-control sign\"\r\n                id=\"name\"\r\n              ></textarea>\r\n            </div>\r\n            <div class=\"col-1 mt-2\">\r\n              <span class=\"material-icons\" (click)=\"addAction()\"\r\n                >add_circle_outline\r\n              </span>\r\n            </div>\r\n            <div class=\"col-1 mt-2\">\r\n              <span class=\"material-icons\" (click)=\"removeSafetyModule(i)\">\r\n                remove_circle_outline\r\n              </span>\r\n            </div>\r\n          </div>\r\n  \r\n          <hr />\r\n        </ng-container>\r\n      </ng-container>\r\n      <br />\r\n  \r\n      <div class=\"col-md-2\">\r\n        <button type=\"submit\" class=\"btn btn-primary\"[disabled]=\"natureformgp.get('arrObj').invalid\">Add</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  ","import { Component, OnInit ,ViewChild} from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport Swal from 'sweetalert2';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\n\r\nimport { SetTitleService } from 'src/app/utils/services/set-title.service';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { EditWhsManagerComponent } from './edit-whs-manager/edit-whs-manager.component';\r\n@Component({\r\n  selector: 'app-whs-manager',\r\n  templateUrl: './whs-manager.component.html',\r\n  styleUrls: ['./whs-manager.component.scss']\r\n})\r\nexport class WHSManagerComponent implements OnInit {\r\n  mode: any;\r\n  jobTaskData: any = [];\r\n  ELEMENT_DATA = [];\r\n  displayedColumns: string[] = ['index', 'name','email', 'action'];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n  constructor(private logicalFormInfo: LogicalFormInfoService, private dialog: MatDialog,\r\n    private setTitle: SetTitleService) { }\r\n\r\n    ngOnInit(): void {\r\nthis.getAllWHSManager();\r\n      this.setTitle.setTitle('WHS-WHS-Manager');\r\n    }\r\n    getAllWHSManager() {\r\n      this.logicalFormInfo.getAllWHSManager().subscribe((res: any) => {\r\n        console.log('getAllWHSManager=>', res);\r\n        // this.jobTaskData = res.data[0].subComponents;\r\n        let data = res.data\r\n        data.forEach((element, index) => {\r\n          element.index = index + 1; //adding index\r\n        });\r\n  \r\n        this.ELEMENT_DATA = data;\r\n        this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n        //  this.task = res.data.subComponents;\r\n      });\r\n  \r\n    }\r\n    edit(element) {\r\n      const dialogRef = this.dialog.open(EditWhsManagerComponent, {\r\n        width: \"550px\",\r\n        data: element,\r\n      });\r\n      dialogRef.afterClosed().subscribe((result) => {\r\n        if ((result == \"true\")) {\r\n          this.getAllWHSManager();\r\n        }\r\n        console.log(\"The dialog was closed\");\r\n      });\r\n    }\r\n    delete(item) {\r\n      Swal.fire({\r\n        title: 'Are you sure?',\r\n        text: `Do you want to delete \"${item.name}\"?`,\r\n        icon: 'warning',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#00B96F',\r\n        cancelButtonColor: '#d33',\r\n        confirmButtonText: 'Yes, Delete!',\r\n      }).then((result) => {\r\n        if (result.value) {\r\n          this.logicalFormInfo\r\n            .deleteWHSManager(item._id)\r\n            .subscribe((res) => {\r\n              Swal.fire({\r\n                title: 'Detail Deleted successfully',\r\n                showConfirmButton: false,\r\n                timer: 1200,\r\n              }); console.log('deleted res', res);\r\n              this.getAllWHSManager();\r\n  \r\n            });\r\n        }\r\n      });\r\n    }\r\n    applyFilter(event: Event) {\r\n      const filterValue = (event.target as HTMLInputElement).value;\r\n      this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    }\r\n}\r\n","<div class=\"col ml-2 pt-3\">\r\n    <h1> WHS Manager List</h1>\r\n    </div>\r\n        <div class=\"col ml-2 mb-2\">\r\n          \r\n          <button  class=\"btn btn-outline-primary mt-1 mr-2 float-right\"[routerLink]=\"['/admin/siteInfo/addWHSManager']\">\r\n            <i class=\"fas fa-folder-plus mr-2\"></i>Add WHS-Manager \r\n          </button>\r\n        </div>\r\n        <div class=\"col-6\">\r\n          <mat-form-field>\r\n            <input\r\n              matInput\r\n              #input\r\n              placeholder=\"Search\"\r\n              (keyup)=\"applyFilter($event)\"\r\n            />\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort>\r\n        \r\n            <!-- Position Column -->\r\n            <ng-container matColumnDef=\"index\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> No. </th>\r\n              <td mat-cell *matCellDef=\"let element\">{{element.index}}</td>\r\n            </ng-container>\r\n        \r\n            <!-- Name Column -->\r\n           \r\n        <!-- Name Column -->\r\n        <ng-container matColumnDef=\"name\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\r\n          <td mat-cell *matCellDef=\"let element\"> <span class=\"flex-start\">{{element.name}} </span></td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"email\">\r\n          <th mat-header-cell *matHeaderCellDef>Email</th>\r\n          <td mat-cell *matCellDef=\"let element\"> <span class=\"flex-start\">{{element.email}} </span></td>\r\n        </ng-container>\r\n      \r\n    <ng-container matColumnDef=\"action\">\r\n      <th mat-header-cell *matHeaderCellDef> Action </th>\r\n      <td mat-cell *matCellDef=\"let element\"> \r\n        <!-- <i class=\"fas fa-pencil-alt mr-2 \" (click)=\"edit(element)\" title=\"edit\"></i>  <i  class=\"fas fa-trash ml-2 \" (click)=\"delete(element)\" title=\"delete\"></i>  -->\r\n        <button mat-icon-button class=\"mr-2\" aria-label=\"Example icon button with a delete icon\" (click)=\"edit(element)\">\r\n          <mat-icon >edit</mat-icon>\r\n        </button>\r\n        <button mat-icon-button aria-label=\"Example icon button with a delete icon\" (click)=\"delete(element)\">\r\n          <mat-icon >delete</mat-icon>\r\n        </button>\r\n      </td>\r\n    </ng-container>\r\n        <!-- <ng-container matColumnDef=\"edit\">\r\n          <th mat-header-cell *matHeaderCellDef> Edit </th>\r\n          <td mat-cell *matCellDef=\"let element\"(click)=\"edit(element)\"> <i class=\"fas fa-pencil-alt \"></i> \r\n          </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"delete\">\r\n          <th mat-header-cell *matHeaderCellDef> Delete </th>\r\n          <td mat-cell *matCellDef=\"let element\"(click)=\"delete(element)\"> <i class=\"fas fa-trash \"></i> \r\n          </td>\r\n        </ng-container> -->\r\n    \r\n        \r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">Data Not  Found  \"{{input.value}}\"</td>\r\n            </tr>\r\n          </table>\r\n        \r\n          <mat-paginator [pageSizeOptions]=\"[20]\"\r\n                         showFirstLastButtons \r\n                         aria-label=\"Select page of periodic elements\">\r\n          </mat-paginator>\r\n        </div>\r\n        \r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport Swal from 'sweetalert2';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { SetTitleService } from 'src/app/utils/services/set-title.service';\r\nimport { EditChemicalComponent } from './edit-chemical/edit-chemical.component';\r\nimport { MatSort } from '@angular/material/sort';\r\n\r\n@Component({\r\n  selector: 'app-chemical',\r\n  templateUrl: './chemical.component.html',\r\n  styleUrls: ['./chemical.component.scss']\r\n})\r\nexport class ChemicalComponent implements OnInit {\r\n  jobTaskData: any = [];\r\n  ELEMENT_DATA = [];\r\n  /////////////mat table////////////////\r\n  displayedColumns: string[] = ['index', 'title', 'action'];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  allChemical: any[]=[];\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n  constructor( \r\n    private dialog: MatDialog, \r\n    private setTitle: SetTitleService,\r\n    private logicalFormInfoService: LogicalFormInfoService,\r\n    private spinner: NgxSpinnerService\r\n    ) { }\r\n  ngOnInit(): void {\r\n    this.setTitle.setTitle('WHS-Chemical Info');\r\n    this.getAllChemical()\r\n  }\r\n  getAllChemical(){\r\n    this.logicalFormInfoService.getAllChemical().subscribe((res:any)=> {\r\n      console.log(res)\r\n      let data = res.data;\r\n      data.forEach((element, index) => {\r\n        element.index = index + 1; //adding index\r\n      });\r\n\r\n      this.ELEMENT_DATA = data;\r\n      this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n      console.log('this.ELEMENT_DATA', this.ELEMENT_DATA);\r\n   })\r\n  }\r\n \r\n  edit(element) {\r\n    const dialogRef = this.dialog.open(EditChemicalComponent, {\r\n      width: \"550px\",\r\n     // height:'50%',\r\n      data: element,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if ((result == \"true\")) {\r\n        this.getAllChemical()\r\n      }\r\n      console.log(\"The dialog was closed\");\r\n    });\r\n  }\r\n  delete(item) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: `Do you want to delete \"${item.title}\"?`,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#00B96F',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Delete!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        console.log(result)\r\n        // this.model.attributes.splice(i,1);\r\n        this.spinner.show()\r\n        this.logicalFormInfoService.deleteChemical(item._id).subscribe((res => {\r\n        this.getAllChemical()\r\n        this.spinner.hide()\r\n        }))\r\n      }\r\n    });\r\n  }\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n}\r\n","<div class=\"col ml-2 pt-1\">\r\n    <h1>\r\n      Chemical Information List\r\n    </h1>\r\n  </div>\r\n  <div>\r\n  \r\n    <button type=\"button\"  [routerLink]=\"['/admin/siteInfo/addChemical']\" \r\n      class=\"btn btn-outline-primary  mr-2 float-right\"><i  class=\"fas fa-plus\"></i> Add Chemical\r\n    </button>\r\n  </div>\r\n  <div class=\"col-6\">\r\n    <mat-form-field>\r\n      <input\r\n        matInput\r\n        #input\r\n        placeholder=\"Search\"\r\n        (keyup)=\"applyFilter($event)\"\r\n      />\r\n    </mat-form-field>\r\n  </div>\r\n  <div >\r\n\r\n    <table mat-table [dataSource]=\"dataSource\" matSort>\r\n  \r\n      <!-- Position Column -->\r\n      <ng-container matColumnDef=\"index\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> No. </th>\r\n        <td mat-cell *matCellDef=\"let element,let i = index\">{{element.index}}</td>\r\n      </ng-container>\r\n  \r\n      <!-- Name Column -->\r\n  \r\n      <!-- Name Column -->\r\n      <ng-container matColumnDef=\"title\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Chemical Name </th>\r\n        <td mat-cell *matCellDef=\"let element\"> <span class=\"flex-start\">{{element.title}}</span>  </td>\r\n      </ng-container>\r\n  \r\n    \r\n<ng-container matColumnDef=\"action\">\r\n  <th mat-header-cell *matHeaderCellDef> Action </th>\r\n  <td mat-cell *matCellDef=\"let element\"> \r\n    <!-- <i class=\"fas fa-pencil-alt mr-2 \" (click)=\"edit(element)\" title=\"edit\"></i>  <i  class=\"fas fa-trash ml-2 \" (click)=\"delete(element)\" title=\"delete\"></i>  -->\r\n    <button mat-icon-button class=\"mr-2\" aria-label=\"Example icon button with a delete icon\" (click)=\"edit(element)\">\r\n      <mat-icon >edit</mat-icon>\r\n    </button>\r\n    <button mat-icon-button aria-label=\"Example icon button with a delete icon\" (click)=\"delete(element)\">\r\n      <mat-icon >delete</mat-icon>\r\n    </button>\r\n  </td>\r\n</ng-container>\r\n     \r\n<!--   \r\n      <ng-container matColumnDef=\"edit\">\r\n        <th mat-header-cell *matHeaderCellDef> Edit </th>\r\n        <td mat-cell *matCellDef=\"let element\" (click)=\"edit(element)\"> <i class=\"fas fa-pencil-alt \"></i>\r\n        </td>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"delete\">\r\n        <th mat-header-cell *matHeaderCellDef> Delete </th>\r\n        <td mat-cell *matCellDef=\"let element\" (click)=\"delete(element)\"> <i class=\"fas fa-trash \"></i>\r\n        </td>\r\n      </ng-container> -->\r\n  \r\n  \r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n      <tr class=\"mat-row\" *matNoDataRow>\r\n        <td class=\"mat-cell\" colspan=\"4\">Data Not  Found  \"{{input.value}}\"</td>\r\n      </tr>\r\n    </table>\r\n  \r\n    <mat-paginator [pageSizeOptions]=\"[20]\" showFirstLastButtons aria-label=\"Select page of periodic elements\">\r\n    </mat-paginator>\r\n  </div>","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { FormBuilder, FormGroup,  Validators,\r\n  FormArray,} from '@angular/forms';\r\n\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-add-residual-risk-level',\r\n  templateUrl: './add-residual-risk-level.component.html',\r\n  styleUrls: ['./add-residual-risk-level.component.scss']\r\n})\r\nexport class AddResidualRiskLevelComponent implements OnInit {\r\n\r\n  addResidualForm: FormGroup;\r\n  numberOfLineBreaks: any;\r\n  constructor( \r\n    private fb:FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    private router: Router,\r\n    ) { \r\n      this.addResidualForm=this.fb.group({\r\n        arrObj: this.fb.array([]),\r\n      })\r\n    }\r\n\r\n    ngOnInit(): void {\r\n      this.addResidual();\r\n    }\r\n    addResidual() {\r\n      {\r\n        this.add().push(this.newAction());\r\n      }\r\n    }\r\n    add(): FormArray {\r\n      return this.addResidualForm.get('arrObj') as FormArray;\r\n    }\r\n    newAction(): FormGroup {\r\n      return this.fb.group({\r\n       \r\n        title: ['', Validators.required],\r\n      });\r\n    }\r\n    \r\n    removeResidual(i) {\r\n      const item = <FormArray>this.addResidualForm.controls['arrObj'];\r\n      if (item.length > 1) {\r\n        item.removeAt(i);\r\n      \r\n      }\r\n    }\r\n    onFormSubmit() {\r\n      console.log(this.addResidualForm.value);\r\n      let data={\r\n        arrObj:this.addResidualForm.get('arrObj').value\r\n      }\r\n      this.logicalFormInfo.addMultipleResidual(data).subscribe((data) => {\r\n        console.log('chemical=>', data);\r\n        this.router.navigate(['/admin/siteInfo/residual']);      \r\n      },(err)=>{console.error(err);} \r\n    \r\n      );\r\n      \r\n    }\r\n    calcHeight(value) {\r\n      this.numberOfLineBreaks = (value.match(/\\n/g) || []).length+1;\r\n      console.log(\"numberOfLineBreaks\",this.numberOfLineBreaks)\r\n    }\r\n}\r\n","\r\n<div class=\"btn btn-outline-primary\" [routerLink]=\"['/admin/siteInfo/addResidualForm']\">\r\n    <i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\r\n  </div>\r\n\r\n    <div class=\"container px-4 py-4 bg-white\" >\r\n        <form  [formGroup]=\"addResidualForm\" (ngSubmit)=\"onFormSubmit()\">\r\n      <h2  class=\"text-center\"> Residual-Risk-Level Info</h2>\r\n      <br />\r\n      <hr />\r\n      <ng-container formArrayName=\"arrObj\">\r\n        <ng-container\r\n          *ngFor=\"let control of add().controls; let i = index\"\r\n          [formGroupName]=\"i\"\r\n        >\r\n          <div class=\"row justify-content-center\">\r\n            <div class=\"mr-1 mt-2\">\r\n              <span \r\n                >{{i+1}}.\r\n              </span>\r\n            </div>\r\n            <div class=\"col-8\">\r\n              <textarea autosize\r\n              (keyup)=\" calcHeight($event.target.value)\"\r\n              [rows]=\"numberOfLineBreaks\"\r\n                type=\"text\"\r\n                formControlName=\"title\"\r\n                class=\"form-control sign\"\r\n                id=\"title\"\r\n              ></textarea>\r\n            </div>\r\n            <div class=\"col-1 mt-2\">\r\n              <span class=\"material-icons\" (click)=\"addResidual()\"\r\n                >add_circle_outline\r\n              </span>\r\n            </div>\r\n            <div class=\"col-1 mt-2\">\r\n              <span class=\"material-icons\" (click)=\"removeResidual(i)\">\r\n                remove_circle_outline\r\n              </span>\r\n            </div>\r\n          </div>\r\n  \r\n          <hr />\r\n        </ng-container>\r\n      </ng-container>\r\n      <br />\r\n          <div  class=\"col-md-2\">\r\n            <button class=\"btn btn-primary\"[disabled]=\"addResidualForm.get('arrObj').invalid\" >\r\n              Add\r\n            </button>\r\n          </div>\r\n        \r\n        </form>\r\n        </div>","import { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { FormGroup, FormBuilder, FormArray, Validators } from '@angular/forms';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-edit-site-inspection-topic',\r\n  templateUrl: './edit-site-inspection-topic.component.html',\r\n  styleUrls: ['./edit-site-inspection-topic.component.scss'],\r\n})\r\nexport class EditSiteInspectionTopicComponent implements OnInit {\r\n  StatesData: any = [''];\r\n  siteInspectionTopicEdit: FormGroup;\r\n  numberOfLineBreaks: any;\r\n  datevalue: any;\r\n  formData: any;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private logicalFormInfoService: LogicalFormInfoService,\r\n    private router: Router,\r\n    private dialogRef: MatDialogRef<EditSiteInspectionTopicComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.formData = data.element;\r\n    console.log('fdata', this.formData);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.siteInspectionTopicEdit = this.fb.group({\r\n      categoryId: [this.formData.categoryId, Validators.required],\r\n      action: [this.formData.action, Validators.required],\r\n      item: [this.formData.item, Validators.required],\r\n      topic: [this.formData.topic, Validators.required],\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    console.log(this.siteInspectionTopicEdit.value);\r\n\r\n    this.logicalFormInfoService\r\n      .updateSiteInspectionTopic(\r\n        this.formData._id,\r\n        this.siteInspectionTopicEdit.value\r\n      )\r\n      .subscribe(\r\n        (res) => {\r\n          console.log('addCustomerForm=>', res);\r\n          this.dialogRef.close('true');\r\n          this.router.navigate([\r\n            '/admin/siteInfo/siteinspectiontopic/' + this.data.categoryId,\r\n          ]);\r\n        },\r\n        (err) => {\r\n          console.error(err);\r\n        }\r\n      );\r\n  }\r\n}\r\n","<section class=\"content\" style=\"height: 60%\">\r\n  <div\r\n    [formGroup]=\"siteInspectionTopicEdit\"\r\n    class=\"container px-4 py-4 bg-white\"\r\n  >\r\n    <div>\r\n      <div class=\"row\">\r\n        <p for=\"exampleFormControlInput1\" class=\"form-Label\">Topic</p>\r\n        <input\r\n          type=\"text\"\r\n          formControlName=\"topic\"\r\n          class=\"form-control\"\r\n          id=\"phone\"\r\n        />\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"my-3 col\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">Item</p>\r\n          <input\r\n            type=\"text\"\r\n            formControlName=\"item\"\r\n            class=\"form-control\"\r\n            id=\"position\"\r\n          />\r\n        </div>\r\n        <div class=\"my-3 col\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">Action</p>\r\n          <input\r\n            type=\"text\"\r\n            formControlName=\"action\"\r\n            class=\"form-control\"\r\n            id=\"direction\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <hr />\r\n    <div>\r\n      <button\r\n        (click)=\"onSubmit()\"\r\n        class=\"btn btn-primary\"\r\n        [disabled]=\"siteInspectionTopicEdit.invalid\"\r\n      >\r\n        Update\r\n      </button>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n  FormArray,\r\n  \r\n} from '@angular/forms';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-add-manager',\r\n  templateUrl: './add-manager.component.html',\r\n  styleUrls: ['./add-manager.component.scss']\r\n})\r\nexport class AddManagerComponent implements OnInit {\r\n  ManagerDetails!: FormGroup;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private router: Router,\r\n    private logicalFormInfo:LogicalFormInfoService\r\n  ) { \r\n    this.ManagerDetails=this.fb.group({\r\n     // mode:\"JobTask\",\r\n      arrObj: this.fb.array([]),\r\n    });\r\n  }\r\n \r\n\r\n \r\n  ngOnInit(): void {\r\n    this.addAction();\r\n  \r\n  }\r\n \r\n  addAction() {\r\n    {\r\n      this.add().push(this.newAction());\r\n    }\r\n  }\r\n  add(): FormArray {\r\n    return this.ManagerDetails.get('arrObj') as FormArray;\r\n  }\r\n  newAction(): FormGroup {\r\n    return this.fb.group({     \r\n      name: ['', Validators.required],\r\n      email: ['', Validators.required],      \r\n    });\r\n  }\r\n  \r\n  removeSafetyModule(i) {\r\n    const item = <FormArray>this.ManagerDetails.controls['arrObj'];\r\n    if (item.length > 1) {\r\n      item.removeAt(i);\r\n    \r\n    }\r\n  }\r\n  onFormSubmit() {\r\n    console.log(this.ManagerDetails.get('arrObj').value);\r\n    let data={\r\n      arrObj:this.ManagerDetails.get('arrObj').value\r\n    }\r\n    this.logicalFormInfo.addMultipleManager(data).subscribe((data) => {\r\n      console.log(\"ManagerDetails=>\", data);\r\n      Swal.fire({\r\n        title: 'Manager Detail Added successfully',\r\n        showConfirmButton: false,\r\n        timer: 1200,\r\n      }); \r\n      this.router.navigate(['/admin/siteInfo/manager']);      \r\n    },(err)=>{console.error(err);} \r\n  \r\n    );\r\n    \r\n  }\r\n}\r\n","\r\n<div class=\"btn btn-outline-primary\" [routerLink]=\"['/admin/siteInfo/manager']\">\r\n    <i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\r\n  </div>\r\n  <div class=\"container px-4 py-4 bg-white\">\r\n    <form [formGroup]=\"ManagerDetails\" (ngSubmit)=\"onFormSubmit()\">\r\n      <h2 class=\"text-center\">Add Manager</h2>\r\n      <br />\r\n      <hr />\r\n      <ng-container formArrayName=\"arrObj\">\r\n        <ng-container\r\n          *ngFor=\"let control of add().controls; let i = index\"\r\n          [formGroupName]=\"i\"\r\n        >\r\n          <div class=\"row justify-content-center\">\r\n            <div class=\"mr-1 mt-2\">\r\n              <span \r\n                >{{i+1}}.\r\n              </span>\r\n            </div>\r\n            <div class=\"col-4\">\r\n              <p for=\"exampleFormControlInput1\" class=\"form-Label\">Name</p>\r\n              <input\r\n           \r\n                type=\"text\"\r\n                formControlName=\"name\"\r\n                class=\"form-control sign\"\r\n                id=\"name\"\r\n             />\r\n            </div>\r\n            <div class=\"col-4\">\r\n              <p for=\"exampleFormControlInput1\" class=\"form-Label\">Email</p>\r\n                <input\r\n           \r\n                type=\"text\"\r\n                formControlName=\"email\"\r\n                class=\"form-control sign\"\r\n                id=\"email\"\r\n             />\r\n              \r\n            </div>\r\n            <div class=\"col-1 mt-2\">\r\n              <span class=\"material-icons\" (click)=\"addAction()\"\r\n                >add_circle_outline\r\n              </span>\r\n            </div>\r\n            <div class=\"col-1 mt-2\">\r\n              <span class=\"material-icons\" (click)=\"removeSafetyModule(i)\">\r\n                remove_circle_outline\r\n              </span>\r\n            </div>\r\n          </div>\r\n  \r\n          <hr />\r\n        </ng-container>\r\n      </ng-container>\r\n      <br />\r\n  \r\n      <div class=\"col-md-2\">\r\n        <button type=\"submit\" class=\"btn btn-primary\"[disabled]=\"ManagerDetails.get('arrObj').invalid\">Add</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  ","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { SetTitleService } from 'src/app/utils/services/set-title.service';\r\nimport Swal from 'sweetalert2';\r\nimport { EditTypeOfIncidentComponent } from './edit-type-of-incident/edit-type-of-incident.component';\r\n\r\n@Component({\r\n  selector: 'app-type-of-incident',\r\n  templateUrl: './type-of-incident.component.html',\r\n  styleUrls: ['./type-of-incident.component.scss']\r\n})\r\nexport class TypeOfIncidentComponent implements OnInit {\r\n  jobTaskData: any = [];\r\n  ELEMENT_DATA = [];\r\n  /////////////mat table////////////////\r\n  displayedColumns: string[] = ['index', 'title','action'];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n  /////////////mat table end////////////////\r\n\r\n  constructor(\r\n   \r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    private dialog:MatDialog,\r\n    private setTitle:SetTitleService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getAllTypeOfInc();\r\n    this.setTitle.setTitle('WHS-Type Of Incident');\r\n    \r\n  }\r\n\r\n  getAllTypeOfInc() {\r\n    this.logicalFormInfo.getAllTypeOfIncident().subscribe((res:any) => {\r\n      console.log('type=>', res);\r\n      let data = res.data;\r\n      data.forEach((element, index) => {\r\n        element.index = index + 1; //adding index\r\n      });\r\n\r\n      this.ELEMENT_DATA = data;\r\n      this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n      console.log('this.ELEMENT_DATA', this.ELEMENT_DATA);\r\n\r\n      //  this.task = res.data.subComponents;\r\n    });\r\n  }\r\n\r\n  edit(element){\r\n    const dialogRef = this.dialog.open(EditTypeOfIncidentComponent, {\r\n      width: \"550px\",\r\n      data: element,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if ((result == \"true\")) {\r\n        this.getAllTypeOfInc();\r\n      }\r\n      console.log(\"The dialog was closed\");\r\n    });\r\n  }\r\n  delete(item) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: `Do you want to delete \"${item.title}\"?`,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#00B96F',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Delete!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.logicalFormInfo\r\n        .deleteTypeOfIncident(item._id)\r\n        .subscribe((res) => {\r\n          Swal.fire({\r\n            title: 'Parameter Deleted successfully',\r\n            showConfirmButton: false,\r\n            timer: 1200,\r\n          });\r\n          console.log('deleted res', res);\r\n          this.getAllTypeOfInc();\r\n            \r\n        });\r\n      \r\n      }\r\n    });\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n}\r\n","<div class=\"col ml-2 pt-3\">\r\n    <h1> Type Of Incident </h1>\r\n    </div>\r\n        <div class=\"col ml-2 mb-2\">\r\n          \r\n          <button  class=\"btn btn-outline-primary mt-1 mr-2 float-right\"[routerLink]=\"['/admin/siteInfo/addTypeOfIncident']\">\r\n            <i class=\"fas fa-plus mr-2\"></i>Add Type Of Incident \r\n          </button>\r\n        </div>\r\n        <div class=\"col-6\">\r\n          <mat-form-field>\r\n            <input\r\n              matInput\r\n              #input\r\n              placeholder=\"Search\"\r\n              (keyup)=\"applyFilter($event)\"\r\n            />\r\n          </mat-form-field>\r\n        </div>\r\n    \r\n        <div class=\"\">\r\n          \r\n          <table mat-table [dataSource]=\"dataSource\" matSort >\r\n        \r\n            <!-- Position Column -->\r\n            <ng-container matColumnDef=\"index\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header=\"index\"> No. </th>\r\n              <td mat-cell *matCellDef=\"let element\">{{element.index}}</td>\r\n            </ng-container>\r\n        \r\n            <!-- Name Column -->\r\n           \r\n        <!-- Name Column -->\r\n        <ng-container matColumnDef=\"title\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header=\"title\"> Name </th>\r\n          <td mat-cell *matCellDef=\"let element\"><span class=\"flex-start\">{{element.title}}</span>  </td>\r\n        </ng-container>\r\n    \r\n        <ng-container matColumnDef=\"action\">\r\n          <th mat-header-cell *matHeaderCellDef> Action </th>\r\n          <td mat-cell *matCellDef=\"let element\"> \r\n            <!-- <i class=\"fas fa-pencil-alt mr-2 \" (click)=\"edit(element)\" title=\"edit\"></i>  <i  class=\"fas fa-trash ml-2 \" (click)=\"delete(element)\" title=\"delete\"></i>  -->\r\n            <button mat-icon-button class=\"mr-2\" aria-label=\"Example icon button with a delete icon\" (click)=\"edit(element)\">\r\n              <mat-icon >edit</mat-icon>\r\n            </button>\r\n            <button mat-icon-button aria-label=\"Example icon button with a delete icon\" (click)=\"delete(element)\">\r\n              <mat-icon >delete</mat-icon>\r\n            </button>\r\n          </td>\r\n        </ng-container>\r\n        <!-- <ng-container matColumnDef=\"edit\">\r\n            <th mat-header-cell *matHeaderCellDef> Edit </th>\r\n            <td mat-cell *matCellDef=\"let element\"(click)=\"edit(element)\"> <i class=\"fas fa-pencil-alt \"></i> \r\n            </td>\r\n          </ng-container>\r\n          <ng-container matColumnDef=\"delete\">\r\n            <th mat-header-cell *matHeaderCellDef> Delete </th>\r\n            <td mat-cell *matCellDef=\"let element\"(click)=\"delete(element)\"> <i class=\"fas fa-trash \"></i> \r\n            </td>\r\n          </ng-container> -->\r\n        \r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">Data Not  Found  \"{{input.value}}\"</td>\r\n            </tr>\r\n          \r\n          </table>\r\n        \r\n          <mat-paginator [pageSizeOptions]=\"[20]\"\r\n                         showFirstLastButtons \r\n                         aria-label=\"Select page of periodic elements\">\r\n          </mat-paginator>\r\n        </div>\r\n        \r\n    ","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n  FormArray,\r\n  \r\n} from '@angular/forms'\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { Router } from '@angular/router';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-add-licence',\r\n  templateUrl: './add-licence.component.html',\r\n  styleUrls: ['./add-licence.component.scss']\r\n})\r\nexport class AddLicenceComponent implements OnInit {\r\n  addLicenceFG!: FormGroup;\r\n  formData: any;\r\n  categories=[];\r\n  numberOfLineBreaks: any;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private router: Router,\r\n    private logicalFormInfo:LogicalFormInfoService\r\n  ) { \r\n    this.addLicenceFG=this.fb.group({\r\n     // mode:\"JobTask\",\r\n      arrObj: this.fb.array([]),\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.addAction();\r\n    this.getAllLicenceCat();\r\n  }\r\n  addAction() {\r\n    {\r\n      this.add().push(this.newAction());\r\n    }\r\n  }\r\n  add(): FormArray {\r\n    return this.addLicenceFG.get('arrObj') as FormArray;\r\n  }\r\n  newAction(): FormGroup {\r\n    return this.fb.group({     \r\n      title: ['', Validators.required],\r\n      tradeCategoryId: ['', Validators.required],\r\n    });\r\n  }\r\n  \r\n  removeSafetyModule(i) {\r\n    const item = <FormArray>this.addLicenceFG.controls['arrObj'];\r\n    if (item.length > 1) {\r\n      item.removeAt(i);    \r\n    }\r\n  }\r\n  getAllLicenceCat() {\r\n    this.logicalFormInfo.getAllLicenceCat().subscribe((res) => {\r\n      console.log('getAllLicenceCat=>', res);\r\n      this.categories = res.data; \r\n    });\r\n \r\n  }\r\n  onFormSubmit() {\r\n    let data={\r\n      arrObj:this.addLicenceFG.get('arrObj').value\r\n    }\r\n    console.log(\"data li cat\",data);\r\n    \r\n    this.logicalFormInfo.addMultipleLicence(data).subscribe((res) => {\r\n      console.log('licence=>', res);\r\n      Swal.fire({\r\n        title: 'Parameter added successfully',\r\n        showConfirmButton: false,\r\n        timer: 1200,\r\n      });\r\n      this.router.navigate(['/admin/siteInfo/licenceAndQual']);      \r\n    },(err)=>{console.error(err);} \r\n  \r\n    );\r\n    \r\n  }\r\n  calcHeight(value) {\r\n    this.numberOfLineBreaks = (value.match(/\\n/g) || []).length+1;\r\n    console.log(\"numberOfLineBreaks\",this.numberOfLineBreaks)\r\n  }\r\n\r\n}\r\n","<div class=\"btn btn-outline-primary\" [routerLink]=\"['/admin/siteInfo/licenceAndQual']\">\r\n    <i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\r\n  </div>\r\n  \r\n  <div class=\"container px-4 py-4 bg-white\">\r\n    \r\n    <form [formGroup]=\"addLicenceFG\" (ngSubmit)=\"onFormSubmit()\">\r\n      <h2 class=\"text-center\">Add Licence</h2>\r\n      <br />\r\n      <hr />\r\n      <ng-container formArrayName=\"arrObj\">\r\n        <ng-container\r\n          *ngFor=\"let control of add().controls; let i = index\"\r\n          [formGroupName]=\"i\"\r\n        >\r\n          <div class=\"row justify-content-center\">\r\n            <div class=\"mr-1 mt-2\">\r\n              <span \r\n                >{{i+1}}.\r\n              </span>\r\n            </div>\r\n            <div class=\"col-4\">\r\n              <textarea  autosize\r\n              (keyup)=\" calcHeight($event.target.value)\"\r\n              [rows]=\"numberOfLineBreaks\"\r\n                type=\"text\"\r\n                formControlName=\"title\"\r\n                class=\"form-control sign\"\r\n                id=\"name\"\r\n                placeholder=\"Licence Name\"\r\n              ></textarea>\r\n              \r\n            </div>\r\n            <div class=\"col-4\">            \r\n              <select class=\"form-select form-control\" formControlName=\"tradeCategoryId\"\r\n              aria-label=\"Default select example\">\r\n                <option value=\"\"selected hidden>Select category</option>\r\n                <option *ngFor=\"let category of categories\" [value]=\"category._id\">{{category.title}}</option>               \r\n              </select>\r\n            </div>\r\n            <div class=\"col-1 mt-2\">\r\n              <span class=\"material-icons\" (click)=\"addAction()\"\r\n                >add_circle_outline\r\n              </span>\r\n            </div>\r\n            <div class=\"col-1 mt-2\">\r\n              <span class=\"material-icons\" (click)=\"removeSafetyModule(i)\">\r\n                remove_circle_outline\r\n              </span>\r\n            </div>\r\n          </div>\r\n  \r\n          <hr />\r\n        </ng-container>\r\n      </ng-container>\r\n      <br />\r\n  \r\n      <div class=\"col-md-2\">\r\n        <button type=\"submit\" class=\"btn btn-primary\"[disabled]=\"addLicenceFG.get('arrObj').invalid\">Add</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  ","import { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { FormGroup, FormBuilder, FormArray, Validators } from '@angular/forms';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-add-site-inspection-topic',\r\n  templateUrl: './add-site-inspection-topic.component.html',\r\n  styleUrls: ['./add-site-inspection-topic.component.scss'],\r\n})\r\nexport class AddSiteInspectionTopicComponent implements OnInit {\r\n  siteInspectionTopicAdd: FormGroup;\r\n  categoryId: any;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private logicalFormInfoService: LogicalFormInfoService,\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.categoryId = this.activatedRoute.snapshot.params.id;\r\n    this.siteInspectionTopicAdd = this.fb.group({\r\n      arrObj: this.fb.array([]),\r\n    });\r\n    this.addTopic();\r\n  }\r\n  addTopic() {\r\n    this.topicArr().push(this.topicForm());\r\n  }\r\n  topicArr(): FormArray {\r\n    return this.siteInspectionTopicAdd.get('arrObj') as FormArray;\r\n  }\r\n  topicForm(): FormGroup {\r\n    return this.fb.group({\r\n      categoryId: [this.categoryId, Validators.required],\r\n      action: ['', Validators.required],\r\n      item: ['', Validators.required],\r\n      topic: ['', Validators.required],\r\n    });\r\n  }\r\n  removeTopic(i) {\r\n    const item = <FormArray>this.siteInspectionTopicAdd.controls['arrObj'];\r\n    if (item.length > 1) {\r\n      item.removeAt(i);\r\n    }\r\n  }\r\n  onSubmit() {\r\n    console.log(this.siteInspectionTopicAdd.value);\r\n\r\n    this.logicalFormInfoService\r\n      .addMultipleSiteInspectionTopic(this.siteInspectionTopicAdd.value)\r\n      .subscribe(\r\n        (res) => {\r\n          console.log('addCustomerForm=>', res);\r\n          //this.dialogRef.close('ok')\r\n          this.router.navigate([\r\n            '/admin/siteInfo/siteinspectiontopic/' + this.categoryId,\r\n          ]);\r\n        },\r\n        (err) => {\r\n          console.error(err);\r\n        }\r\n      );\r\n  }\r\n}\r\n","<section class=\"content\" style=\"height: 60%\">\r\n  <div\r\n    class=\"btn btn-outline-primary\"\r\n    [routerLink]=\"['/admin/siteInfo/siteinspectiontopic/' + this.categoryId]\"\r\n  >\r\n    <i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\r\n  </div>\r\n  <div\r\n    [formGroup]=\"siteInspectionTopicAdd\"\r\n    class=\"container px-4 py-4 bg-white\"\r\n  >\r\n    <ng-container formArrayName=\"arrObj\">\r\n      <ng-container\r\n        *ngFor=\"let control of topicArr().controls; let i = index\"\r\n        [formGroupName]=\"i\"\r\n      >\r\n        <div>\r\n          <div class=\"row\">\r\n            <p for=\"exampleFormControlInput1\" class=\"form-Label\">Topic</p>\r\n            <input\r\n              type=\"text\"\r\n              formControlName=\"topic\"\r\n              class=\"form-control\"\r\n              id=\"phone\"\r\n            />\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"my-3 col-3\">\r\n              <p for=\"exampleFormControlInput1\" class=\"form-Label\">Item</p>\r\n              <input\r\n                type=\"text\"\r\n                formControlName=\"item\"\r\n                class=\"form-control\"\r\n                id=\"position\"\r\n              />\r\n            </div>\r\n            <div class=\"my-3 col-3\">\r\n              <p for=\"exampleFormControlInput1\" class=\"form-Label\">Action</p>\r\n              <input\r\n                type=\"text\"\r\n                formControlName=\"action\"\r\n                class=\"form-control\"\r\n                id=\"direction\"\r\n              />\r\n            </div>\r\n\r\n            <div class=\"my-3 col-1 my-auto\">\r\n              <span\r\n                class=\"material-icons\"\r\n                style=\"margin-top: 35%\"\r\n                (click)=\"addTopic()\"\r\n                >add_circle_outline\r\n              </span>\r\n            </div>\r\n            <div class=\"my-3 col-1 my-auto\">\r\n              <span\r\n                class=\"material-icons\"\r\n                style=\"margin-top: 35%\"\r\n                (click)=\"removeTopic(i)\"\r\n              >\r\n                remove_circle_outline\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <hr />\r\n      </ng-container>\r\n    </ng-container>\r\n    <div>\r\n      <button\r\n        (click)=\"onSubmit()\"\r\n        class=\"btn btn-primary\"\r\n        [disabled]=\"\r\n          siteInspectionTopicAdd.invalid &&\r\n          siteInspectionTopicAdd.get('arrObj').invalid\r\n        \"\r\n      >\r\n        Submit\r\n      </button>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n  FormArray,\r\n  \r\n} from '@angular/forms';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-add-whs-manager',\r\n  templateUrl: './add-whs-manager.component.html',\r\n  styleUrls: ['./add-whs-manager.component.scss']\r\n})\r\nexport class AddWhsManagerComponent implements OnInit {\r\n  WHSManagerDetails!: FormGroup;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private router: Router,\r\n    private logicalFormInfo:LogicalFormInfoService\r\n  ) { \r\n    this.WHSManagerDetails=this.fb.group({\r\n     // mode:\"JobTask\",\r\n      arrObj: this.fb.array([]),\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.addAction();\r\n  \r\n  }\r\n \r\n  addAction() {\r\n    {\r\n      this.add().push(this.newAction());\r\n    }\r\n  }\r\n  add(): FormArray {\r\n    return this.WHSManagerDetails.get('arrObj') as FormArray;\r\n  }\r\n  newAction(): FormGroup {\r\n    return this.fb.group({     \r\n      name: ['', Validators.required],\r\n      email: ['', Validators.required],      \r\n    });\r\n  }\r\n  \r\n  removeSafetyModule(i) {\r\n    const item = <FormArray>this.WHSManagerDetails.controls['arrObj'];\r\n    if (item.length > 1) {\r\n      item.removeAt(i);\r\n    \r\n    }\r\n  }\r\n  onFormSubmit() {\r\n    console.log(this.WHSManagerDetails.get('arrObj').value);\r\n    let data={\r\n      arrObj:this.WHSManagerDetails.get('arrObj').value\r\n    }\r\n    this.logicalFormInfo.addMultipleWHSManager(data).subscribe((data) => {\r\n      console.log('WHSManagerDetails=>', data);\r\n      Swal.fire({\r\n        title: 'WHSManager Detail Added successfully',\r\n        showConfirmButton: false,\r\n        timer: 1200,\r\n      }); \r\n      this.router.navigate(['/admin/siteInfo/WHS-Manager']);      \r\n    },(err)=>{console.error(err);} \r\n  \r\n    );\r\n    \r\n  }\r\n\r\n}\r\n","<div class=\"btn btn-outline-primary\" [routerLink]=\"['/admin/siteInfo/WHS-Manager']\">\r\n    <i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\r\n  </div>\r\n  <div class=\"container px-4 py-4 bg-white\">\r\n    <form [formGroup]=\"WHSManagerDetails\" (ngSubmit)=\"onFormSubmit()\">\r\n      <h2 class=\"text-center\">Add WHS-Manager</h2>\r\n      <br />\r\n      <hr />\r\n      <ng-container formArrayName=\"arrObj\">\r\n        <ng-container\r\n          *ngFor=\"let control of add().controls; let i = index\"\r\n          [formGroupName]=\"i\"\r\n        >\r\n          <div class=\"row justify-content-center\">\r\n            <div class=\"mr-1 mt-2\">\r\n              <span \r\n                >{{i+1}}.\r\n              </span>\r\n            </div>\r\n            <div class=\"col-4\">\r\n              <p for=\"exampleFormControlInput1\" class=\"form-Label\">Name</p>\r\n              <input\r\n           \r\n                type=\"text\"\r\n                formControlName=\"name\"\r\n                class=\"form-control sign\"\r\n                id=\"name\"\r\n             />\r\n            </div>\r\n            <div class=\"col-4\">\r\n              <p for=\"exampleFormControlInput1\" class=\"form-Label\">Email</p>\r\n\r\n                <input\r\n           \r\n                type=\"text\"\r\n                formControlName=\"email\"\r\n                class=\"form-control sign\"\r\n                id=\"email\"\r\n             />\r\n              \r\n            </div>\r\n            <div class=\"col-1 mt-2\">\r\n              <span class=\"material-icons\" (click)=\"addAction()\"\r\n                >add_circle_outline\r\n              </span>\r\n            </div>\r\n            <div class=\"col-1 mt-2\">\r\n              <span class=\"material-icons\" (click)=\"removeSafetyModule(i)\">\r\n                remove_circle_outline\r\n              </span>\r\n            </div>\r\n          </div>\r\n  \r\n          <hr />\r\n        </ng-container>\r\n      </ng-container>\r\n      <br />\r\n  \r\n      <div class=\"col-md-2\">\r\n        <button type=\"submit\" class=\"btn btn-primary\"[disabled]=\"WHSManagerDetails.get('arrObj').invalid\">Add</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  ","import { Component, OnInit } from '@angular/core';\r\nimport { SetTitleService } from '../utils/services/set-title.service';\r\n\r\n@Component({\r\n  selector: 'app-site-info',\r\n  templateUrl: './site-info.component.html',\r\n  styleUrls: ['./site-info.component.scss']\r\n})\r\nexport class SiteInfoComponent implements OnInit {\r\n\r\n  constructor(private setTitle:SetTitleService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.setTitle.setTitle('WHS-Site Info');\r\n  }\r\n\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport Swal from 'sweetalert2';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\n@Component({\r\n  selector: 'app-edit-ppe',\r\n  templateUrl: './edit-ppe.component.html',\r\n  styleUrls: ['./edit-ppe.component.scss']\r\n})\r\nexport class EditPPEComponent implements OnInit {\r\n  editTitle!: FormGroup;\r\n  dataRec: any;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    public dialogRef: MatDialogRef<EditPPEComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.dataRec = data;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.editTitle = this.fb.group({\r\n      title: [this.dataRec.title, Validators.required],\r\n    });\r\n  }\r\n  onFormSubmit() {\r\n     \r\n    let data={\r\n      title :this.editTitle.get('title').value\r\n    }\r\n    this.logicalFormInfo\r\n      .updatePPE(data, this.dataRec._id)\r\n      .subscribe((resData) => {\r\n        console.log('resData', resData);\r\n\r\n        this.dialogRef.close('true');\r\n        Swal.fire({\r\n          title: 'Parameter Updated successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });     \r\n       });\r\n  }\r\n  closeDialog(){\r\n    this.dialogRef.close('false');\r\n\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"editTitle\" >\r\n    <h2>Edit PPE</h2>\r\n    \r\n\r\n    <!-- <mat-label>Edit PPE</mat-label> -->\r\n    <textarea   autosize \r\n    class=\"form-control sign\"   formControlName=\"title\" ></textarea>\r\n    \r\n    <br>\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-2 offset-8 \">\r\n            <button mat-raised-button (click)=\"closeDialog()\">Close</button>\r\n        </div>\r\n        <div class=\"col-sm-2  \">\r\n            <button mat-raised-button  [disabled]=\"!editTitle.valid\"(click)=\"onFormSubmit()\">Update</button>\r\n        </div>\r\n    </div>\r\n</form>   \r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n  FormArray,\r\n  \r\n} from '@angular/forms'\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-add-licence-cat',\r\n  templateUrl: './add-licence-cat.component.html',\r\n  styleUrls: ['./add-licence-cat.component.scss']\r\n})\r\nexport class AddLicenceCatComponent implements OnInit {\r\n\r\n  addLicenceCatFG!: FormGroup;\r\n  formData: any;;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private router: Router,\r\n    private logicalFormInfo:LogicalFormInfoService\r\n  ) { \r\n    this.addLicenceCatFG=this.fb.group({\r\n     // mode:\"JobTask\",\r\n      arrObj: this.fb.array([]),\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.addAction();\r\n  }\r\n  addAction() {\r\n    {\r\n      this.add().push(this.newAction());\r\n    }\r\n  }\r\n  add(): FormArray {\r\n    return this.addLicenceCatFG.get('arrObj') as FormArray;\r\n  }\r\n  newAction(): FormGroup {\r\n    return this.fb.group({\r\n     \r\n      title: ['', Validators.required],\r\n    });\r\n  }\r\n  \r\n  removeSafetyModule(i) {\r\n    const item = <FormArray>this.addLicenceCatFG.controls['arrObj'];\r\n    if (item.length > 1) {\r\n      item.removeAt(i);\r\n    \r\n    }\r\n  }\r\n  onFormSubmit() {\r\n    let data={\r\n      arrObj:this.addLicenceCatFG.get('arrObj').value\r\n    }\r\n    this.logicalFormInfo.addLicenceCat(data).subscribe((data) => {\r\n      console.log('JOBTask=>', data);\r\n      this.router.navigate(['/admin/siteInfo/licenceCat']);      \r\n    },(err)=>{console.error(err);} \r\n  \r\n    );\r\n    \r\n  }\r\n \r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { LandingPageInfoServiceService } from 'src/app/utils/services/landing-page-info-service.service';\r\n\r\nimport { UploadFileServiceService } from './../../utils/services/upload-file-service.service';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\n\r\nimport Swal from 'sweetalert2';\r\nimport { FormBuilder, FormGroup, Validators, FormArray } from '@angular/forms';\r\nimport { AddHighRiskConstructionComponent } from './add-high-risk-construction/add-high-risk-construction.component';\r\nimport { EditHighRiskConstructionComponent } from './edit-high-risk-construction/edit-high-risk-construction.component';\r\nimport { AfterViewInit,ViewChild } from '@angular/core';\r\n\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { SetTitleService } from 'src/app/utils/services/set-title.service';\r\nimport { MatSort } from '@angular/material/sort';\r\n@Component({\r\n  selector: 'app-high-risk-con',\r\n  templateUrl: './high-risk-con.component.html',\r\n  styleUrls: ['./high-risk-con.component.scss'],\r\n})\r\nexport class HighRiskConComponent implements AfterViewInit, OnInit {\r\n  formData: any;\r\n  mode: any;\r\n  highRiskConstructionData: any = [];\r\n  myId: any;\r\n  isEdit = false;\r\n  Is_id: any;\r\n  Edit = false;\r\n  Add = false;\r\n  collectionSize = 10;\r\n  hide = false;\r\n  closeResult: string;\r\n  componentId = '';\r\n  ELEMENT_DATA = [];\r\n  /////////////mat table////////////////\r\n  displayedColumns: string[] = ['index', 'title' ,'action'];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor(\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    public dialog: MatDialog,\r\n    private spinner: NgxSpinnerService,\r\n    public router: Router,\r\n    private setTitle:SetTitleService\r\n  ) {\r\n    \r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllHighRisk();\r\n    this.setTitle.setTitle('WHS-High Risk Construction List');\r\n  }\r\n  \r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n \r\n  // onFormSubmit() {\r\n  //   console.log(this.riskDetails);\r\n  //   this.logicalFormInfo\r\n  //     .addFormData(this.riskDetails.getRawValue())\r\n  //     .subscribe((data) => {\r\n  //       console.log('risk=>', data);\r\n  //       this.formData = data;\r\n  //     });\r\n  // }\r\n  // getAllHighRisk() {\r\n  //   this.mode = 'Risk';\r\n  //   this.logicalFormInfo.getFormDataById(this.mode).subscribe((res) => {\r\n  //     console.log('riskDetails data=>', res);\r\n  //     this.componentId = res.data[0]._id;\r\n  //     this.highRiskConstructionData = res.data[0];\r\n  //     console.log('highRiskConstructionData', this.highRiskConstructionData);\r\n  //   });\r\n  // }\r\n  // editTask(title,id, i) {\r\n  //   console.log('id', id);\r\n  //   this.myId = id;\r\n  //   this.isEdit = true;\r\n  //   this.mode = 'Risk';\r\n\r\n  //   let dialogRef = this.dialog.open(EditHighRiskConstructionComponent, {\r\n  //     data: {        \r\n  //       EditData: id,\r\n  //       componentId: this.componentId,\r\n  //       index: i,\r\n  //       title:title\r\n  //       // moduleName: name,\r\n  //     },\r\n\r\n  //     width: '1000px',\r\n  //     height: '500px',\r\n  //   });\r\n  //   dialogRef.afterClosed().subscribe((result) => {\r\n  //     console.log('-> openDialog -> result', result);\r\n\r\n  //     if ((result = 'true')) {\r\n  //       this.getAllHighRisk();\r\n  //     }\r\n  //     console.log('The dialog was closed');\r\n  //   });\r\n  // }\r\n\r\n  // addTask() {\r\n  //   let dialogRef = this.dialog.open(AddHighRiskConstructionComponent, {\r\n  //     data: {\r\n  //       action: 'new',\r\n  //       EditData: this.componentId,\r\n  //     },\r\n  //     width: '600px',\r\n  //     height: '400px',\r\n  //   });\r\n  //   dialogRef.afterClosed().subscribe((result) => {\r\n  //     console.log('openDialog->result', result);\r\n  //     if ((result = 'true')) {\r\n  //       this.getAllHighRisk();\r\n  //     }\r\n  //   });\r\n\r\n  // }\r\n  // deleteopen(content, id) {\r\n  //   console.log('deleteopen close id=>', id);\r\n  //   this.Is_id = id;\r\n  //   this.modalService\r\n  //     .open(content, { ariaLabelledBy: 'modal-basic-title' })\r\n  //     .result.then(\r\n  //       (result) => {\r\n  //         this.closeResult = `Closed with: ${result}`;\r\n  //         console.log('deleting');\r\n  //         this.logicalFormInfo\r\n  //           .deleteSubComponent(this.Is_id)\r\n  //           .subscribe((res) => {\r\n  //             Swal.fire('Deleted Successfully');\r\n  //             console.log('deleted res', res);\r\n  //             this.getAllHighRisk();\r\n  //           });\r\n  //       },\r\n  //       (reason) => {\r\n  //         this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n  //         console.log('dismissed');\r\n  //       }\r\n  //     );\r\n  // }\r\n\r\n  // delete(item) {\r\n  //   Swal.fire({\r\n  //     title: 'Are you sure?',\r\n  //     text: `Do you want to delete \"${item}\"?`,\r\n  //     icon: 'warning',\r\n  //     showCancelButton: true,\r\n  //     confirmButtonColor: '#00B96F',\r\n  //     cancelButtonColor: '#d33',\r\n  //     confirmButtonText: 'Yes, Delete!',\r\n  //   }).then((result) => {\r\n  //     if (result.value) {\r\n  //     }\r\n  //   });\r\n  // }\r\n  // private getDismissReason(reason: any): string {\r\n  //   if (reason === ModalDismissReasons.ESC) {\r\n  //     return 'by pressing ESC';\r\n  //   } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n  //     return 'by clicking on a backdrop';\r\n  //   } else {\r\n  //     return `with: ${reason}`;\r\n  //   }\r\n  // }\r\n  getAllHighRisk() {\r\n    this.logicalFormInfo.getAllRisk().subscribe((res:any) => {\r\n      console.log('Risk=>', res);\r\n      // this.jobTaskData = res.data[0].subComponents;\r\n      let data = res.data;\r\n      data.forEach((element, index) => {\r\n        element.index = index + 1; //adding index\r\n      });\r\n\r\n      this.ELEMENT_DATA = data;\r\n      this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n      //  this.task = res.data.subComponents;\r\n    });\r\n \r\n  }\r\n  edit(element){\r\n    const dialogRef = this.dialog.open(EditHighRiskConstructionComponent, {\r\n      width: \"550px\",\r\n      data: element,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if ((result == \"true\")) {\r\n        this.getAllHighRisk();\r\n      }\r\n      console.log(\"The dialog was closed\");\r\n    });\r\n  }\r\n  delete(item) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: `Do you want to delete \"${item.title}\"?`,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#00B96F',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Delete!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.logicalFormInfo\r\n        .deleteRisk(item._id)\r\n        .subscribe((res) => {\r\n          Swal.fire({\r\n            title: 'Parameter Deleted successfully',\r\n            showConfirmButton: false,\r\n            timer: 1200,\r\n          });\r\n          console.log('deleted res', res);\r\n          this.getAllHighRisk();\r\n            \r\n        });\r\n      }\r\n    });\r\n  }\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n}\r\n","  \r\n    <!-- <form [formGroup]=\"jobTaskDetails\" (ngSubmit)=\" onFormSubmit()\">\r\n\r\n      <h2 class=\"text-center\">High Risk Construction </h2>\r\n     <br>\r\n     <hr>\r\n      <ng-container formArrayName=\"arrObj\">\r\n          <ng-container\r\n            *ngFor=\"let control of add().controls; let i = index\"\r\n            [formGroupName]=\"i\"\r\n          >\r\n            <div>\r\n              <div class=\"row\">\r\n               \r\n                <div class=\"col-8\">\r\n               <input\r\n                    type=\"text\"\r\n                    formControlName=\"title\"\r\n                    class=\"form-control sign\"\r\n                    id=\"name\"\r\n                  />\r\n                </div>\r\n                <div class=\"col-1 mt-2\">\r\n                <span class=\"material-icons\" (click)=\"addAction()\"\r\n                  >add_circle_outline\r\n                </span>\r\n              </div> \r\n                 <div class=\"col-1 mt-2\">\r\n                <span class=\"material-icons\" (click)=\"removeSafetyModule(i)\">\r\n                  remove_circle_outline\r\n                </span>\r\n              </div> \r\n              </div>\r\n            </div>\r\n            <hr />\r\n          </ng-container>\r\n        </ng-container>\r\n        <br>\r\n      \r\n        <div class=\"col-md-2\"> \r\n          <button type=\"submit\" class=\"btn btn-primary \"> Submit</button>\r\n        </div>\r\n        </form>\r\n      </div> \r\n      \r\n      \r\n      <section class=\"content\">\r\n        <div class=\"text-center\">\r\n          <h1 class=\"card\"> High Risk Construction</h1>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"col ml-2 mb-2\">\r\n            <button (click)=\"addTask()\" class=\"btn btn-outline-primary mt-1 mr-2 float-right\">\r\n              <i class=\"fas fa-folder-plus mr-2\"></i>Add Parameter \r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div class=\"container-fluid\">\r\n          <div class=\"row\">\r\n            <div class=\"col-12\">\r\n              <div class=\"card\">\r\n                <div class=\"card-body p-0\">\r\n                  <table class=\"table table-hover text-wrap\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th style=\"width: 5%\">Index</th>\r\n                        <th style=\"width: 80%\">Title</th>\r\n                        <th  style=\"width: 5%\">Edit</th>\r\n                        <th style=\"width: 5%\" >Delete</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <tr *ngFor=\"let risk of highRiskConstructionData.subComponents; let i = index\">\r\n                        <td>{{ i+1 }}</td>\r\n                        <td>{{ risk.title }}</td>\r\n \r\n                        <td>\r\n                          <button class=\"btn btn-info btn-sm mr-2\" (click)=\"editTask(risk.title ,risk._id,i)\">\r\n                            <i class=\"fas fa-pencil-alt \"></i> \r\n                          </button>\r\n                        </td>\r\n                        <td>\r\n                          <button class=\"btn btn-danger btn-sm mr-2\" (click)=\"deleteopen(deletemodal, risk._id)\">\r\n                            <i class=\"fas fa-trash \"></i>\r\n                          </button>\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      <ng-template #deletemodal let-modal>\r\n        <div class=\"modal-header titel\">\r\n          <h2 class=\"modal-title titel\" id=\"modal-basic-title\">Are you sure?</h2>\r\n        </div>\r\n        <div class=\"modal-body deletebody\">\r\n          <p></p>\r\n          <p>Do you want to delete this Service</p>\r\n        </div>\r\n        <div class=\"modal-footer footer\">\r\n          <button type=\"button\" class=\"btn mr-3\" style=\"background-color: #eeeeee\" (click)=\"modal.dismiss('Save click')\">\r\n            Cancel\r\n          </button>\r\n          <button type=\"button\" class=\"btn btn-danger ml-3\" aria-label=\"Close\" (click)=\"modal.close('Cross click')\">\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </ng-template> -->\r\n      <div class=\"col ml-2 pt-3\">\r\n      <h1>High Risk List</h1>\r\n      </div>\r\n    <div class=\"col ml-2 mb-2\">\r\n      \r\n      <button  class=\"btn btn-outline-primary mt-1 mr-2 float-right\"[routerLink]=\"['/admin/siteInfo/addHighRisk']\">\r\n        <i class=\"fas fa-folder-plus mr-2\"></i>Add High Risk \r\n      </button>\r\n    </div>\r\n    <div class=\"col-6\">\r\n      <mat-form-field>\r\n        <input\r\n          matInput\r\n          #input\r\n          placeholder=\"Search\"\r\n          (keyup)=\"applyFilter($event)\"\r\n        />\r\n      </mat-form-field>\r\n    </div>\r\n    <div class=\"\">\r\n      <table mat-table [dataSource]=\"dataSource\" matSort>\r\n    \r\n        <!-- Position Column -->\r\n        <ng-container matColumnDef=\"index\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> No. </th>\r\n          <td mat-cell *matCellDef=\"let element\">{{element.index}}</td>\r\n        </ng-container>\r\n    \r\n        <!-- Name Column -->\r\n       \r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"title\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\r\n      <td mat-cell *matCellDef=\"let element\"><span class=\"flex-start\"><pre  style=\" font-family: Roboto, Helvetica Neue, sans-serif; font-size: 14px;\">{{element.title}} </pre> </span> </td>\r\n    </ng-container>\r\n  \r\n<ng-container matColumnDef=\"action\">\r\n  <th mat-header-cell *matHeaderCellDef> Action </th>\r\n  <td mat-cell *matCellDef=\"let element\"> \r\n    <!-- <i class=\"fas fa-pencil-alt mr-2 \" (click)=\"edit(element)\" title=\"edit\"></i>  <i  class=\"fas fa-trash ml-2 \" (click)=\"delete(element)\" title=\"delete\"></i>  -->\r\n    <button mat-icon-button class=\"mr-2\" aria-label=\"Example icon button with a delete icon\" (click)=\"edit(element)\">\r\n      <mat-icon >edit</mat-icon>\r\n    </button>\r\n    <button mat-icon-button aria-label=\"Example icon button with a delete icon\" (click)=\"delete(element)\">\r\n      <mat-icon >delete</mat-icon>\r\n    </button>\r\n  </td>\r\n</ng-container>\r\n    <!-- <ng-container matColumnDef=\"edit\">\r\n      <th mat-header-cell *matHeaderCellDef> Edit </th>\r\n      <td mat-cell *matCellDef=\"let element\"(click)=\"edit(element)\"> <i class=\"fas fa-pencil-alt \"></i> \r\n      </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"delete\">\r\n      <th mat-header-cell *matHeaderCellDef> Delete </th>\r\n      <td mat-cell *matCellDef=\"let element\"(click)=\"delete(element)\"> <i class=\"fas fa-trash \"></i> \r\n      </td>\r\n    </ng-container> -->\r\n\r\n    \r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n        <tr class=\"mat-row\" *matNoDataRow>\r\n          <td class=\"mat-cell\" colspan=\"4\">Data Not  Found  \"{{input.value}}\"</td>\r\n        </tr>\r\n      </table>\r\n    \r\n      <mat-paginator [pageSizeOptions]=\"[20]\"\r\n                     showFirstLastButtons \r\n                     aria-label=\"Select page of periodic elements\">\r\n      </mat-paginator>\r\n    </div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n  FormArray,\r\n  \r\n} from '@angular/forms'\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-add-ppe',\r\n  templateUrl: './add-ppe.component.html',\r\n  styleUrls: ['./add-ppe.component.scss']\r\n})\r\nexport class AddPPEComponent implements OnInit {\r\n  PPEformgp!: FormGroup;\r\n  formData: any;\r\n  numberOfLineBreaks:any;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private router: Router,\r\n    private logicalFormInfo:LogicalFormInfoService\r\n  ) { \r\n    this.PPEformgp=this.fb.group({\r\n     // mode:\"JobTask\",\r\n      arrObj: this.fb.array([]),\r\n      \r\n    });\r\n    \r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.addAction();\r\n    \r\n  }\r\n  addAction() {\r\n    {\r\n      this.add().push(this.newAction());\r\n    }\r\n  }\r\n  add(): FormArray {\r\n    return this.PPEformgp.get('arrObj') as FormArray;\r\n  }\r\n  newAction(): FormGroup {\r\n    return this.fb.group({\r\n     \r\n      title: ['', Validators.required],\r\n    });\r\n  }\r\n  \r\n  removeSafetyModule(i) {\r\n    const item = <FormArray>this.PPEformgp.controls['arrObj'];\r\n    if (item.length > 1) {\r\n      item.removeAt(i);\r\n    \r\n    }\r\n  }\r\n  onFormSubmit() {\r\n    console.log(this.PPEformgp.value);\r\n    let data={\r\n      arrObj:this.PPEformgp.get('arrObj').value\r\n    }\r\n    this.logicalFormInfo.addMultiplePPE(data).subscribe((data) => {\r\n      console.log('PPE=>', data);\r\n      this.router.navigate(['/admin/siteInfo/ppeSel']);      \r\n    },(err)=>{console.error(err);} \r\n  \r\n    );\r\n    \r\n  }\r\n calcHeight(value) {\r\n    this.numberOfLineBreaks = (value.match(/\\n/g) || []).length+1;\r\n    console.log(\"numberOfLineBreaks\",this.numberOfLineBreaks)\r\n }\r\n\r\n}\r\n","<div class=\"btn btn-outline-primary\" [routerLink]=\"['/admin/siteInfo/ppeSel']\">\r\n    <i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\r\n  </div>\r\n  <div class=\"container px-4 py-4 bg-white\">\r\n    <form [formGroup]=\"PPEformgp\" (ngSubmit)=\"onFormSubmit()\">\r\n      <h2 class=\"text-center\">Add PPE</h2>\r\n      <br />\r\n      <hr />\r\n      <ng-container formArrayName=\"arrObj\">\r\n        <ng-container\r\n          *ngFor=\"let control of add().controls; let i = index\"\r\n          [formGroupName]=\"i\"\r\n        >\r\n          <div class=\"row justify-content-center\">\r\n            <div class=\"mr-1 mt-2\">\r\n              <span \r\n                >{{i+1}}.\r\n              </span>\r\n            </div>\r\n            <div class=\"col-8\">\r\n              <textarea autosize\r\n             \r\n                type=\"text\"\r\n                formControlName=\"title\"\r\n                class=\"form-control sign\"\r\n                id=\"name\"\r\n              ></textarea>\r\n            </div>\r\n            <div class=\"col-1 mt-2\">\r\n              <span class=\"material-icons\" (click)=\"addAction()\"\r\n                >add_circle_outline\r\n              </span>\r\n            </div>\r\n            <div class=\"col-1 mt-2\">\r\n              <span class=\"material-icons\" (click)=\"removeSafetyModule(i)\">\r\n                remove_circle_outline\r\n              </span>\r\n            </div>\r\n          </div>\r\n  \r\n          <hr />\r\n        </ng-container>\r\n      </ng-container>\r\n      <br />\r\n  \r\n      <div class=\"col-md-2\">\r\n        <button type=\"submit\" class=\"btn btn-primary\"[disabled]=\"PPEformgp.get('arrObj').invalid\">Add</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  ","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport Swal from 'sweetalert2';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\n@Component({\r\n  selector: 'app-edit-hazard',\r\n  templateUrl: './edit-hazard.component.html',\r\n  styleUrls: ['./edit-hazard.component.scss']\r\n})\r\nexport class EditHazardComponent implements OnInit {\r\n\r\n  editTitle!: FormGroup;\r\n  dataRec: any;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    public dialogRef: MatDialogRef<EditHazardComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.dataRec = data;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.editTitle = this.fb.group({\r\n      title: [this.dataRec.title, Validators.required],\r\n    });\r\n  }\r\n  onFormSubmit() {\r\n     \r\n    let data={\r\n      title :this.editTitle.get('title').value\r\n    }\r\n    this.logicalFormInfo\r\n      .updateHazards(data, this.dataRec._id)\r\n      .subscribe((resData) => {\r\n        console.log('resData', resData);\r\n\r\n        this.dialogRef.close('true');\r\n        Swal.fire({\r\n          title: 'Parameter Updated successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });     \r\n       });\r\n  }\r\n  closeDialog(){\r\n    this.dialogRef.close('false');\r\n\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"editTitle\" >\r\n    <h2>Edit Hazard</h2>\r\n    <textarea   autosize \r\n    class=\"form-control sign\"   formControlName=\"title\" ></textarea>\r\n    <br>\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-2 offset-8 \">\r\n            <button mat-raised-button (click)=\"closeDialog()\">Close</button>\r\n        </div>\r\n        <div class=\"col-sm-2  \">\r\n            <button mat-raised-button  [disabled]=\"!editTitle.valid\"(click)=\"onFormSubmit()\">Update</button>\r\n        </div>\r\n    </div>\r\n</form>   \r\n","import { Component, OnInit,Inject } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport Swal from 'sweetalert2';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-staff',\r\n  templateUrl: './edit-staff.component.html',\r\n  styleUrls: ['./edit-staff.component.scss']\r\n})\r\nexport class EditStaffComponent implements OnInit {\r\n\r\n  editTitle!: FormGroup;\r\n  dataRec: any;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    public dialogRef: MatDialogRef<EditStaffComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.dataRec = data;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.editTitle = this.fb.group({\r\n      title: [this.dataRec.title, Validators.required],\r\n    });\r\n  }\r\n  onFormSubmit() {\r\n     \r\n    let data={\r\n      title :this.editTitle.get('title').value\r\n    }\r\n    this.logicalFormInfo\r\n      .updateStaff(this.dataRec._id,data)\r\n      .subscribe((resData) => {\r\n        console.log('resData', resData);\r\n\r\n        this.dialogRef.close('true');\r\n        Swal.fire({\r\n          title: 'Staff  Updated successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });     \r\n       });\r\n  }\r\n  closeDialog(){\r\n    this.dialogRef.close('false');\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n","<form [formGroup]=\"editTitle\" >\r\n    <h2>Edit Staff</h2>\r\n    <mat-form-field appearance=\"legacy\"\r\n    class=\"example-full-width\" style=\"width: 498px;\">\r\n    <input matInput  formControlName=\"title\" >\r\n    </mat-form-field>\r\n    <br>\r\n    \r\n    <div class=\"row\">\r\n        <div class=\"col-sm-2 offset-8 \">\r\n            <button mat-raised-button (click)=\"closeDialog()\">Close</button>\r\n        </div>\r\n        <div class=\"col-sm-2  \">\r\n            <button mat-raised-button  [disabled]=\"!editTitle.valid\"(click)=\"onFormSubmit()\">Update</button>\r\n        </div>\r\n    </div>\r\n</form>   \r\n\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormArray, FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { UploadFileServiceService } from 'src/app/utils/services/upload-file-service.service';\r\nimport { Router } from '@angular/router';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\n@Component({\r\n  selector: 'app-edit-high-risk-construction',\r\n  templateUrl: './edit-high-risk-construction.component.html',\r\n  styleUrls: ['./edit-high-risk-construction.component.scss'],\r\n})\r\nexport class EditHighRiskConstructionComponent implements OnInit {\r\n  editTitle: FormGroup;\r\n  dataRec: any;\r\n\r\n\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    public dialogRef: MatDialogRef<EditHighRiskConstructionComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.dataRec = data;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    console.log(\"this.dataRec\",this.dataRec);\r\n    \r\n    this.editTitle = this.fb.group({\r\n      title: [this.dataRec.title, Validators.required],\r\n    });\r\n  }\r\n  onFormSubmit() {\r\n     \r\n    let data={\r\n      title :this.editTitle.get('title').value,\r\n    }\r\n    this.logicalFormInfo\r\n      .updateRisk(data, this.dataRec._id)\r\n      .subscribe((resData) => {\r\n\r\n        this.dialogRef.close('true');\r\n        Swal.fire({\r\n          title: 'Parameter Edited successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });  \r\n          });\r\n  }\r\n  closeDialog(){\r\n    this.dialogRef.close('false');\r\n\r\n  }\r\n}\r\n","<form [formGroup]=\"editTitle\" >\r\n  <h2>Edit High Risk</h2>\r\n  <textarea   autosize \r\n    class=\"form-control sign\"   formControlName=\"title\" ></textarea>\r\n    <br>\r\n  <div class=\"row\">\r\n      <div class=\"col-sm-2 offset-8 \">\r\n          <button mat-raised-button (click)=\"closeDialog()\">Close</button>\r\n      </div>\r\n      <div class=\"col-sm-2  \">\r\n          <button mat-raised-button  [disabled]=\"!editTitle.valid\"(click)=\"onFormSubmit()\">Update</button>\r\n      </div>\r\n  </div>\r\n</form>   \r\n\r\n","import { Component, OnInit, Injectable } from '@angular/core';\r\nimport {\r\n  MatSnackBar,\r\n  MatSnackBarRef,\r\n  TextOnlySnackBar,\r\n} from '@angular/material/snack-bar';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SnackbarService {\r\n  constructor(private snackbar: MatSnackBar) {}\r\n\r\n  openSnackBar(msg: string,action = 'close'): MatSnackBarRef<TextOnlySnackBar> {\r\n    return this.snackbar.open(msg, action, {\r\n      duration: 3000,\r\n      horizontalPosition: 'right',\r\n      // verticalPosition:'top'\r\n    });\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'selector-name',\r\n  template: `<span class=\"example-pizza-party\"> test  </span>`,\r\n  styles: [''],\r\n})\r\nexport class NameComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n}\r\n","import { MatDialog } from '@angular/material/dialog';\r\nimport { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { EditTaskComponent } from './edit-task/edit-task.component';\r\nimport { SetTitleService } from 'src/app/utils/services/set-title.service';\r\nimport { MatSort } from '@angular/material/sort';\r\n\r\n@Component({\r\n  selector: 'app-job-task',\r\n  templateUrl: './job-task.component.html',\r\n  styleUrls: ['./job-task.component.scss'],\r\n})\r\nexport class JobTaskComponent implements AfterViewInit, OnInit {\r\n  mode: any;\r\n  jobTaskData: any = [];\r\n  ELEMENT_DATA = [];\r\n  /////////////mat table////////////////\r\n  displayedColumns: string[] = ['index', 'title','tradeCategoryId', 'action'];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n  /////////////mat table end////////////////\r\n\r\n  constructor(private logicalFormInfo: LogicalFormInfoService, private dialog: MatDialog,\r\n    private setTitle: SetTitleService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllJobTask();\r\n    this.setTitle.setTitle('WHS-Job Task List');\r\n  }\r\n \r\n  getAllJobTask() {\r\n    this.logicalFormInfo.getAllJobtask().subscribe((res: any) => {\r\n      console.log('jobTaskDetails=>', res);\r\n      // this.jobTaskData = res.data[0].subComponents;\r\n      let data = res.data\r\n      data.forEach((element, index) => {\r\n        element.index = index + 1; //adding index\r\n      });\r\n\r\n      this.ELEMENT_DATA = data;\r\n      this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n      //  this.task = res.data.subComponents;\r\n    });\r\n\r\n  }\r\n  edit(element) {\r\n    const dialogRef = this.dialog.open(EditTaskComponent, {\r\n      width: \"550px\",\r\n      data: element,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if ((result == \"true\")) {\r\n        this.getAllJobTask();\r\n      }\r\n      console.log(\"The dialog was closed\");\r\n    });\r\n  }\r\n  delete(item) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: `Do you want to delete \"${item.title}\"?`,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#00B96F',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Delete!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.logicalFormInfo\r\n          .deleteJobTask(item._id)\r\n          .subscribe((res) => {\r\n            Swal.fire({\r\n              title: 'Parameter Deleted successfully',\r\n              showConfirmButton: false,\r\n              timer: 1200,\r\n            }); console.log('deleted res', res);\r\n            this.getAllJobTask();\r\n\r\n          });\r\n      }\r\n    });\r\n  }\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n}\r\n","<div class=\"col ml-2 pt-3\">\r\n<h1> Job task List</h1>\r\n</div>\r\n    <div class=\"col ml-2 mb-2\">\r\n      \r\n      <button  class=\"btn btn-outline-primary mt-1 mr-2 float-right\"[routerLink]=\"['/admin/siteInfo/addJobTask']\">\r\n        <i class=\"fas fa-folder-plus mr-2\"></i>Add Job Task \r\n      </button>\r\n    </div>\r\n    <div class=\"col-6\">\r\n      <mat-form-field>\r\n        <input\r\n          matInput\r\n          #input\r\n          placeholder=\"Search\"\r\n          (keyup)=\"applyFilter($event)\"\r\n        />\r\n      </mat-form-field>\r\n    </div>\r\n    <div class=\"\">\r\n      <table mat-table [dataSource]=\"dataSource\" matSort>\r\n    \r\n        <!-- Position Column -->\r\n        <ng-container matColumnDef=\"index\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> No. </th>\r\n          <td mat-cell *matCellDef=\"let element\">{{element.index}}</td>\r\n        </ng-container>\r\n    \r\n        <!-- Name Column -->\r\n       \r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"title\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\r\n      <td mat-cell *matCellDef=\"let element\"> <span class=\"flex-start\"><pre  style=\" font-family: Roboto, Helvetica Neue, sans-serif; font-size: 14px;\">{{element.title}} </pre> </span></td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"tradeCategoryId\">\r\n      <th mat-header-cell *matHeaderCellDef>Category</th>\r\n      <td mat-cell *matCellDef=\"let element\"> <span class=\"flex-start\">{{element?.tradeCategoryId?.title}} </span></td>\r\n    </ng-container>\r\n  \r\n<ng-container matColumnDef=\"action\">\r\n  <th mat-header-cell *matHeaderCellDef> Action </th>\r\n  <td mat-cell *matCellDef=\"let element\"> \r\n    <!-- <i class=\"fas fa-pencil-alt mr-2 \" (click)=\"edit(element)\" title=\"edit\"></i>  <i  class=\"fas fa-trash ml-2 \" (click)=\"delete(element)\" title=\"delete\"></i>  -->\r\n    <button mat-icon-button class=\"mr-2\" aria-label=\"Example icon button with a delete icon\" (click)=\"edit(element)\">\r\n      <mat-icon >edit</mat-icon>\r\n    </button>\r\n    <button mat-icon-button aria-label=\"Example icon button with a delete icon\" (click)=\"delete(element)\">\r\n      <mat-icon >delete</mat-icon>\r\n    </button>\r\n  </td>\r\n</ng-container>\r\n    <!-- <ng-container matColumnDef=\"edit\">\r\n      <th mat-header-cell *matHeaderCellDef> Edit </th>\r\n      <td mat-cell *matCellDef=\"let element\"(click)=\"edit(element)\"> <i class=\"fas fa-pencil-alt \"></i> \r\n      </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"delete\">\r\n      <th mat-header-cell *matHeaderCellDef> Delete </th>\r\n      <td mat-cell *matCellDef=\"let element\"(click)=\"delete(element)\"> <i class=\"fas fa-trash \"></i> \r\n      </td>\r\n    </ng-container> -->\r\n\r\n    \r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n        <tr class=\"mat-row\" *matNoDataRow>\r\n          <td class=\"mat-cell\" colspan=\"4\">Data Not  Found  \"{{input.value}}\"</td>\r\n        </tr>\r\n      </table>\r\n    \r\n      <mat-paginator [pageSizeOptions]=\"[20]\"\r\n                     showFirstLastButtons \r\n                     aria-label=\"Select page of periodic elements\">\r\n      </mat-paginator>\r\n    </div>\r\n    ","import { EditLicenceComponent } from './edit-licence/edit-licence.component';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { AfterViewInit,ViewChild } from '@angular/core';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { SetTitleService } from 'src/app/utils/services/set-title.service';\r\nimport { MatSort } from '@angular/material/sort';\r\n@Component({\r\n  selector: 'app-licence-and-qual',\r\n  templateUrl: './licence-and-qual.component.html',\r\n  styleUrls: ['./licence-and-qual.component.scss']\r\n})\r\nexport class LicenceAndQualComponent implements OnInit {\r\n  licenceAndQual: FormGroup;\r\n  formData: any;\r\n\r\n  mode: any;\r\n  jobTaskData: any = [];\r\n  ELEMENT_DATA = [];\r\n  /////////////mat table////////////////\r\n  displayedColumns: string[] = ['index', 'title','category','action'];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n  /////////////mat table end////////////////\r\n\r\n  constructor(private logicalFormInfo: LogicalFormInfoService,private dialog:MatDialog,\r\n    private setTitle: SetTitleService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getAllLicence();\r\n    this.setTitle.setTitle('WHS-License and Qualification List');\r\n  }\r\n\r\n  getAllLicence() {\r\n    this.logicalFormInfo.getAllLicence().subscribe((res) => {\r\n      console.log('getAllLicence=>', res);\r\n      // this.jobTaskData = res.data[0].subComponents;\r\n      let data = res.data;\r\n      data.forEach((element, index) => {\r\n        element.index = index + 1; //adding index\r\n      });\r\n\r\n      this.ELEMENT_DATA = data;\r\n      this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n      //  this.task = res.data.subComponents;\r\n    });\r\n \r\n  }\r\n  edit(element){\r\n    const dialogRef = this.dialog.open(EditLicenceComponent, {\r\n      width: \"550px\",\r\n      data: element,\r\n    });\r\n    console.log(element)\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if ((result == \"true\")) {\r\n        this.getAllLicence();\r\n      }\r\n      console.log(\"The dialog was closed\");\r\n    });\r\n  }\r\n  delete(item) {\r\n    console.log(\"delete\",item);\r\n    \r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: `Do you want to delete \"${item.title}\"?`,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#00B96F',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Delete!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.logicalFormInfo\r\n        .deleteLicence(item._id)\r\n        .subscribe((res) => {\r\n          Swal.fire({\r\n            title: 'Deleted successfully',\r\n            showConfirmButton: false,\r\n            timer: 1000,\r\n          });          console.log('deleted res', res);\r\n          this.getAllLicence();\r\n            \r\n        });\r\n      }\r\n    });\r\n  }\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n}\r\n","<div class=\"col ml-2 pt-3\">\r\n<h1> Licence and Qualification List</h1>\r\n</div>\r\n<div class=\"col ml-2 mb-2\">\r\n  \r\n  <button  class=\"btn btn-outline-primary mt-1 mr-2 float-right\"[routerLink]=\"['/admin/siteInfo/addLicence']\">\r\n    <i class=\"fas fa-folder-plus mr-2\"></i>Add Licence \r\n  </button>\r\n</div>\r\n<div class=\"col-6\">\r\n  <mat-form-field>\r\n    <input\r\n      matInput\r\n      #input\r\n      placeholder=\"Search\"\r\n      (keyup)=\"applyFilter($event)\"\r\n    />\r\n  </mat-form-field>\r\n</div>\r\n<div class=\"\">\r\n  <table mat-table [dataSource]=\"dataSource\" matSort>\r\n\r\n    <!-- Position Column -->\r\n    <ng-container matColumnDef=\"index\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> No. </th>\r\n      <td mat-cell *matCellDef=\"let element\">{{element.index}}</td>\r\n    </ng-container>\r\n\r\n    <!-- Name Column -->\r\n   \r\n<!-- Name Column -->\r\n<ng-container matColumnDef=\"title\">\r\n  <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\r\n  <td mat-cell *matCellDef=\"let element\"><span class=\"flex-start\"> {{element.title}}</span> </td>\r\n</ng-container>\r\n<ng-container matColumnDef=\"category\">\r\n  <th mat-header-cell *matHeaderCellDef> Category </th>\r\n  <td mat-cell *matCellDef=\"let element\"> {{element.tradeCategoryId?.title}} </td>\r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"action\">\r\n  <th mat-header-cell *matHeaderCellDef> Action </th>\r\n  <td mat-cell *matCellDef=\"let element\"> \r\n    <!-- <i class=\"fas fa-pencil-alt mr-2 \" (click)=\"edit(element)\" title=\"edit\"></i>  <i  class=\"fas fa-trash ml-2 \" (click)=\"delete(element)\" title=\"delete\"></i>  -->\r\n    <button mat-icon-button class=\"mr-2\" aria-label=\"Example icon button with a delete icon\" (click)=\"edit(element)\">\r\n      <mat-icon >edit</mat-icon>\r\n    </button>\r\n    <button mat-icon-button aria-label=\"Example icon button with a delete icon\" (click)=\"delete(element)\">\r\n      <mat-icon >delete</mat-icon>\r\n    </button>\r\n  </td>\r\n</ng-container>\r\n<!-- \r\n<ng-container matColumnDef=\"edit\">\r\n  <th mat-header-cell *matHeaderCellDef> Edit </th>\r\n  <td mat-cell *matCellDef=\"let element\"(click)=\"edit(element)\"> <i class=\"fas fa-pencil-alt \"></i> \r\n  </td>\r\n</ng-container>\r\n<ng-container matColumnDef=\"delete\">\r\n  <th mat-header-cell *matHeaderCellDef> Delete </th>\r\n  <td mat-cell *matCellDef=\"let element\"(click)=\"delete(element)\"> <i class=\"fas fa-trash \"></i> \r\n  </td>\r\n</ng-container> -->\r\n\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n    <tr class=\"mat-row\" *matNoDataRow>\r\n      <td class=\"mat-cell\" colspan=\"4\"> Data Not  Found  \"{{input.value}}\"</td>\r\n    </tr>\r\n  </table>\r\n\r\n  <mat-paginator [pageSizeOptions]=\"[20]\"\r\n                 showFirstLastButtons \r\n                 aria-label=\"Select page of periodic elements\">\r\n  </mat-paginator>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { SetTitleService } from 'src/app/utils/services/set-title.service';\r\nimport Swal from 'sweetalert2';\r\nimport { EditNatureIncidentComponent } from './edit-nature-incident/edit-nature-incident.component';\r\n\r\n@Component({\r\n  selector: 'app-nature-of-incident',\r\n  templateUrl: './nature-of-incident.component.html',\r\n  styleUrls: ['./nature-of-incident.component.scss']\r\n})\r\nexport class NatureOfIncidentComponent implements OnInit {\r\n  jobTaskData: any = [];\r\n  ELEMENT_DATA = [];\r\n  /////////////mat table////////////////\r\n  displayedColumns: string[] = ['index', 'title','action'];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n  /////////////mat table end////////////////\r\n\r\n  constructor(\r\n   \r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    private dialog:MatDialog,\r\n    private setTitle:SetTitleService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getAllNatureOfInc();\r\n    this.setTitle.setTitle('WHS-Nature Of Incident');\r\n    \r\n  }\r\n\r\n  getAllNatureOfInc() {\r\n    this.logicalFormInfo.getAllNatOfInc().subscribe((res:any) => {\r\n      console.log('NatOfIncAll=>', res);\r\n      let data = res.data;\r\n      data.forEach((element, index) => {\r\n        element.index = index + 1; //adding index\r\n      });\r\n\r\n      this.ELEMENT_DATA = data;\r\n      this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n      console.log('this.ELEMENT_DATA', this.ELEMENT_DATA);\r\n\r\n      //  this.task = res.data.subComponents;\r\n    });\r\n  }\r\n\r\n  edit(element){\r\n    const dialogRef = this.dialog.open(EditNatureIncidentComponent, {\r\n      width: \"550px\",\r\n      data: element,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if ((result == \"true\")) {\r\n        this.getAllNatureOfInc();\r\n      }\r\n      console.log(\"The dialog was closed\");\r\n    });\r\n  }\r\n  delete(item) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: `Do you want to delete \"${item.title}\"?`,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#00B96F',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Delete!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.logicalFormInfo\r\n        .deleteNatOfInc(item._id)\r\n        .subscribe((res) => {\r\n          Swal.fire({\r\n            title: 'Parameter Deleted successfully',\r\n            showConfirmButton: false,\r\n            timer: 1200,\r\n          });\r\n          console.log('deleted res', res);\r\n          this.getAllNatureOfInc();\r\n            \r\n        });\r\n      \r\n      }\r\n    });\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n}\r\n","<div class=\"col ml-2 pt-3\">\r\n    <h1> Nature Of Incident List</h1>\r\n    </div>\r\n        <div class=\"col ml-2 mb-2\">\r\n          \r\n          <button  class=\"btn btn-outline-primary mt-1 mr-2 float-right\"[routerLink]=\"['/admin/siteInfo/addAndEditNatureIncident']\">\r\n            <i class=\"fas fa-plus mr-2\"></i>Add Nature Of Incident \r\n          </button>\r\n        </div>\r\n        <div class=\"col-6\">\r\n          <mat-form-field>\r\n            <input\r\n              matInput\r\n              #input\r\n              placeholder=\"Search\"\r\n              (keyup)=\"applyFilter($event)\"\r\n            />\r\n          </mat-form-field>\r\n        </div>\r\n    \r\n        <div class=\"\">\r\n          \r\n          <table mat-table [dataSource]=\"dataSource\" matSort >\r\n        \r\n            <!-- Position Column -->\r\n            <ng-container matColumnDef=\"index\">\r\n              <th mat-header-cell *matHeaderCellDef mat-sort-header=\"index\"> No. </th>\r\n              <td mat-cell *matCellDef=\"let element\">{{element.index}}</td>\r\n            </ng-container>\r\n        \r\n            <!-- Name Column -->\r\n           \r\n        <!-- Name Column -->\r\n        <ng-container matColumnDef=\"title\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header=\"title\"> Name </th>\r\n          <td mat-cell *matCellDef=\"let element\"><span class=\"flex-start\">{{element.title}}</span>  </td>\r\n        </ng-container>\r\n    \r\n        <ng-container matColumnDef=\"action\">\r\n          <th mat-header-cell *matHeaderCellDef> Action </th>\r\n          <td mat-cell *matCellDef=\"let element\"> \r\n            <!-- <i class=\"fas fa-pencil-alt mr-2 \" (click)=\"edit(element)\" title=\"edit\"></i>  <i  class=\"fas fa-trash ml-2 \" (click)=\"delete(element)\" title=\"delete\"></i>  -->\r\n            <button mat-icon-button class=\"mr-2\" aria-label=\"Example icon button with a delete icon\" (click)=\"edit(element)\">\r\n              <mat-icon >edit</mat-icon>\r\n            </button>\r\n            <button mat-icon-button aria-label=\"Example icon button with a delete icon\" (click)=\"delete(element)\">\r\n              <mat-icon >delete</mat-icon>\r\n            </button>\r\n          </td>\r\n        </ng-container>\r\n        <!-- <ng-container matColumnDef=\"edit\">\r\n            <th mat-header-cell *matHeaderCellDef> Edit </th>\r\n            <td mat-cell *matCellDef=\"let element\"(click)=\"edit(element)\"> <i class=\"fas fa-pencil-alt \"></i> \r\n            </td>\r\n          </ng-container>\r\n          <ng-container matColumnDef=\"delete\">\r\n            <th mat-header-cell *matHeaderCellDef> Delete </th>\r\n            <td mat-cell *matCellDef=\"let element\"(click)=\"delete(element)\"> <i class=\"fas fa-trash \"></i> \r\n            </td>\r\n          </ng-container> -->\r\n        \r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">Data Not  Found  \"{{input.value}}\"</td>\r\n            </tr>\r\n          \r\n          </table>\r\n        \r\n          <mat-paginator [pageSizeOptions]=\"[20]\"\r\n                         showFirstLastButtons \r\n                         aria-label=\"Select page of periodic elements\">\r\n          </mat-paginator>\r\n        </div>\r\n        \r\n    ","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-edit-type-of-incident',\r\n  templateUrl: './edit-type-of-incident.component.html',\r\n  styleUrls: ['./edit-type-of-incident.component.scss']\r\n})\r\nexport class EditTypeOfIncidentComponent implements OnInit {\r\n  editTitle!: FormGroup;\r\n  dataRec: any;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    public dialogRef: MatDialogRef<EditTypeOfIncidentComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.dataRec = data;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.editTitle = this.fb.group({\r\n      title: [this.dataRec.title, Validators.required],\r\n    });\r\n  }\r\n  onFormSubmit() {\r\n     \r\n    let data={\r\n      title :this.editTitle.get('title').value\r\n    }\r\n    this.logicalFormInfo\r\n      .updateTypeOfIncident(data, this.dataRec._id)\r\n      .subscribe((resData) => {\r\n        console.log('resData', resData);\r\n\r\n        this.dialogRef.close('true');\r\n        Swal.fire({\r\n          title: 'Parameter Updated successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });     \r\n       });\r\n  }\r\n  closeDialog(){\r\n    this.dialogRef.close('false');\r\n\r\n  }\r\n\r\n\r\n}\r\n","<form [formGroup]=\"editTitle\" >\r\n    <h2>Edit Type Of Incident</h2>\r\n    <mat-form-field appearance=\"legacy\"\r\n    class=\"example-full-width\" style=\"width: 498px;\">\r\n    <!-- <mat-label>Edit PPE</mat-label> -->\r\n    <input matInput  formControlName=\"title\" >\r\n    </mat-form-field>\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-2 offset-8 \">\r\n            <button mat-raised-button (click)=\"closeDialog()\">Close</button>\r\n        </div>\r\n        <div class=\"col-sm-2  \">\r\n            <button mat-raised-button  [disabled]=\"!editTitle.valid\"(click)=\"onFormSubmit()\">Update</button>\r\n        </div>\r\n    </div>\r\n</form>   \r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\n\r\n@Component({\r\n  selector: 'app-add-type-of-incident',\r\n  templateUrl: './add-type-of-incident.component.html',\r\n  styleUrls: ['./add-type-of-incident.component.scss']\r\n})\r\nexport class AddTypeOfIncidentComponent implements OnInit {\r\n  typeformgp!: FormGroup;\r\n  formData: any;\r\n  numberOfLineBreaks:any;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private router: Router,\r\n    private logicalFormInfo:LogicalFormInfoService\r\n  ) { \r\n    this.typeformgp=this.fb.group({\r\n     // mode:\"JobTask\",\r\n      arrObj: this.fb.array([]),\r\n      \r\n    });\r\n    \r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.addAction();\r\n    \r\n  }\r\n  addAction() {\r\n    {\r\n      this.add().push(this.newAction());\r\n    }\r\n  }\r\n  add(): FormArray {\r\n    return this.typeformgp.get('arrObj') as FormArray;\r\n  }\r\n  newAction(): FormGroup {\r\n    return this.fb.group({\r\n     \r\n      title: ['', Validators.required],\r\n    });\r\n  }\r\n  \r\n  removeSafetyModule(i) {\r\n    const item = <FormArray>this.typeformgp.controls['arrObj'];\r\n    if (item.length > 1) {\r\n      item.removeAt(i);\r\n    \r\n    }\r\n  }\r\n  onFormSubmit() {\r\n    console.log(this.typeformgp.value);\r\n    let data={\r\n      arrObj:this.typeformgp.get('arrObj').value\r\n    }\r\n    this.logicalFormInfo.addMultipleTypeOfIncident(data).subscribe((data) => {\r\n      console.log('nature=>', data);\r\n      this.router.navigate(['/admin/siteInfo/typeOfIncident']);      \r\n    },(err)=>{console.error(err);} \r\n  \r\n    );\r\n    \r\n  }\r\n calcHeight(value) {\r\n    this.numberOfLineBreaks = (value.match(/\\n/g) || []).length+1;\r\n    console.log(\"numberOfLineBreaks\",this.numberOfLineBreaks)\r\n }\r\n\r\n\r\n}\r\n","<div class=\"btn btn-outline-primary\" [routerLink]=\"['/admin/siteInfo/typeOfIncident']\">\r\n    <i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\r\n  </div>\r\n  <div class=\"container px-4 py-4 bg-white\">\r\n    <form [formGroup]=\"typeformgp\" (ngSubmit)=\"onFormSubmit()\">\r\n      <h2 class=\"text-center\">Add Type Of Incdent</h2>\r\n      <br />\r\n      <hr />\r\n      <ng-container formArrayName=\"arrObj\">\r\n        <ng-container\r\n          *ngFor=\"let control of add().controls; let i = index\"\r\n          [formGroupName]=\"i\"\r\n        >\r\n          <div class=\"row justify-content-center\">\r\n            <div class=\"mr-1 mt-2\">\r\n              <span \r\n                >{{i+1}}.\r\n              </span>\r\n            </div>\r\n            <div class=\"col-8\">\r\n              <textarea autosize\r\n               (keyup)=\" calcHeight($event.target.value)\"\r\n               [rows]=\"numberOfLineBreaks\"\r\n                type=\"text\"\r\n                formControlName=\"title\"\r\n                class=\"form-control sign\"\r\n                id=\"name\"\r\n              ></textarea>\r\n            </div>\r\n            <div class=\"col-1 mt-2\">\r\n              <span class=\"material-icons\" (click)=\"addAction()\"\r\n                >add_circle_outline\r\n              </span>\r\n            </div>\r\n            <div class=\"col-1 mt-2\">\r\n              <span class=\"material-icons\" (click)=\"removeSafetyModule(i)\">\r\n                remove_circle_outline\r\n              </span>\r\n            </div>\r\n          </div>\r\n  \r\n          <hr />\r\n        </ng-container>\r\n      </ng-container>\r\n      <br />\r\n  \r\n      <div class=\"col-md-2\">\r\n        <button type=\"submit\" class=\"btn btn-primary\"[disabled]=\"typeformgp.get('arrObj').invalid\">Add</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  ","import { MatDialog } from '@angular/material/dialog';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport {  ViewChild } from '@angular/core';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { SetTitleService } from 'src/app/utils/services/set-title.service';\r\nimport { EditContActComponent } from './edit-cont-act/edit-cont-act.component';\r\nimport { SnackbarService } from '../../services/snackbar.service';\r\nimport { MatSort } from '@angular/material/sort';\r\n@Component({\r\n  selector: 'app-contr-and-act-req',\r\n  templateUrl: './contr-and-act-req.component.html',\r\n  styleUrls: ['./contr-and-act-req.component.scss']\r\n})\r\nexport class ContrAndActReqComponent implements OnInit {\r\n\r\n  jobTaskData: any = [];\r\n  ELEMENT_DATA = [];\r\n  /////////////mat table////////////////\r\n  displayedColumns: string[] = ['index', 'title','action'];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n  /////////////mat table end////////////////\r\n\r\n  constructor(\r\n    private snack: SnackbarService,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    private dialog:MatDialog,\r\n    private setTitle:SetTitleService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getAllContrlActReq();\r\n    this.setTitle.setTitle('WHS-PPE List');\r\n\r\n  }\r\n\r\n  getAllContrlActReq() {\r\n    this.logicalFormInfo.getAllContrlActReq().subscribe((res:any) => {\r\n      console.log('PPEAll=>', res);\r\n      let data = res.data;\r\n      data.forEach((element, index) => {\r\n        element.index = index + 1; //adding index\r\n      });\r\n\r\n      this.ELEMENT_DATA = data;\r\n      this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n      console.log('this.ELEMENT_DATA', this.ELEMENT_DATA);\r\n\r\n      //  this.task = res.data.subComponents;\r\n    });\r\n  }\r\n  edit(element){\r\n    const dialogRef = this.dialog.open(EditContActComponent, {\r\n      width: \"550px\",\r\n      data: element,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if ((result == \"true\")) {\r\n        this.getAllContrlActReq();\r\n      }\r\n      console.log(\"The dialog was closed\");\r\n    });\r\n  }\r\n  delete(item) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: `Do you want to delete \"${item.title}\"?`,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#00B96F',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Delete!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.logicalFormInfo\r\n        .deleteContrlActReq(item._id)\r\n        .subscribe((res) => {\r\n          Swal.fire({\r\n            title: 'Parameter Deleted successfully',\r\n            showConfirmButton: false,\r\n            timer: 1200,\r\n          });\r\n          console.log('deleted res', res);\r\n          this.getAllContrlActReq();\r\n            \r\n        });\r\n      }\r\n    });\r\n  }\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  copySuccess(){\r\n    console.log('copy successfull')\r\n    this.snack.openSnackBar('Copied to clipboard');\r\n  }\r\n}\r\n","<div class=\"col ml-2 pt-3\">\r\n<h1 > Control And Action Required List</h1>\r\n</div>\r\n    <div class=\"col ml-2 mb-2\">\r\n      \r\n      <button  class=\"btn btn-outline-primary mt-1 mr-2 float-right\"[routerLink]=\"['/admin/siteInfo/addContrlActReq']\">\r\n        <i class=\"fas fa-folder-plus mr-2\"></i>Add Control and Action \r\n      </button>\r\n    </div>\r\n    <div class=\"col-6\">\r\n      <mat-form-field>\r\n        <input\r\n          matInput\r\n          #input\r\n          placeholder=\"Search\"\r\n          (keyup)=\"applyFilter($event)\"\r\n        />\r\n      </mat-form-field>\r\n    </div>\r\n    <div class=\"\">\r\n      <table mat-table [dataSource]=\"dataSource\" matSort>\r\n    \r\n        <!-- Position Column -->\r\n        <ng-container matColumnDef=\"index\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> No. </th>\r\n          <td mat-cell *matCellDef=\"let element\">{{element.index}}</td>\r\n        </ng-container>\r\n    \r\n        <!-- Name Column -->\r\n       \r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"title\" >\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\r\n      <td mat-cell *matCellDef=\"let element\" [cdkCopyToClipboard]=\"element.title.toString()\" (cdkCopyToClipboardCopied)=\"copySuccess()\" [matTooltip]=\"element.title\"> {{element.title.length > 90? element.title.slice(0,90)+ '...' :element.title }}</td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"action\">\r\n      <th mat-header-cell *matHeaderCellDef style=\"width: 10%;\"> Action </th>\r\n      <td mat-cell *matCellDef=\"let element\" style=\"width: 15%;\">\r\n         <!-- <div class=\"row\">\r\n           <div class=\"col-1\"><i class=\"fas fa-pencil-alt mr-2\" (click)=\"edit(element)\" title=\"edit\"></i> </div>\r\n            <div class=\"col-1\"><i  class=\"fas fa-trash ml-2 \" (click)=\"delete(element)\" title=\"delete\"></i> </div>\r\n    </div> -->\r\n    <button mat-icon-button class=\"mr-2\" aria-label=\"Example icon button with a delete icon\">\r\n      <mat-icon (click)=\"edit(element)\">edit</mat-icon>\r\n    </button>\r\n    <button mat-icon-button aria-label=\"Example icon button with a delete icon\" (click)=\"delete(element)\">\r\n      <mat-icon >delete</mat-icon>\r\n    </button>\r\n  </td>\r\n</ng-container>\r\n    <!-- <ng-container matColumnDef=\"edit\">\r\n        <th mat-header-cell *matHeaderCellDef> Edit </th>\r\n        <td mat-cell *matCellDef=\"let element\"(click)=\"edit(element)\"> <i class=\"fas fa-pencil-alt \"></i> \r\n        </td>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"delete\">\r\n        <th mat-header-cell *matHeaderCellDef> Delete </th>\r\n        <td mat-cell *matCellDef=\"let element\"(click)=\"delete(element)\"> <i class=\"fas fa-trash \"></i> \r\n        </td>\r\n      </ng-container> -->\r\n    \r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n        <tr class=\"mat-row\" *matNoDataRow>\r\n          <td class=\"mat-cell\" colspan=\"4\">Data Not  Found  \"{{input.value}}\"</td>\r\n        </tr>\r\n      </table>\r\n    \r\n      <mat-paginator [pageSizeOptions]=\"[20]\"\r\n                     showFirstLastButtons \r\n                     aria-label=\"Select page of periodic elements\">\r\n      </mat-paginator>\r\n    </div>\r\n    \r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { FormBuilder, FormGroup,  Validators,FormArray,} from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-add-risk-level',\r\n  templateUrl: './add-risk-level.component.html',\r\n  styleUrls: ['./add-risk-level.component.scss']\r\n})\r\nexport class AddRiskLevelComponent implements OnInit {\r\n  addRiskForm:FormGroup;\r\n  numberOfLineBreaks: any;\r\n  constructor( \r\n    private fb:FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    private router: Router,\r\n    ) { \r\n      this.addRiskForm=this.fb.group({\r\n        arrObj: this.fb.array([]),\r\n      })\r\n    }\r\n\r\n  ngOnInit(): void {\r\n    this.addRisk();\r\n  }\r\n  addRisk() {\r\n    {\r\n      this.add().push(this.newAction());\r\n    }\r\n  }\r\n  add(): FormArray {\r\n    return this.addRiskForm.get('arrObj') as FormArray;\r\n  }\r\n  newAction(): FormGroup {\r\n    return this.fb.group({\r\n     \r\n      title: ['', Validators.required],\r\n    });\r\n  }\r\n  \r\n  removeRisk(i) {\r\n    const item = <FormArray>this.addRiskForm.controls['arrObj'];\r\n    if (item.length > 1) {\r\n      item.removeAt(i);\r\n    \r\n    }\r\n  }\r\n  onFormSubmit() {\r\n    console.log(this.addRiskForm.value);\r\n    let data={\r\n      arrObj:this.addRiskForm.get('arrObj').value\r\n    }\r\n    this.logicalFormInfo.addMultipleRiskLevel(data).subscribe((data) => {\r\n      console.log('chemical=>', data);\r\n      this.router.navigate(['/admin/siteInfo/riskLevel']);      \r\n    },(err)=>{console.error(err);} \r\n  \r\n    );\r\n    \r\n  }\r\n  calcHeight(value) {\r\n    this.numberOfLineBreaks = (value.match(/\\n/g) || []).length+1;\r\n    console.log(\"numberOfLineBreaks\",this.numberOfLineBreaks)\r\n  }\r\n}\r\n","<div class=\"btn btn-outline-primary\" [routerLink]=\"['/admin/siteInfo/riskLevel']\">\r\n    <i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\r\n  </div>\r\n\r\n    <div class=\"container px-4 py-4 bg-white\" >\r\n        <form  [formGroup]=\"addRiskForm\" (ngSubmit)=\"onFormSubmit()\">\r\n      <h2  class=\"text-center\"> RiskLevel Info</h2>\r\n      <br />\r\n      <hr />\r\n      <ng-container formArrayName=\"arrObj\">\r\n        <ng-container\r\n          *ngFor=\"let control of add().controls; let i = index\"\r\n          [formGroupName]=\"i\"\r\n        >\r\n          <div class=\"row justify-content-center\">\r\n            <div class=\"mr-1 mt-2\">\r\n              <span \r\n                >{{i+1}}.\r\n              </span>\r\n            </div>\r\n            <div class=\"col-8\">\r\n              <textarea  autosize\r\n              (keyup)=\" calcHeight($event.target.value)\"\r\n              [rows]=\"numberOfLineBreaks\"\r\n                type=\"text\"\r\n                formControlName=\"title\"\r\n                class=\"form-control sign\"\r\n                id=\"title\"\r\n              ></textarea>\r\n            </div>\r\n            <div class=\"col-1 mt-2\">\r\n              <span class=\"material-icons\" (click)=\"addRisk()\"\r\n                >add_circle_outline\r\n              </span>\r\n            </div>\r\n            <div class=\"col-1 mt-2\">\r\n              <span class=\"material-icons\" (click)=\"removeRisk(i)\">\r\n                remove_circle_outline\r\n              </span>\r\n            </div>\r\n          </div>\r\n  \r\n          <hr />\r\n        </ng-container>\r\n      </ng-container>\r\n      <br />\r\n          <div  class=\"col-md-2\">\r\n            <button class=\"btn btn-primary\"[disabled]=\"addRiskForm.get('arrObj').invalid\" >\r\n              Add\r\n            </button>\r\n          </div>\r\n        \r\n        </form>\r\n        </div>","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n  FormArray,\r\n  \r\n} from '@angular/forms'\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { Router } from '@angular/router';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-add-contr-act',\r\n  templateUrl: './add-contr-act.component.html',\r\n  styleUrls: ['./add-contr-act.component.scss']\r\n})\r\nexport class AddContrActComponent implements OnInit {\r\n\r\n  contrlAndActFG!: FormGroup;\r\n  formData: any;numberOfLineBreaks: any;\r\n;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private router: Router,\r\n    private logicalFormInfo:LogicalFormInfoService\r\n  ) { \r\n    this.contrlAndActFG=this.fb.group({\r\n     // mode:\"JobTask\",\r\n      arrObj: this.fb.array([]),\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.addAction();\r\n  }\r\n  addAction() {\r\n    {\r\n      this.add().push(this.newAction());\r\n    }\r\n  }\r\n  add(): FormArray {\r\n    return this.contrlAndActFG.get('arrObj') as FormArray;\r\n  }\r\n  newAction(): FormGroup {\r\n    return this.fb.group({\r\n     \r\n      title: ['', Validators.required],\r\n    });\r\n  }\r\n  \r\n  removeSafetyModule(i) {\r\n    const item = <FormArray>this.contrlAndActFG.controls['arrObj'];\r\n    if (item.length > 1) {\r\n      item.removeAt(i);\r\n    \r\n    }\r\n  }\r\n  onFormSubmit() {\r\n    console.log(this.contrlAndActFG.value);\r\n    let data={\r\n      arrObj:this.contrlAndActFG.get('arrObj').value\r\n    }\r\n    this.logicalFormInfo.addMultipleContrlActReq(data).subscribe((data) => {\r\n      console.log('PPE=>', data);\r\n      Swal.fire({\r\n        title: 'Parameter Added successfully',\r\n        showConfirmButton: false,\r\n        timer: 1200,\r\n      });\r\n      this.router.navigate(['/admin/siteInfo/contrlActReq']);      \r\n    },(err)=>{console.error(err);} \r\n  \r\n    );\r\n    \r\n  }\r\n  calcHeight(value) {\r\n    this.numberOfLineBreaks = (value.match(/\\n/g) || []).length+1;\r\n    console.log(\"numberOfLineBreaks\",this.numberOfLineBreaks)\r\n }\r\n}\r\n","<div class=\"btn btn-outline-primary\" [routerLink]=\"['/admin/siteInfo/contrlActReq']\">\r\n    <i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\r\n  </div>\r\n  <div class=\"container px-4 py-4 bg-white\">\r\n    <form [formGroup]=\"contrlAndActFG\" (ngSubmit)=\"onFormSubmit()\">\r\n      <h2 class=\"text-center\">Add Control And Action</h2>\r\n      <br />\r\n      <hr />\r\n      <ng-container formArrayName=\"arrObj\">\r\n        <ng-container\r\n          *ngFor=\"let control of add().controls; let i = index\"\r\n          [formGroupName]=\"i\"\r\n        >\r\n          <div class=\"row justify-content-center\">\r\n            <div class=\"mr-1 mt-2\">\r\n              <span \r\n                >{{i+1}}.\r\n              </span>\r\n            </div>\r\n            <div class=\"col-8\">\r\n              <!-- <p for=\"exampleFormControlInput1\" class=\"form-Label\">Job Task Type</p> -->\r\n              <textarea autosize\r\n            \r\n                type=\"text\"\r\n                formControlName=\"title\"\r\n                class=\"form-control sign\"\r\n                id=\"name\"\r\n              ></textarea>\r\n            </div>\r\n            <div class=\"col-1 mt-2\">\r\n              <span class=\"material-icons\" (click)=\"addAction()\"\r\n                >add_circle_outline\r\n              </span>\r\n            </div>\r\n            <div class=\"col-1 mt-2\">\r\n              <span class=\"material-icons\" (click)=\"removeSafetyModule(i)\">\r\n                remove_circle_outline\r\n              </span>\r\n            </div>\r\n          </div>\r\n  \r\n          <hr />\r\n        </ng-container>\r\n      </ng-container>\r\n      <br />\r\n  \r\n      <div class=\"col-md-2\">\r\n        <button type=\"submit\" class=\"btn btn-primary\"[disabled]=\"contrlAndActFG.get('arrObj').invalid\">Add</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  ","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport {  ViewChild } from '@angular/core';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table'\r\nimport { AddEditProjMangComponent } from './add-edit-proj-mang/add-edit-proj-mang.component';\r\nimport { MatSort } from '@angular/material/sort';\r\n@Component({\r\n  selector: 'app-project-manager',\r\n  templateUrl: './project-manager.component.html',\r\n  styleUrls: ['./project-manager.component.scss']\r\n})\r\nexport class ProjectManagerComponent implements OnInit {\r\n\r\n  mode: any;\r\n  jobTaskData: any = [];\r\n  ELEMENT_DATA = [];\r\n  /////////////mat table////////////////\r\n  displayedColumns: string[] = ['index', 'title' ,'action'];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n  /////////////mat table end////////////////\r\n\r\n  constructor(private logicalFormInfo: LogicalFormInfoService,private dialog:MatDialog) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getAllProjectMang();\r\n  }\r\n\r\n  getAllProjectMang() {\r\n    this.logicalFormInfo.getAllProjectMang().subscribe((res:any) => {\r\n      console.log('getAllProjectMang=>', res);\r\n      // this.jobTaskData = res.data[0].subComponents;\r\n      let data = res.data;\r\n      data.forEach((element, index) => {\r\n        element.index = index + 1; //adding index\r\n      });\r\n\r\n      this.ELEMENT_DATA = data;\r\n      this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n\r\n      //  this.task = res.data.subComponents;\r\n    });\r\n \r\n  }\r\n  \r\n  edit(element){\r\n    const dialogRef = this.dialog.open(AddEditProjMangComponent, {\r\n      width: \"550px\",\r\n      data: element,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if ((result == \"true\")) {\r\n        this.getAllProjectMang();\r\n      }\r\n      console.log(\"The dialog was closed\");\r\n    });\r\n  }\r\n\r\n  delete(item) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: `Do you want to delete \"${item.title}\"?`,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#00B96F',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Delete!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.logicalFormInfo\r\n        .deleteProjectMang(item._id)\r\n        .subscribe((res) => {\r\n          Swal.fire({\r\n            title: 'Project Manager Deleted successfully',\r\n            showConfirmButton: false,\r\n            timer: 1200,\r\n          });\r\n          console.log('deleted res', res);\r\n          this.getAllProjectMang();\r\n            \r\n        });\r\n      }\r\n    });\r\n  }\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n}\r\n","<div class=\"col ml-2 pt-3\">\r\n<h1> Project Manager List</h1>\r\n</div>\r\n<div class=\"col ml-2 mb-2\">\r\n  \r\n  <button  class=\"btn btn-outline-primary mt-1 mr-2 float-right\"(click)=\"edit('')\">\r\n    <i class=\"fas fa-folder-plus mr-2\"></i>Add Project Manager \r\n  </button>\r\n</div>\r\n<div class=\"col-6\">\r\n  <mat-form-field>\r\n    <input\r\n      matInput\r\n      #input\r\n      placeholder=\"Search\"\r\n      (keyup)=\"applyFilter($event)\"\r\n    />\r\n  </mat-form-field>\r\n</div>\r\n<div class=\"\">\r\n  <table mat-table [dataSource]=\"dataSource\" matSort>\r\n\r\n    <!-- Position Column -->\r\n    <ng-container matColumnDef=\"index\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> No. </th>\r\n      <td mat-cell *matCellDef=\"let element\">{{element.index}}</td>\r\n    </ng-container>\r\n\r\n    <!-- Name Column -->\r\n   \r\n<!-- Name Column -->\r\n<ng-container matColumnDef=\"title\">\r\n  <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\r\n  <td mat-cell *matCellDef=\"let element\"> <span class=\"flex-start\"> {{element.title}}</span> </td>\r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"action\">\r\n  <th mat-header-cell *matHeaderCellDef> Action </th>\r\n  <td mat-cell *matCellDef=\"let element\"> \r\n    <!-- <i class=\"fas fa-pencil-alt mr-2 \" (click)=\"edit(element)\" title=\"edit\"></i>  <i  class=\"fas fa-trash ml-2 \" (click)=\"delete(element)\" title=\"delete\"></i>  -->\r\n    <button mat-icon-button class=\"mr-2\" aria-label=\"Example icon button with a delete icon\" (click)=\"edit(element)\">\r\n      <mat-icon >edit</mat-icon>\r\n    </button>\r\n    <button mat-icon-button aria-label=\"Example icon button with a delete icon\" (click)=\"delete(element)\">\r\n      <mat-icon >delete</mat-icon>\r\n    </button>\r\n  </td>\r\n</ng-container>\r\n<!-- <ng-container matColumnDef=\"edit\">\r\n  <th mat-header-cell *matHeaderCellDef> Edit </th>\r\n  <td mat-cell *matCellDef=\"let element\"(click)=\"edit(element)\"> <i class=\"fas fa-pencil-alt \"></i> \r\n  </td>\r\n</ng-container>\r\n<ng-container matColumnDef=\"delete\">\r\n  <th mat-header-cell *matHeaderCellDef> Delete </th>\r\n  <td mat-cell *matCellDef=\"let element\"(click)=\"delete(element)\"> <i class=\"fas fa-trash \"></i> \r\n  </td>\r\n</ng-container> -->\r\n\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n    <tr class=\"mat-row\" *matNoDataRow>\r\n      <td class=\"mat-cell\" colspan=\"4\"> Data Not  Found  \"{{input.value}}\"</td>\r\n    </tr>\r\n  </table>\r\n\r\n  <mat-paginator [pageSizeOptions]=\"[20]\"\r\n                 showFirstLastButtons \r\n                 aria-label=\"Select page of periodic elements\">\r\n  </mat-paginator>\r\n</div>\r\n","import { FormBuilder, FormGroup,FormArray } from '@angular/forms';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport Swal from 'sweetalert2';\r\n@Component({\r\n  selector: 'app-edit-cust',\r\n  templateUrl: './edit-cust.component.html',\r\n  styleUrls: ['./edit-cust.component.scss']\r\n})\r\nexport class EditCustComponent implements OnInit {\r\n  editCustomerForm:FormGroup;\r\n  StatesData:any=[''];\r\n  formData:any;\r\n  constructor(\r\n    private dialogRef: MatDialogRef<EditCustComponent>,\r\n\t\t@Inject(MAT_DIALOG_DATA) public data: any,\r\n    private fb : FormBuilder,\r\n    private logicalFormInfoService: LogicalFormInfoService\r\n    ) {this.formData=data ;\r\n    console.log(\"fdata\",this.formData)}\r\n\r\n  ngOnInit(): void {\r\n    console.log(this.formData);\r\n    \r\n    this.editCustomerForm = this.fb.group({\r\n      customerName:[this.formData.customerName],\r\n      customerContact:[this.formData.customerContact],\r\n       streetAddress:[this.formData.streetAddress],\r\n      stateId:[this.formData.stateId._id],\r\n      postCode:[this.formData.postCode],\r\n      ABN:[this.formData.ABN],\r\n      contacts: this.fb.array([]),\r\n\r\n   \r\n    })\r\n  \r\n    this.formData.contacts.forEach(element => {\r\n       this.addCustomerDetails(element.position,element.email,element.phone );\r\n    });\r\n  //  this.addCustomerDetails();\r\n    this.getAllStates();\r\n  }\r\n\r\n  onSubmit(){\r\n    \r\n    this.logicalFormInfoService.updateCustomer(this.data._id,this.editCustomerForm.value).subscribe(res => {\r\n      console.log(res);\r\n      this.dialogRef.close('true');\r\n      Swal.fire({\r\n        title: 'Customer Edited successfully',\r\n        showConfirmButton: false,\r\n        timer: 1200,\r\n      });\r\n    });\r\n  }\r\n  close() {\r\n    this.dialogRef.close();\r\n}\r\naddCustomerDetails(position,email,phone) {\r\n  this.customerArr().push(this.customerForm(position,email,phone));\r\n\r\n}\r\ncustomerArr(): FormArray {\r\n  return this.editCustomerForm.get('contacts') as FormArray;\r\n}\r\ncustomerForm(position,email,phone): FormGroup {\r\n  return this.fb.group({\r\n    position:[position],\r\n    email:[email],\r\n    phone:[phone]\r\n\r\n  });\r\n\r\n}\r\nremoveCustomerDetails(i) {\r\n  const item = <FormArray>this.editCustomerForm.controls['contacts'];\r\n  if (item.length > 1) {\r\n    item.removeAt(i);\r\n\r\n  }\r\n}\r\ngetAllStates() {\r\n  this.logicalFormInfoService.getAllStates().subscribe((res: any) => {\r\n    console.log('setStatesDetails=>', res);\r\n    this.StatesData = res.data;\r\n  });\r\n}\r\n}\r\n","<section [formGroup]=\"editCustomerForm\">\r\n    <div >\r\n      <div mat-dialog-title class=\"dialog-title\">\r\n        <h2>Update Customer</h2>\r\n        <button type=\"button\"  class=\"close\" \r\n        style=\"font-size: 30px;\"\r\n        (click)=\"close()\" aria-label=\"Close\">\r\n        <span aria-hidden=\"true\">×</span>\r\n      </button>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"my-3 col\">\r\n            <p for=\"exampleFormControlInput1\" class=\"form-Label\">Customer Name</p>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"customerName\"\r\n              formControlName=\"customerName\"\r\n            />\r\n          </div>\r\n          <div class=\"my-3 col\">\r\n            <p for=\"exampleFormControlInput1\" class=\"form-Label\">Customer Contact</p>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"customerContact\"\r\n              formControlName=\"customerContact\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"my-3 col\">\r\n            <p for=\"exampleFormControlInput1\" class=\"form-Label\">Street Address</p>\r\n            <textarea\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"streetAddress\"\r\n              formControlName=\"streetAddress\"\r\n            ></textarea>\r\n          </div>\r\n          <div class=\"my-3 col\">\r\n            <p for=\"exampleFormControlInput1\" class=\"form-Label\">State</p>\r\n            <select class=\"form-select form-control\" aria-label=\"Default select example\" formControlName=\"stateId\" >\r\n              <option value=\"\" selected hidden> Select State</option>\r\n             <option *ngFor=\"let state of StatesData\" [value]=\"state._id\">{{state.title}}</option>\r\n           \r\n           </select>\r\n            <!-- <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"customerState\"\r\n              formControlName=\"customerState\"\r\n            /> -->\r\n          </div>\r\n          <div class=\"my-3 col\">\r\n            <p for=\"exampleFormControlInput1\" class=\"form-Label\">PostCode</p>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"postCode\"\r\n              formControlName=\"postCode\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n        <div class=\"my-3 col\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">Australian Business Name (ABN)</p>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            id=\"ABN\"\r\n            formControlName=\"ABN\"\r\n          />\r\n        </div>\r\n        </div>\r\n        <ng-container formArrayName=\"contacts\">\r\n          <ng-container\r\n            *ngFor=\"let control of customerArr().controls; let i = index\"\r\n            [formGroupName]=\"i\"\r\n          >\r\n            <div>\r\n            <h1> Contact {{i+1}}</h1>\r\n              <div class=\"row\">\r\n\r\n                <div class=\"my-3 col-4\">\r\n                  <p for=\"exampleFormControlInput1\" class=\"form-Label\"> Position</p>\r\n                  <input\r\n                    type=\"text\"\r\n                    formControlName=\"position\"\r\n                   \r\n                    class=\"form-control\"\r\n                    id=\"position\"\r\n                  />\r\n                </div>\r\n                <div class=\"my-3 col-4\">\r\n                  <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n                   Email\r\n                  </p>\r\n                  <input\r\n                  type=\"text\"\r\n                  formControlName=\"email\"\r\n             \r\n                  class=\"form-control\"\r\n                  id=\"email\"\r\n                />\r\n                </div>\r\n                <div class=\"my-3 col-4\">\r\n                  <p for=\"exampleFormControlInput1\" class=\"form-Label\">  Phone Number</p>\r\n                  <input\r\n                    type=\"text\"\r\n                    formControlName=\"phone\"\r\n                  \r\n                    class=\"form-control\"\r\n                    id=\"phone\"\r\n                  />\r\n                </div>\r\n              \r\n                <div >\r\n                  <span (click)=\"addCustomerDetails('','','')\"\r\n                    >\r\n                  </span>\r\n                </div>\r\n                <div>\r\n                  <span   (click)=\"removeCustomerDetails(i)\">\r\n                 \r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <hr />\r\n          </ng-container>\r\n        </ng-container>\r\n        <!-- <div class=\"row\">\r\n          <div class=\"my-3 col\">\r\n            <p for=\"exampleFormControlInput1\" class=\"form-Label\">Customer Name</p>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"customerName\"\r\n              formControlName=\"customerName\"\r\n            />\r\n          </div>\r\n          <div class=\"my-3 col\">\r\n            <p for=\"exampleFormControlInput1\" class=\"form-Label\">Customer Contact</p>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"customerContact\"\r\n              formControlName=\"customerContact\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"my-3 col\">\r\n            <p for=\"exampleFormControlInput1\" class=\"form-Label\">Customer Contact Phone</p>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"customerContactPhone\"\r\n              formControlName=\"customerContactPhone\"\r\n            />\r\n          </div>\r\n          <div class=\"my-3 col\">\r\n            <p for=\"exampleFormControlInput1\" class=\"form-Label\">Customer Email</p>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"customerEmail\"\r\n              formControlName=\"customerEmail\"\r\n            />\r\n          </div>\r\n        </div>  -->\r\n    \r\n      <div >\r\n        <button class=\"btn btn-primary\" (click)=\"onSubmit()\">\r\n         Update        </button>\r\n      </div>\r\n   </div>\r\n    </section>\r\n","import { NgxSpinnerService } from 'ngx-spinner';\r\nimport Swal from 'sweetalert2';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { SetTitleService } from 'src/app/utils/services/set-title.service';\r\nimport { AddSiteComponent } from './add-site/add-site.component';\r\nimport { EditSiteComponent } from './edit-site/edit-site.component';\r\nimport { MatSort } from '@angular/material/sort';\r\n\r\n@Component({\r\n  selector: 'app-add-site-info',\r\n  templateUrl: './add-site-info.component.html',\r\n  styleUrls: ['./add-site-info.component.scss']\r\n})\r\nexport class AddSiteInfoComponent implements OnInit {\r\n  mode: any;\r\n  jobTaskData: any = [];\r\n  ELEMENT_DATA = [];\r\n  /////////////mat table////////////////\r\n  displayedColumns: string[] = ['index', 'siteName',/* 'siteForemen', */'streetNo','streetAddress','Suburb','State', 'action'];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  allSites: any[]=[];\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n  /////////////mat table end////////////////\r\n\r\n  constructor( \r\n    private dialog: MatDialog, \r\n    private setTitle: SetTitleService,\r\n    private logicalFormInfoService: LogicalFormInfoService,\r\n    private spinner: NgxSpinnerService\r\n    ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.setTitle.setTitle('WHS-Add Site Info');\r\n    this.getAllSites()\r\n  }\r\n  getAllSites(){\r\n    this.logicalFormInfoService.getAllSite().subscribe((res:any)=> {\r\n      console.log(res)\r\n   this.dataSource.data = res.data\r\n   this.dataSource.paginator = this.paginator;\r\n   this.dataSource.sort = this.sort;\r\n   })\r\n  }\r\n\r\n  getAllJobTask() {\r\n    // this.logicalFormInfo.getAllJobtask().subscribe((res: any) => {\r\n    //   console.log('jobTaskDetails=>', res);\r\n    //   // this.jobTaskData = res.data[0].subComponents;\r\n    //   let data = res.data\r\n    //   data.forEach((element, index) => {\r\n    //     element.index = index + 1; //adding index\r\n    //   });\r\n\r\n    //   this.ELEMENT_DATA = data;\r\n    //   this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n    //   this.dataSource.paginator = this.paginator;\r\n\r\n    //   //  this.task = res.data.subComponents;\r\n    // });\r\n\r\n  }\r\n\r\n  openDialog(id) {\r\n\t\tlet dialogRef = this.dialog.open(AddSiteComponent, {\r\n      // width: \"550px\",\r\n      height:'500px',\r\n\t\t\tdata: {\r\n\t\t\t\taction: \"new\",\r\n\t\t\t\tuserId: id,\r\n\t\t\t},\r\n      width: \"630px\",\r\n\t\t});\r\n\t\tdialogRef.afterClosed().subscribe((result) => {\r\n      if(result == 'true'){\r\n        this.getAllSites()\r\n      }\r\n\t\t\tconsole.log(\"CustomerInfoComponent -> openDialog -> result\", result);\r\n\t\t\t\r\n\t\t\tconsole.log(\"The dialog was closed\");\r\n\t\t});\r\n\t}\r\n  edit(element) {\r\n    const dialogRef = this.dialog.open(EditSiteComponent, {\r\n      width: \"600px\",\r\n      // width: \"550px\",\r\n      height:'500px',\r\n      data: element,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if ((result == \"true\")) {\r\n        this.getAllSites()\r\n      }\r\n      console.log(\"The dialog was closed\");\r\n    });\r\n  }\r\n  delete(item) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: `Do you want to delete \"${item.siteName}\"?`,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#00B96F',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Delete!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        console.log(result)\r\n        // this.model.attributes.splice(i,1);\r\n        this.spinner.show()\r\n        this.logicalFormInfoService.deleteSite(item._id).subscribe((res => {\r\n        this.getAllSites()\r\n        this.spinner.hide()\r\n        }))\r\n      }\r\n    });\r\n  }\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n}\r\n","<div class=\"col ml-2 pt-3\">\r\n  <h1>\r\n    Site Information List\r\n  </h1>\r\n</div>\r\n<div class=\"col ml-2 mb-2\">\r\n\r\n  <button (click)=\"openDialog('abcd')\" _ngcontent-hqi-c400=\"\" type=\"button\"\r\n    class=\"btn btn-outline-primary mt-1 mr-2 float-right\"><i _ngcontent-hqi-c400=\"\" class=\"fas fa-plus\"></i> Add Site\r\n  </button>\r\n</div>\r\n<div class=\"col-6\">\r\n  <mat-form-field>\r\n    <input\r\n      matInput\r\n      #input\r\n      placeholder=\"Search\"\r\n      (keyup)=\"applyFilter($event)\"\r\n    />\r\n  </mat-form-field>\r\n</div>\r\n<div class=\"\">\r\n  <table mat-table [dataSource]=\"dataSource\" matSort>\r\n\r\n    <!-- Position Column -->\r\n    <ng-container matColumnDef=\"index\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> No. </th>\r\n      <td mat-cell *matCellDef=\"let element,let i = index\">{{i+1}}</td>\r\n    </ng-container>\r\n\r\n    <!-- Name Column -->\r\n\r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"siteName\">\r\n      <th mat-header-cell *matHeaderCellDef > Site Name </th>\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">Site Name</p>\r\n      <td mat-cell *matCellDef=\"let element\"> <span class=\"flex-start\">{{element.siteName}}</span>  </td>\r\n    </ng-container>\r\n\r\n    <!-- <ng-container matColumnDef=\"siteForemen\">\r\n      <th mat-header-cell *matHeaderCellDef> Site Foremen </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.siteForemen}} </td>\r\n    </ng-container> -->\r\n\r\n    <ng-container matColumnDef=\"streetNo\">\r\n      <th mat-header-cell *matHeaderCellDef > Street No </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.streetNumber}} </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"streetAddress\">\r\n      <th mat-header-cell *matHeaderCellDef> Street Address </th>\r\n      <td mat-cell *matCellDef=\"let element\"> <span class=\"flex-start\">{{element.streetAddress}} </span></td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"Suburb\">\r\n      <th mat-header-cell *matHeaderCellDef> Suburb </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.suburb}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"State\">\r\n      <th mat-header-cell *matHeaderCellDef> State </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.stateId?.title}} </td>\r\n    </ng-container>\r\n   \r\n<ng-container matColumnDef=\"action\">\r\n  <th mat-header-cell *matHeaderCellDef> Action </th>\r\n  <td mat-cell *matCellDef=\"let element\"> \r\n    <!-- <i class=\"fas fa-pencil-alt mr-2 \" (click)=\"edit(element)\" title=\"edit\"></i>  <i  class=\"fas fa-trash ml-2 \" (click)=\"delete(element)\" title=\"delete\"></i>  -->\r\n    <button mat-icon-button class=\"mr-2\" aria-label=\"Example icon button with a delete icon\" (click)=\"edit(element)\">\r\n      <mat-icon >edit</mat-icon>\r\n    </button>\r\n    <button mat-icon-button aria-label=\"Example icon button with a delete icon\" (click)=\"delete(element)\">\r\n      <mat-icon >delete</mat-icon>\r\n    </button>\r\n  </td>\r\n</ng-container>\r\n    <!-- <ng-container matColumnDef=\"edit\">\r\n      <th mat-header-cell *matHeaderCellDef> Edit </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"edit(element)\"> <i class=\"fas fa-pencil-alt \"></i>\r\n      </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"delete\">\r\n      <th mat-header-cell *matHeaderCellDef> Delete </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"delete(element)\"> <i class=\"fas fa-trash \"></i>\r\n      </td>\r\n    </ng-container> -->\r\n\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n    <tr class=\"mat-row\" *matNoDataRow>\r\n      <td class=\"mat-cell\" colspan=\"4\"> Data Not  Found  \"{{input.value}}\"</td>\r\n    </tr>\r\n  </table>\r\n\r\n  <mat-paginator [pageSizeOptions]=\"[20]\" showFirstLastButtons aria-label=\"Select page of periodic elements\">\r\n  </mat-paginator>\r\n</div>","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { FormBuilder, FormGroup,  Validators,\r\n  FormArray,} from '@angular/forms';\r\n\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-add-staff',\r\n  templateUrl: './add-staff.component.html',\r\n  styleUrls: ['./add-staff.component.scss']\r\n})\r\nexport class AddStaffComponent implements OnInit {\r\n  addStaffForm:FormGroup;\r\n  numberOfLineBreaks: any;\r\n  constructor( \r\n    private fb:FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    private router: Router,\r\n    ) { \r\n      this.addStaffForm=this.fb.group({\r\n        arrObj: this.fb.array([]),\r\n      })\r\n    }\r\n\r\n    ngOnInit(): void {\r\n      this.addStaff();\r\n    }\r\n    addStaff() {\r\n      {\r\n        this.add().push(this.newAction());\r\n      }\r\n    }\r\n    add(): FormArray {\r\n      return this.addStaffForm.get('arrObj') as FormArray;\r\n    }\r\n    newAction(): FormGroup {\r\n      return this.fb.group({\r\n       \r\n        title: ['', Validators.required],\r\n      });\r\n    }\r\n    \r\n    removeStaff(i) {\r\n      const item = <FormArray>this.addStaffForm.controls['arrObj'];\r\n      if (item.length > 1) {\r\n        item.removeAt(i);\r\n      \r\n      }\r\n    }\r\n    onFormSubmit() {\r\n      console.log(this.addStaffForm.value);\r\n      let data={\r\n        arrObj:this.addStaffForm.get('arrObj').value\r\n      }\r\n      this.logicalFormInfo.addMultipleStaff(data).subscribe((data) => {\r\n        console.log('chemical=>', data);\r\n        this.router.navigate(['/admin/siteInfo/staff']);      \r\n      },(err)=>{console.error(err);} \r\n    \r\n      );\r\n      \r\n    }\r\n      calcHeight(value) {\r\n    this.numberOfLineBreaks = (value.match(/\\n/g) || []).length+1;\r\n    console.log(\"numberOfLineBreaks\",this.numberOfLineBreaks)\r\n  }\r\n\r\n}\r\n","<div class=\"btn btn-outline-primary\" [routerLink]=\"['/admin/siteInfo/staff']\">\r\n    <i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\r\n  </div>\r\n\r\n    <div class=\"container px-4 py-4 bg-white\" >\r\n        <form  [formGroup]=\"addStaffForm\" (ngSubmit)=\"onFormSubmit()\">\r\n      <h2  class=\"text-center\"> Staff Info</h2>\r\n      <br />\r\n      <hr />\r\n      <ng-container formArrayName=\"arrObj\">\r\n        <ng-container\r\n          *ngFor=\"let control of add().controls; let i = index\"\r\n          [formGroupName]=\"i\"\r\n        >\r\n          <div class=\"row justify-content-center\">\r\n            <div class=\"mr-1 mt-2\">\r\n              <span \r\n                >{{i+1}}\r\n              </span>\r\n            </div>\r\n            <div class=\"col-8\">\r\n              <textarea  autosize\r\n              (keyup)=\" calcHeight($event.target.value)\"\r\n              [rows]=\"numberOfLineBreaks\"\r\n                type=\"text\"\r\n                formControlName=\"title\"\r\n                class=\"form-control sign\"\r\n                id=\"title\"\r\n              ></textarea>\r\n            </div>\r\n            <div class=\"col-1 mt-2\">\r\n              <span class=\"material-icons\" (click)=\"addStaff()\"\r\n                >add_circle_outline\r\n              </span>\r\n            </div>\r\n            <div class=\"col-1 mt-2\">\r\n              <span class=\"material-icons\" (click)=\"removeStaff(i)\">\r\n                remove_circle_outline\r\n              </span>\r\n            </div>\r\n          </div>\r\n  \r\n          <hr />\r\n        </ng-container>\r\n      </ng-container>\r\n      <br />\r\n          <div  class=\"col-md-2\">\r\n            <button class=\"btn btn-primary\"[disabled]=\"addStaffForm.get('arrObj').invalid\" >\r\n              Add\r\n            </button>\r\n          </div>\r\n        \r\n        </form>\r\n        </div>","import { AddContrActComponent } from './contr-and-act-req/add-contr-act/add-contr-act.component';\r\nimport { ContrAndActReqComponent } from './contr-and-act-req/contr-and-act-req.component';\r\nimport { AddHazardComponent } from './identify-hazards/add-hazard/add-hazard.component';\r\nimport { IdentifyHazardsComponent } from './identify-hazards/identify-hazards.component';\r\nimport { ProjectManagerComponent } from './project-manager/project-manager.component';\r\nimport { EditCOPComponent } from './code-of-pract/edit-cop/edit-cop.component';\r\nimport { AddCOPComponent } from './code-of-pract/add-cop/add-cop.component';\r\nimport { CodeOfPractComponent } from './code-of-pract/code-of-pract.component';\r\nimport { EditLicenceCatComponent } from './licence-and-qual/licence-cat/edit-licence-cat/edit-licence-cat.component';\r\nimport { LicenceCatComponent } from './licence-and-qual/licence-cat/licence-cat.component';\r\nimport { EditLicenceComponent } from './licence-and-qual/edit-licence/edit-licence.component';\r\nimport { AddLicenceComponent } from './licence-and-qual/add-licence/add-licence.component';\r\nimport { AddPPEComponent } from './ppe-select/add-ppe/add-ppe.component';\r\nimport { AddHighRiskConstructionComponent } from './high-risk-con/add-high-risk-construction/add-high-risk-construction.component';\r\nimport { AddJobTaskComponent } from './job-task/add-job-task/add-job-task.component';\r\nimport { AddCustomerComponent } from './add-customer/add-customer.component';\r\nimport { PpeSelectComponent } from './ppe-select/ppe-select.component';\r\nimport { LicenceAndQualComponent } from './licence-and-qual/licence-and-qual.component';\r\nimport { HighRiskConComponent } from './high-risk-con/high-risk-con.component';\r\nimport { JobTaskComponent } from './job-task/job-task.component';\r\nimport { AddSiteInfoComponent } from './add-site-info/add-site-info.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { SiteInfoComponent } from './site-info.component';\r\nimport { AddLicenceCatComponent } from './licence-and-qual/licence-cat/add-licence-cat/add-licence-cat.component';\r\nimport { AddSiteComponent } from './add-site-info/add-site/add-site.component';\r\nimport { EditSiteComponent } from './add-site-info/edit-site/edit-site.component';\r\nimport { ChemicalComponent } from './chemical/chemical.component';\r\nimport { RiskLevelComponent } from './risk-level/risk-level.component';\r\nimport { ResidualRiskLevelComponent } from './residual-risk-level/residual-risk-level.component';\r\nimport { StaffComponent } from './staff/staff.component';\r\nimport { AddChemicalComponent } from './chemical/add-chemical/add-chemical.component';\r\nimport { AddRiskLevelComponent } from './risk-level/add-risk-level/add-risk-level.component';\r\nimport { AddResidualRiskLevelComponent } from './residual-risk-level/add-residual-risk-level/add-residual-risk-level.component';\r\nimport { AddStaffComponent } from './staff/add-staff/add-staff.component';\r\nimport { EditStaffComponent } from './staff/edit-staff/edit-staff.component';\r\nimport { AddingCustComponent } from './add-customer/adding-cust/adding-cust.component';\r\nimport {SiteInspectionCategoryComponent} from './site-inspection-category/site-inspection-category.component'\r\nimport { AddSiteInspectionCategoryComponent } from './site-inspection-category/add-site-inspection-category/add-site-inspection-category.component';\r\nimport { SiteInspectionTopicComponent } from './site-inspection-category/site-inspection-topic/site-inspection-topic.component';\r\nimport { AddSiteInspectionTopicComponent } from './site-inspection-category/site-inspection-topic/add-site-inspection-topic/add-site-inspection-topic.component';\r\nimport { NatureOfIncidentComponent } from './nature-of-incident/nature-of-incident.component';\r\nimport { AddAndEditNatureIncidentComponent } from './nature-of-incident/add-and-edit-nature-incident/add-and-edit-nature-incident.component';\r\nimport { ChangesMadeComponent } from './changes-made/changes-made.component';\r\nimport { AddChangesMadeComponent } from './changes-made/add-changes-made/add-changes-made.component';\r\nimport { RootCauseOfIncidentComponent } from './root-cause-of-incident/root-cause-of-incident.component';\r\nimport { TypeOfIncidentComponent } from './type-of-incident/type-of-incident.component';\r\nimport { AddRootCauseOfIncidentComponent } from './root-cause-of-incident/add-root-cause-of-incident/add-root-cause-of-incident.component';\r\nimport { AddTypeOfIncidentComponent } from './type-of-incident/add-type-of-incident/add-type-of-incident.component';\r\nimport { ManagerComponent } from './manager/manager.component';\r\nimport { WHSManagerComponent } from './whs-manager/whs-manager.component';\r\nimport { AddWhsManagerComponent } from './whs-manager/add-whs-manager/add-whs-manager.component';\r\nimport { AddManagerComponent } from './manager/add-manager/add-manager.component';\r\nimport { EditManagerComponent } from './manager/edit-manager/edit-manager.component';\r\nimport { EditWhsManagerComponent } from './whs-manager/edit-whs-manager/edit-whs-manager.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'addSite', component: AddSiteInfoComponent, children: [\r\n      { path: 'addSite1', component: AddSiteComponent },\r\n      { path: 'editSite', component: EditSiteComponent }\r\n    ]\r\n  },\r\n  { path: 'addCustomer', component: AddCustomerComponent },\r\n  { path: 'addingCustomer', component: AddingCustComponent },\r\n  { path: 'jobTask', component: JobTaskComponent },\r\n  { path: 'addJobTask', component: AddJobTaskComponent },\r\n  { path: 'addHighRisk', component: AddHighRiskConstructionComponent },\r\n  { path: 'addPPE', component: AddPPEComponent },\r\n\r\n  { path: 'highRisk', component: HighRiskConComponent },\r\n  { path: 'licenceAndQual', component: LicenceAndQualComponent },\r\n  { path: 'addLicence', component: AddLicenceComponent },\r\n  { path: 'editLicence', component: EditLicenceComponent },\r\n  { path: 'licenceCat', component: LicenceCatComponent },\r\n  { path: 'addLicenceCat', component: AddLicenceCatComponent },\r\n  { path: 'editLicenceCat', component: EditLicenceCatComponent },\r\n  { path: 'ppeSel', component: PpeSelectComponent },\r\n  { path: 'codeOfpract', component: CodeOfPractComponent },\r\n  { path: 'addCOP', component: AddCOPComponent },\r\n  { path: 'editCOP', component: EditCOPComponent },\r\n  // { path: 'uploadData', component: UploadBulkDataComponent },\r\n  { path: 'projMang', component: ProjectManagerComponent },\r\n  { path: 'hazards', component: IdentifyHazardsComponent },\r\n  { path: 'addHazards', component: AddHazardComponent },\r\n  { path: 'contrlActReq', component: ContrAndActReqComponent },\r\n  { path: 'addContrlActReq', component: AddContrActComponent },\r\n  { path: 'chemical', component: ChemicalComponent },\r\n  { path: 'addChemical', component: AddChemicalComponent },\r\n  { path: 'riskLevel', component: RiskLevelComponent },\r\n  { path: 'addRisk', component: AddRiskLevelComponent },\r\n  { path: 'residual', component: ResidualRiskLevelComponent },\r\n  { path: 'addResidual', component: AddResidualRiskLevelComponent },\r\n  { path: 'staff', component: StaffComponent },\r\n  { path: 'addStaff', component: AddStaffComponent },\r\n  { path: 'editStaff', component: EditStaffComponent },\r\n  { path: 'siteinspectioncategory', component:SiteInspectionCategoryComponent},\r\n  { path: 'addsiteinspection', component:AddSiteInspectionCategoryComponent},\r\n  { path: 'siteinspectiontopic/:id', component:SiteInspectionTopicComponent},\r\n  { path: 'addsiteinspectiontopic/:id', component:AddSiteInspectionTopicComponent},\r\n  { path: 'natureOfIncident', component: NatureOfIncidentComponent},\r\n  { path: 'addAndEditNatureIncident', component: AddAndEditNatureIncidentComponent},\r\n  { path: 'changesMade', component: ChangesMadeComponent},\r\n  { path: 'addChangesMade', component: AddChangesMadeComponent},\r\n  { path: 'rootCauseOfIncident', component: RootCauseOfIncidentComponent},\r\n  { path: 'addRootCauseOfIncident', component: AddRootCauseOfIncidentComponent},\r\n  { path: 'typeOfIncident', component: TypeOfIncidentComponent},\r\n  { path: 'addTypeOfIncident', component: AddTypeOfIncidentComponent},\r\n  { path: 'manager', component: ManagerComponent },\r\n  { path: 'addManager', component: AddManagerComponent },\r\n  { path: 'editManager', component: EditManagerComponent },\r\n  { path: 'WHS-Manager', component: WHSManagerComponent },\r\n  { path: 'addWHSManager', component: AddWhsManagerComponent },\r\n  { path: 'editWHSManager', component: EditWhsManagerComponent }\r\n\r\n  // { path: 'uploadDataInBulk', component: UploadBulkDataComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class SiteInfoRoutingModule { }\r\n","import { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { FormGroup, FormBuilder, FormArray, Validators } from '@angular/forms';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-add-site-inspection-category',\r\n  templateUrl: './add-site-inspection-category.component.html',\r\n  styleUrls: ['./add-site-inspection-category.component.scss'],\r\n})\r\nexport class AddSiteInspectionCategoryComponent implements OnInit {\r\n  siteInspectionCategoryAdd: FormGroup;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private logicalFormInfoService: LogicalFormInfoService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.siteInspectionCategoryAdd = this.fb.group({\r\n      category: ['', Validators.required],\r\n    });\r\n  }\r\n  onSubmit() {\r\n    console.log(this.siteInspectionCategoryAdd.value);\r\n\r\n    this.logicalFormInfoService\r\n      .addSiteInspectionCategory(this.siteInspectionCategoryAdd.value)\r\n      .subscribe(\r\n        (res) => {\r\n          console.log('addCustomerForm=>', res);\r\n          //this.dialogRef.close('ok')\r\n          this.router.navigate(['/admin/siteInfo/siteinspectioncategory']);\r\n        },\r\n        (err) => {\r\n          console.error(err);\r\n        }\r\n      );\r\n  }\r\n}\r\n","<div\r\n  class=\"btn btn-outline-primary\"\r\n  [routerLink]=\"['/admin/siteInfo/siteinspectioncategory']\"\r\n>\r\n  <i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\r\n</div>\r\n<section class=\"content\" style=\"height: 60%\">\r\n  <div\r\n    [formGroup]=\"siteInspectionCategoryAdd\"\r\n    class=\"container px-4 py-4 bg-white\"\r\n  >\r\n    <h2>Add Site Inspection Category</h2>\r\n    <hr />\r\n    <div class=\"row\">\r\n      <div class=\"my-3 col\">\r\n        <p for=\"exampleFormControlInput1\" class=\"form-Label\">Category</p>\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          id=\"customerName\"\r\n          formControlName=\"category\"\r\n        />\r\n      </div>\r\n    </div>\r\n    <div>\r\n      <button\r\n        (click)=\"onSubmit()\"\r\n        class=\"btn btn-primary\"\r\n        [disabled]=\"\r\n          siteInspectionCategoryAdd.invalid &&\r\n          siteInspectionCategoryAdd.get('category').invalid\r\n        \"\r\n      >\r\n        Submit\r\n      </button>\r\n    </div>\r\n  </div>\r\n</section>\r\n"]}