{"version":3,"sources":["webpack:///src/app/site-info/identify-hazards/add-hazard/add-hazard.component.ts","webpack:///src/app/site-info/identify-hazards/add-hazard/add-hazard.component.html","webpack:///src/app/site-info/high-risk-con/add-high-risk-construction/add-high-risk-construction.component.ts","webpack:///src/app/site-info/high-risk-con/add-high-risk-construction/add-high-risk-construction.component.html","webpack:///src/app/site-info/licence-and-qual/edit-licence/edit-licence.component.ts","webpack:///src/app/site-info/licence-and-qual/edit-licence/edit-licence.component.html","webpack:///src/app/site-info/add-site-info/add-site/add-site.component.ts","webpack:///src/app/site-info/add-site-info/add-site/add-site.component.html","webpack:///src/app/site-info/site-info.module.ts","webpack:///node_modules/ngx-autosize/fesm2015/ngx-autosize.js","webpack:///src/app/site-info/residual-risk-level/residual-risk-level.component.ts","webpack:///src/app/site-info/residual-risk-level/residual-risk-level.component.html","webpack:///src/app/site-info/project-manager/add-edit-proj-mang/add-edit-proj-mang.component.ts","webpack:///src/app/site-info/project-manager/add-edit-proj-mang/add-edit-proj-mang.component.html","webpack:///src/app/site-info/staff/staff.component.ts","webpack:///src/app/site-info/staff/staff.component.html","webpack:///src/app/site-info/job-task/edit-task/edit-task.component.ts","webpack:///src/app/site-info/job-task/edit-task/edit-task.component.html","webpack:///src/app/site-info/identify-hazards/identify-hazards.component.ts","webpack:///src/app/site-info/identify-hazards/identify-hazards.component.html","webpack:///src/app/site-info/licence-and-qual/licence-cat/edit-licence-cat/edit-licence-cat.component.ts","webpack:///src/app/site-info/licence-and-qual/licence-cat/edit-licence-cat/edit-licence-cat.component.html","webpack:///src/app/site-info/contr-and-act-req/edit-cont-act/edit-cont-act.component.ts","webpack:///src/app/site-info/contr-and-act-req/edit-cont-act/edit-cont-act.component.html","webpack:///src/app/site-info/risk-level/edit-risk-level/edit-risk-level.component.ts","webpack:///src/app/site-info/risk-level/edit-risk-level/edit-risk-level.component.html","webpack:///src/app/site-info/add-customer/add-customer.component.ts","webpack:///src/app/site-info/add-customer/add-customer.component.html","webpack:///src/app/site-info/chemical/add-chemical/add-chemical.component.ts","webpack:///src/app/site-info/chemical/add-chemical/add-chemical.component.html","webpack:///src/app/site-info/code-of-pract/add-cop/add-cop.component.ts","webpack:///src/app/site-info/code-of-pract/add-cop/add-cop.component.html","webpack:///src/app/site-info/chemical/edit-chemical/edit-chemical.component.ts","webpack:///src/app/site-info/chemical/edit-chemical/edit-chemical.component.html","webpack:///src/app/site-info/residual-risk-level/edit-residual-risk-level/edit-residual-risk-level.component.ts","webpack:///src/app/site-info/residual-risk-level/edit-residual-risk-level/edit-residual-risk-level.component.html","webpack:///src/app/site-info/risk-level/risk-level.component.ts","webpack:///src/app/site-info/risk-level/risk-level.component.html","webpack:///src/app/site-info/ppe-select/ppe-select.component.ts","webpack:///src/app/site-info/ppe-select/ppe-select.component.html","webpack:///src/app/site-info/licence-and-qual/licence-cat/licence-cat.component.ts","webpack:///src/app/site-info/licence-and-qual/licence-cat/licence-cat.component.html","webpack:///src/app/site-info/add-customer/adding-cust/adding-cust.component.ts","webpack:///src/app/site-info/add-customer/adding-cust/adding-cust.component.html","webpack:///src/app/site-info/code-of-pract/code-of-pract.component.ts","webpack:///src/app/site-info/code-of-pract/code-of-pract.component.html","webpack:///src/app/site-info/code-of-pract/edit-cop/edit-cop.component.ts","webpack:///src/app/site-info/code-of-pract/edit-cop/edit-cop.component.html","webpack:///src/app/site-info/job-task/add-job-task/add-job-task.component.ts","webpack:///src/app/site-info/job-task/add-job-task/add-job-task.component.html","webpack:///src/app/site-info/chemical/chemical.component.ts","webpack:///src/app/site-info/chemical/chemical.component.html","webpack:///src/app/site-info/residual-risk-level/add-residual-risk-level/add-residual-risk-level.component.ts","webpack:///src/app/site-info/residual-risk-level/add-residual-risk-level/add-residual-risk-level.component.html","webpack:///src/app/site-info/licence-and-qual/add-licence/add-licence.component.ts","webpack:///src/app/site-info/licence-and-qual/add-licence/add-licence.component.html","webpack:///src/app/site-info/site-info.component.ts","webpack:///src/app/site-info/site-info.component.html","webpack:///src/app/site-info/ppe-select/edit-ppe/edit-ppe.component.ts","webpack:///src/app/site-info/ppe-select/edit-ppe/edit-ppe.component.html","webpack:///src/app/site-info/licence-and-qual/licence-cat/add-licence-cat/add-licence-cat.component.ts","webpack:///src/app/site-info/high-risk-con/high-risk-con.component.ts","webpack:///src/app/site-info/high-risk-con/high-risk-con.component.html","webpack:///src/app/site-info/ppe-select/add-ppe/add-ppe.component.ts","webpack:///src/app/site-info/ppe-select/add-ppe/add-ppe.component.html","webpack:///src/app/site-info/identify-hazards/edit-hazard/edit-hazard.component.ts","webpack:///src/app/site-info/identify-hazards/edit-hazard/edit-hazard.component.html","webpack:///src/app/site-info/staff/edit-staff/edit-staff.component.ts","webpack:///src/app/site-info/staff/edit-staff/edit-staff.component.html","webpack:///src/app/site-info/high-risk-con/edit-high-risk-construction/edit-high-risk-construction.component.ts","webpack:///src/app/site-info/high-risk-con/edit-high-risk-construction/edit-high-risk-construction.component.html","webpack:///src/app/services/snackbar.service.ts","webpack:///src/app/site-info/job-task/job-task.component.ts","webpack:///src/app/site-info/job-task/job-task.component.html","webpack:///src/app/site-info/licence-and-qual/licence-and-qual.component.ts","webpack:///src/app/site-info/licence-and-qual/licence-and-qual.component.html","webpack:///src/app/site-info/contr-and-act-req/contr-and-act-req.component.ts","webpack:///src/app/site-info/contr-and-act-req/contr-and-act-req.component.html","webpack:///src/app/site-info/risk-level/add-risk-level/add-risk-level.component.ts","webpack:///src/app/site-info/risk-level/add-risk-level/add-risk-level.component.html","webpack:///src/app/site-info/contr-and-act-req/add-contr-act/add-contr-act.component.ts","webpack:///src/app/site-info/contr-and-act-req/add-contr-act/add-contr-act.component.html","webpack:///src/app/site-info/project-manager/project-manager.component.ts","webpack:///src/app/site-info/project-manager/project-manager.component.html","webpack:///src/app/site-info/add-customer/edit-cust/edit-cust.component.ts","webpack:///src/app/site-info/add-customer/edit-cust/edit-cust.component.html","webpack:///src/app/site-info/add-site-info/add-site-info.component.ts","webpack:///src/app/site-info/add-site-info/add-site-info.component.html","webpack:///src/app/site-info/staff/add-staff/add-staff.component.ts","webpack:///src/app/site-info/staff/add-staff/add-staff.component.html","webpack:///src/app/site-info/site-info-routing.module.ts"],"names":["AddHazardComponent","fb","router","logicalFormInfo","hazardFG","group","arrObj","array","addAction","add","push","newAction","get","title","required","i","item","controls","length","removeAt","console","log","value","data","addMultipleHazards","subscribe","fire","showConfirmButton","timer","navigate","err","error","numberOfLineBreaks","match","onFormSubmit","selector","templateUrl","styleUrls","AddHighRiskConstructionComponent","riskConstr","addMultipleRisk","EditLicenceComponent","dialogRef","categories","dataRec","editTitle","tradeCategoryId","_id","getAllLicenceCat","res","updateLicence","resData","close","closeDialog","AddSiteComponent","logicalFormInfoService","allState","getAllStates","addSitesForm","siteName","streetNumber","streetAddress","suburb","stateId","addSite","onSubmit","SiteInfoModule","declarations","imports","WindowRef","window","ɵfac","WindowRef_Factory","t","ɵprov","token","factory","providedIn","ngInjectableDef","type","args","MAX_LOOKUP_RETRIES","AutosizeDirective","element","_window","_zone","onlyGrow","useImportant","resized","retries","_destroyed","nativeElement","tagName","_findNestedTextArea","textAreaEl","style","overflow","_onTextAreaFound","_minRows","rows","textArea","adjust","_windowResizeHandler","nativeWindow","removeEventListener","changes","querySelector","shadowRoot","warn","setTimeout","_addWindowResizeHandler","Debounce","run","runOutsideAngular","addEventListener","inputsChanged","parentNode","currentText","_oldContent","offsetWidth","_oldWidth","clone","cloneNode","parent","width","visibility","position","textContent","appendChild","height","scrollHeight","computedStyle","getComputedStyle","parseInt","getPropertyValue","oldHeight","offsetHeight","willGrow","lineHeight","_getLineHeight","rowsCount","maxRows","maxHeight","Math","max","heightStyle","important","setProperty","emit","removeChild","isNaN","styles","fontSize","floor","replace","AutosizeDirective_Factory","ɵdir","selectors","hostBindings","AutosizeDirective_HostBindings","rf","ctx","AutosizeDirective_input_HostBindingHandler","$event","onInput","target","inputs","minRows","outputs","features","ctorParameters","propDecorators","func","wait","immediate","timeout","context","arguments","later","apply","callNow","clearTimeout","AutosizeModule","ɵmod","ɵinj","AutosizeModule_Factory","providers","ngJitMode","exports","ResidualRiskLevelComponent","dialog","setTitle","spinner","ELEMENT_DATA","displayedColumns","dataSource","allResidualRiskLevel","paginator","getAllResidualRiskLevel","getAllResidual","forEach","index","sort","open","afterClosed","result","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","show","deleteResidual","hide","AddEditProjMangComponent","componentId","updateProjectMang","addProjectMang","StaffComponent","allStaff","getAllStaff","deleteStaff","EditTaskComponent","updateJobTask","IdentifyHazardsComponent","snack","jobTaskData","getAllHazards","deleteHazards","event","filterValue","filter","trim","toLowerCase","openSnackBar","applyFilter","EditLicenceCatComponent","updateLicenceCat","addLicenceCat","EditContActComponent","updateContrlActReq","EditRiskLevelComponent","updateRiskLevel","AddCustomerComponent","getAllCustomers","getAllCustomer","id","action","userId","customerName","deleteCustomer","AddChemicalComponent","addChemicalForm","addChemical","addMultipleChemical","AddCOPComponent","codeOfPractFG","addMultipleCOP","EditChemicalComponent","updateChemical","EditResidualRiskLevelComponent","updateResidual","RiskLevelComponent","allRiskLevel","getAllRiskLevel","deleteRiskLevel","PpeSelectComponent","getAllPPEs","getAllPPE","deletePPE","LicenceCatComponent","deleteLicenceCat","edit","AddingCustComponent","StatesData","addCustomerForm","customerContact","postCode","ABN","contacts","addCustomerDetails","customerArr","customerForm","email","phone","addCustomer","CodeOfPractComponent","getAllCodeOfPractice","getAllCOP","deleteCOP","EditCOPComponent","updateCOP","AddJobTaskComponent","licenceCatAll","jobTaskDetails","getAllCategories","addMultipleJobTask","ChemicalComponent","allChemical","getAllChemical","deleteChemical","AddResidualRiskLevelComponent","addResidualForm","addResidual","addMultipleResidual","AddLicenceComponent","addLicenceFG","addMultipleLicence","SiteInfoComponent","EditPPEComponent","updatePPE","AddLicenceCatComponent","addLicenceCatFG","HighRiskConComponent","highRiskConstructionData","isEdit","Edit","Add","collectionSize","getAllHighRisk","getAllRisk","deleteRisk","AddPPEComponent","PPEformgp","addMultiplePPE","EditHazardComponent","updateHazards","EditStaffComponent","updateStaff","EditHighRiskConstructionComponent","updateRisk","SnackbarService","snackbar","msg","duration","horizontalPosition","NameComponent","template","JobTaskComponent","getAllJobTask","getAllJobtask","deleteJobTask","LicenceAndQualComponent","getAllLicence","deleteLicence","ContrAndActReqComponent","getAllContrlActReq","deleteContrlActReq","AddRiskLevelComponent","addRiskForm","addRisk","addMultipleRiskLevel","AddContrActComponent","contrlAndActFG","addMultipleContrlActReq","ProjectManagerComponent","getAllProjectMang","deleteProjectMang","EditCustComponent","formData","editCustomerForm","updateCustomer","AddSiteInfoComponent","allSites","getAllSites","getAllSite","deleteSite","openDialog","AddStaffComponent","addStaffForm","addStaff","addMultipleStaff","routes","path","component","children","SiteInfoRoutingModule","forChild"],"mappings":"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","file":"site-info-site-info-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, FormArray } from '@angular/forms';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { Router } from '@angular/router';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-add-hazard',\r\n  templateUrl: './add-hazard.component.html',\r\n  styleUrls: ['./add-hazard.component.scss'],\r\n})\r\nexport class AddHazardComponent implements OnInit {\r\n  hazardFG!: FormGroup;\r\n  formData: any;\r\n  numberOfLineBreaks: any;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private router: Router,\r\n    private logicalFormInfo: LogicalFormInfoService\r\n  ) {\r\n    this.hazardFG = this.fb.group({\r\n      arrObj: this.fb.array([]),\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.addAction();\r\n  }\r\n  addAction() {\r\n    {\r\n      this.add().push(this.newAction());\r\n    }\r\n  }\r\n  add(): FormArray {\r\n    return this.hazardFG.get('arrObj') as FormArray;\r\n  }\r\n  newAction(): FormGroup {\r\n    return this.fb.group({\r\n      title: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  removeSafetyModule(i) {\r\n    const item = <FormArray>this.hazardFG.controls['arrObj'];\r\n    if (item.length > 1) {\r\n      item.removeAt(i);\r\n    }\r\n  }\r\n  onFormSubmit() {\r\n    console.log(this.hazardFG.value);\r\n    let data = {\r\n      arrObj: this.hazardFG.get('arrObj').value,\r\n    };\r\n    this.logicalFormInfo.addMultipleHazards(data).subscribe(\r\n      (data) => {\r\n        console.log('PPE=>', data);\r\n        Swal.fire({\r\n          title: 'Parameter Added successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });  \r\n        this.router.navigate(['/admin/siteInfo/hazards']);\r\n      },\r\n      (err) => {\r\n        console.error(err);\r\n      }\r\n    );\r\n  }\r\n  calcHeight(value) {\r\n    this.numberOfLineBreaks = (value.match(/\\n/g) || []).length+1;\r\n    console.log(\"numberOfLineBreaks\",this.numberOfLineBreaks)\r\n  }\r\n}\r\n","<div class=\"btn btn-outline-primary\" [routerLink]=\"['/admin/siteInfo/hazards']\">\r\n    <i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\r\n  </div>\r\n  <div class=\"container px-4 py-4 bg-white\">\r\n    <form [formGroup]=\"hazardFG\" (ngSubmit)=\"onFormSubmit()\">\r\n      <h2 class=\"text-center\">Add Hazard</h2>\r\n      <br />\r\n      <hr />\r\n      <ng-container formArrayName=\"arrObj\">\r\n        <ng-container\r\n          *ngFor=\"let control of add().controls; let i = index\"\r\n          [formGroupName]=\"i\"\r\n        >\r\n          <div class=\"row justify-content-center\">\r\n            <div class=\"mr-1 mt-2\">\r\n              <span \r\n                >{{i+1}}.\r\n              </span>\r\n            </div>\r\n            <div class=\"col-8\">\r\n              <!-- <p for=\"exampleFormControlInput1\" class=\"form-Label\">Job Task Type</p> -->\r\n              <textarea autosize\r\n              (keyup)=\" calcHeight($event.target.value)\"\r\n              [rows]=\"numberOfLineBreaks\"\r\n                type=\"text\"\r\n                formControlName=\"title\"\r\n                class=\"form-control sign\"\r\n                id=\"name\"\r\n              ></textarea>\r\n            </div>\r\n            <div class=\"col-1 mt-2\">\r\n              <span class=\"material-icons\" (click)=\"addAction()\"\r\n                >add_circle_outline\r\n              </span>\r\n            </div>\r\n            <div class=\"col-1 mt-2\">\r\n              <span class=\"material-icons\" (click)=\"removeSafetyModule(i)\">\r\n                remove_circle_outline\r\n              </span>\r\n            </div>\r\n          </div>\r\n  \r\n          <hr />\r\n        </ng-container>\r\n      </ng-container>\r\n      <br />\r\n  \r\n      <div class=\"col-md-2\">\r\n        <button type=\"submit\" class=\"btn btn-primary\"[disabled]=\"hazardFG.get('arrObj').invalid\">Add</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  ","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators,FormArray } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-add-high-risk-construction',\r\n  templateUrl: './add-high-risk-construction.component.html',\r\n  styleUrls: ['./add-high-risk-construction.component.scss'],\r\n})\r\nexport class AddHighRiskConstructionComponent implements OnInit {\r\n  // riskDetails!: FormGroup;\r\n  // riskData: any = [];\r\n  // ID: any;\r\n  // hide: boolean = true;\r\n  // constructor(\r\n  //   private logicalFormInfo: LogicalFormInfoService,\r\n  //   private fb: FormBuilder,\r\n  //   public dialogRef: MatDialogRef<AddHighRiskConstructionComponent>,\r\n  //   @Inject(MAT_DIALOG_DATA) public data: any\r\n  // ) {\r\n  //   {\r\n  //     this.riskDetails = this.fb.group({\r\n  //       title: ['', Validators.required],\r\n  //     });\r\n  //     console.log('riskDetails=>', this.riskDetails);\r\n  //   }\r\n  // }\r\n\r\n  // ngOnInit(): void {}\r\n\r\n  // onFormSubmit() {\r\n  //   console.log(this.riskDetails);\r\n  //   let data = {\r\n  //     componentId: this.data.EditData,\r\n  //     title: this.riskDetails.get('title').value,\r\n  //   };\r\n  //   this.logicalFormInfo.addSubComponent(data).subscribe((data) => {\r\n  //     console.log('riskDetails=>', data);\r\n  //     // this.riskData = data;\r\n  //     this.dialogRef.close('true');\r\n  //     this.riskDetails.reset();\r\n  //     Swal.fire('Parameter added successfully');\r\n  //   });\r\n  // }\r\n  \r\n  riskConstr!: FormGroup;\r\n  formData: any;numberOfLineBreaks: any;\r\n;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private router: Router,\r\n    private logicalFormInfo:LogicalFormInfoService\r\n  ) { \r\n    this.riskConstr=this.fb.group({\r\n     // mode:\"JobTask\",\r\n      arrObj: this.fb.array([]),\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.addAction();\r\n  }\r\n  addAction() {\r\n    {\r\n      this.add().push(this.newAction());\r\n    }\r\n  }\r\n  add(): FormArray {\r\n    return this.riskConstr.get('arrObj') as FormArray;\r\n  }\r\n  newAction(): FormGroup {\r\n    return this.fb.group({\r\n     \r\n      title: ['', Validators.required],\r\n    });\r\n  }\r\n  \r\n  removeSafetyModule(i) {\r\n    const item = <FormArray>this.riskConstr.controls['arrObj'];\r\n    if (item.length > 1) {\r\n      item.removeAt(i);\r\n    \r\n    }\r\n  }\r\n  onFormSubmit() {\r\n    // console.log(this.riskConstr.value);\r\n    let data={\r\n      arrObj:this.riskConstr.get('arrObj').value\r\n    }\r\n    // console.log(data);\r\n    \r\n    this.logicalFormInfo.addMultipleRisk(data).subscribe((data) => {\r\n      console.log('Risk=>', data);\r\n      Swal.fire({\r\n        title: 'Parameter Added successfully',\r\n        showConfirmButton: false,\r\n        timer: 1200,\r\n      });  \r\n      this.router.navigate(['/admin/siteInfo/highRisk']);    \r\n    },(err)=>{console.error(err);} \r\n  \r\n    );\r\n}\r\ncalcHeight(value) {\r\n  this.numberOfLineBreaks = (value.match(/\\n/g) || []).length+1;\r\n  console.log(\"numberOfLineBreaks\",this.numberOfLineBreaks)\r\n}\r\n}","<!-- <div class=\"container px-4 py-4 card\">\r\n  <form [formGroup]=\"riskDetails\" (ngSubmit)=\"onFormSubmit()\">\r\n    <h1 class=\"text-center pt-3\">\r\n      <p style=\"text-align: center\">High Risk Construction</p>\r\n    </h1>\r\n    <hr />\r\n    <div>\r\n      <div class=\"row\">\r\n        <div class=\"col-8\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">Add Parameter</p>\r\n          <input\r\n            type=\"text\"\r\n            formControlName=\"title\"\r\n            class=\"form-control\"\r\n            id=\"name\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <br />\r\n    <hr />\r\n    <div class=\"col-md-2\">\r\n      <button\r\n        type=\"submit\"\r\n        [disabled]=\"riskDetails.get('title').hasError('required')\"\r\n        class=\"btn btn-primary\"\r\n      >\r\n        Add\r\n      </button>\r\n    </div>\r\n  </form>\r\n</div> -->\r\n<div class=\"btn btn-outline-primary\" [routerLink]=\"['/admin/siteInfo/highRisk']\">\r\n  <i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\r\n</div>\r\n<div class=\"container px-4 py-4 bg-white\">\r\n  <form [formGroup]=\"riskConstr\" (ngSubmit)=\"onFormSubmit()\">\r\n    <h2 class=\"text-center\">Add High Risk Construction Parameter</h2>\r\n    <br />\r\n    <hr />\r\n    <ng-container formArrayName=\"arrObj\">\r\n      <ng-container\r\n        *ngFor=\"let control of add().controls; let i = index\"\r\n        [formGroupName]=\"i\"\r\n      >\r\n        <div class=\"row justify-content-center\">\r\n          <div class=\"mr-1 mt-2\">\r\n            <span \r\n              >{{i+1}}.\r\n            </span>\r\n          </div>\r\n          <div class=\"col-8\">\r\n            <!-- <p for=\"exampleFormControlInput1\" class=\"form-Label\">Job Task Type</p> -->\r\n            <textarea autosize\r\n            (keyup)=\"calcHeight($event.target.value)\"\r\n            [rows]=\"numberOfLineBreaks\"\r\n              type=\"text\"\r\n              formControlName=\"title\"\r\n              class=\"form-control sign\"\r\n              id=\"name\"\r\n            ></textarea>\r\n          </div>\r\n          <div class=\"col-1 mt-2\">\r\n            <span class=\"material-icons\" (click)=\"addAction()\"\r\n              >add_circle_outline\r\n            </span>\r\n          </div>\r\n          <div class=\"col-1 mt-2\">\r\n            <span class=\"material-icons\" (click)=\"removeSafetyModule(i)\">\r\n              remove_circle_outline\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        <hr />\r\n      </ng-container>\r\n    </ng-container>\r\n    <br />\r\n\r\n    <div class=\"col-md-2\">\r\n      <button type=\"submit\" class=\"btn btn-primary\"[disabled]=\"riskConstr.get('arrObj').invalid\">Add</button>\r\n    </div>\r\n  </form>\r\n</div>\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\n@Component({\r\n  selector: 'app-edit-licence',\r\n  templateUrl: './edit-licence.component.html',\r\n  styleUrls: ['./edit-licence.component.scss']\r\n})\r\nexport class EditLicenceComponent implements OnInit {\r\n\r\n  editTitle: FormGroup;\r\n  dataRec: any;\r\n  categories=[];\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    public dialogRef: MatDialogRef<EditLicenceComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.dataRec = data;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    console.log(this.dataRec);\r\n    \r\n    this.editTitle = this.fb.group({\r\n      title: [this.dataRec.title, Validators.required],\r\n      tradeCategoryId: [this.dataRec.tradeCategoryId._id, Validators.required],\r\n    });\r\n    console.log(this.editTitle.value)\r\n    this.getAllLicenceCat();\r\n  }\r\n  getAllLicenceCat() {\r\n    this.logicalFormInfo.getAllLicenceCat().subscribe((res) => {\r\n      console.log('getAllLicenceCat=>', res);\r\n      this.categories = res.data;\r\n      console.log('categories=>', res.data);\r\n    });\r\n \r\n  }\r\n  onFormSubmit() {\r\n\r\n    let data={\r\n      title :this.editTitle.get('title').value,\r\n      tradeCategoryId:this.editTitle.get('tradeCategoryId').value,\r\n    }\r\n    console.log('tradeCategoryId',data);\r\n    \r\n    this.logicalFormInfo\r\n      .updateLicence(this.dataRec._id,data)\r\n      .subscribe((resData) => {\r\n        console.log('updateLicence', resData);\r\n\r\n        this.dialogRef.close('true');\r\n        Swal.fire('Parameter Edited successfully');\r\n      });\r\n  }\r\n  closeDialog(){\r\n    this.dialogRef.close('false');\r\n\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"editTitle\">\r\n    <h2 mat-dialog-title>Edit Licence</h2>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-6\">\r\n      <!-- <mat-form-field\r\n        appearance=\"legacy\"\r\n        class=\"example-full-width\"\r\n        style=\"width: 1200px\"\r\n      >\r\n        <input\r\n          matInput\r\n          formControlName=\"title\"\r\n          style=\"text-transform: capitalize !important\"\r\n        />\r\n      </mat-form-field> -->\r\n      <input\r\n      type=\"text\"\r\n      formControlName=\"title\"\r\n      class=\"form-control sign\"\r\n      id=\"title\"\r\n      placeholder=\"Licence Name\"\r\n    />\r\n    </div>\r\n    <div class=\"col-6\">\r\n      <select\r\n        class=\"form-select form-control\"\r\n        aria-label=\"Default select example\"\r\n        formControlName=\"tradeCategoryId\"\r\n      >\r\n     \r\n        <option *ngFor=\"let item of categories\" [value]=\"item._id\">{{item.title}}</option>\r\n    \r\n      </select>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row mt-4\">\r\n    <div class=\"col-sm-2 offset-8\">\r\n      <button mat-raised-button (click)=\"closeDialog()\">Close</button>\r\n    </div>\r\n    <div class=\"col-sm-2\">\r\n      <button\r\n        mat-raised-button\r\n        [disabled]=\"!editTitle.valid\"\r\n        (click)=\"onFormSubmit()\"\r\n      >\r\n        Update\r\n      </button>\r\n    </div>\r\n  </div>\r\n</form>\r\n","import { value } from './../../../views/dynamic-form/global.model';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport Swal from 'sweetalert2';\r\n@Component({\r\n  selector: 'app-add-site',\r\n  templateUrl: './add-site.component.html',\r\n  styleUrls: ['./add-site.component.scss']\r\n})\r\nexport class AddSiteComponent implements OnInit {\r\nallState:any=[];\r\n  addSitesForm;\r\n  numberOfLineBreaks:any;\r\n  constructor( \r\n    private dialogRef: MatDialogRef<AddSiteComponent>,\r\n\t\t@Inject(MAT_DIALOG_DATA) public data: any,\r\n    private fb:FormBuilder,\r\n    private logicalFormInfoService: LogicalFormInfoService\r\n    ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllStates();\r\n    this.addSitesForm = this.fb.group({\r\n      siteName:['',Validators.required],\r\n      streetNumber:['',Validators.required],\r\n      streetAddress:['',Validators.required],\r\n      suburb:['',Validators.required],\r\n      stateId:['',Validators.required],\r\n    })\r\n  }\r\n  getAllStates() {\r\n    this.logicalFormInfoService.getAllStates().subscribe((res) => {\r\n      console.log('getAllStates=>', res);\r\n  this.allState=res.data;\r\n    });\r\n \r\n  }\r\n\r\n    onSubmit(){\r\n      console.log(this.addSitesForm.value)\r\n      this.logicalFormInfoService.addSite(this.addSitesForm.value).subscribe(res => {\r\n        console.log(res);\r\n        this.dialogRef.close('true');\r\n        Swal.fire({\r\n          title: 'Site Added successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });\r\n      });\r\n    }\r\n    close() {\r\n      this.dialogRef.close();\r\n  }\r\n  calcHeight(value) {\r\n    this.numberOfLineBreaks = (value.match(/\\n/g) || []).length+1;\r\n    console.log(\"numberOfLineBreaks\",this.numberOfLineBreaks)\r\n }\r\n}\r\n","<section  [formGroup]=\"addSitesForm\" >\r\n    <div >\r\n      <div mat-dialog-title class=\"dialog-title\">\r\n      <h2> Add Site Information</h2>\r\n      <button type=\"button\" class=\"close\" \r\n      style=\"font-size: 30px;\"\r\n      (click)=\"close()\" aria-label=\"Close\">\r\n      <span aria-hidden=\"true\">×</span>\r\n    </button>\r\n    </div>\r\n    <hr>\r\n      <div class=\"row\" [formGroup]=\"addSitesForm\">\r\n      <div class=\"my-3 col-6\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">Site Name</p>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            formControlName=\"siteName\"\r\n            id=\"siteName\"\r\n          />\r\n        </div>\r\n     </div>\r\n     <div class=\"row\">\r\n        <div class=\"my-3 col-2\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">Street No.</p>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            formControlName=\"streetNumber\"\r\n            id=\"streetNumber\"\r\n          />\r\n        </div>\r\n        <div class=\"my-3 col-4\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">Street Address</p>\r\n          <textarea autosize\r\n          (keyup)=\" calcHeight($event.target.value)\"\r\n          [rows]=\"numberOfLineBreaks\"\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            formControlName=\"streetAddress\"\r\n            id=\"streetAddress\"\r\n          ></textarea>\r\n        </div>\r\n        <div class=\"my-3 col-3\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">Suburb</p>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            formControlName=\"suburb\"\r\n            id=\"suburb\"\r\n          />\r\n        </div>\r\n        <div class=\"my-3 col-3\">\r\n            <p for=\"exampleFormControlInput1\" class=\"form-label\"\r\n            >State</p\r\n          >  \r\n          <select\r\n          class=\"form-select form-control col\"\r\n          id=\"stateId\"\r\n          aria-label=\"Default select example\"\r\n          formControlName=\"stateId\"\r\n\r\n        >\r\n          <option selected hidden>Select</option>\r\n          <option *ngFor =\"let item of allState\" [value]=\"item._id\">{{item.title}}</option>\r\n        </select>\r\n       \r\n        </div>\r\n      </div>\r\n      <hr>\r\n    <div >\r\n      <button class=\"btn btn-primary\" (click)=\"onSubmit()\"  [disabled]=\"addSitesForm.invalid\" >\r\n        Add\r\n      </button>\r\n    </div>\r\n  </div>\r\n    </section>\r\n    ","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { SiteInfoRoutingModule } from './site-info-routing.module';\r\nimport { SiteInfoComponent } from './site-info.component';\r\nimport { AddSiteInfoComponent } from './add-site-info/add-site-info.component';\r\nimport { JobTaskComponent } from './job-task/job-task.component';\r\nimport { HighRiskConComponent } from './high-risk-con/high-risk-con.component';\r\nimport { PpeSelectComponent } from './ppe-select/ppe-select.component';\r\nimport { LicenceAndQualComponent } from './licence-and-qual/licence-and-qual.component';\r\nimport { SharedModule } from './../shared/shared.module';\r\nimport { AddCustomerComponent } from './add-customer/add-customer.component';\r\n// import { AddLicenceAndQualificationComponent } from './licence-and-qual/add-licence-and-qualification/add-licence-and-qualification.component';\r\n// import { AddPPEselectComponent } from './ppe-select/add-ppeselect/add-ppeselect.component';\r\nimport { AddHighRiskConstructionComponent } from './high-risk-con/add-high-risk-construction/add-high-risk-construction.component';\r\nimport { EditHighRiskConstructionComponent } from './high-risk-con/edit-high-risk-construction/edit-high-risk-construction.component';\r\nimport { AddJobTaskComponent } from './job-task/add-job-task/add-job-task.component';\r\nimport { AddPPEComponent } from './ppe-select/add-ppe/add-ppe.component';\r\nimport { EditTaskComponent } from './job-task/edit-task/edit-task.component';\r\nimport { EditPPEComponent } from './ppe-select/edit-ppe/edit-ppe.component';\r\nimport { EditLicenceComponent } from './licence-and-qual/edit-licence/edit-licence.component';\r\nimport { AddLicenceComponent } from './licence-and-qual/add-licence/add-licence.component';\r\nimport { LicenceCatComponent } from './licence-and-qual/licence-cat/licence-cat.component';\r\nimport { AddLicenceCatComponent } from './licence-and-qual/licence-cat/add-licence-cat/add-licence-cat.component';\r\nimport { EditLicenceCatComponent } from './licence-and-qual/licence-cat/edit-licence-cat/edit-licence-cat.component';\r\nimport { CodeOfPractComponent } from './code-of-pract/code-of-pract.component';\r\nimport { AddCOPComponent } from './code-of-pract/add-cop/add-cop.component';\r\nimport { EditCOPComponent } from './code-of-pract/edit-cop/edit-cop.component';\r\nimport { AddSiteComponent } from './add-site-info/add-site/add-site.component';\r\nimport { EditSiteComponent } from './add-site-info/edit-site/edit-site.component';\r\nimport { AddingCustComponent } from './add-customer/adding-cust/adding-cust.component';\r\nimport { EditCustComponent } from './add-customer/edit-cust/edit-cust.component';\r\nimport { IdentifyHazardsComponent } from './identify-hazards/identify-hazards.component';\r\nimport { ContrAndActReqComponent } from './contr-and-act-req/contr-and-act-req.component';\r\nimport { AddHazardComponent } from './identify-hazards/add-hazard/add-hazard.component';\r\nimport { EditHazardComponent } from './identify-hazards/edit-hazard/edit-hazard.component';\r\nimport { AddContrActComponent } from './contr-and-act-req/add-contr-act/add-contr-act.component';\r\nimport { EditContActComponent } from './contr-and-act-req/edit-cont-act/edit-cont-act.component';\r\nimport { ProjectManagerComponent } from './project-manager/project-manager.component';\r\nimport { AddEditProjMangComponent } from './project-manager/add-edit-proj-mang/add-edit-proj-mang.component';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { StaffComponent } from './staff/staff.component';\r\nimport { RiskLevelComponent } from './risk-level/risk-level.component';\r\nimport { ResidualRiskLevelComponent } from './residual-risk-level/residual-risk-level.component';\r\nimport { ChemicalComponent } from './chemical/chemical.component';\r\nimport { AddChemicalComponent } from './chemical/add-chemical/add-chemical.component';\r\nimport { EditChemicalComponent } from './chemical/edit-chemical/edit-chemical.component';\r\nimport { AddRiskLevelComponent } from './risk-level/add-risk-level/add-risk-level.component';\r\nimport { EditRiskLevelComponent } from './risk-level/edit-risk-level/edit-risk-level.component';\r\nimport { AddResidualRiskLevelComponent } from './residual-risk-level/add-residual-risk-level/add-residual-risk-level.component';\r\nimport { EditResidualRiskLevelComponent } from './residual-risk-level/edit-residual-risk-level/edit-residual-risk-level.component';\r\nimport { AddStaffComponent } from './staff/add-staff/add-staff.component';\r\nimport { EditStaffComponent } from './staff/edit-staff/edit-staff.component';\r\nimport {AutosizeModule} from 'ngx-autosize';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SiteInfoComponent,\r\n    AddSiteInfoComponent,\r\n    JobTaskComponent,\r\n    HighRiskConComponent,\r\n    PpeSelectComponent,\r\n    LicenceAndQualComponent,\r\n    AddCustomerComponent,\r\n    AddHighRiskConstructionComponent,\r\n    EditHighRiskConstructionComponent,\r\n    AddJobTaskComponent,\r\n    AddPPEComponent,\r\n    EditTaskComponent,\r\n    EditPPEComponent,\r\n    EditLicenceComponent,\r\n    AddLicenceComponent,\r\n    LicenceCatComponent,\r\n    AddLicenceCatComponent,\r\n    EditLicenceCatComponent,\r\n    CodeOfPractComponent,\r\n    AddCOPComponent,\r\n    EditCOPComponent,\r\n    AddSiteComponent,\r\n    EditSiteComponent,\r\n    AddingCustComponent,\r\n    EditCustComponent,\r\n    IdentifyHazardsComponent,\r\n    ContrAndActReqComponent,\r\n    AddHazardComponent,\r\n    EditHazardComponent,\r\n    AddContrActComponent,\r\n    EditContActComponent,\r\n    ProjectManagerComponent,\r\n    AddEditProjMangComponent,\r\n    StaffComponent,\r\n    \r\n    RiskLevelComponent,\r\n    ResidualRiskLevelComponent,\r\n    ChemicalComponent,\r\n    AddChemicalComponent,\r\n    EditChemicalComponent,\r\n    AddRiskLevelComponent,\r\n    EditRiskLevelComponent,\r\n    AddResidualRiskLevelComponent,\r\n    EditResidualRiskLevelComponent,\r\n    AddStaffComponent,\r\n    EditStaffComponent,\r\n   \r\n  ],\r\n\r\n  imports: [\r\n    CommonModule,\r\n    SiteInfoRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    MatStepperModule,\r\n    AutosizeModule\r\n  ],\r\n})\r\nexport class SiteInfoModule {}\r\n","import { Injectable, ɵɵdefineInjectable, EventEmitter, Directive, ElementRef, NgZone, Input, Output, HostListener, NgModule } from '@angular/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport * as ɵngcc0 from '@angular/core';\nclass WindowRef {\n    /**\n     * @return {?}\n     */\n    get nativeWindow() {\n        return window;\n    }\n}\nWindowRef.ɵfac = function WindowRef_Factory(t) { return new (t || WindowRef)(); };\nWindowRef.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: WindowRef, factory: WindowRef.ɵfac, providedIn: 'root' });\n/** @nocollapse */ WindowRef.ngInjectableDef = ɵɵdefineInjectable({ factory: function WindowRef_Factory() { return new WindowRef(); }, token: WindowRef, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(WindowRef, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst MAX_LOOKUP_RETRIES = 3;\nclass AutosizeDirective {\n    /**\n     * @param {?} element\n     * @param {?} _window\n     * @param {?} _zone\n     */\n    constructor(element, _window, _zone) {\n        this.element = element;\n        this._window = _window;\n        this._zone = _zone;\n        this.onlyGrow = false;\n        this.useImportant = false;\n        this.resized = new EventEmitter();\n        this.retries = 0;\n        this._destroyed = false;\n        if (this.element.nativeElement.tagName !== 'TEXTAREA') {\n            this._findNestedTextArea();\n        }\n        else {\n            this.textAreaEl = this.element.nativeElement;\n            this.textAreaEl.style.overflow = 'hidden';\n            this._onTextAreaFound();\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set minRows(value) {\n        this._minRows = value;\n        if (this.textAreaEl) {\n            this.textAreaEl.rows = value;\n        }\n    }\n    ;\n    /**\n     * @param {?} textArea\n     * @return {?}\n     */\n    onInput(textArea) {\n        this.adjust();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed = true;\n        if (this._windowResizeHandler) {\n            this._window.nativeWindow.removeEventListener('resize', this._windowResizeHandler, false);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        this.adjust();\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        this.adjust(true);\n    }\n    /**\n     * @return {?}\n     */\n    _findNestedTextArea() {\n        this.textAreaEl = this.element.nativeElement.querySelector('TEXTAREA');\n        if (!this.textAreaEl && this.element.nativeElement.shadowRoot) {\n            this.textAreaEl = this.element.nativeElement.shadowRoot.querySelector('TEXTAREA');\n        }\n        if (!this.textAreaEl) {\n            if (this.retries >= MAX_LOOKUP_RETRIES) {\n                console.warn('ngx-autosize: textarea not found');\n            }\n            else {\n                this.retries++;\n                setTimeout((/**\n                 * @return {?}\n                 */\n                () => {\n                    this._findNestedTextArea();\n                }), 100);\n            }\n            return;\n        }\n        this.textAreaEl.style.overflow = 'hidden';\n        this._onTextAreaFound();\n    }\n    /**\n     * @return {?}\n     */\n    _onTextAreaFound() {\n        this._addWindowResizeHandler();\n        setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            this.adjust();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    _addWindowResizeHandler() {\n        this._windowResizeHandler = Debounce((/**\n         * @return {?}\n         */\n        () => {\n            this._zone.run((/**\n             * @return {?}\n             */\n            () => {\n                this.adjust();\n            }));\n        }), 200);\n        this._zone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._window.nativeWindow.addEventListener('resize', this._windowResizeHandler, false);\n        }));\n    }\n    /**\n     * @param {?=} inputsChanged\n     * @return {?}\n     */\n    adjust(inputsChanged = false) {\n        if (!this._destroyed && this.textAreaEl && this.textAreaEl.parentNode) {\n            /** @type {?} */\n            const currentText = this.textAreaEl.value;\n            if (inputsChanged === false &&\n                currentText === this._oldContent &&\n                this.textAreaEl.offsetWidth === this._oldWidth) {\n                return;\n            }\n            this._oldContent = currentText;\n            this._oldWidth = this.textAreaEl.offsetWidth;\n            /** @type {?} */\n            const clone = this.textAreaEl.cloneNode(true);\n            /** @type {?} */\n            const parent = this.textAreaEl.parentNode;\n            clone.style.width = this.textAreaEl.offsetWidth + 'px';\n            clone.style.visibility = 'hidden';\n            clone.style.position = 'absolute';\n            clone.textContent = currentText;\n            parent.appendChild(clone);\n            clone.style.overflow = 'hidden';\n            clone.style.height = 'auto';\n            /** @type {?} */\n            let height = clone.scrollHeight;\n            // add into height top and bottom borders' width\n            /** @type {?} */\n            let computedStyle = this._window.nativeWindow.getComputedStyle(clone, null);\n            height += parseInt(computedStyle.getPropertyValue('border-top-width'));\n            height += parseInt(computedStyle.getPropertyValue('border-bottom-width'));\n            // add into height top and bottom paddings width\n            height += parseInt(computedStyle.getPropertyValue('padding-top'));\n            height += parseInt(computedStyle.getPropertyValue('padding-bottom'));\n            /** @type {?} */\n            const oldHeight = this.textAreaEl.offsetHeight;\n            /** @type {?} */\n            const willGrow = height > oldHeight;\n            if (this.onlyGrow === false || willGrow) {\n                /** @type {?} */\n                const lineHeight = this._getLineHeight();\n                /** @type {?} */\n                const rowsCount = height / lineHeight;\n                if (this._minRows && this._minRows >= rowsCount) {\n                    height = this._minRows * lineHeight;\n                }\n                else if (this.maxRows && this.maxRows <= rowsCount) {\n                    // never shrink the textarea if onlyGrow is true\n                    /** @type {?} */\n                    const maxHeight = this.maxRows * lineHeight;\n                    height = this.onlyGrow ? Math.max(maxHeight, oldHeight) : maxHeight;\n                    this.textAreaEl.style.overflow = 'auto';\n                }\n                else {\n                    this.textAreaEl.style.overflow = 'hidden';\n                }\n                /** @type {?} */\n                const heightStyle = height + 'px';\n                /** @type {?} */\n                const important = this.useImportant ? 'important' : '';\n                this.textAreaEl.style.setProperty('height', heightStyle, important);\n                this.resized.emit(height);\n            }\n            parent.removeChild(clone);\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _getLineHeight() {\n        /** @type {?} */\n        let lineHeight = parseInt(this.textAreaEl.style.lineHeight, 10);\n        if (isNaN(lineHeight) && this._window.nativeWindow.getComputedStyle) {\n            /** @type {?} */\n            const styles = this._window.nativeWindow.getComputedStyle(this.textAreaEl);\n            lineHeight = parseInt(styles.lineHeight, 10);\n        }\n        if (isNaN(lineHeight)) {\n            /** @type {?} */\n            const fontSize = this._window.nativeWindow.getComputedStyle(this.textAreaEl, null).getPropertyValue('font-size');\n            lineHeight = Math.floor(parseInt(fontSize.replace('px', ''), 10) * 1.5);\n        }\n        return lineHeight;\n    }\n}\nAutosizeDirective.ɵfac = function AutosizeDirective_Factory(t) { return new (t || AutosizeDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(WindowRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nAutosizeDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: AutosizeDirective, selectors: [[\"\", \"autosize\", \"\"]], hostBindings: function AutosizeDirective_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"input\", function AutosizeDirective_input_HostBindingHandler($event) { return ctx.onInput($event.target); });\n    } }, inputs: { onlyGrow: \"onlyGrow\", useImportant: \"useImportant\", minRows: \"minRows\", maxRows: \"maxRows\" }, outputs: { resized: \"resized\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nAutosizeDirective.ctorParameters = () => [\n    { type: ElementRef },\n    { type: WindowRef },\n    { type: NgZone }\n];\nAutosizeDirective.propDecorators = {\n    minRows: [{ type: Input }],\n    maxRows: [{ type: Input }],\n    onlyGrow: [{ type: Input }],\n    useImportant: [{ type: Input }],\n    resized: [{ type: Output }],\n    onInput: [{ type: HostListener, args: ['input', ['$event.target'],] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AutosizeDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[autosize]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: WindowRef }, { type: ɵngcc0.NgZone }]; }, { onlyGrow: [{\n            type: Input\n        }], useImportant: [{\n            type: Input\n        }], resized: [{\n            type: Output\n        }], minRows: [{\n            type: Input\n        }], \n    /**\n     * @param {?} textArea\n     * @return {?}\n     */\n    onInput: [{\n            type: HostListener,\n            args: ['input', ['$event.target']]\n        }], maxRows: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    AutosizeDirective.prototype._minRows;\n    /** @type {?} */\n    AutosizeDirective.prototype.maxRows;\n    /** @type {?} */\n    AutosizeDirective.prototype.onlyGrow;\n    /** @type {?} */\n    AutosizeDirective.prototype.useImportant;\n    /** @type {?} */\n    AutosizeDirective.prototype.resized;\n    /**\n     * @type {?}\n     * @private\n     */\n    AutosizeDirective.prototype.retries;\n    /**\n     * @type {?}\n     * @private\n     */\n    AutosizeDirective.prototype.textAreaEl;\n    /**\n     * @type {?}\n     * @private\n     */\n    AutosizeDirective.prototype._oldContent;\n    /**\n     * @type {?}\n     * @private\n     */\n    AutosizeDirective.prototype._oldWidth;\n    /**\n     * @type {?}\n     * @private\n     */\n    AutosizeDirective.prototype._windowResizeHandler;\n    /**\n     * @type {?}\n     * @private\n     */\n    AutosizeDirective.prototype._destroyed;\n    /** @type {?} */\n    AutosizeDirective.prototype.element;\n    /**\n     * @type {?}\n     * @private\n     */\n    AutosizeDirective.prototype._window;\n    /**\n     * @type {?}\n     * @private\n     */\n    AutosizeDirective.prototype._zone;\n    /* Skipping unhandled member: ;*/\n}\n/**\n * @param {?} func\n * @param {?} wait\n * @param {?=} immediate\n * @return {?}\n */\nfunction Debounce(func, wait, immediate = false) {\n    /** @type {?} */\n    let timeout;\n    return (/**\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        const context = this;\n        /** @type {?} */\n        const args = arguments;\n        /** @type {?} */\n        const later = (/**\n         * @return {?}\n         */\n        function () {\n            timeout = null;\n            if (!immediate) {\n                func.apply(context, args);\n            }\n        });\n        /** @type {?} */\n        const callNow = immediate && !timeout;\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n        if (callNow) {\n            func.apply(context, args);\n        }\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass AutosizeModule {\n}\nAutosizeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: AutosizeModule });\nAutosizeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function AutosizeModule_Factory(t) { return new (t || AutosizeModule)(); }, providers: [\n        WindowRef\n    ], imports: [[]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(AutosizeModule, { declarations: [AutosizeDirective], exports: [AutosizeDirective] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AutosizeModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [AutosizeDirective],\n                imports: [],\n                providers: [\n                    WindowRef\n                ],\n                exports: [AutosizeDirective]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { AutosizeDirective, AutosizeModule, WindowRef as ɵa };\n\n//# sourceMappingURL=ngx-autosize.js.map","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport Swal from 'sweetalert2';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { SetTitleService } from 'src/app/utils/services/set-title.service';\r\nimport { EditResidualRiskLevelComponent } from './edit-residual-risk-level/edit-residual-risk-level.component';\r\nimport { MatSort } from '@angular/material/sort';\r\n\r\n@Component({\r\n  selector: 'app-residual-risk-level',\r\n  templateUrl: './residual-risk-level.component.html',\r\n  styleUrls: ['./residual-risk-level.component.scss']\r\n})\r\nexport class ResidualRiskLevelComponent implements OnInit {\r\n  ELEMENT_DATA = [];\r\n  /////////////mat table////////////////\r\n  displayedColumns: string[] = ['index', 'title', 'action'];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  allResidualRiskLevel: any[]=[];\r\n  \r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n  constructor( \r\n    private dialog: MatDialog, \r\n    private setTitle: SetTitleService,\r\n    private logicalFormInfoService: LogicalFormInfoService,\r\n    private spinner: NgxSpinnerService\r\n    ) { }\r\n  ngOnInit(): void {\r\n    this.setTitle.setTitle('WHS-ResidualRiskLevel Info');\r\n    this.getAllResidualRiskLevel()\r\n  }\r\n  getAllResidualRiskLevel(){\r\n    this.logicalFormInfoService.getAllResidual().subscribe((res:any)=> {\r\n      console.log(res)\r\n      let data = res.data;\r\n      data.forEach((element, index) => {\r\n        element.index = index + 1; //adding index\r\n      });\r\n\r\n      this.ELEMENT_DATA = data;\r\n      this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n      console.log('this.ELEMENT_DATA', this.ELEMENT_DATA);\r\n   })\r\n  }\r\n \r\n  edit(element) {\r\n    const dialogRef = this.dialog.open(EditResidualRiskLevelComponent, {\r\n      width: \"550px\",\r\n     // height:'50%',\r\n      data: element,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if ((result == \"true\")) {\r\n        this.getAllResidualRiskLevel()\r\n      }\r\n      console.log(\"The dialog was closed\");\r\n    });\r\n  }\r\n  delete(item) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: `Do you want to delete \"${item.title}\"?`,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#00B96F',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Delete!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        console.log(result)\r\n        // this.model.attributes.splice(i,1);\r\n        this.spinner.show()\r\n        this.logicalFormInfoService.deleteResidual(item._id).subscribe((res => {\r\n        this.getAllResidualRiskLevel()\r\n        this.spinner.hide()\r\n        }))\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","\r\n<div class=\"col ml-2 pt-1\">\r\n    <h1>\r\n     Residual Risk Level Information List\r\n    </h1>\r\n  </div>\r\n  <div class=\"col ml-2 mb-2\">\r\n  \r\n    <button type=\"button\"  [routerLink]=\"['/admin/siteInfo/addResidual']\" \r\n      class=\"btn btn-outline-primary  mr-2 float-right\"><i  class=\"fas fa-plus\"></i> Add ResidualLevel\r\n    </button>\r\n  </div>\r\n  <div >\r\n    <table mat-table [dataSource]=\"dataSource\" matSort>\r\n  \r\n      <!-- Position Column -->\r\n      <ng-container matColumnDef=\"index\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> No. </th>\r\n        <td mat-cell *matCellDef=\"let element,let i = index\">{{element.index}}</td>\r\n      </ng-container>\r\n  \r\n      <!-- Name Column -->\r\n  \r\n      <!-- Name Column -->\r\n      <ng-container matColumnDef=\"title\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Residual-Risklevel Name </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.title}} </td>\r\n      </ng-container>\r\n  \r\n<ng-container matColumnDef=\"action\">\r\n  <th mat-header-cell *matHeaderCellDef> Action </th>\r\n  <td mat-cell *matCellDef=\"let element\"> \r\n    <!-- <i class=\"fas fa-pencil-alt mr-2 \" (click)=\"edit(element)\" title=\"edit\"></i>  <i  class=\"fas fa-trash ml-2 \" (click)=\"delete(element)\" title=\"delete\"></i>  -->\r\n    <button mat-icon-button class=\"mr-2\" aria-label=\"Example icon button with a delete icon\" (click)=\"edit(element)\">\r\n      <mat-icon >edit</mat-icon>\r\n    </button>\r\n    <button mat-icon-button aria-label=\"Example icon button with a delete icon\" (click)=\"delete(element)\">\r\n      <mat-icon >delete</mat-icon>\r\n    </button>\r\n  </td>\r\n</ng-container>\r\n<!--      \r\n  \r\n      <ng-container matColumnDef=\"edit\">\r\n        <th mat-header-cell *matHeaderCellDef> Edit </th>\r\n        <td mat-cell *matCellDef=\"let element\" (click)=\"edit(element)\"> <i class=\"fas fa-pencil-alt \"></i>\r\n        </td>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"delete\">\r\n        <th mat-header-cell *matHeaderCellDef> Delete </th>\r\n        <td mat-cell *matCellDef=\"let element\" (click)=\"delete(element)\"> <i class=\"fas fa-trash \"></i>\r\n        </td>\r\n      </ng-container> -->\r\n  \r\n  \r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n    </table>\r\n  \r\n    <mat-paginator [pageSizeOptions]=\"[20]\" showFirstLastButtons aria-label=\"Select page of periodic elements\">\r\n    </mat-paginator>\r\n  </div>","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\n@Component({\r\n  selector: 'app-add-edit-proj-mang',\r\n  templateUrl: './add-edit-proj-mang.component.html',\r\n  styleUrls: ['./add-edit-proj-mang.component.scss']\r\n})\r\nexport class AddEditProjMangComponent implements OnInit {\r\n\r\n  editTitle: FormGroup;\r\n  dataRec: any;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    public dialogRef: MatDialogRef<AddEditProjMangComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.dataRec = data;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.editTitle = this.fb.group({\r\n      title: [this.dataRec.title, Validators.required],\r\n    });\r\n  }\r\n  onFormSubmit() {\r\n    let data = {\r\n      title: this.editTitle.get('title').value,\r\n      componentId: this.dataRec.componentId,\r\n    };\r\n    this.logicalFormInfo\r\n      .updateProjectMang(data, this.dataRec._id)\r\n      .subscribe((resData) => {\r\n        console.log('projectManager', resData);\r\n\r\n        this.dialogRef.close('true');\r\n        Swal.fire({\r\n          title: 'Project Manager Edited successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });\r\n      });\r\n  }\r\n  addForm() {\r\n    let data = {\r\n      title: this.editTitle.get('title').value,\r\n    };\r\n    this.logicalFormInfo.addProjectMang(data).subscribe((resData) => {\r\n      console.log('projectManager', resData);\r\n\r\n      this.dialogRef.close('true');\r\n    \r\n        Swal.fire({\r\n          title: 'Project Manager added successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });\r\n      \r\n    });\r\n  }\r\n  closeDialog() {\r\n    this.dialogRef.close('false');\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"editTitle\" >\r\n    <h2 *ngIf=\"!dataRec\">Add Project Manager</h2>\r\n    <h2 *ngIf=\"dataRec\">Edit Project Manager</h2>\r\n    <mat-form-field appearance=\"legacy\"\r\n    class=\"example-full-width\" style=\"width: 498px;\">\r\n    <!-- <mat-label >Add Licence Category</mat-label> -->\r\n    <!-- <mat-label >Edit Licence Category</mat-label> -->\r\n    <input matInput  formControlName=\"title\">\r\n    </mat-form-field>\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-2 offset-8 \">\r\n            <button mat-raised-button (click)=\"closeDialog()\">Close</button>\r\n        </div>\r\n        <div class=\"col-sm-2  \">\r\n            <button mat-raised-button *ngIf=\"dataRec\" [disabled]=\"!editTitle.valid\"(click)=\"onFormSubmit()\">Update</button>\r\n            <button mat-raised-button  *ngIf=\"!dataRec\"  [disabled]=\"!editTitle.valid\"(click)=\"addForm()\">Add</button>\r\n        </div>\r\n    </div>\r\n</form>   \r\n\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport Swal from 'sweetalert2';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { SetTitleService } from 'src/app/utils/services/set-title.service';\r\nimport { EditStaffComponent } from './edit-staff/edit-staff.component';\r\nimport { MatSort } from '@angular/material/sort';\r\n\r\n@Component({\r\n  selector: 'app-staff',\r\n  templateUrl: './staff.component.html',\r\n  styleUrls: ['./staff.component.scss']\r\n})\r\nexport class StaffComponent implements OnInit {\r\n\r\n\r\n  ELEMENT_DATA = [];\r\n  /////////////mat table////////////////\r\n  displayedColumns: string[] = ['index', 'title', 'action'];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  allStaff: any[]=[];\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n  constructor( \r\n    private dialog: MatDialog, \r\n    private setTitle: SetTitleService,\r\n    private logicalFormInfoService: LogicalFormInfoService,\r\n    private spinner: NgxSpinnerService\r\n    ) { }\r\n  ngOnInit(): void {\r\n    this.setTitle.setTitle('WHS-Staff Info');\r\n    this.getAllStaff()\r\n  }\r\n  getAllStaff(){\r\n    this.logicalFormInfoService.getAllStaff().subscribe((res:any)=> {\r\n      console.log(res)\r\n      let data = res.data;\r\n      data.forEach((element, index) => {\r\n        element.index = index + 1; //adding index\r\n      });\r\n\r\n      this.ELEMENT_DATA = data;\r\n      this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n      console.log('this.ELEMENT_DATA', this.ELEMENT_DATA);\r\n   })\r\n  }\r\n \r\n  edit(element) {\r\n    const dialogRef = this.dialog.open(EditStaffComponent, {\r\n      width: \"550px\",\r\n     // height:'50%',\r\n      data: element,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if ((result == \"true\")) {\r\n        this.getAllStaff()\r\n      }\r\n      console.log(\"The dialog was closed\");\r\n    });\r\n  }\r\n  delete(item) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: `Do you want to delete \"${item.title}\"?`,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#00B96F',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Delete!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        console.log(result)\r\n        // this.model.attributes.splice(i,1);\r\n        this.spinner.show()\r\n        this.logicalFormInfoService.deleteStaff(item._id).subscribe((res => {\r\n        this.getAllStaff()\r\n        this.spinner.hide()\r\n        }))\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n\r\n","<div class=\"col ml-2 pt-1\">\r\n    <h1>\r\n      Staff Information List\r\n    </h1>\r\n  </div>\r\n  <div>\r\n  \r\n    <button type=\"button\"  [routerLink]=\"['/admin/siteInfo/addStaff']\" \r\n      class=\"btn btn-outline-primary  mr-2 float-right\"><i  class=\"fas fa-plus\"></i> Add Staff\r\n    </button>\r\n  </div>\r\n  <div >\r\n    <table mat-table [dataSource]=\"dataSource\" matSort>\r\n  \r\n      <!-- Position Column -->\r\n      <ng-container matColumnDef=\"index\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> No. </th>\r\n        <td mat-cell *matCellDef=\"let element,let i = index\">{{element.index}}</td>\r\n      </ng-container>\r\n  \r\n      <!-- Name Column -->\r\n  \r\n      <!-- Name Column -->\r\n      <ng-container matColumnDef=\"title\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Staff Name </th>\r\n        <td mat-cell *matCellDef=\"let element\"><span class=\"flex-start\"> {{element.title}}</span> </td>\r\n      </ng-container>\r\n  \r\n     \r\n<ng-container matColumnDef=\"action\">\r\n  <th mat-header-cell *matHeaderCellDef> Action </th>\r\n  <td mat-cell *matCellDef=\"let element\"> \r\n    <!-- <i class=\"fas fa-pencil-alt mr-2 \" (click)=\"edit(element)\" title=\"edit\"></i>  <i  class=\"fas fa-trash ml-2 \" (click)=\"delete(element)\" title=\"delete\"></i>  -->\r\n    <button mat-icon-button class=\"mr-2\" aria-label=\"Example icon button with a delete icon\" (click)=\"edit(element)\">\r\n      <mat-icon >edit</mat-icon>\r\n    </button>\r\n    <button mat-icon-button aria-label=\"Example icon button with a delete icon\" (click)=\"delete(element)\">\r\n      <mat-icon >delete</mat-icon>\r\n    </button>\r\n  </td>\r\n</ng-container>\r\n     \r\n<!--   \r\n      <ng-container matColumnDef=\"edit\">\r\n        <th mat-header-cell *matHeaderCellDef> Edit </th>\r\n        <td mat-cell *matCellDef=\"let element\" (click)=\"edit(element)\"> <i class=\"fas fa-pencil-alt \"></i>\r\n        </td>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"delete\">\r\n        <th mat-header-cell *matHeaderCellDef> Delete </th>\r\n        <td mat-cell *matCellDef=\"let element\" (click)=\"delete(element)\"> <i class=\"fas fa-trash \"></i>\r\n        </td>\r\n      </ng-container> -->\r\n  \r\n  \r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n    </table>\r\n  \r\n    <mat-paginator [pageSizeOptions]=\"[20]\" showFirstLastButtons aria-label=\"Select page of periodic elements\">\r\n    </mat-paginator>\r\n  </div>","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-task',\r\n  templateUrl: './edit-task.component.html',\r\n  styleUrls: ['./edit-task.component.scss'],\r\n})\r\nexport class EditTaskComponent implements OnInit {\r\n  editTitle: FormGroup;\r\n  dataRec: any;\r\n\r\n\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    public dialogRef: MatDialogRef<EditTaskComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.dataRec = data;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    console.log(\"this.dataRec\",this.dataRec);\r\n    \r\n    this.editTitle = this.fb.group({\r\n      title: [this.dataRec.title, Validators.required],\r\n    });\r\n  }\r\n  onFormSubmit() {\r\n     \r\n    let data={\r\n      title :this.editTitle.get('title').value,\r\n      // PPE:this.dataRec.PPE,\r\n      // codeOfPractice:this.dataRec.codeOfPractice,\r\n      // licence:this.dataRec.licence,\r\n      // risk:this.dataRec.risk,\r\n    }\r\n    this.logicalFormInfo\r\n      .updateJobTask(data, this.dataRec._id)\r\n      .subscribe((resData) => {\r\n        console.log('submodulesData', resData);\r\n\r\n        this.dialogRef.close('true');\r\n        Swal.fire({\r\n          title: 'Parameter Edited successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });  \r\n          });\r\n  }\r\n  closeDialog(){\r\n    this.dialogRef.close('false');\r\n\r\n  }\r\n}\r\n","<form [formGroup]=\"editTitle\" >\r\n    <h2>Edit Job Task</h2>\r\n    <mat-form-field appearance=\"legacy\"\r\n    class=\"example-full-width\" style=\"width: 498px;\">\r\n    <!-- <mat-label>Edit Job Task</mat-label> -->\r\n    <input matInput  formControlName=\"title\" >\r\n    </mat-form-field>\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-2 offset-8 \">\r\n            <button mat-raised-button (click)=\"closeDialog()\">Close</button>\r\n        </div>\r\n        <div class=\"col-sm-2  \">\r\n            <button mat-raised-button  [disabled]=\"!editTitle.valid\"(click)=\"onFormSubmit()\">Update</button>\r\n        </div>\r\n    </div>\r\n</form>   \r\n\r\n","import { SnackbarService } from './../../services/snackbar.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { AfterViewInit, ViewChild } from '@angular/core';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { SetTitleService } from 'src/app/utils/services/set-title.service';\r\nimport { EditHazardComponent } from './edit-hazard/edit-hazard.component';\r\nimport { MatSort } from '@angular/material/sort';\r\n@Component({\r\n  selector: 'app-identify-hazards',\r\n  templateUrl: './identify-hazards.component.html',\r\n  styleUrls: ['./identify-hazards.component.scss']\r\n})\r\nexport class IdentifyHazardsComponent implements OnInit {\r\n\r\n  mode: any;\r\n  jobTaskData: any = [];\r\n  ELEMENT_DATA = [];\r\n  /////////////mat table////////////////\r\n  displayedColumns: string[] = ['index', 'title','action'];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n  /////////////mat table end////////////////\r\n\r\n  constructor(\r\n    private snack: SnackbarService,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    private dialog:MatDialog,\r\n    private setTitle:SetTitleService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getAllHazards();\r\n    this.setTitle.setTitle('WHS-PPE List');\r\n\r\n  }\r\n\r\n  getAllHazards() {\r\n    this.logicalFormInfo.getAllHazards().subscribe((res:any) => {\r\n      console.log('getAllHazards=>', res);\r\n      let data = res.data;\r\n      data.forEach((element, index) => {\r\n        element.index = index + 1; //adding index\r\n      });\r\n\r\n      this.ELEMENT_DATA = data;\r\n      this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n      console.log('this.ELEMENT_DATA', this.ELEMENT_DATA);\r\n\r\n      //  this.task = res.data.subComponents;\r\n    });\r\n  }\r\n  edit(element){\r\n    const dialogRef = this.dialog.open(EditHazardComponent, {\r\n      width: \"550px\",\r\n      data: element,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if ((result == \"true\")) {\r\n        this.getAllHazards();\r\n      }\r\n      console.log(\"The dialog was closed\");\r\n    });\r\n  }\r\n  delete(item) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: `Do you want to delete \"${item.title}\"?`,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#00B96F',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Delete!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.logicalFormInfo\r\n        .deleteHazards(item._id)\r\n        .subscribe((res) => {\r\n          Swal.fire({\r\n            title: 'Parameter Deleted successfully',\r\n            showConfirmButton: false,\r\n            timer: 1200,\r\n          });\r\n          console.log('deleted res', res);\r\n          this.getAllHazards();\r\n            \r\n        });\r\n      }\r\n    });\r\n  }\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  copySuccess(){\r\n    console.log('copy successfull')\r\n    this.snack.openSnackBar('Copied to clipboard');\r\n  }\r\n}\r\n","<div class=\"col ml-2 pt-3\">\r\n<h1> Identify Hazards List</h1>\r\n</div>\r\n    <div class=\"col ml-2 mb-2\">\r\n      \r\n      <button  class=\"btn btn-outline-primary mt-1 mr-2 float-right\"[routerLink]=\"['/admin/siteInfo/addHazards']\">\r\n        <i class=\"fas fa-folder-plus mr-2\"></i>Add Hazard \r\n      </button>\r\n    </div>\r\n    <div class=\"col-6\">\r\n      <mat-form-field>\r\n        <input\r\n          matInput\r\n          #input\r\n          placeholder=\"Search\"\r\n          (keyup)=\"applyFilter($event)\"\r\n        />\r\n      </mat-form-field>\r\n    </div>\r\n    <div class=\"\">\r\n      <table mat-table [dataSource]=\"dataSource\" matSort>\r\n    \r\n        <!-- Position Column -->\r\n        <ng-container matColumnDef=\"index\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> No. </th>\r\n          <td mat-cell *matCellDef=\"let element\">{{element.index}}</td>\r\n        </ng-container>\r\n    \r\n        <!-- Name Column -->\r\n       \r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"title\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\r\n      <td mat-cell *matCellDef=\"let element\" [cdkCopyToClipboard]=\"element.title.toString()\" (cdkCopyToClipboardCopied)=\"copySuccess()\" [matTooltip]=\"element.title\"><span class=\"flex-start\"> {{element.title.length > 90? element.title.slice(0,90)+ '...' :element.title }}</span> </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"action\">\r\n      <th mat-header-cell *matHeaderCellDef style=\"width: 10%;\"> Action </th>\r\n      <td mat-cell *matCellDef=\"let element\"> \r\n        <!-- <i class=\"fas fa-pencil-alt mr-2\" (click)=\"edit(element)\" title=\"edit\"></i>  <i  class=\"fas fa-trash ml-2 \" (click)=\"delete(element)\" title=\"delete\"></i>  -->\r\n        <button mat-icon-button class=\"mr-2\" aria-label=\"Example icon button with a delete icon\">\r\n          <mat-icon (click)=\"edit(element)\">edit</mat-icon>\r\n        </button>\r\n        <button mat-icon-button aria-label=\"Example icon button with a delete icon\">\r\n          <mat-icon (click)=\"delete(element)\">delete</mat-icon>\r\n        </button>\r\n      </td>\r\n    </ng-container>\r\n    <!-- <ng-container matColumnDef=\"edit\">\r\n        <th mat-header-cell *matHeaderCellDef> Edit </th>\r\n        <td mat-cell *matCellDef=\"let element\"(click)=\"edit(element)\"> <i class=\"fas fa-pencil-alt \"></i> \r\n        </td>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"delete\">\r\n        <th mat-header-cell *matHeaderCellDef> Delete </th>\r\n        <td mat-cell *matCellDef=\"let element\"(click)=\"delete(element)\"> <i class=\"fas fa-trash \"></i> \r\n        </td>\r\n      </ng-container> -->\r\n    \r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n        <tr class=\"mat-row\" *matNoDataRow>\r\n          <td class=\"mat-cell\" colspan=\"4\">Data Not  Found  \"{{input.value}}\"</td>\r\n        </tr>\r\n      </table>\r\n    \r\n      <mat-paginator [pageSizeOptions]=\"[20]\"\r\n                     showFirstLastButtons \r\n                     aria-label=\"Select page of periodic elements\">\r\n      </mat-paginator>\r\n    </div>\r\n    \r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\n@Component({\r\n  selector: 'app-edit-licence-cat',\r\n  templateUrl: './edit-licence-cat.component.html',\r\n  styleUrls: ['./edit-licence-cat.component.scss'],\r\n})\r\nexport class EditLicenceCatComponent implements OnInit {\r\n  editTitle: FormGroup;\r\n  dataRec: any;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    public dialogRef: MatDialogRef<EditLicenceCatComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.dataRec = data;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.editTitle = this.fb.group({\r\n      title: [this.dataRec.title, Validators.required],\r\n    });\r\n  }\r\n  onFormSubmit() {\r\n    let data = {\r\n      title: this.editTitle.get('title').value,\r\n      componentId: this.dataRec.componentId,\r\n    };\r\n    this.logicalFormInfo\r\n      .updateLicenceCat(data, this.dataRec._id)\r\n      .subscribe((resData) => {\r\n        console.log('submodulesData', resData);\r\n\r\n        this.dialogRef.close('true');\r\n        Swal.fire({\r\n          title: 'Category Edited successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });\r\n      });\r\n  }\r\n  addForm() {\r\n    let data = {\r\n      title: this.editTitle.get('title').value,\r\n    };\r\n    this.logicalFormInfo.addLicenceCat(data).subscribe((resData) => {\r\n      console.log('category', resData);\r\n\r\n      this.dialogRef.close('true');\r\n      if (this.dataRec) {\r\n        Swal.fire({\r\n          title: 'Category Edited successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });\r\n      } else {\r\n        Swal.fire({\r\n          title: 'Category Added successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });\r\n      }\r\n    });\r\n  }\r\n  closeDialog() {\r\n    this.dialogRef.close('false');\r\n  }\r\n}\r\n","<form [formGroup]=\"editTitle\" >\r\n    <h2 *ngIf=\"!dataRec\">Add Licence Category</h2>\r\n    <h2 *ngIf=\"dataRec\">Edit Licence Category</h2>\r\n    <mat-form-field appearance=\"legacy\"\r\n    class=\"example-full-width\" style=\"width: 498px;\">\r\n    <!-- <mat-label >Add Licence Category</mat-label> -->\r\n    <!-- <mat-label >Edit Licence Category</mat-label> -->\r\n    <input matInput  formControlName=\"title\" >\r\n    </mat-form-field>\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-2 offset-8 \">\r\n            <button mat-raised-button (click)=\"closeDialog()\">Close</button>\r\n        </div>\r\n        <div class=\"col-sm-2  \">\r\n            <button mat-raised-button *ngIf=\"dataRec\" [disabled]=\"!editTitle.valid\"(click)=\"onFormSubmit()\">Update</button>\r\n            <button mat-raised-button  *ngIf=\"!dataRec\"  [disabled]=\"!editTitle.valid\"(click)=\"addForm()\">Add</button>\r\n        </div>\r\n    </div>\r\n</form>   \r\n\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormArray, FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\n@Component({\r\n  selector: 'app-edit-cont-act',\r\n  templateUrl: './edit-cont-act.component.html',\r\n  styleUrls: ['./edit-cont-act.component.scss'],\r\n})\r\nexport class EditContActComponent implements OnInit {\r\n  editTitle: FormGroup;\r\n  dataRec: any;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    public dialogRef: MatDialogRef<EditContActComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.dataRec = data;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    console.log('this.dataRec', this.dataRec);\r\n\r\n    this.editTitle = this.fb.group({\r\n      title: [this.dataRec.title, Validators.required],\r\n    });\r\n  }\r\n  onFormSubmit() {\r\n    let data = {\r\n      title: this.editTitle.get('title').value,\r\n    };\r\n    this.logicalFormInfo\r\n      .updateContrlActReq(data, this.dataRec._id)\r\n      .subscribe((resData) => {\r\n        this.dialogRef.close('true');\r\n        Swal.fire({\r\n          title: 'Parameter Edited successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });\r\n      });\r\n  }\r\n  closeDialog() {\r\n    this.dialogRef.close('false');\r\n  }\r\n}\r\n","<form [formGroup]=\"editTitle\" >\r\n    <h2>Edit Control And Action</h2>\r\n    <mat-form-field appearance=\"legacy\"\r\n    class=\"example-full-width\" style=\"width: 498px;\">\r\n    <!-- <mat-label>Edit Job Task</mat-label> -->\r\n    <input matInput   formControlName=\"title\">\r\n    </mat-form-field>\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-2 offset-8 \">\r\n            <button mat-raised-button (click)=\"closeDialog()\">Close</button>\r\n        </div>\r\n        <div class=\"col-sm-2  \">\r\n            <button mat-raised-button  [disabled]=\"!editTitle.valid\"(click)=\"onFormSubmit()\">Update</button>\r\n        </div>\r\n    </div>\r\n  </form>   \r\n  \r\n  ","import { Component, OnInit,Inject } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport Swal from 'sweetalert2';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-risk-level',\r\n  templateUrl: './edit-risk-level.component.html',\r\n  styleUrls: ['./edit-risk-level.component.scss']\r\n})\r\nexport class EditRiskLevelComponent implements OnInit {\r\n\r\n  editTitle!: FormGroup;\r\n  dataRec: any;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    public dialogRef: MatDialogRef<EditRiskLevelComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.dataRec = data;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.editTitle = this.fb.group({\r\n      title: [this.dataRec.title, Validators.required],\r\n    });\r\n  }\r\n  onFormSubmit() {\r\n     \r\n    let data={\r\n      title :this.editTitle.get('title').value\r\n    }\r\n    this.logicalFormInfo\r\n      .updateRiskLevel(this.dataRec._id,data)\r\n      .subscribe((resData) => {\r\n        console.log('resData', resData);\r\n\r\n        this.dialogRef.close('true');\r\n        Swal.fire({\r\n          title: 'Risk Level Updated successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });     \r\n       });\r\n  }\r\n  closeDialog(){\r\n    this.dialogRef.close('false');\r\n\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"editTitle\" >\r\n    <h2>Edit RiskLevel</h2>\r\n    <mat-form-field appearance=\"legacy\"\r\n    class=\"example-full-width\" style=\"width: 498px;\">\r\n    <!-- <mat-label>Edit PPE</mat-label> -->\r\n    <input matInput  formControlName=\"title\" >\r\n    </mat-form-field>\r\n    <br>\r\n    \r\n    <div class=\"row\">\r\n        <div class=\"col-sm-2 offset-8 \">\r\n            <button mat-raised-button (click)=\"closeDialog()\">Close</button>\r\n        </div>\r\n        <div class=\"col-sm-2  \">\r\n            <button mat-raised-button  [disabled]=\"!editTitle.valid\"(click)=\"onFormSubmit()\">Update</button>\r\n        </div>\r\n    </div>\r\n</form> ","import  Swal  from 'sweetalert2';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { SetTitleService } from 'src/app/utils/services/set-title.service';\r\nimport { AddingCustComponent } from './adding-cust/adding-cust.component';\r\nimport { EditCustComponent } from './edit-cust/edit-cust.component';\r\nimport { MatSort } from '@angular/material/sort';\r\n\r\n@Component({\r\n  selector: 'app-add-customer',\r\n  templateUrl: './add-customer.component.html',\r\n  styleUrls: ['./add-customer.component.scss']\r\n})\r\nexport class AddCustomerComponent implements OnInit {\r\n  ELEMENT_DATA = [];\r\n  displayedColumns: string[] = ['index', 'customerName','customerContact','customerContactPhone','customerEmail', 'action'];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor( \r\n    private setTitle: SetTitleService, \r\n    private dialog: MatDialog,\r\n    private logicalFormInfoService: LogicalFormInfoService\r\n    ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllCustomers()\r\n    this.setTitle.setTitle('WHS-Add Customer');\r\n    \r\n  }\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  getAllCustomers(){\r\n    this.logicalFormInfoService.getAllCustomer().subscribe((res:any) => {\r\n      console.log(res)\r\n      this.dataSource.data = res.data;\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    })\r\n  }\r\n\r\n  // getAllJobTask() {\r\n  //   // this.logicalFormInfo.getAllJobtask().subscribe((res: any) => {\r\n  //   //   console.log('jobTaskDetails=>', res);\r\n  //   //   // this.jobTaskData = res.data[0].subComponents;\r\n  //   //   let data = res.data\r\n  //   //   data.forEach((element, index) => {\r\n  //   //     element.index = index + 1; //adding index\r\n  //   //   });\r\n\r\n  //   //   this.ELEMENT_DATA = data;\r\n  //   //   this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n  //   //   this.dataSource.paginator = this.paginator;\r\n\r\n  //   //   //  this.task = res.data.subComponents;\r\n  //   // });\r\n\r\n  // }\r\n\r\n  openDialog(id) {\r\n\t\tlet dialogRef = this.dialog.open(AddingCustComponent, {\r\n      height:'600px',\r\n      width:'700px',\r\n    \r\n\t\t\tdata: {\r\n\t\t\t\taction: \"new\",\r\n\t\t\t\tuserId: id,\r\n\t\t\t},\r\n\t\t});\r\n\t\tdialogRef.afterClosed().subscribe((result) => {\r\n      if(result === 'ok' ){\r\n        this.getAllCustomers()\r\n      }\r\n\t\t\tconsole.log(\"CustomerInfoComponent -> openDialog -> result\", result);\r\n\t\t\t\r\n\t\t\tconsole.log(\"The dialog was closed\");\r\n\t\t});\r\n\t}\r\n  edit(element) {\r\n    console.log(element)\r\n    const dialogRef = this.dialog.open(EditCustComponent, {\r\n      height:'700px',\r\n      width:'750px',\r\n  \r\n            // height:'400px',\r\n      data: element,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if ((result == \"true\")) {\r\n        this.getAllCustomers();\r\n      }\r\n      console.log(\"The dialog was closed\");\r\n    });\r\n  }\r\n  delete(item) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: `Do you want to delete \"${item.customerName}\"?`,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#00B96F',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Delete!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.logicalFormInfoService\r\n          .deleteCustomer(item._id)\r\n          .subscribe((res) => {\r\n            Swal.fire({\r\n              title: 'Deleted successfully',\r\n              showConfirmButton: false,\r\n              timer: 1200,\r\n            }); console.log('deleted res', res);\r\n            this.getAllCustomers();\r\n\r\n          });\r\n      }\r\n    });\r\n  }\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n}\r\n","\r\n \r\n<div class=\"col ml-2 pt-3\">\r\n<h1>\r\n  Customer List\r\n\r\n\r\n</h1>\r\n</div>\r\n<div class=\"col ml-2 mb-2\">\r\n  \r\n  <button [routerLink]=\"['/admin/siteInfo/addingCustomer']\"  type=\"button\" class=\"btn btn-outline-primary mt-1 mr-2 float-right\"><i  class=\"fas fa-plus\"></i> Add </button>\r\n</div>\r\n<div class=\"col-6\">\r\n  <mat-form-field>\r\n    <input\r\n      matInput\r\n      #input\r\n      placeholder=\"Search\"\r\n      (keyup)=\"applyFilter($event)\"\r\n    />\r\n  </mat-form-field>\r\n</div>\r\n<div class=\"\">\r\n  <table mat-table [dataSource]=\"dataSource\" matSort>\r\n\r\n    <!-- Position Column -->\r\n    <ng-container matColumnDef=\"index\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> No. </th>\r\n      <td mat-cell *matCellDef=\"let element,let i = index\">{{i+1}}</td>\r\n    </ng-container>\r\n\r\n    <!-- Name Column -->\r\n   \r\n<!-- Name Column -->\r\n<ng-container matColumnDef=\"customerName\">\r\n  <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\r\n  <td mat-cell *matCellDef=\"let element\"> <span class=\"flex-start\">{{element.customerName}}</span>  </td>\r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"customerContact\">\r\n  <th mat-header-cell *matHeaderCellDef mat-sort-header> Contact </th>\r\n  <td mat-cell *matCellDef=\"let element\"><span class=\"flex-start\"> {{element.customerContact}}</span> </td>\r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"customerContactPhone\">\r\n  <th mat-header-cell *matHeaderCellDef mat-sort-header> Contact Phone </th>\r\n  <td mat-cell *matCellDef=\"let element\"><span class=\"flex-start\"> {{element.contacts[0]?.phone}}</span> </td>\r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"customerEmail\">\r\n  <th mat-header-cell *matHeaderCellDef mat-sort-header> Email </th>\r\n  <td mat-cell *matCellDef=\"let element\"><span class=\"flex-start\">{{element.contacts[0]?.email}}</span>  </td>\r\n</ng-container>\r\n\r\n<!-- <ng-container matColumnDef=\"State\">\r\n  <th mat-header-cell *matHeaderCellDef> State </th>\r\n  <td mat-cell *matCellDef=\"let element\"> {{element.State}} </td>\r\n</ng-container> -->\r\n\r\n<ng-container matColumnDef=\"action\">\r\n  <th mat-header-cell *matHeaderCellDef> Action </th>\r\n  <td mat-cell *matCellDef=\"let element\"> \r\n    <!-- <i class=\"fas fa-pencil-alt mr-2 \" (click)=\"edit(element)\" title=\"edit\"></i>  <i  class=\"fas fa-trash ml-2 \" (click)=\"delete(element)\" title=\"delete\"></i>  -->\r\n    <button mat-icon-button class=\"mr-2\" aria-label=\"Example icon button with a delete icon\" (click)=\"edit(element)\">\r\n      <mat-icon >edit</mat-icon>\r\n    </button>\r\n    <button mat-icon-button aria-label=\"Example icon button with a delete icon\" (click)=\"delete(element)\">\r\n      <mat-icon >delete</mat-icon>\r\n    </button>\r\n  </td>\r\n</ng-container>\r\n<!-- <ng-container matColumnDef=\"delete\">\r\n  <th mat-header-cell *matHeaderCellDef> Delete </th>\r\n  <td mat-cell *matCellDef=\"let element\"(click)=\"delete(element)\"> <i class=\"fas fa-trash \"></i> \r\n  </td>\r\n</ng-container> -->\r\n\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n    <tr class=\"mat-row\" *matNoDataRow>\r\n      <td class=\"mat-cell\" colspan=\"4\">Data Not  Found  \"{{input.value}}\"</td>\r\n    </tr>\r\n  </table>\r\n\r\n  <mat-paginator [pageSizeOptions]=\"[20]\"\r\n                 showFirstLastButtons \r\n                 aria-label=\"Select page of periodic elements\">\r\n  </mat-paginator>\r\n</div>\r\n ","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { FormBuilder, FormGroup,  Validators,\r\n  FormArray,} from '@angular/forms';\r\n\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-add-chemical',\r\n  templateUrl: './add-chemical.component.html',\r\n  styleUrls: ['./add-chemical.component.scss']\r\n})\r\nexport class AddChemicalComponent implements OnInit {\r\n  addChemicalForm: FormGroup;\r\n  numberOfLineBreaks:any;\r\n  constructor( \r\n    private fb:FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    private router: Router,\r\n    ) { \r\n      this.addChemicalForm=this.fb.group({\r\n        arrObj: this.fb.array([]),\r\n      })\r\n    }\r\n\r\n    ngOnInit(): void {\r\n      this.addChemical();\r\n    }\r\n    addChemical() {\r\n      {\r\n        this.add().push(this.newAction());\r\n      }\r\n    }\r\n    add(): FormArray {\r\n      return this.addChemicalForm.get('arrObj') as FormArray;\r\n    }\r\n    newAction(): FormGroup {\r\n      return this.fb.group({\r\n       \r\n        title: ['', Validators.required],\r\n      });\r\n    }\r\n    \r\n    removeChemical(i) {\r\n      const item = <FormArray>this.addChemicalForm.controls['arrObj'];\r\n      if (item.length > 1) {\r\n        item.removeAt(i);\r\n      \r\n      }\r\n    }\r\n    onFormSubmit() {\r\n     \r\n      \r\n      console.log(this.addChemicalForm.value);\r\n      let data={\r\n        arrObj:this.addChemicalForm.get('arrObj').value\r\n      }\r\n      this.logicalFormInfo.addMultipleChemical(data).subscribe((data) => {\r\n        console.log('chemical=>', data);\r\n        this.router.navigate(['/admin/siteInfo/chemical']);      \r\n      },(err)=>{console.error(err);} \r\n    \r\n      );\r\n      \r\n    }\r\n    calcHeight(value) {\r\n      this.numberOfLineBreaks = (value.match(/\\n/g) || []).length+1;\r\n      console.log(\"numberOfLineBreaks\",this.numberOfLineBreaks)\r\n   }\r\n  }","<div class=\"btn btn-outline-primary\" [routerLink]=\"['/admin/siteInfo/chemical']\">\r\n    <i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\r\n  </div>\r\n\r\n    <div class=\"container px-4 py-4 bg-white\" >\r\n        <form  [formGroup]=\"addChemicalForm\" (ngSubmit)=\"onFormSubmit()\">\r\n      <h2  class=\"text-center\"> Chemical Info</h2>\r\n      <br />\r\n      <hr />\r\n      <ng-container formArrayName=\"arrObj\">\r\n        <ng-container\r\n          *ngFor=\"let control of add().controls; let i = index\"\r\n          [formGroupName]=\"i\"\r\n        >\r\n          <div class=\"row justify-content-center\">\r\n            <div class=\"mr-1 mt-2\">\r\n              <span \r\n                >{{i+1}}.\r\n              </span>\r\n            </div>\r\n            <div class=\"col-8\">\r\n              <textarea autosize\r\n              (keyup)=\" calcHeight($event.target.value)\"\r\n              [rows]=\"numberOfLineBreaks\"\r\n                type=\"text\"\r\n                formControlName=\"title\"\r\n                class=\"form-control sign\"\r\n                id=\"title\"\r\n              ></textarea>\r\n            </div>\r\n            <div class=\"col-1 mt-2\">\r\n              <span class=\"material-icons\" (click)=\"addChemical()\"\r\n                >add_circle_outline\r\n              </span>\r\n            </div>\r\n            <div class=\"col-1 mt-2\">\r\n              <span class=\"material-icons\" (click)=\"removeChemical(i)\">\r\n                remove_circle_outline\r\n              </span>\r\n            </div>\r\n          </div>\r\n  \r\n          <hr />\r\n        </ng-container>\r\n      </ng-container>\r\n      <br />\r\n          <div  class=\"col-md-2\">\r\n            <button class=\"btn btn-primary\"[disabled]=\"addChemicalForm.get('arrObj').invalid\" >\r\n              Add\r\n            </button>\r\n          </div>\r\n        \r\n        </form>\r\n        </div>","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n  FormArray,\r\n  \r\n} from '@angular/forms';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-add-cop',\r\n  templateUrl: './add-cop.component.html',\r\n  styleUrls: ['./add-cop.component.scss']\r\n})\r\nexport class AddCOPComponent implements OnInit {\r\n\r\n  codeOfPractFG!: FormGroup;\r\n  formData: any;numberOfLineBreaks: any;\r\n;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private router: Router,\r\n    private logicalFormInfo:LogicalFormInfoService\r\n  ) { \r\n    this.codeOfPractFG=this.fb.group({\r\n     // mode:\"JobTask\",\r\n      arrObj: this.fb.array([]),\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.addAction();\r\n  }\r\n  addAction() {\r\n    {\r\n      this.add().push(this.newAction());\r\n    }\r\n  }\r\n  add(): FormArray {\r\n    return this.codeOfPractFG.get('arrObj') as FormArray;\r\n  }\r\n  newAction(): FormGroup {\r\n    return this.fb.group({\r\n     \r\n      title: ['', Validators.required],\r\n    });\r\n  }\r\n  \r\n  removeSafetyModule(i) {\r\n    const item = <FormArray>this.codeOfPractFG.controls['arrObj'];\r\n    if (item.length > 1) {\r\n      item.removeAt(i);\r\n    \r\n    }\r\n  }\r\n  onFormSubmit() {\r\n    let data={\r\n      arrObj:this.codeOfPractFG.get('arrObj').value\r\n    }\r\n    this.logicalFormInfo.addMultipleCOP(data).subscribe((data) => {\r\n      console.log('codeOfPractice=>', data);\r\n\r\n      this.router.navigate(['/admin/siteInfo/codeOfpract']);      \r\n    },(err)=>{console.error(err);} \r\n  \r\n    );\r\n    \r\n  }\r\n  calcHeight(value) {\r\n    this.numberOfLineBreaks = (value.match(/\\n/g) || []).length+1;\r\n    console.log(\"numberOfLineBreaks\",this.numberOfLineBreaks)\r\n }\r\n}\r\n","<div class=\"btn btn-outline-primary\" [routerLink]=\"['/admin/siteInfo/codeOfpract']\">\r\n    <i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\r\n  </div>\r\n  <div class=\"container px-4 py-4 bg-white\">\r\n    <form [formGroup]=\"codeOfPractFG\" (ngSubmit)=\"onFormSubmit()\">\r\n      <h2 class=\"text-center\">Add Code Of Practice</h2>\r\n      <br />\r\n      <hr />\r\n      <ng-container formArrayName=\"arrObj\">\r\n        <ng-container\r\n          *ngFor=\"let control of add().controls; let i = index\"\r\n          [formGroupName]=\"i\"\r\n        >\r\n          <div class=\"row justify-content-center\">\r\n            <div class=\"mr-1 mt-2\">\r\n              <span \r\n                >{{i+1}}.\r\n              </span>\r\n            </div>\r\n            <div class=\"col-8\">\r\n              <textarea autosize\r\n                (keyup)=\" calcHeight($event.target.value)\"\r\n          [rows]=\"numberOfLineBreaks\"\r\n                type=\"text\"\r\n                formControlName=\"title\"\r\n                class=\"form-control sign\"\r\n                id=\"name\"\r\n              ></textarea>\r\n            </div>\r\n            <div class=\"col-1 mt-2\">\r\n              <span class=\"material-icons\" (click)=\"addAction()\"\r\n                >add_circle_outline\r\n              </span>\r\n            </div>\r\n            <div class=\"col-1 mt-2\">\r\n              <span class=\"material-icons\" (click)=\"removeSafetyModule(i)\">\r\n                remove_circle_outline\r\n              </span>\r\n            </div>\r\n          </div>\r\n  \r\n          <hr />\r\n        </ng-container>\r\n      </ng-container>\r\n      <br />\r\n  \r\n      <div class=\"col-md-2\">\r\n        <button type=\"submit\" class=\"btn btn-primary\"[disabled]=\"codeOfPractFG.get('arrObj').invalid\">Add</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  ","import { Component, OnInit,Inject } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport Swal from 'sweetalert2';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\n@Component({\r\n  selector: 'app-edit-chemical',\r\n  templateUrl: './edit-chemical.component.html',\r\n  styleUrls: ['./edit-chemical.component.scss']\r\n})\r\nexport class EditChemicalComponent implements OnInit {\r\n\r\n  editTitle!: FormGroup;\r\n  dataRec: any;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    public dialogRef: MatDialogRef<EditChemicalComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.dataRec = data;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.editTitle = this.fb.group({\r\n      title: [this.dataRec.title, Validators.required],\r\n    });\r\n  }\r\n  onFormSubmit() {\r\n     \r\n    let data={\r\n      title :this.editTitle.get('title').value\r\n    }\r\n    this.logicalFormInfo\r\n      .updateChemical(this.dataRec._id,data)\r\n      .subscribe((resData) => {\r\n        console.log('resData', resData);\r\n\r\n        this.dialogRef.close('true');\r\n        Swal.fire({\r\n          title: 'chemical Updated successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });     \r\n       });\r\n  }\r\n  closeDialog(){\r\n    this.dialogRef.close('false');\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n","<form [formGroup]=\"editTitle\" >\r\n    <h2>Edit Chemical</h2>\r\n    <mat-form-field appearance=\"legacy\"\r\n    class=\"example-full-width\" style=\"width: 498px;\">\r\n    <!-- <mat-label>Edit PPE</mat-label> -->\r\n    <input matInput  formControlName=\"title\" >\r\n    </mat-form-field>\r\n    <br>\r\n    \r\n    <div class=\"row\">\r\n        <div class=\"col-sm-2 offset-8 \">\r\n            <button mat-raised-button (click)=\"closeDialog()\">Close</button>\r\n        </div>\r\n        <div class=\"col-sm-2  \">\r\n            <button mat-raised-button  [disabled]=\"!editTitle.valid\"(click)=\"onFormSubmit()\">Update</button>\r\n        </div>\r\n    </div>\r\n</form>   \r\n","import { Component, OnInit,Inject } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport Swal from 'sweetalert2';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-residual-risk-level',\r\n  templateUrl: './edit-residual-risk-level.component.html',\r\n  styleUrls: ['./edit-residual-risk-level.component.scss']\r\n})\r\nexport class EditResidualRiskLevelComponent implements OnInit {\r\n\r\n  editTitle!: FormGroup;\r\n  dataRec: any;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    public dialogRef: MatDialogRef<EditResidualRiskLevelComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.dataRec = data;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.editTitle = this.fb.group({\r\n      title: [this.dataRec.title, Validators.required],\r\n    });\r\n  }\r\n  onFormSubmit() {\r\n     \r\n    let data={\r\n      title :this.editTitle.get('title').value\r\n    }\r\n    this.logicalFormInfo\r\n      .updateResidual(this.dataRec._id,data)\r\n      .subscribe((resData) => {\r\n        console.log('resData', resData);\r\n\r\n        this.dialogRef.close('true');\r\n        Swal.fire({\r\n          title: 'Residual-Risk Updated successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });     \r\n       });\r\n  }\r\n  closeDialog(){\r\n    this.dialogRef.close('false');\r\n\r\n  }\r\n\r\n\r\n}\r\n","\r\n<form [formGroup]=\"editTitle\" >\r\n    <h2>Edit Residual</h2>\r\n    <mat-form-field appearance=\"legacy\"\r\n    class=\"example-full-width\" style=\"width: 498px;\">\r\n    <!-- <mat-label>Edit PPE</mat-label> -->\r\n    <input matInput  formControlName=\"title\" >\r\n    </mat-form-field>\r\n    <br>\r\n    \r\n    <div class=\"row\">\r\n        <div class=\"col-sm-2 offset-8 \">\r\n            <button mat-raised-button (click)=\"closeDialog()\">Close</button>\r\n        </div>\r\n        <div class=\"col-sm-2  \">\r\n            <button mat-raised-button  [disabled]=\"!editTitle.valid\"(click)=\"onFormSubmit()\">Update</button>\r\n        </div>\r\n    </div>\r\n</form>   ","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport Swal from 'sweetalert2';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { SetTitleService } from 'src/app/utils/services/set-title.service';\r\nimport { EditRiskLevelComponent } from './edit-risk-level/edit-risk-level.component';\r\nimport { MatSort } from '@angular/material/sort';\r\n\r\n\r\n@Component({\r\n  selector: 'app-risk-level',\r\n  templateUrl: './risk-level.component.html',\r\n  styleUrls: ['./risk-level.component.scss']\r\n})\r\nexport class RiskLevelComponent implements OnInit {\r\n\r\n  ELEMENT_DATA = [];\r\n  /////////////mat table////////////////\r\n  displayedColumns: string[] = ['index', 'title', 'action'];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  allRiskLevel: any[]=[];\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n  constructor( \r\n    private dialog: MatDialog, \r\n    private setTitle: SetTitleService,\r\n    private logicalFormInfoService: LogicalFormInfoService,\r\n    private spinner: NgxSpinnerService\r\n    ) { }\r\n  ngOnInit(): void {\r\n    this.setTitle.setTitle('WHS-RiskLevel Info');\r\n    this.getAllRiskLevel()\r\n  }\r\n  getAllRiskLevel(){\r\n    this.logicalFormInfoService.getAllRiskLevel().subscribe((res:any)=> {\r\n      console.log(res)\r\n      let data = res.data;\r\n      data.forEach((element, index) => {\r\n        element.index = index + 1; //adding index\r\n      });\r\n\r\n      this.ELEMENT_DATA = data;\r\n      this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n      console.log('this.ELEMENT_DATA', this.ELEMENT_DATA);\r\n   })\r\n  }\r\n \r\n  edit(element) {\r\n    const dialogRef = this.dialog.open(EditRiskLevelComponent, {\r\n      width: \"550px\",\r\n     // height:'50%',\r\n      data: element,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if ((result == \"true\")) {\r\n        this.getAllRiskLevel()\r\n      }\r\n      console.log(\"The dialog was closed\");\r\n    });\r\n  }\r\n  delete(item) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: `Do you want to delete \"${item.title}\"?`,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#00B96F',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Delete!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        console.log(result)\r\n        // this.model.attributes.splice(i,1);\r\n        this.spinner.show()\r\n        this.logicalFormInfoService.deleteRiskLevel(item._id).subscribe((res => {\r\n        this.getAllRiskLevel()\r\n        this.spinner.hide()\r\n        }))\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","\r\n<div class=\"col ml-2 pt-1\">\r\n    <h1>\r\n      Risk Level Information List\r\n    </h1>\r\n  </div>\r\n  <div class=\"col ml-2 mb-2\">\r\n  \r\n    <button type=\"button\"  [routerLink]=\"['/admin/siteInfo/addRisk']\" \r\n      class=\"btn btn-outline-primary  mr-2 float-right\"><i  class=\"fas fa-plus\"></i> Add RiskLevel\r\n    </button>\r\n  </div>\r\n  <div >\r\n    <table mat-table [dataSource]=\"dataSource\" matSort>\r\n  \r\n      <!-- Position Column -->\r\n      <ng-container matColumnDef=\"index\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> No. </th>\r\n        <td mat-cell *matCellDef=\"let element,let i = index\">{{element.index}}</td>\r\n      </ng-container>\r\n  \r\n      <!-- Name Column -->\r\n  \r\n      <!-- Name Column -->\r\n      <ng-container matColumnDef=\"title\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Risklevel Name </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.title}} </td>\r\n      </ng-container>\r\n  \r\n   \r\n<ng-container matColumnDef=\"action\">\r\n  <th mat-header-cell *matHeaderCellDef> Action </th>\r\n  <td mat-cell *matCellDef=\"let element\"> \r\n    <!-- <i class=\"fas fa-pencil-alt mr-2 \" (click)=\"edit(element)\" title=\"edit\"></i>  <i  class=\"fas fa-trash ml-2 \" (click)=\"delete(element)\" title=\"delete\"></i>  -->\r\n    <button mat-icon-button class=\"mr-2\" aria-label=\"Example icon button with a delete icon\" (click)=\"edit(element)\">\r\n      <mat-icon >edit</mat-icon>\r\n    </button>\r\n    <button mat-icon-button aria-label=\"Example icon button with a delete icon\" (click)=\"delete(element)\">\r\n      <mat-icon >delete</mat-icon>\r\n    </button>\r\n  </td>\r\n</ng-container>\r\n<!--      \r\n  \r\n      <ng-container matColumnDef=\"edit\">\r\n        <th mat-header-cell *matHeaderCellDef> Edit </th>\r\n        <td mat-cell *matCellDef=\"let element\" (click)=\"edit(element)\"> <i class=\"fas fa-pencil-alt \"></i>\r\n        </td>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"delete\">\r\n        <th mat-header-cell *matHeaderCellDef> Delete </th>\r\n        <td mat-cell *matCellDef=\"let element\" (click)=\"delete(element)\"> <i class=\"fas fa-trash \"></i>\r\n        </td>\r\n      </ng-container>\r\n   -->\r\n  \r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n    </table>\r\n  \r\n    <mat-paginator [pageSizeOptions]=\"[20]\" showFirstLastButtons aria-label=\"Select page of periodic elements\">\r\n    </mat-paginator>\r\n  </div>","import { MatDialog } from '@angular/material/dialog';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { AfterViewInit, ViewChild } from '@angular/core';\r\nimport Swal from 'sweetalert2';\r\nimport {MatSort} from '@angular/material/sort';\r\n\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { EditPPEComponent } from './edit-ppe/edit-ppe.component';\r\nimport { SetTitleService } from 'src/app/utils/services/set-title.service';\r\n@Component({\r\n  selector: 'app-ppe-select',\r\n  templateUrl: './ppe-select.component.html',\r\n  styleUrls: ['./ppe-select.component.scss'],\r\n})\r\nexport class PpeSelectComponent implements AfterViewInit,OnInit {\r\n  jobTaskData: any = [];\r\n  ELEMENT_DATA = [];\r\n  /////////////mat table////////////////\r\n  displayedColumns: string[] = ['index', 'title','action'];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n  /////////////mat table end////////////////\r\n\r\n  constructor(\r\n   \r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    private dialog:MatDialog,\r\n    private setTitle:SetTitleService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getAllPPEs();\r\n    this.setTitle.setTitle('WHS-PPE List');\r\n    \r\n  }\r\n\r\n  getAllPPEs() {\r\n    this.logicalFormInfo.getAllPPE().subscribe((res:any) => {\r\n      console.log('PPEAll=>', res);\r\n      let data = res.data;\r\n      data.forEach((element, index) => {\r\n        element.index = index + 1; //adding index\r\n      });\r\n\r\n      this.ELEMENT_DATA = data;\r\n      this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n      console.log('this.ELEMENT_DATA', this.ELEMENT_DATA);\r\n\r\n      //  this.task = res.data.subComponents;\r\n    });\r\n  }\r\n  edit(element){\r\n    const dialogRef = this.dialog.open(EditPPEComponent, {\r\n      width: \"550px\",\r\n      data: element,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if ((result == \"true\")) {\r\n        this.getAllPPEs();\r\n      }\r\n      console.log(\"The dialog was closed\");\r\n    });\r\n  }\r\n  delete(item) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: `Do you want to delete \"${item.title}\"?`,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#00B96F',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Delete!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.logicalFormInfo\r\n        .deletePPE(item._id)\r\n        .subscribe((res) => {\r\n          Swal.fire({\r\n            title: 'Parameter Deleted successfully',\r\n            showConfirmButton: false,\r\n            timer: 1200,\r\n          });\r\n          console.log('deleted res', res);\r\n          this.getAllPPEs();\r\n            \r\n        });\r\n      \r\n      }\r\n    });\r\n  }\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n}\r\n","<div class=\"col ml-2 pt-3\">\r\n<h1> PPE List</h1>\r\n</div>\r\n    <div class=\"col ml-2 mb-2\">\r\n      \r\n      <button  class=\"btn btn-outline-primary mt-1 mr-2 float-right\"[routerLink]=\"['/admin/siteInfo/addPPE']\">\r\n        <i class=\"fas fa-plus mr-2\"></i>Add PPE \r\n      </button>\r\n    </div>\r\n    <div class=\"col-6\">\r\n      <mat-form-field>\r\n        <input\r\n          matInput\r\n          #input\r\n          placeholder=\"Search\"\r\n          (keyup)=\"applyFilter($event)\"\r\n        />\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div class=\"\">\r\n      \r\n      <table mat-table [dataSource]=\"dataSource\" matSort >\r\n    \r\n        <!-- Position Column -->\r\n        <ng-container matColumnDef=\"index\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header=\"index\"> No. </th>\r\n          <td mat-cell *matCellDef=\"let element\">{{element.index}}</td>\r\n        </ng-container>\r\n    \r\n        <!-- Name Column -->\r\n       \r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"title\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header=\"title\"> Name </th>\r\n      <td mat-cell *matCellDef=\"let element\"><span class=\"flex-start\">{{element.title}}</span>  </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"action\">\r\n      <th mat-header-cell *matHeaderCellDef> Action </th>\r\n      <td mat-cell *matCellDef=\"let element\"> \r\n        <!-- <i class=\"fas fa-pencil-alt mr-2 \" (click)=\"edit(element)\" title=\"edit\"></i>  <i  class=\"fas fa-trash ml-2 \" (click)=\"delete(element)\" title=\"delete\"></i>  -->\r\n        <button mat-icon-button class=\"mr-2\" aria-label=\"Example icon button with a delete icon\" (click)=\"edit(element)\">\r\n          <mat-icon >edit</mat-icon>\r\n        </button>\r\n        <button mat-icon-button aria-label=\"Example icon button with a delete icon\" (click)=\"delete(element)\">\r\n          <mat-icon >delete</mat-icon>\r\n        </button>\r\n      </td>\r\n    </ng-container>\r\n    <!-- <ng-container matColumnDef=\"edit\">\r\n        <th mat-header-cell *matHeaderCellDef> Edit </th>\r\n        <td mat-cell *matCellDef=\"let element\"(click)=\"edit(element)\"> <i class=\"fas fa-pencil-alt \"></i> \r\n        </td>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"delete\">\r\n        <th mat-header-cell *matHeaderCellDef> Delete </th>\r\n        <td mat-cell *matCellDef=\"let element\"(click)=\"delete(element)\"> <i class=\"fas fa-trash \"></i> \r\n        </td>\r\n      </ng-container> -->\r\n    \r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n        <tr class=\"mat-row\" *matNoDataRow>\r\n          <td class=\"mat-cell\" colspan=\"4\">Data Not  Found  \"{{input.value}}\"</td>\r\n        </tr>\r\n      \r\n      </table>\r\n    \r\n      <mat-paginator [pageSizeOptions]=\"[20]\"\r\n                     showFirstLastButtons \r\n                     aria-label=\"Select page of periodic elements\">\r\n      </mat-paginator>\r\n    </div>\r\n    \r\n","import { EditLicenceCatComponent } from './edit-licence-cat/edit-licence-cat.component';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport {  ViewChild } from '@angular/core';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table'\r\nimport { MatSort } from '@angular/material/sort';\r\n@Component({\r\n  selector: 'app-licence-cat',\r\n  templateUrl: './licence-cat.component.html',\r\n  styleUrls: ['./licence-cat.component.scss']\r\n})\r\nexport class LicenceCatComponent implements OnInit {\r\n\r\n  mode: any;\r\n  jobTaskData: any = [];\r\n  ELEMENT_DATA = [];\r\n  /////////////mat table////////////////\r\n  displayedColumns: string[] = ['index', 'title' ,'action'];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n  /////////////mat table end////////////////\r\n\r\n  constructor(private logicalFormInfo: LogicalFormInfoService,private dialog:MatDialog) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getAllLicenceCat();\r\n  }\r\n\r\n  getAllLicenceCat() {\r\n    this.logicalFormInfo.getAllLicenceCat().subscribe((res) => {\r\n      console.log('getAllLicenceCat=>', res);\r\n      // this.jobTaskData = res.data[0].subComponents;\r\n      let data = res.data;\r\n      data.forEach((element, index) => {\r\n        element.index = index + 1; //adding index\r\n      });\r\n\r\n      this.ELEMENT_DATA = data;\r\n      this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n      //  this.task = res.data.subComponents;\r\n    });\r\n \r\n  }\r\n  \r\n  edit(element){\r\n    const dialogRef = this.dialog.open(EditLicenceCatComponent, {\r\n      width: \"550px\",\r\n      data: element,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if ((result == \"true\")) {\r\n        this.getAllLicenceCat();\r\n      }\r\n      console.log(\"The dialog was closed\");\r\n    });\r\n  }\r\n\r\n  delete(item) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: `Do you want to delete \"${item.title}\"?`,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#00B96F',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Delete!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.logicalFormInfo\r\n        .deleteLicenceCat(item._id)\r\n        .subscribe((res) => {\r\n          Swal.fire({\r\n            title: 'Category Deleted successfully',\r\n            showConfirmButton: false,\r\n            timer: 1200,\r\n          });\r\n          console.log('deleted res', res);\r\n          this.getAllLicenceCat();\r\n            \r\n        });\r\n      }\r\n    });\r\n  }\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n}\r\n","<div class=\"col ml-2 pt-3\">\r\n<h1> Trade Category List</h1>\r\n</div>\r\n<div class=\"col ml-2 mb-2\">\r\n  \r\n  <button  class=\"btn btn-outline-primary mt-1 mr-2 float-right\"(click)=\"edit('')\">\r\n    <i class=\"fas fa-folder-plus mr-2\"></i>Add Category \r\n  </button>\r\n</div>\r\n<div class=\"col-6\">\r\n  <mat-form-field>\r\n    <input\r\n      matInput\r\n      #input\r\n      placeholder=\"Search\"\r\n      (keyup)=\"applyFilter($event)\"\r\n    />\r\n  </mat-form-field>\r\n</div>\r\n<div class=\"\">\r\n  <table mat-table [dataSource]=\"dataSource\" matSort>\r\n\r\n    <!-- Position Column -->\r\n    <ng-container matColumnDef=\"index\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> No. </th>\r\n      <td mat-cell *matCellDef=\"let element\">{{element.index}}</td>\r\n    </ng-container>\r\n\r\n    <!-- Name Column -->\r\n   \r\n<!-- Name Column -->\r\n<ng-container matColumnDef=\"title\">\r\n  <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\r\n  <td mat-cell *matCellDef=\"let element\"> <span class=\"flex-start\">{{element.title}} </span></td>\r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"action\">\r\n  <th mat-header-cell *matHeaderCellDef> Action </th>\r\n  <td mat-cell *matCellDef=\"let element\"> \r\n    <!-- <i class=\"fas fa-pencil-alt mr-2 \" (click)=\"edit(element)\" title=\"edit\"></i>  <i  class=\"fas fa-trash ml-2 \" (click)=\"delete(element)\" title=\"delete\"></i>  -->\r\n    <button mat-icon-button class=\"mr-2\" aria-label=\"Example icon button with a delete icon\" (click)=\"edit(element)\">\r\n      <mat-icon >edit</mat-icon>\r\n    </button>\r\n    <button mat-icon-button aria-label=\"Example icon button with a delete icon\" (click)=\"delete(element)\">\r\n      <mat-icon >delete</mat-icon>\r\n    </button>\r\n  </td>\r\n</ng-container>\r\n<!-- <ng-container matColumnDef=\"edit\">\r\n  <th mat-header-cell *matHeaderCellDef> Edit </th>\r\n  <td mat-cell *matCellDef=\"let element\"(click)=\"edit(element)\"> <i class=\"fas fa-pencil-alt \"></i> \r\n  </td>\r\n</ng-container>\r\n<ng-container matColumnDef=\"delete\">\r\n  <th mat-header-cell *matHeaderCellDef> Delete </th>\r\n  <td mat-cell *matCellDef=\"let element\"(click)=\"delete(element)\"> <i class=\"fas fa-trash \"></i> \r\n  </td>\r\n</ng-container> -->\r\n\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n    <tr class=\"mat-row\" *matNoDataRow>\r\n      <td class=\"mat-cell\" colspan=\"4\"> Data Not  Found  \"{{input.value}}\"</td>\r\n    </tr>\r\n  </table>\r\n\r\n  <mat-paginator [pageSizeOptions]=\"[20]\"\r\n                 showFirstLastButtons \r\n                 aria-label=\"Select page of periodic elements\">\r\n  </mat-paginator>\r\n</div>\r\n","import { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { FormGroup, FormBuilder, FormArray, Validators } from '@angular/forms';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-adding-cust',\r\n  templateUrl: './adding-cust.component.html',\r\n  styleUrls: ['./adding-cust.component.scss']\r\n})\r\nexport class AddingCustComponent implements OnInit {\r\n  StatesData:any=[''];\r\n  addCustomerForm: FormGroup;\r\n  numberOfLineBreaks:any;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private logicalFormInfoService: LogicalFormInfoService,\r\n    private router: Router,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.addCustomerForm = this.fb.group({\r\n      customerName: ['',Validators.required],\r\n      customerContact: ['',Validators.required],\r\n      streetAddress: ['',Validators.required],\r\n      stateId: ['',Validators.required],\r\n      postCode: ['',Validators.required],\r\n      ABN: ['',Validators.required],\r\n      contacts: this.fb.array([]),\r\n      // customerContactPhone:[''],\r\n      // customerEmail:[''],\r\n    })\r\n    this.addCustomerDetails();\r\n    this.getAllStates();\r\n  }\r\n  addCustomerDetails() {\r\n    this.customerArr().push(this.customerForm());\r\n\r\n  }\r\n  customerArr(): FormArray {\r\n    return this.addCustomerForm.get('contacts') as FormArray;\r\n  }\r\n  customerForm(): FormGroup {\r\n    return this.fb.group({\r\n      email: ['',Validators.required],\r\n      phone: ['',Validators.required],\r\n      position: ['',Validators.required]\r\n\r\n    });\r\n  }\r\n  removeCustomerDetails(i) {\r\n    const item = <FormArray>this.addCustomerForm.controls['contacts'];\r\n    if (item.length > 1) {\r\n      item.removeAt(i);\r\n\r\n    }\r\n  }\r\n  onSubmit() {\r\n    console.log(this.addCustomerForm.value);\r\n\r\n    this.logicalFormInfoService.addCustomer(this.addCustomerForm.value).subscribe(res => {\r\n      console.log(\"addCustomerForm=>\", res)\r\n      //this.dialogRef.close('ok')\r\n      this.router.navigate(['/admin/siteInfo/addCustomer']);\r\n    }, (err) => {\r\n      console.error(err);\r\n    });\r\n  }\r\n  \r\n  getAllStates() {\r\n    this.logicalFormInfoService.getAllStates().subscribe((res: any) => {\r\n      console.log('setStatesDetails=>', res);\r\n      this.StatesData = res.data;\r\n    });\r\n  }\r\n  calcHeight(value) {\r\n    this.numberOfLineBreaks = (value.match(/\\n/g) || []).length+1;\r\n    console.log(\"numberOfLineBreaks\",this.numberOfLineBreaks)\r\n }\r\n}\r\n","<div class=\"btn btn-outline-primary\" [routerLink]=\"['/admin/siteInfo/addCustomer']\">\r\n  <i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\r\n</div>\r\n\r\n   \r\n      \r\n<section class=\"content\" style=\"height: 60%;\">\r\n    <div [formGroup]=\"addCustomerForm\" class=\"container px-4 py-4 bg-white\">\r\n        <h2>Add Customer</h2>\r\n        <hr>\r\n        <div class=\"row\">\r\n          <div class=\"my-3 col\">\r\n            <p for=\"exampleFormControlInput1\" class=\"form-Label\">Customer Name</p>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"customerName\"\r\n              formControlName=\"customerName\"\r\n            />\r\n          </div>\r\n          <div class=\"my-3 col\">\r\n            <p for=\"exampleFormControlInput1\" class=\"form-Label\">Customer Contact</p>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"customerContact\"\r\n              formControlName=\"customerContact\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"my-3 col\">\r\n            <p for=\"exampleFormControlInput1\" class=\"form-Label\">Street Address</p>\r\n            <textarea autosize\r\n            (keyup)=\" calcHeight($event.target.value)\"\r\n              [rows]=\"numberOfLineBreaks\"\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"customerStreetAddress\"\r\n              formControlName=\"streetAddress\"\r\n            ></textarea>\r\n          </div>\r\n          <div class=\"my-3 col\">\r\n            <p for=\"exampleFormControlInput1\" class=\"form-Label\">State</p>\r\n            <select class=\"form-select form-control\" aria-label=\"Default select example\" formControlName=\"stateId\" >\r\n              <option value=\"\" selected hidden> Select State</option>\r\n             <option *ngFor=\"let state of StatesData\" [value]=\"state._id\">{{state.title}}</option>\r\n           \r\n           </select>\r\n            <!-- <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"customerState\"\r\n              formControlName=\"customerState\"\r\n            /> -->\r\n          </div>\r\n          <div class=\"my-3 col\">\r\n            <p for=\"exampleFormControlInput1\" class=\"form-Label\">PostCode</p>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"customerPostCode\"\r\n              formControlName=\"postCode\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n        <div class=\"my-3 col\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">Australian Business Name (ABN)</p>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            id=\"businessName\"\r\n            formControlName=\"ABN\"\r\n          />\r\n        </div>\r\n        </div>\r\n        <!-- <div class=\"row\">\r\n          <div class=\"my-3 col\">\r\n            <p for=\"exampleFormControlInput1\" class=\"form-Label\">Customer Contact Phone</p>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"siteName\"\r\n              formControlName=\"customerContactPhone\"\r\n            />\r\n          </div>\r\n          <div class=\"my-3 col\">\r\n            <p for=\"exampleFormControlInput1\" class=\"form-Label\">Customer Email</p>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"siteName\"\r\n              formControlName=\"customerEmail\"\r\n            />\r\n          </div>\r\n        </div>  -->\r\n        <ng-container formArrayName=\"contacts\">\r\n          <ng-container\r\n            *ngFor=\"let control of customerArr().controls; let i = index\"\r\n            [formGroupName]=\"i\"\r\n          >\r\n            <div>\r\n            <h1> Contact {{i+1}}</h1>\r\n              <div class=\"row\">\r\n\r\n                <div class=\"my-3 col-3\">\r\n                  <p for=\"exampleFormControlInput1\" class=\"form-Label\"> Position</p>\r\n                  <input\r\n                    type=\"text\"\r\n                    formControlName=\"position\"\r\n                   \r\n                    class=\"form-control\"\r\n                    id=\"position\"\r\n                  />\r\n                </div>\r\n                <div class=\"my-3 col-3\">\r\n                  <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n                   Email\r\n                  </p>\r\n                  <input\r\n                  type=\"text\"\r\n                  formControlName=\"email\"\r\n             \r\n                  class=\"form-control\"\r\n                  id=\"email\"\r\n                />\r\n                </div>\r\n                <div class=\"my-3 col-3\">\r\n                  <p for=\"exampleFormControlInput1\" class=\"form-Label\">  Phone Number</p>\r\n                  <input\r\n                    type=\"text\"\r\n                    formControlName=\"phone\"\r\n                  \r\n                    class=\"form-control\"\r\n                    id=\"phone\"\r\n                  />\r\n                </div>\r\n              \r\n                <div class=\" my-3 col-1 my-auto\">\r\n                  <span class=\"material-icons\"  style=\"margin-top: 35%\"   (click)=\"addCustomerDetails()\"\r\n                    >add_circle_outline\r\n                  </span>\r\n                </div>\r\n                <div class=\"my-3 col-1 my-auto\">\r\n                  <span class=\"material-icons\"  style=\"margin-top: 35%\"  (click)=\"removeCustomerDetails(i)\">\r\n                    remove_circle_outline\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <hr />\r\n          </ng-container>\r\n        </ng-container>\r\n      <div >\r\n        <button (click)=\"onSubmit()\" class=\"btn btn-primary\" [disabled]=\"addCustomerForm.invalid && addCustomerForm.get('contacts').invalid\">\r\n          Submit\r\n        </button>\r\n      </div>\r\n   \r\n     </div> \r\n     </section>","import { EditCOPComponent } from './edit-cop/edit-cop.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { SetTitleService } from 'src/app/utils/services/set-title.service';\r\nimport { MatSort } from '@angular/material/sort';\r\n@Component({\r\n  selector: 'app-code-of-pract',\r\n  templateUrl: './code-of-pract.component.html',\r\n  styleUrls: ['./code-of-pract.component.scss']\r\n})\r\nexport class CodeOfPractComponent implements OnInit {\r\n\r\n  mode: any;\r\n  jobTaskData: any = [];\r\n  ELEMENT_DATA = [];\r\n  /////////////mat table////////////////\r\n  displayedColumns: string[] = ['index', 'title' ,'action'];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n  /////////////mat table end////////////////\r\n\r\n  constructor(private logicalFormInfo: LogicalFormInfoService,private dialog:MatDialog, private setTitle: SetTitleService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getAllCodeOfPractice();\r\n    this.setTitle.setTitle('WHS-Code of Practice');\r\n  }\r\n\r\n  getAllCodeOfPractice() {\r\n   \r\n    this.logicalFormInfo.getAllCOP().subscribe((res:any) => {\r\n      console.log('codeOfPractice=>', res);\r\n      // this.jobTaskData = res.data[0].subComponents;\r\n      let data = res.data;\r\n      data.forEach((element, index) => {\r\n        element.index = index + 1; //adding index\r\n      });\r\n\r\n      this.ELEMENT_DATA = data;\r\n      this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort=this.sort;\r\n      //  this.task = res.data.subComponents;\r\n    });\r\n \r\n  }\r\n  edit(element){\r\n    const dialogRef = this.dialog.open(EditCOPComponent, {\r\n      width: \"550px\",\r\n      data: element,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if ((result == \"true\")) {\r\n        this.getAllCodeOfPractice();\r\n      }\r\n      console.log(\"The dialog was closed\");\r\n    });\r\n  }\r\n  delete(item) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: `Do you want to delete \"${item.title}\"?`,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#00B96F',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Delete!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.logicalFormInfo\r\n        .deleteCOP(item._id)\r\n        .subscribe((res) => {\r\n          Swal.fire({\r\n            title: 'Parameter Deleted successfully',\r\n            showConfirmButton: false,\r\n            timer: 1200,\r\n          });          \r\n          this.getAllCodeOfPractice();\r\n            \r\n        });\r\n      }\r\n    });\r\n  }\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n}\r\n","<div class=\"col ml-2 pt-3\">\r\n<h1> Code Of Practice List</h1>\r\n</div>\r\n<div class=\"col ml-2 mb-2\">\r\n  \r\n  <button  class=\"btn btn-outline-primary mt-1 mr-2 float-right\"[routerLink]=\"['/admin/siteInfo/addCOP']\">\r\n    <i class=\"fas fa-folder-plus mr-2\"></i>Add Code Of Practice \r\n  </button>\r\n</div>\r\n<div class=\"col-6\">\r\n  <mat-form-field>\r\n    <input\r\n      matInput\r\n      #input\r\n      placeholder=\"Search\"\r\n      (keyup)=\"applyFilter($event)\"\r\n    />\r\n  </mat-form-field>\r\n</div>\r\n<div class=\"\">\r\n  <table mat-table [dataSource]=\"dataSource\" matSort>\r\n\r\n    <!-- Position Column -->\r\n    <ng-container matColumnDef=\"index\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> No. </th>\r\n      <td mat-cell *matCellDef=\"let element\">{{element.index}}</td>\r\n    </ng-container>\r\n\r\n    <!-- Name Column -->\r\n   \r\n<!-- Name Column -->\r\n<ng-container matColumnDef=\"title\">\r\n  <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\r\n  <td mat-cell *matCellDef=\"let element\"><span class=\"flex-start\"> {{element.title}}</span> </td>\r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"action\">\r\n  <th mat-header-cell *matHeaderCellDef> Action </th>\r\n  <td mat-cell *matCellDef=\"let element\"> \r\n    <!-- <i class=\"fas fa-pencil-alt mr-2 \" (click)=\"edit(element)\" title=\"edit\"></i>  <i  class=\"fas fa-trash ml-2 \" (click)=\"delete(element)\" title=\"delete\"></i>  -->\r\n    <button mat-icon-button class=\"mr-2\" aria-label=\"Example icon button with a delete icon\" (click)=\"edit(element)\">\r\n      <mat-icon >edit</mat-icon>\r\n    </button>\r\n    <button mat-icon-button aria-label=\"Example icon button with a delete icon\" (click)=\"delete(element)\">\r\n      <mat-icon >delete</mat-icon>\r\n    </button>\r\n  </td>\r\n</ng-container>\r\n<!-- <ng-container matColumnDef=\"edit\">\r\n  <th mat-header-cell *matHeaderCellDef> Edit </th>\r\n  <td mat-cell *matCellDef=\"let element\"(click)=\"edit(element)\"> <i class=\"fas fa-pencil-alt \"></i> \r\n  </td>\r\n</ng-container>\r\n<ng-container matColumnDef=\"delete\">\r\n  <th mat-header-cell *matHeaderCellDef> Delete </th>\r\n  <td mat-cell *matCellDef=\"let element\"(click)=\"delete(element)\"> <i class=\"fas fa-trash \"></i> \r\n  </td>\r\n</ng-container> -->\r\n\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n    <tr class=\"mat-row\" *matNoDataRow>\r\n      <td class=\"mat-cell\" colspan=\"4\"> Data Not  Found  \"{{input.value}}\"</td>\r\n    </tr>\r\n  </table>\r\n\r\n  <mat-paginator [pageSizeOptions]=\"[20]\"\r\n                 showFirstLastButtons \r\n                 aria-label=\"Select page of periodic elements\">\r\n  </mat-paginator>\r\n</div>\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\n@Component({\r\n  selector: 'app-edit-cop',\r\n  templateUrl: './edit-cop.component.html',\r\n  styleUrls: ['./edit-cop.component.scss']\r\n})\r\nexport class EditCOPComponent implements OnInit {\r\n\r\n  editTitle: FormGroup;\r\n  dataRec: any;\r\n\r\n\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    public dialogRef: MatDialogRef<EditCOPComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.dataRec = data;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.editTitle = this.fb.group({\r\n      title: [this.dataRec.title, Validators.required],\r\n    });\r\n  }\r\n  onFormSubmit() {\r\n     \r\n    let data={\r\n      title :this.editTitle.get('title').value,\r\n    }\r\n    this.logicalFormInfo\r\n      .updateCOP(data, this.dataRec._id)\r\n      .subscribe((resData) => {\r\n        console.log('resData', resData);\r\n\r\n        this.dialogRef.close('true');\r\n        Swal.fire({\r\n          title: 'Parameter Edited successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });  \r\n          });\r\n  }\r\n  closeDialog(){\r\n    this.dialogRef.close('false');\r\n\r\n  }\r\n}\r\n","<form [formGroup]=\"editTitle\" >\r\n    <h2>Edit Code Of Practice</h2>\r\n    <mat-form-field appearance=\"legacy\"\r\n    class=\"example-full-width\" style=\"width: 498px;\">\r\n    <!-- <mat-label>Edit Code Of Practice</mat-label> -->\r\n    <input matInput  formControlName=\"title\" >\r\n    </mat-form-field>\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-2 offset-8 \">\r\n            <button mat-raised-button (click)=\"closeDialog()\">Close</button>\r\n        </div>\r\n        <div class=\"col-sm-2  \">\r\n            <button mat-raised-button  [disabled]=\"!editTitle.valid\"(click)=\"onFormSubmit()\">Edit</button>\r\n        </div>\r\n    </div>\r\n</form>   \r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n  FormArray,\r\n  \r\n} from '@angular/forms';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-add-job-task',\r\n  templateUrl: './add-job-task.component.html',\r\n  styleUrls: ['./add-job-task.component.scss']\r\n})\r\nexport class AddJobTaskComponent implements OnInit {\r\n\r\n  jobTaskDetails!: FormGroup;\r\n  formData: any;numberOfLineBreaks: any;\r\n;\r\n  licenceCatAll=[];\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private router: Router,\r\n    private logicalFormInfo:LogicalFormInfoService\r\n  ) { \r\n    this.jobTaskDetails=this.fb.group({\r\n     // mode:\"JobTask\",\r\n      arrObj: this.fb.array([]),\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.addAction();\r\n    this.getAllCategories();\r\n  }\r\n  getAllCategories() {\r\n    this.logicalFormInfo.getAllLicenceCat().subscribe((res) => {\r\n      console.log('getAllLicenceCat=>', res);\r\n      this.licenceCatAll = res.data;\r\n    });\r\n  }\r\n  addAction() {\r\n    {\r\n      this.add().push(this.newAction());\r\n    }\r\n  }\r\n  add(): FormArray {\r\n    return this.jobTaskDetails.get('arrObj') as FormArray;\r\n  }\r\n  newAction(): FormGroup {\r\n    return this.fb.group({     \r\n      title: ['', Validators.required],\r\n      tradeCategoryId: ['', Validators.required],      \r\n    });\r\n  }\r\n  \r\n  removeSafetyModule(i) {\r\n    const item = <FormArray>this.jobTaskDetails.controls['arrObj'];\r\n    if (item.length > 1) {\r\n      item.removeAt(i);\r\n    \r\n    }\r\n  }\r\n  onFormSubmit() {\r\n    console.log(this.jobTaskDetails.get('arrObj').value);\r\n    let data={\r\n      arrObj:this.jobTaskDetails.get('arrObj').value\r\n    }\r\n    this.logicalFormInfo.addMultipleJobTask(data).subscribe((data) => {\r\n      console.log('JOBTask=>', data);\r\n      Swal.fire({\r\n        title: 'Parameter Added successfully',\r\n        showConfirmButton: false,\r\n        timer: 1200,\r\n      }); \r\n      this.router.navigate(['/admin/siteInfo/jobTask']);      \r\n    },(err)=>{console.error(err);} \r\n  \r\n    );\r\n    \r\n  }\r\n  calcHeight(value) {\r\n    this.numberOfLineBreaks = (value.match(/\\n/g) || []).length+1;\r\n    console.log(\"numberOfLineBreaks\",this.numberOfLineBreaks)\r\n  }\r\n \r\n}\r\n","<div class=\"btn btn-outline-primary\" [routerLink]=\"['/admin/siteInfo/jobTask']\">\r\n  <i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\r\n</div>\r\n<div class=\"container px-4 py-4 bg-white\">\r\n  <form [formGroup]=\"jobTaskDetails\" (ngSubmit)=\"onFormSubmit()\">\r\n    <h2 class=\"text-center\">Add Job Task</h2>\r\n    <br />\r\n    <hr />\r\n    <ng-container formArrayName=\"arrObj\">\r\n      <ng-container\r\n        *ngFor=\"let control of add().controls; let i = index\"\r\n        [formGroupName]=\"i\"\r\n      >\r\n        <div class=\"row justify-content-center\">\r\n          <div class=\"mr-1 mt-2\">\r\n            <span \r\n              >{{i+1}}.\r\n            </span>\r\n          </div>\r\n          <div class=\"col-4\">\r\n            <textarea autosize\r\n            (keyup)=\" calcHeight($event.target.value)\"\r\n            [rows]=\"numberOfLineBreaks\"\r\n              type=\"text\"\r\n              formControlName=\"title\"\r\n              class=\"form-control sign\"\r\n              id=\"title\"\r\n            ></textarea>\r\n          </div>\r\n          <div class=\"col-4\">\r\n            <select class=\"form-select form-control\" aria-label=\"Default select example\" formControlName=\"tradeCategoryId\">\r\n              <option value=\"\" selected hidden>Select category</option>\r\n              <option *ngFor=\"let tradeCat of licenceCatAll\" [value]=\"tradeCat._id\">{{tradeCat.title}}</option>\r\n         \r\n            </select>\r\n          </div>\r\n          <div class=\"col-1 mt-2\">\r\n            <span class=\"material-icons\" (click)=\"addAction()\"\r\n              >add_circle_outline\r\n            </span>\r\n          </div>\r\n          <div class=\"col-1 mt-2\">\r\n            <span class=\"material-icons\" (click)=\"removeSafetyModule(i)\">\r\n              remove_circle_outline\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        <hr />\r\n      </ng-container>\r\n    </ng-container>\r\n    <br />\r\n\r\n    <div class=\"col-md-2\">\r\n      <button type=\"submit\" class=\"btn btn-primary\"[disabled]=\"jobTaskDetails.get('arrObj').invalid\">Add</button>\r\n    </div>\r\n  </form>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport Swal from 'sweetalert2';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { SetTitleService } from 'src/app/utils/services/set-title.service';\r\nimport { EditChemicalComponent } from './edit-chemical/edit-chemical.component';\r\nimport { MatSort } from '@angular/material/sort';\r\n\r\n@Component({\r\n  selector: 'app-chemical',\r\n  templateUrl: './chemical.component.html',\r\n  styleUrls: ['./chemical.component.scss']\r\n})\r\nexport class ChemicalComponent implements OnInit {\r\n  jobTaskData: any = [];\r\n  ELEMENT_DATA = [];\r\n  /////////////mat table////////////////\r\n  displayedColumns: string[] = ['index', 'title', 'action'];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  allChemical: any[]=[];\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n  constructor( \r\n    private dialog: MatDialog, \r\n    private setTitle: SetTitleService,\r\n    private logicalFormInfoService: LogicalFormInfoService,\r\n    private spinner: NgxSpinnerService\r\n    ) { }\r\n  ngOnInit(): void {\r\n    this.setTitle.setTitle('WHS-Chemical Info');\r\n    this.getAllChemical()\r\n  }\r\n  getAllChemical(){\r\n    this.logicalFormInfoService.getAllChemical().subscribe((res:any)=> {\r\n      console.log(res)\r\n      let data = res.data;\r\n      data.forEach((element, index) => {\r\n        element.index = index + 1; //adding index\r\n      });\r\n\r\n      this.ELEMENT_DATA = data;\r\n      this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n      console.log('this.ELEMENT_DATA', this.ELEMENT_DATA);\r\n   })\r\n  }\r\n \r\n  edit(element) {\r\n    const dialogRef = this.dialog.open(EditChemicalComponent, {\r\n      width: \"550px\",\r\n     // height:'50%',\r\n      data: element,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if ((result == \"true\")) {\r\n        this.getAllChemical()\r\n      }\r\n      console.log(\"The dialog was closed\");\r\n    });\r\n  }\r\n  delete(item) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: `Do you want to delete \"${item.title}\"?`,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#00B96F',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Delete!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        console.log(result)\r\n        // this.model.attributes.splice(i,1);\r\n        this.spinner.show()\r\n        this.logicalFormInfoService.deleteChemical(item._id).subscribe((res => {\r\n        this.getAllChemical()\r\n        this.spinner.hide()\r\n        }))\r\n      }\r\n    });\r\n  }\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n}\r\n","<div class=\"col ml-2 pt-1\">\r\n    <h1>\r\n      Chemical Information List\r\n    </h1>\r\n  </div>\r\n  <div>\r\n  \r\n    <button type=\"button\"  [routerLink]=\"['/admin/siteInfo/addChemical']\" \r\n      class=\"btn btn-outline-primary  mr-2 float-right\"><i  class=\"fas fa-plus\"></i> Add Chemical\r\n    </button>\r\n  </div>\r\n  <div class=\"col-6\">\r\n    <mat-form-field>\r\n      <input\r\n        matInput\r\n        #input\r\n        placeholder=\"Search\"\r\n        (keyup)=\"applyFilter($event)\"\r\n      />\r\n    </mat-form-field>\r\n  </div>\r\n  <div >\r\n\r\n    <table mat-table [dataSource]=\"dataSource\" matSort>\r\n  \r\n      <!-- Position Column -->\r\n      <ng-container matColumnDef=\"index\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> No. </th>\r\n        <td mat-cell *matCellDef=\"let element,let i = index\">{{element.index}}</td>\r\n      </ng-container>\r\n  \r\n      <!-- Name Column -->\r\n  \r\n      <!-- Name Column -->\r\n      <ng-container matColumnDef=\"title\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Chemical Name </th>\r\n        <td mat-cell *matCellDef=\"let element\"> <span class=\"flex-start\">{{element.title}}</span>  </td>\r\n      </ng-container>\r\n  \r\n    \r\n<ng-container matColumnDef=\"action\">\r\n  <th mat-header-cell *matHeaderCellDef> Action </th>\r\n  <td mat-cell *matCellDef=\"let element\"> \r\n    <!-- <i class=\"fas fa-pencil-alt mr-2 \" (click)=\"edit(element)\" title=\"edit\"></i>  <i  class=\"fas fa-trash ml-2 \" (click)=\"delete(element)\" title=\"delete\"></i>  -->\r\n    <button mat-icon-button class=\"mr-2\" aria-label=\"Example icon button with a delete icon\" (click)=\"edit(element)\">\r\n      <mat-icon >edit</mat-icon>\r\n    </button>\r\n    <button mat-icon-button aria-label=\"Example icon button with a delete icon\" (click)=\"delete(element)\">\r\n      <mat-icon >delete</mat-icon>\r\n    </button>\r\n  </td>\r\n</ng-container>\r\n     \r\n<!--   \r\n      <ng-container matColumnDef=\"edit\">\r\n        <th mat-header-cell *matHeaderCellDef> Edit </th>\r\n        <td mat-cell *matCellDef=\"let element\" (click)=\"edit(element)\"> <i class=\"fas fa-pencil-alt \"></i>\r\n        </td>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"delete\">\r\n        <th mat-header-cell *matHeaderCellDef> Delete </th>\r\n        <td mat-cell *matCellDef=\"let element\" (click)=\"delete(element)\"> <i class=\"fas fa-trash \"></i>\r\n        </td>\r\n      </ng-container> -->\r\n  \r\n  \r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n      <tr class=\"mat-row\" *matNoDataRow>\r\n        <td class=\"mat-cell\" colspan=\"4\">Data Not  Found  \"{{input.value}}\"</td>\r\n      </tr>\r\n    </table>\r\n  \r\n    <mat-paginator [pageSizeOptions]=\"[20]\" showFirstLastButtons aria-label=\"Select page of periodic elements\">\r\n    </mat-paginator>\r\n  </div>","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { FormBuilder, FormGroup,  Validators,\r\n  FormArray,} from '@angular/forms';\r\n\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-add-residual-risk-level',\r\n  templateUrl: './add-residual-risk-level.component.html',\r\n  styleUrls: ['./add-residual-risk-level.component.scss']\r\n})\r\nexport class AddResidualRiskLevelComponent implements OnInit {\r\n\r\n  addResidualForm: FormGroup;\r\n  numberOfLineBreaks: any;\r\n  constructor( \r\n    private fb:FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    private router: Router,\r\n    ) { \r\n      this.addResidualForm=this.fb.group({\r\n        arrObj: this.fb.array([]),\r\n      })\r\n    }\r\n\r\n    ngOnInit(): void {\r\n      this.addResidual();\r\n    }\r\n    addResidual() {\r\n      {\r\n        this.add().push(this.newAction());\r\n      }\r\n    }\r\n    add(): FormArray {\r\n      return this.addResidualForm.get('arrObj') as FormArray;\r\n    }\r\n    newAction(): FormGroup {\r\n      return this.fb.group({\r\n       \r\n        title: ['', Validators.required],\r\n      });\r\n    }\r\n    \r\n    removeResidual(i) {\r\n      const item = <FormArray>this.addResidualForm.controls['arrObj'];\r\n      if (item.length > 1) {\r\n        item.removeAt(i);\r\n      \r\n      }\r\n    }\r\n    onFormSubmit() {\r\n      console.log(this.addResidualForm.value);\r\n      let data={\r\n        arrObj:this.addResidualForm.get('arrObj').value\r\n      }\r\n      this.logicalFormInfo.addMultipleResidual(data).subscribe((data) => {\r\n        console.log('chemical=>', data);\r\n        this.router.navigate(['/admin/siteInfo/residual']);      \r\n      },(err)=>{console.error(err);} \r\n    \r\n      );\r\n      \r\n    }\r\n    calcHeight(value) {\r\n      this.numberOfLineBreaks = (value.match(/\\n/g) || []).length+1;\r\n      console.log(\"numberOfLineBreaks\",this.numberOfLineBreaks)\r\n    }\r\n}\r\n","\r\n<div class=\"btn btn-outline-primary\" [routerLink]=\"['/admin/siteInfo/addResidualForm']\">\r\n    <i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\r\n  </div>\r\n\r\n    <div class=\"container px-4 py-4 bg-white\" >\r\n        <form  [formGroup]=\"addResidualForm\" (ngSubmit)=\"onFormSubmit()\">\r\n      <h2  class=\"text-center\"> Residual-Risk-Level Info</h2>\r\n      <br />\r\n      <hr />\r\n      <ng-container formArrayName=\"arrObj\">\r\n        <ng-container\r\n          *ngFor=\"let control of add().controls; let i = index\"\r\n          [formGroupName]=\"i\"\r\n        >\r\n          <div class=\"row justify-content-center\">\r\n            <div class=\"mr-1 mt-2\">\r\n              <span \r\n                >{{i+1}}.\r\n              </span>\r\n            </div>\r\n            <div class=\"col-8\">\r\n              <textarea autosize\r\n              (keyup)=\" calcHeight($event.target.value)\"\r\n              [rows]=\"numberOfLineBreaks\"\r\n                type=\"text\"\r\n                formControlName=\"title\"\r\n                class=\"form-control sign\"\r\n                id=\"title\"\r\n              ></textarea>\r\n            </div>\r\n            <div class=\"col-1 mt-2\">\r\n              <span class=\"material-icons\" (click)=\"addResidual()\"\r\n                >add_circle_outline\r\n              </span>\r\n            </div>\r\n            <div class=\"col-1 mt-2\">\r\n              <span class=\"material-icons\" (click)=\"removeResidual(i)\">\r\n                remove_circle_outline\r\n              </span>\r\n            </div>\r\n          </div>\r\n  \r\n          <hr />\r\n        </ng-container>\r\n      </ng-container>\r\n      <br />\r\n          <div  class=\"col-md-2\">\r\n            <button class=\"btn btn-primary\"[disabled]=\"addResidualForm.get('arrObj').invalid\" >\r\n              Add\r\n            </button>\r\n          </div>\r\n        \r\n        </form>\r\n        </div>","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n  FormArray,\r\n  \r\n} from '@angular/forms'\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { Router } from '@angular/router';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-add-licence',\r\n  templateUrl: './add-licence.component.html',\r\n  styleUrls: ['./add-licence.component.scss']\r\n})\r\nexport class AddLicenceComponent implements OnInit {\r\n  addLicenceFG!: FormGroup;\r\n  formData: any;\r\n  categories=[];\r\n  numberOfLineBreaks: any;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private router: Router,\r\n    private logicalFormInfo:LogicalFormInfoService\r\n  ) { \r\n    this.addLicenceFG=this.fb.group({\r\n     // mode:\"JobTask\",\r\n      arrObj: this.fb.array([]),\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.addAction();\r\n    this.getAllLicenceCat();\r\n  }\r\n  addAction() {\r\n    {\r\n      this.add().push(this.newAction());\r\n    }\r\n  }\r\n  add(): FormArray {\r\n    return this.addLicenceFG.get('arrObj') as FormArray;\r\n  }\r\n  newAction(): FormGroup {\r\n    return this.fb.group({     \r\n      title: ['', Validators.required],\r\n      tradeCategoryId: ['', Validators.required],\r\n    });\r\n  }\r\n  \r\n  removeSafetyModule(i) {\r\n    const item = <FormArray>this.addLicenceFG.controls['arrObj'];\r\n    if (item.length > 1) {\r\n      item.removeAt(i);    \r\n    }\r\n  }\r\n  getAllLicenceCat() {\r\n    this.logicalFormInfo.getAllLicenceCat().subscribe((res) => {\r\n      console.log('getAllLicenceCat=>', res);\r\n      this.categories = res.data; \r\n    });\r\n \r\n  }\r\n  onFormSubmit() {\r\n    let data={\r\n      arrObj:this.addLicenceFG.get('arrObj').value\r\n    }\r\n    console.log(\"data li cat\",data);\r\n    \r\n    this.logicalFormInfo.addMultipleLicence(data).subscribe((res) => {\r\n      console.log('licence=>', res);\r\n      Swal.fire({\r\n        title: 'Parameter added successfully',\r\n        showConfirmButton: false,\r\n        timer: 1200,\r\n      });\r\n      this.router.navigate(['/admin/siteInfo/licenceAndQual']);      \r\n    },(err)=>{console.error(err);} \r\n  \r\n    );\r\n    \r\n  }\r\n  calcHeight(value) {\r\n    this.numberOfLineBreaks = (value.match(/\\n/g) || []).length+1;\r\n    console.log(\"numberOfLineBreaks\",this.numberOfLineBreaks)\r\n  }\r\n\r\n}\r\n","<div class=\"btn btn-outline-primary\" [routerLink]=\"['/admin/siteInfo/licenceAndQual']\">\r\n    <i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\r\n  </div>\r\n  \r\n  <div class=\"container px-4 py-4 bg-white\">\r\n    \r\n    <form [formGroup]=\"addLicenceFG\" (ngSubmit)=\"onFormSubmit()\">\r\n      <h2 class=\"text-center\">Add Licence</h2>\r\n      <br />\r\n      <hr />\r\n      <ng-container formArrayName=\"arrObj\">\r\n        <ng-container\r\n          *ngFor=\"let control of add().controls; let i = index\"\r\n          [formGroupName]=\"i\"\r\n        >\r\n          <div class=\"row justify-content-center\">\r\n            <div class=\"mr-1 mt-2\">\r\n              <span \r\n                >{{i+1}}.\r\n              </span>\r\n            </div>\r\n            <div class=\"col-4\">\r\n              <textarea  autosize\r\n              (keyup)=\" calcHeight($event.target.value)\"\r\n              [rows]=\"numberOfLineBreaks\"\r\n                type=\"text\"\r\n                formControlName=\"title\"\r\n                class=\"form-control sign\"\r\n                id=\"name\"\r\n                placeholder=\"Licence Name\"\r\n              ></textarea>\r\n              \r\n            </div>\r\n            <div class=\"col-4\">            \r\n              <select class=\"form-select form-control\" formControlName=\"tradeCategoryId\"\r\n              aria-label=\"Default select example\">\r\n                <option value=\"\"selected hidden>Select category</option>\r\n                <option *ngFor=\"let category of categories\" [value]=\"category._id\">{{category.title}}</option>               \r\n              </select>\r\n            </div>\r\n            <div class=\"col-1 mt-2\">\r\n              <span class=\"material-icons\" (click)=\"addAction()\"\r\n                >add_circle_outline\r\n              </span>\r\n            </div>\r\n            <div class=\"col-1 mt-2\">\r\n              <span class=\"material-icons\" (click)=\"removeSafetyModule(i)\">\r\n                remove_circle_outline\r\n              </span>\r\n            </div>\r\n          </div>\r\n  \r\n          <hr />\r\n        </ng-container>\r\n      </ng-container>\r\n      <br />\r\n  \r\n      <div class=\"col-md-2\">\r\n        <button type=\"submit\" class=\"btn btn-primary\"[disabled]=\"addLicenceFG.get('arrObj').invalid\">Add</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  ","import { Component, OnInit } from '@angular/core';\r\nimport { SetTitleService } from '../utils/services/set-title.service';\r\n\r\n@Component({\r\n  selector: 'app-site-info',\r\n  templateUrl: './site-info.component.html',\r\n  styleUrls: ['./site-info.component.scss']\r\n})\r\nexport class SiteInfoComponent implements OnInit {\r\n\r\n  constructor(private setTitle:SetTitleService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.setTitle.setTitle('WHS-Site Info');\r\n  }\r\n\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport Swal from 'sweetalert2';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\n@Component({\r\n  selector: 'app-edit-ppe',\r\n  templateUrl: './edit-ppe.component.html',\r\n  styleUrls: ['./edit-ppe.component.scss']\r\n})\r\nexport class EditPPEComponent implements OnInit {\r\n  editTitle!: FormGroup;\r\n  dataRec: any;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    public dialogRef: MatDialogRef<EditPPEComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.dataRec = data;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.editTitle = this.fb.group({\r\n      title: [this.dataRec.title, Validators.required],\r\n    });\r\n  }\r\n  onFormSubmit() {\r\n     \r\n    let data={\r\n      title :this.editTitle.get('title').value\r\n    }\r\n    this.logicalFormInfo\r\n      .updatePPE(data, this.dataRec._id)\r\n      .subscribe((resData) => {\r\n        console.log('resData', resData);\r\n\r\n        this.dialogRef.close('true');\r\n        Swal.fire({\r\n          title: 'Parameter Updated successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });     \r\n       });\r\n  }\r\n  closeDialog(){\r\n    this.dialogRef.close('false');\r\n\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"editTitle\" >\r\n    <h2>Edit PPE</h2>\r\n    <mat-form-field appearance=\"legacy\"\r\n    class=\"example-full-width\" style=\"width: 498px;\">\r\n    <!-- <mat-label>Edit PPE</mat-label> -->\r\n    <input matInput  formControlName=\"title\" >\r\n    </mat-form-field>\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-2 offset-8 \">\r\n            <button mat-raised-button (click)=\"closeDialog()\">Close</button>\r\n        </div>\r\n        <div class=\"col-sm-2  \">\r\n            <button mat-raised-button  [disabled]=\"!editTitle.valid\"(click)=\"onFormSubmit()\">Update</button>\r\n        </div>\r\n    </div>\r\n</form>   \r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n  FormArray,\r\n  \r\n} from '@angular/forms'\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-add-licence-cat',\r\n  templateUrl: './add-licence-cat.component.html',\r\n  styleUrls: ['./add-licence-cat.component.scss']\r\n})\r\nexport class AddLicenceCatComponent implements OnInit {\r\n\r\n  addLicenceCatFG!: FormGroup;\r\n  formData: any;;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private router: Router,\r\n    private logicalFormInfo:LogicalFormInfoService\r\n  ) { \r\n    this.addLicenceCatFG=this.fb.group({\r\n     // mode:\"JobTask\",\r\n      arrObj: this.fb.array([]),\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.addAction();\r\n  }\r\n  addAction() {\r\n    {\r\n      this.add().push(this.newAction());\r\n    }\r\n  }\r\n  add(): FormArray {\r\n    return this.addLicenceCatFG.get('arrObj') as FormArray;\r\n  }\r\n  newAction(): FormGroup {\r\n    return this.fb.group({\r\n     \r\n      title: ['', Validators.required],\r\n    });\r\n  }\r\n  \r\n  removeSafetyModule(i) {\r\n    const item = <FormArray>this.addLicenceCatFG.controls['arrObj'];\r\n    if (item.length > 1) {\r\n      item.removeAt(i);\r\n    \r\n    }\r\n  }\r\n  onFormSubmit() {\r\n    let data={\r\n      arrObj:this.addLicenceCatFG.get('arrObj').value\r\n    }\r\n    this.logicalFormInfo.addLicenceCat(data).subscribe((data) => {\r\n      console.log('JOBTask=>', data);\r\n      this.router.navigate(['/admin/siteInfo/licenceCat']);      \r\n    },(err)=>{console.error(err);} \r\n  \r\n    );\r\n    \r\n  }\r\n \r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { LandingPageInfoServiceService } from 'src/app/utils/services/landing-page-info-service.service';\r\n\r\nimport { UploadFileServiceService } from './../../utils/services/upload-file-service.service';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\n\r\nimport Swal from 'sweetalert2';\r\nimport { FormBuilder, FormGroup, Validators, FormArray } from '@angular/forms';\r\nimport { AddHighRiskConstructionComponent } from './add-high-risk-construction/add-high-risk-construction.component';\r\nimport { EditHighRiskConstructionComponent } from './edit-high-risk-construction/edit-high-risk-construction.component';\r\nimport { AfterViewInit,ViewChild } from '@angular/core';\r\n\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { SetTitleService } from 'src/app/utils/services/set-title.service';\r\nimport { MatSort } from '@angular/material/sort';\r\n@Component({\r\n  selector: 'app-high-risk-con',\r\n  templateUrl: './high-risk-con.component.html',\r\n  styleUrls: ['./high-risk-con.component.scss'],\r\n})\r\nexport class HighRiskConComponent implements AfterViewInit, OnInit {\r\n  formData: any;\r\n  mode: any;\r\n  highRiskConstructionData: any = [];\r\n  myId: any;\r\n  isEdit = false;\r\n  Is_id: any;\r\n  Edit = false;\r\n  Add = false;\r\n  collectionSize = 10;\r\n  hide = false;\r\n  closeResult: string;\r\n  componentId = '';\r\n  ELEMENT_DATA = [];\r\n  /////////////mat table////////////////\r\n  displayedColumns: string[] = ['index', 'title' ,'action'];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  constructor(\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    public dialog: MatDialog,\r\n    private spinner: NgxSpinnerService,\r\n    public router: Router,\r\n    private setTitle:SetTitleService\r\n  ) {\r\n    \r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllHighRisk();\r\n    this.setTitle.setTitle('WHS-High Risk Construction List');\r\n  }\r\n  \r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n \r\n  // onFormSubmit() {\r\n  //   console.log(this.riskDetails);\r\n  //   this.logicalFormInfo\r\n  //     .addFormData(this.riskDetails.getRawValue())\r\n  //     .subscribe((data) => {\r\n  //       console.log('risk=>', data);\r\n  //       this.formData = data;\r\n  //     });\r\n  // }\r\n  // getAllHighRisk() {\r\n  //   this.mode = 'Risk';\r\n  //   this.logicalFormInfo.getFormDataById(this.mode).subscribe((res) => {\r\n  //     console.log('riskDetails data=>', res);\r\n  //     this.componentId = res.data[0]._id;\r\n  //     this.highRiskConstructionData = res.data[0];\r\n  //     console.log('highRiskConstructionData', this.highRiskConstructionData);\r\n  //   });\r\n  // }\r\n  // editTask(title,id, i) {\r\n  //   console.log('id', id);\r\n  //   this.myId = id;\r\n  //   this.isEdit = true;\r\n  //   this.mode = 'Risk';\r\n\r\n  //   let dialogRef = this.dialog.open(EditHighRiskConstructionComponent, {\r\n  //     data: {        \r\n  //       EditData: id,\r\n  //       componentId: this.componentId,\r\n  //       index: i,\r\n  //       title:title\r\n  //       // moduleName: name,\r\n  //     },\r\n\r\n  //     width: '1000px',\r\n  //     height: '500px',\r\n  //   });\r\n  //   dialogRef.afterClosed().subscribe((result) => {\r\n  //     console.log('-> openDialog -> result', result);\r\n\r\n  //     if ((result = 'true')) {\r\n  //       this.getAllHighRisk();\r\n  //     }\r\n  //     console.log('The dialog was closed');\r\n  //   });\r\n  // }\r\n\r\n  // addTask() {\r\n  //   let dialogRef = this.dialog.open(AddHighRiskConstructionComponent, {\r\n  //     data: {\r\n  //       action: 'new',\r\n  //       EditData: this.componentId,\r\n  //     },\r\n  //     width: '600px',\r\n  //     height: '400px',\r\n  //   });\r\n  //   dialogRef.afterClosed().subscribe((result) => {\r\n  //     console.log('openDialog->result', result);\r\n  //     if ((result = 'true')) {\r\n  //       this.getAllHighRisk();\r\n  //     }\r\n  //   });\r\n\r\n  // }\r\n  // deleteopen(content, id) {\r\n  //   console.log('deleteopen close id=>', id);\r\n  //   this.Is_id = id;\r\n  //   this.modalService\r\n  //     .open(content, { ariaLabelledBy: 'modal-basic-title' })\r\n  //     .result.then(\r\n  //       (result) => {\r\n  //         this.closeResult = `Closed with: ${result}`;\r\n  //         console.log('deleting');\r\n  //         this.logicalFormInfo\r\n  //           .deleteSubComponent(this.Is_id)\r\n  //           .subscribe((res) => {\r\n  //             Swal.fire('Deleted Successfully');\r\n  //             console.log('deleted res', res);\r\n  //             this.getAllHighRisk();\r\n  //           });\r\n  //       },\r\n  //       (reason) => {\r\n  //         this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n  //         console.log('dismissed');\r\n  //       }\r\n  //     );\r\n  // }\r\n\r\n  // delete(item) {\r\n  //   Swal.fire({\r\n  //     title: 'Are you sure?',\r\n  //     text: `Do you want to delete \"${item}\"?`,\r\n  //     icon: 'warning',\r\n  //     showCancelButton: true,\r\n  //     confirmButtonColor: '#00B96F',\r\n  //     cancelButtonColor: '#d33',\r\n  //     confirmButtonText: 'Yes, Delete!',\r\n  //   }).then((result) => {\r\n  //     if (result.value) {\r\n  //     }\r\n  //   });\r\n  // }\r\n  // private getDismissReason(reason: any): string {\r\n  //   if (reason === ModalDismissReasons.ESC) {\r\n  //     return 'by pressing ESC';\r\n  //   } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n  //     return 'by clicking on a backdrop';\r\n  //   } else {\r\n  //     return `with: ${reason}`;\r\n  //   }\r\n  // }\r\n  getAllHighRisk() {\r\n    this.logicalFormInfo.getAllRisk().subscribe((res:any) => {\r\n      console.log('Risk=>', res);\r\n      // this.jobTaskData = res.data[0].subComponents;\r\n      let data = res.data;\r\n      data.forEach((element, index) => {\r\n        element.index = index + 1; //adding index\r\n      });\r\n\r\n      this.ELEMENT_DATA = data;\r\n      this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n      //  this.task = res.data.subComponents;\r\n    });\r\n \r\n  }\r\n  edit(element){\r\n    const dialogRef = this.dialog.open(EditHighRiskConstructionComponent, {\r\n      width: \"550px\",\r\n      data: element,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if ((result == \"true\")) {\r\n        this.getAllHighRisk();\r\n      }\r\n      console.log(\"The dialog was closed\");\r\n    });\r\n  }\r\n  delete(item) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: `Do you want to delete \"${item.title}\"?`,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#00B96F',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Delete!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.logicalFormInfo\r\n        .deleteRisk(item._id)\r\n        .subscribe((res) => {\r\n          Swal.fire({\r\n            title: 'Parameter Deleted successfully',\r\n            showConfirmButton: false,\r\n            timer: 1200,\r\n          });\r\n          console.log('deleted res', res);\r\n          this.getAllHighRisk();\r\n            \r\n        });\r\n      }\r\n    });\r\n  }\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n}\r\n","  \r\n    <!-- <form [formGroup]=\"jobTaskDetails\" (ngSubmit)=\" onFormSubmit()\">\r\n\r\n      <h2 class=\"text-center\">High Risk Construction </h2>\r\n     <br>\r\n     <hr>\r\n      <ng-container formArrayName=\"arrObj\">\r\n          <ng-container\r\n            *ngFor=\"let control of add().controls; let i = index\"\r\n            [formGroupName]=\"i\"\r\n          >\r\n            <div>\r\n              <div class=\"row\">\r\n               \r\n                <div class=\"col-8\">\r\n               <input\r\n                    type=\"text\"\r\n                    formControlName=\"title\"\r\n                    class=\"form-control sign\"\r\n                    id=\"name\"\r\n                  />\r\n                </div>\r\n                <div class=\"col-1 mt-2\">\r\n                <span class=\"material-icons\" (click)=\"addAction()\"\r\n                  >add_circle_outline\r\n                </span>\r\n              </div> \r\n                 <div class=\"col-1 mt-2\">\r\n                <span class=\"material-icons\" (click)=\"removeSafetyModule(i)\">\r\n                  remove_circle_outline\r\n                </span>\r\n              </div> \r\n              </div>\r\n            </div>\r\n            <hr />\r\n          </ng-container>\r\n        </ng-container>\r\n        <br>\r\n      \r\n        <div class=\"col-md-2\"> \r\n          <button type=\"submit\" class=\"btn btn-primary \"> Submit</button>\r\n        </div>\r\n        </form>\r\n      </div> \r\n      \r\n      \r\n      <section class=\"content\">\r\n        <div class=\"text-center\">\r\n          <h1 class=\"card\"> High Risk Construction</h1>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"col ml-2 mb-2\">\r\n            <button (click)=\"addTask()\" class=\"btn btn-outline-primary mt-1 mr-2 float-right\">\r\n              <i class=\"fas fa-folder-plus mr-2\"></i>Add Parameter \r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div class=\"container-fluid\">\r\n          <div class=\"row\">\r\n            <div class=\"col-12\">\r\n              <div class=\"card\">\r\n                <div class=\"card-body p-0\">\r\n                  <table class=\"table table-hover text-wrap\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th style=\"width: 5%\">Index</th>\r\n                        <th style=\"width: 80%\">Title</th>\r\n                        <th  style=\"width: 5%\">Edit</th>\r\n                        <th style=\"width: 5%\" >Delete</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <tr *ngFor=\"let risk of highRiskConstructionData.subComponents; let i = index\">\r\n                        <td>{{ i+1 }}</td>\r\n                        <td>{{ risk.title }}</td>\r\n \r\n                        <td>\r\n                          <button class=\"btn btn-info btn-sm mr-2\" (click)=\"editTask(risk.title ,risk._id,i)\">\r\n                            <i class=\"fas fa-pencil-alt \"></i> \r\n                          </button>\r\n                        </td>\r\n                        <td>\r\n                          <button class=\"btn btn-danger btn-sm mr-2\" (click)=\"deleteopen(deletemodal, risk._id)\">\r\n                            <i class=\"fas fa-trash \"></i>\r\n                          </button>\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      <ng-template #deletemodal let-modal>\r\n        <div class=\"modal-header titel\">\r\n          <h2 class=\"modal-title titel\" id=\"modal-basic-title\">Are you sure?</h2>\r\n        </div>\r\n        <div class=\"modal-body deletebody\">\r\n          <p></p>\r\n          <p>Do you want to delete this Service</p>\r\n        </div>\r\n        <div class=\"modal-footer footer\">\r\n          <button type=\"button\" class=\"btn mr-3\" style=\"background-color: #eeeeee\" (click)=\"modal.dismiss('Save click')\">\r\n            Cancel\r\n          </button>\r\n          <button type=\"button\" class=\"btn btn-danger ml-3\" aria-label=\"Close\" (click)=\"modal.close('Cross click')\">\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </ng-template> -->\r\n      <div class=\"col ml-2 pt-3\">\r\n      <h1>High Risk List</h1>\r\n      </div>\r\n    <div class=\"col ml-2 mb-2\">\r\n      \r\n      <button  class=\"btn btn-outline-primary mt-1 mr-2 float-right\"[routerLink]=\"['/admin/siteInfo/addHighRisk']\">\r\n        <i class=\"fas fa-folder-plus mr-2\"></i>Add High Risk \r\n      </button>\r\n    </div>\r\n    <div class=\"col-6\">\r\n      <mat-form-field>\r\n        <input\r\n          matInput\r\n          #input\r\n          placeholder=\"Search\"\r\n          (keyup)=\"applyFilter($event)\"\r\n        />\r\n      </mat-form-field>\r\n    </div>\r\n    <div class=\"\">\r\n      <table mat-table [dataSource]=\"dataSource\" matSort>\r\n    \r\n        <!-- Position Column -->\r\n        <ng-container matColumnDef=\"index\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> No. </th>\r\n          <td mat-cell *matCellDef=\"let element\">{{element.index}}</td>\r\n        </ng-container>\r\n    \r\n        <!-- Name Column -->\r\n       \r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"title\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\r\n      <td mat-cell *matCellDef=\"let element\"><span class=\"flex-start\"> {{element.title}}</span> </td>\r\n    </ng-container>\r\n  \r\n<ng-container matColumnDef=\"action\">\r\n  <th mat-header-cell *matHeaderCellDef> Action </th>\r\n  <td mat-cell *matCellDef=\"let element\"> \r\n    <!-- <i class=\"fas fa-pencil-alt mr-2 \" (click)=\"edit(element)\" title=\"edit\"></i>  <i  class=\"fas fa-trash ml-2 \" (click)=\"delete(element)\" title=\"delete\"></i>  -->\r\n    <button mat-icon-button class=\"mr-2\" aria-label=\"Example icon button with a delete icon\" (click)=\"edit(element)\">\r\n      <mat-icon >edit</mat-icon>\r\n    </button>\r\n    <button mat-icon-button aria-label=\"Example icon button with a delete icon\" (click)=\"delete(element)\">\r\n      <mat-icon >delete</mat-icon>\r\n    </button>\r\n  </td>\r\n</ng-container>\r\n    <!-- <ng-container matColumnDef=\"edit\">\r\n      <th mat-header-cell *matHeaderCellDef> Edit </th>\r\n      <td mat-cell *matCellDef=\"let element\"(click)=\"edit(element)\"> <i class=\"fas fa-pencil-alt \"></i> \r\n      </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"delete\">\r\n      <th mat-header-cell *matHeaderCellDef> Delete </th>\r\n      <td mat-cell *matCellDef=\"let element\"(click)=\"delete(element)\"> <i class=\"fas fa-trash \"></i> \r\n      </td>\r\n    </ng-container> -->\r\n\r\n    \r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n        <tr class=\"mat-row\" *matNoDataRow>\r\n          <td class=\"mat-cell\" colspan=\"4\">Data Not  Found  \"{{input.value}}\"</td>\r\n        </tr>\r\n      </table>\r\n    \r\n      <mat-paginator [pageSizeOptions]=\"[20]\"\r\n                     showFirstLastButtons \r\n                     aria-label=\"Select page of periodic elements\">\r\n      </mat-paginator>\r\n    </div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n  FormArray,\r\n  \r\n} from '@angular/forms'\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-add-ppe',\r\n  templateUrl: './add-ppe.component.html',\r\n  styleUrls: ['./add-ppe.component.scss']\r\n})\r\nexport class AddPPEComponent implements OnInit {\r\n  PPEformgp!: FormGroup;\r\n  formData: any;\r\n  numberOfLineBreaks:any;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private router: Router,\r\n    private logicalFormInfo:LogicalFormInfoService\r\n  ) { \r\n    this.PPEformgp=this.fb.group({\r\n     // mode:\"JobTask\",\r\n      arrObj: this.fb.array([]),\r\n      \r\n    });\r\n    \r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.addAction();\r\n    \r\n  }\r\n  addAction() {\r\n    {\r\n      this.add().push(this.newAction());\r\n    }\r\n  }\r\n  add(): FormArray {\r\n    return this.PPEformgp.get('arrObj') as FormArray;\r\n  }\r\n  newAction(): FormGroup {\r\n    return this.fb.group({\r\n     \r\n      title: ['', Validators.required],\r\n    });\r\n  }\r\n  \r\n  removeSafetyModule(i) {\r\n    const item = <FormArray>this.PPEformgp.controls['arrObj'];\r\n    if (item.length > 1) {\r\n      item.removeAt(i);\r\n    \r\n    }\r\n  }\r\n  onFormSubmit() {\r\n    console.log(this.PPEformgp.value);\r\n    let data={\r\n      arrObj:this.PPEformgp.get('arrObj').value\r\n    }\r\n    this.logicalFormInfo.addMultiplePPE(data).subscribe((data) => {\r\n      console.log('PPE=>', data);\r\n      this.router.navigate(['/admin/siteInfo/ppeSel']);      \r\n    },(err)=>{console.error(err);} \r\n  \r\n    );\r\n    \r\n  }\r\n calcHeight(value) {\r\n    this.numberOfLineBreaks = (value.match(/\\n/g) || []).length+1;\r\n    console.log(\"numberOfLineBreaks\",this.numberOfLineBreaks)\r\n }\r\n\r\n}\r\n","<div class=\"btn btn-outline-primary\" [routerLink]=\"['/admin/siteInfo/ppeSel']\">\r\n    <i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\r\n  </div>\r\n  <div class=\"container px-4 py-4 bg-white\">\r\n    <form [formGroup]=\"PPEformgp\" (ngSubmit)=\"onFormSubmit()\">\r\n      <h2 class=\"text-center\">Add PPE</h2>\r\n      <br />\r\n      <hr />\r\n      <ng-container formArrayName=\"arrObj\">\r\n        <ng-container\r\n          *ngFor=\"let control of add().controls; let i = index\"\r\n          [formGroupName]=\"i\"\r\n        >\r\n          <div class=\"row justify-content-center\">\r\n            <div class=\"mr-1 mt-2\">\r\n              <span \r\n                >{{i+1}}.\r\n              </span>\r\n            </div>\r\n            <div class=\"col-8\">\r\n              <textarea autosize\r\n               (keyup)=\" calcHeight($event.target.value)\"\r\n               [rows]=\"numberOfLineBreaks\"\r\n                type=\"text\"\r\n                formControlName=\"title\"\r\n                class=\"form-control sign\"\r\n                id=\"name\"\r\n              ></textarea>\r\n            </div>\r\n            <div class=\"col-1 mt-2\">\r\n              <span class=\"material-icons\" (click)=\"addAction()\"\r\n                >add_circle_outline\r\n              </span>\r\n            </div>\r\n            <div class=\"col-1 mt-2\">\r\n              <span class=\"material-icons\" (click)=\"removeSafetyModule(i)\">\r\n                remove_circle_outline\r\n              </span>\r\n            </div>\r\n          </div>\r\n  \r\n          <hr />\r\n        </ng-container>\r\n      </ng-container>\r\n      <br />\r\n  \r\n      <div class=\"col-md-2\">\r\n        <button type=\"submit\" class=\"btn btn-primary\"[disabled]=\"PPEformgp.get('arrObj').invalid\">Add</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  ","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport Swal from 'sweetalert2';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\n@Component({\r\n  selector: 'app-edit-hazard',\r\n  templateUrl: './edit-hazard.component.html',\r\n  styleUrls: ['./edit-hazard.component.scss']\r\n})\r\nexport class EditHazardComponent implements OnInit {\r\n\r\n  editTitle!: FormGroup;\r\n  dataRec: any;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    public dialogRef: MatDialogRef<EditHazardComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.dataRec = data;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.editTitle = this.fb.group({\r\n      title: [this.dataRec.title, Validators.required],\r\n    });\r\n  }\r\n  onFormSubmit() {\r\n     \r\n    let data={\r\n      title :this.editTitle.get('title').value\r\n    }\r\n    this.logicalFormInfo\r\n      .updateHazards(data, this.dataRec._id)\r\n      .subscribe((resData) => {\r\n        console.log('resData', resData);\r\n\r\n        this.dialogRef.close('true');\r\n        Swal.fire({\r\n          title: 'Parameter Updated successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });     \r\n       });\r\n  }\r\n  closeDialog(){\r\n    this.dialogRef.close('false');\r\n\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"editTitle\" >\r\n    <h2>Edit Hazard</h2>\r\n    <mat-form-field appearance=\"legacy\"\r\n    class=\"example-full-width\" style=\"width: 498px;\">\r\n    <!-- <mat-label>Edit PPE</mat-label> -->\r\n    <input matInput  formControlName=\"title\" >\r\n    </mat-form-field>\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-2 offset-8 \">\r\n            <button mat-raised-button (click)=\"closeDialog()\">Close</button>\r\n        </div>\r\n        <div class=\"col-sm-2  \">\r\n            <button mat-raised-button  [disabled]=\"!editTitle.valid\"(click)=\"onFormSubmit()\">Update</button>\r\n        </div>\r\n    </div>\r\n</form>   \r\n","import { Component, OnInit,Inject } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport Swal from 'sweetalert2';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-staff',\r\n  templateUrl: './edit-staff.component.html',\r\n  styleUrls: ['./edit-staff.component.scss']\r\n})\r\nexport class EditStaffComponent implements OnInit {\r\n\r\n  editTitle!: FormGroup;\r\n  dataRec: any;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    public dialogRef: MatDialogRef<EditStaffComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.dataRec = data;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.editTitle = this.fb.group({\r\n      title: [this.dataRec.title, Validators.required],\r\n    });\r\n  }\r\n  onFormSubmit() {\r\n     \r\n    let data={\r\n      title :this.editTitle.get('title').value\r\n    }\r\n    this.logicalFormInfo\r\n      .updateStaff(this.dataRec._id,data)\r\n      .subscribe((resData) => {\r\n        console.log('resData', resData);\r\n\r\n        this.dialogRef.close('true');\r\n        Swal.fire({\r\n          title: 'Staff  Updated successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });     \r\n       });\r\n  }\r\n  closeDialog(){\r\n    this.dialogRef.close('false');\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n","<form [formGroup]=\"editTitle\" >\r\n    <h2>Edit Staff</h2>\r\n    <mat-form-field appearance=\"legacy\"\r\n    class=\"example-full-width\" style=\"width: 498px;\">\r\n    <input matInput  formControlName=\"title\" >\r\n    </mat-form-field>\r\n    <br>\r\n    \r\n    <div class=\"row\">\r\n        <div class=\"col-sm-2 offset-8 \">\r\n            <button mat-raised-button (click)=\"closeDialog()\">Close</button>\r\n        </div>\r\n        <div class=\"col-sm-2  \">\r\n            <button mat-raised-button  [disabled]=\"!editTitle.valid\"(click)=\"onFormSubmit()\">Update</button>\r\n        </div>\r\n    </div>\r\n</form>   \r\n\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormArray, FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { UploadFileServiceService } from 'src/app/utils/services/upload-file-service.service';\r\nimport { Router } from '@angular/router';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\n@Component({\r\n  selector: 'app-edit-high-risk-construction',\r\n  templateUrl: './edit-high-risk-construction.component.html',\r\n  styleUrls: ['./edit-high-risk-construction.component.scss'],\r\n})\r\nexport class EditHighRiskConstructionComponent implements OnInit {\r\n  editTitle: FormGroup;\r\n  dataRec: any;\r\n\r\n\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    public dialogRef: MatDialogRef<EditHighRiskConstructionComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.dataRec = data;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    console.log(\"this.dataRec\",this.dataRec);\r\n    \r\n    this.editTitle = this.fb.group({\r\n      title: [this.dataRec.title, Validators.required],\r\n    });\r\n  }\r\n  onFormSubmit() {\r\n     \r\n    let data={\r\n      title :this.editTitle.get('title').value,\r\n    }\r\n    this.logicalFormInfo\r\n      .updateRisk(data, this.dataRec._id)\r\n      .subscribe((resData) => {\r\n\r\n        this.dialogRef.close('true');\r\n        Swal.fire({\r\n          title: 'Parameter Edited successfully',\r\n          showConfirmButton: false,\r\n          timer: 1200,\r\n        });  \r\n          });\r\n  }\r\n  closeDialog(){\r\n    this.dialogRef.close('false');\r\n\r\n  }\r\n}\r\n","<form [formGroup]=\"editTitle\" >\r\n  <h2>Edit High Risk</h2>\r\n  <mat-form-field appearance=\"legacy\"\r\n  class=\"example-full-width\" style=\"width: 498px;\">\r\n  <!-- <mat-label>Edit Job Task</mat-label> -->\r\n  <input matInput   formControlName=\"title\">\r\n  </mat-form-field>\r\n  <div class=\"row\">\r\n      <div class=\"col-sm-2 offset-8 \">\r\n          <button mat-raised-button (click)=\"closeDialog()\">Close</button>\r\n      </div>\r\n      <div class=\"col-sm-2  \">\r\n          <button mat-raised-button  [disabled]=\"!editTitle.valid\"(click)=\"onFormSubmit()\">Update</button>\r\n      </div>\r\n  </div>\r\n</form>   \r\n\r\n","import { Component, OnInit, Injectable } from '@angular/core';\r\nimport {\r\n  MatSnackBar,\r\n  MatSnackBarRef,\r\n  TextOnlySnackBar,\r\n} from '@angular/material/snack-bar';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SnackbarService {\r\n  constructor(private snackbar: MatSnackBar) {}\r\n\r\n  openSnackBar(msg: string,action = 'close'): MatSnackBarRef<TextOnlySnackBar> {\r\n    return this.snackbar.open(msg, action, {\r\n      duration: 3000,\r\n      horizontalPosition: 'right',\r\n      // verticalPosition:'top'\r\n    });\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'selector-name',\r\n  template: `<span class=\"example-pizza-party\"> test  </span>`,\r\n  styles: [''],\r\n})\r\nexport class NameComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n}\r\n","import { MatDialog } from '@angular/material/dialog';\r\nimport { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { EditTaskComponent } from './edit-task/edit-task.component';\r\nimport { SetTitleService } from 'src/app/utils/services/set-title.service';\r\nimport { MatSort } from '@angular/material/sort';\r\n\r\n@Component({\r\n  selector: 'app-job-task',\r\n  templateUrl: './job-task.component.html',\r\n  styleUrls: ['./job-task.component.scss'],\r\n})\r\nexport class JobTaskComponent implements AfterViewInit, OnInit {\r\n  mode: any;\r\n  jobTaskData: any = [];\r\n  ELEMENT_DATA = [];\r\n  /////////////mat table////////////////\r\n  displayedColumns: string[] = ['index', 'title','tradeCategoryId', 'action'];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n  /////////////mat table end////////////////\r\n\r\n  constructor(private logicalFormInfo: LogicalFormInfoService, private dialog: MatDialog,\r\n    private setTitle: SetTitleService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllJobTask();\r\n    this.setTitle.setTitle('WHS-Job Task List');\r\n  }\r\n \r\n  getAllJobTask() {\r\n    this.logicalFormInfo.getAllJobtask().subscribe((res: any) => {\r\n      console.log('jobTaskDetails=>', res);\r\n      // this.jobTaskData = res.data[0].subComponents;\r\n      let data = res.data\r\n      data.forEach((element, index) => {\r\n        element.index = index + 1; //adding index\r\n      });\r\n\r\n      this.ELEMENT_DATA = data;\r\n      this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n      //  this.task = res.data.subComponents;\r\n    });\r\n\r\n  }\r\n  edit(element) {\r\n    const dialogRef = this.dialog.open(EditTaskComponent, {\r\n      width: \"550px\",\r\n      data: element,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if ((result == \"true\")) {\r\n        this.getAllJobTask();\r\n      }\r\n      console.log(\"The dialog was closed\");\r\n    });\r\n  }\r\n  delete(item) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: `Do you want to delete \"${item.title}\"?`,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#00B96F',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Delete!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.logicalFormInfo\r\n          .deleteJobTask(item._id)\r\n          .subscribe((res) => {\r\n            Swal.fire({\r\n              title: 'Parameter Deleted successfully',\r\n              showConfirmButton: false,\r\n              timer: 1200,\r\n            }); console.log('deleted res', res);\r\n            this.getAllJobTask();\r\n\r\n          });\r\n      }\r\n    });\r\n  }\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n}\r\n","<div class=\"col ml-2 pt-3\">\r\n<h1> Job task List</h1>\r\n</div>\r\n    <div class=\"col ml-2 mb-2\">\r\n      \r\n      <button  class=\"btn btn-outline-primary mt-1 mr-2 float-right\"[routerLink]=\"['/admin/siteInfo/addJobTask']\">\r\n        <i class=\"fas fa-folder-plus mr-2\"></i>Add Job Task \r\n      </button>\r\n    </div>\r\n    <div class=\"col-6\">\r\n      <mat-form-field>\r\n        <input\r\n          matInput\r\n          #input\r\n          placeholder=\"Search\"\r\n          (keyup)=\"applyFilter($event)\"\r\n        />\r\n      </mat-form-field>\r\n    </div>\r\n    <div class=\"\">\r\n      <table mat-table [dataSource]=\"dataSource\" matSort>\r\n    \r\n        <!-- Position Column -->\r\n        <ng-container matColumnDef=\"index\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> No. </th>\r\n          <td mat-cell *matCellDef=\"let element\">{{element.index}}</td>\r\n        </ng-container>\r\n    \r\n        <!-- Name Column -->\r\n       \r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"title\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\r\n      <td mat-cell *matCellDef=\"let element\"> <span class=\"flex-start\">{{element.title}} </span></td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"tradeCategoryId\">\r\n      <th mat-header-cell *matHeaderCellDef>Category</th>\r\n      <td mat-cell *matCellDef=\"let element\"> <span class=\"flex-start\">{{element?.tradeCategoryId?.title}} </span></td>\r\n    </ng-container>\r\n  \r\n<ng-container matColumnDef=\"action\">\r\n  <th mat-header-cell *matHeaderCellDef> Action </th>\r\n  <td mat-cell *matCellDef=\"let element\"> \r\n    <!-- <i class=\"fas fa-pencil-alt mr-2 \" (click)=\"edit(element)\" title=\"edit\"></i>  <i  class=\"fas fa-trash ml-2 \" (click)=\"delete(element)\" title=\"delete\"></i>  -->\r\n    <button mat-icon-button class=\"mr-2\" aria-label=\"Example icon button with a delete icon\" (click)=\"edit(element)\">\r\n      <mat-icon >edit</mat-icon>\r\n    </button>\r\n    <button mat-icon-button aria-label=\"Example icon button with a delete icon\" (click)=\"delete(element)\">\r\n      <mat-icon >delete</mat-icon>\r\n    </button>\r\n  </td>\r\n</ng-container>\r\n    <!-- <ng-container matColumnDef=\"edit\">\r\n      <th mat-header-cell *matHeaderCellDef> Edit </th>\r\n      <td mat-cell *matCellDef=\"let element\"(click)=\"edit(element)\"> <i class=\"fas fa-pencil-alt \"></i> \r\n      </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"delete\">\r\n      <th mat-header-cell *matHeaderCellDef> Delete </th>\r\n      <td mat-cell *matCellDef=\"let element\"(click)=\"delete(element)\"> <i class=\"fas fa-trash \"></i> \r\n      </td>\r\n    </ng-container> -->\r\n\r\n    \r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n        <tr class=\"mat-row\" *matNoDataRow>\r\n          <td class=\"mat-cell\" colspan=\"4\">Data Not  Found  \"{{input.value}}\"</td>\r\n        </tr>\r\n      </table>\r\n    \r\n      <mat-paginator [pageSizeOptions]=\"[20]\"\r\n                     showFirstLastButtons \r\n                     aria-label=\"Select page of periodic elements\">\r\n      </mat-paginator>\r\n    </div>\r\n    ","import { EditLicenceComponent } from './edit-licence/edit-licence.component';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { AfterViewInit,ViewChild } from '@angular/core';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { SetTitleService } from 'src/app/utils/services/set-title.service';\r\nimport { MatSort } from '@angular/material/sort';\r\n@Component({\r\n  selector: 'app-licence-and-qual',\r\n  templateUrl: './licence-and-qual.component.html',\r\n  styleUrls: ['./licence-and-qual.component.scss']\r\n})\r\nexport class LicenceAndQualComponent implements OnInit {\r\n  licenceAndQual: FormGroup;\r\n  formData: any;\r\n\r\n  mode: any;\r\n  jobTaskData: any = [];\r\n  ELEMENT_DATA = [];\r\n  /////////////mat table////////////////\r\n  displayedColumns: string[] = ['index', 'title','action'];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n  /////////////mat table end////////////////\r\n\r\n  constructor(private logicalFormInfo: LogicalFormInfoService,private dialog:MatDialog,\r\n    private setTitle: SetTitleService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getAllLicence();\r\n    this.setTitle.setTitle('WHS-License and Qualification List');\r\n  }\r\n\r\n  getAllLicence() {\r\n    this.logicalFormInfo.getAllLicence().subscribe((res) => {\r\n      console.log('getAllLicence=>', res);\r\n      // this.jobTaskData = res.data[0].subComponents;\r\n      let data = res.data;\r\n      data.forEach((element, index) => {\r\n        element.index = index + 1; //adding index\r\n      });\r\n\r\n      this.ELEMENT_DATA = data;\r\n      this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n      //  this.task = res.data.subComponents;\r\n    });\r\n \r\n  }\r\n  edit(element){\r\n    const dialogRef = this.dialog.open(EditLicenceComponent, {\r\n      width: \"550px\",\r\n      data: element,\r\n    });\r\n    console.log(element)\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if ((result == \"true\")) {\r\n        this.getAllLicence();\r\n      }\r\n      console.log(\"The dialog was closed\");\r\n    });\r\n  }\r\n  delete(item) {\r\n    console.log(\"delete\",item);\r\n    \r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: `Do you want to delete \"${item.title}\"?`,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#00B96F',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Delete!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.logicalFormInfo\r\n        .deleteLicence(item._id)\r\n        .subscribe((res) => {\r\n          Swal.fire({\r\n            title: 'Deleted successfully',\r\n            showConfirmButton: false,\r\n            timer: 1000,\r\n          });          console.log('deleted res', res);\r\n          this.getAllLicence();\r\n            \r\n        });\r\n      }\r\n    });\r\n  }\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n}\r\n","<div class=\"col ml-2 pt-3\">\r\n<h1> Licence and Qualification List</h1>\r\n</div>\r\n<div class=\"col ml-2 mb-2\">\r\n  \r\n  <button  class=\"btn btn-outline-primary mt-1 mr-2 float-right\"[routerLink]=\"['/admin/siteInfo/addLicence']\">\r\n    <i class=\"fas fa-folder-plus mr-2\"></i>Add Licence \r\n  </button>\r\n</div>\r\n<div class=\"col-6\">\r\n  <mat-form-field>\r\n    <input\r\n      matInput\r\n      #input\r\n      placeholder=\"Search\"\r\n      (keyup)=\"applyFilter($event)\"\r\n    />\r\n  </mat-form-field>\r\n</div>\r\n<div class=\"\">\r\n  <table mat-table [dataSource]=\"dataSource\" matSort>\r\n\r\n    <!-- Position Column -->\r\n    <ng-container matColumnDef=\"index\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> No. </th>\r\n      <td mat-cell *matCellDef=\"let element\">{{element.index}}</td>\r\n    </ng-container>\r\n\r\n    <!-- Name Column -->\r\n   \r\n<!-- Name Column -->\r\n<ng-container matColumnDef=\"title\">\r\n  <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\r\n  <td mat-cell *matCellDef=\"let element\"><span class=\"flex-start\"> {{element.title}}</span> </td>\r\n</ng-container>\r\n<!-- <ng-container matColumnDef=\"category\">\r\n  <th mat-header-cell *matHeaderCellDef> Category </th>\r\n  <td mat-cell *matCellDef=\"let element\"> {{element.licenceCategoryId?.title}} </td>\r\n</ng-container> -->\r\n\r\n<ng-container matColumnDef=\"action\">\r\n  <th mat-header-cell *matHeaderCellDef> Action </th>\r\n  <td mat-cell *matCellDef=\"let element\"> \r\n    <!-- <i class=\"fas fa-pencil-alt mr-2 \" (click)=\"edit(element)\" title=\"edit\"></i>  <i  class=\"fas fa-trash ml-2 \" (click)=\"delete(element)\" title=\"delete\"></i>  -->\r\n    <button mat-icon-button class=\"mr-2\" aria-label=\"Example icon button with a delete icon\" (click)=\"edit(element)\">\r\n      <mat-icon >edit</mat-icon>\r\n    </button>\r\n    <button mat-icon-button aria-label=\"Example icon button with a delete icon\" (click)=\"delete(element)\">\r\n      <mat-icon >delete</mat-icon>\r\n    </button>\r\n  </td>\r\n</ng-container>\r\n<!-- \r\n<ng-container matColumnDef=\"edit\">\r\n  <th mat-header-cell *matHeaderCellDef> Edit </th>\r\n  <td mat-cell *matCellDef=\"let element\"(click)=\"edit(element)\"> <i class=\"fas fa-pencil-alt \"></i> \r\n  </td>\r\n</ng-container>\r\n<ng-container matColumnDef=\"delete\">\r\n  <th mat-header-cell *matHeaderCellDef> Delete </th>\r\n  <td mat-cell *matCellDef=\"let element\"(click)=\"delete(element)\"> <i class=\"fas fa-trash \"></i> \r\n  </td>\r\n</ng-container> -->\r\n\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n    <tr class=\"mat-row\" *matNoDataRow>\r\n      <td class=\"mat-cell\" colspan=\"4\"> Data Not  Found  \"{{input.value}}\"</td>\r\n    </tr>\r\n  </table>\r\n\r\n  <mat-paginator [pageSizeOptions]=\"[20]\"\r\n                 showFirstLastButtons \r\n                 aria-label=\"Select page of periodic elements\">\r\n  </mat-paginator>\r\n</div>\r\n","import { MatDialog } from '@angular/material/dialog';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport {  ViewChild } from '@angular/core';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { SetTitleService } from 'src/app/utils/services/set-title.service';\r\nimport { EditContActComponent } from './edit-cont-act/edit-cont-act.component';\r\nimport { SnackbarService } from '../../services/snackbar.service';\r\nimport { MatSort } from '@angular/material/sort';\r\n@Component({\r\n  selector: 'app-contr-and-act-req',\r\n  templateUrl: './contr-and-act-req.component.html',\r\n  styleUrls: ['./contr-and-act-req.component.scss']\r\n})\r\nexport class ContrAndActReqComponent implements OnInit {\r\n\r\n  jobTaskData: any = [];\r\n  ELEMENT_DATA = [];\r\n  /////////////mat table////////////////\r\n  displayedColumns: string[] = ['index', 'title','action'];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n  /////////////mat table end////////////////\r\n\r\n  constructor(\r\n    private snack: SnackbarService,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    private dialog:MatDialog,\r\n    private setTitle:SetTitleService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getAllContrlActReq();\r\n    this.setTitle.setTitle('WHS-PPE List');\r\n\r\n  }\r\n\r\n  getAllContrlActReq() {\r\n    this.logicalFormInfo.getAllContrlActReq().subscribe((res:any) => {\r\n      console.log('PPEAll=>', res);\r\n      let data = res.data;\r\n      data.forEach((element, index) => {\r\n        element.index = index + 1; //adding index\r\n      });\r\n\r\n      this.ELEMENT_DATA = data;\r\n      this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n      console.log('this.ELEMENT_DATA', this.ELEMENT_DATA);\r\n\r\n      //  this.task = res.data.subComponents;\r\n    });\r\n  }\r\n  edit(element){\r\n    const dialogRef = this.dialog.open(EditContActComponent, {\r\n      width: \"550px\",\r\n      data: element,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if ((result == \"true\")) {\r\n        this.getAllContrlActReq();\r\n      }\r\n      console.log(\"The dialog was closed\");\r\n    });\r\n  }\r\n  delete(item) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: `Do you want to delete \"${item.title}\"?`,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#00B96F',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Delete!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.logicalFormInfo\r\n        .deleteContrlActReq(item._id)\r\n        .subscribe((res) => {\r\n          Swal.fire({\r\n            title: 'Parameter Deleted successfully',\r\n            showConfirmButton: false,\r\n            timer: 1200,\r\n          });\r\n          console.log('deleted res', res);\r\n          this.getAllContrlActReq();\r\n            \r\n        });\r\n      }\r\n    });\r\n  }\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  copySuccess(){\r\n    console.log('copy successfull')\r\n    this.snack.openSnackBar('Copied to clipboard');\r\n  }\r\n}\r\n","<div class=\"col ml-2 pt-3\">\r\n<h1 > Control And Action Required List</h1>\r\n</div>\r\n    <div class=\"col ml-2 mb-2\">\r\n      \r\n      <button  class=\"btn btn-outline-primary mt-1 mr-2 float-right\"[routerLink]=\"['/admin/siteInfo/addContrlActReq']\">\r\n        <i class=\"fas fa-folder-plus mr-2\"></i>Add Control and Action \r\n      </button>\r\n    </div>\r\n    <div class=\"col-6\">\r\n      <mat-form-field>\r\n        <input\r\n          matInput\r\n          #input\r\n          placeholder=\"Search\"\r\n          (keyup)=\"applyFilter($event)\"\r\n        />\r\n      </mat-form-field>\r\n    </div>\r\n    <div class=\"\">\r\n      <table mat-table [dataSource]=\"dataSource\" matSort>\r\n    \r\n        <!-- Position Column -->\r\n        <ng-container matColumnDef=\"index\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> No. </th>\r\n          <td mat-cell *matCellDef=\"let element\">{{element.index}}</td>\r\n        </ng-container>\r\n    \r\n        <!-- Name Column -->\r\n       \r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"title\" >\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\r\n      <td mat-cell *matCellDef=\"let element\" [cdkCopyToClipboard]=\"element.title.toString()\" (cdkCopyToClipboardCopied)=\"copySuccess()\" [matTooltip]=\"element.title\"> {{element.title.length > 90? element.title.slice(0,90)+ '...' :element.title }}</td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"action\">\r\n      <th mat-header-cell *matHeaderCellDef style=\"width: 10%;\"> Action </th>\r\n      <td mat-cell *matCellDef=\"let element\" style=\"width: 15%;\">\r\n         <!-- <div class=\"row\">\r\n           <div class=\"col-1\"><i class=\"fas fa-pencil-alt mr-2\" (click)=\"edit(element)\" title=\"edit\"></i> </div>\r\n            <div class=\"col-1\"><i  class=\"fas fa-trash ml-2 \" (click)=\"delete(element)\" title=\"delete\"></i> </div>\r\n    </div> -->\r\n    <button mat-icon-button class=\"mr-2\" aria-label=\"Example icon button with a delete icon\">\r\n      <mat-icon (click)=\"edit(element)\">edit</mat-icon>\r\n    </button>\r\n    <button mat-icon-button aria-label=\"Example icon button with a delete icon\" (click)=\"delete(element)\">\r\n      <mat-icon >delete</mat-icon>\r\n    </button>\r\n  </td>\r\n</ng-container>\r\n    <!-- <ng-container matColumnDef=\"edit\">\r\n        <th mat-header-cell *matHeaderCellDef> Edit </th>\r\n        <td mat-cell *matCellDef=\"let element\"(click)=\"edit(element)\"> <i class=\"fas fa-pencil-alt \"></i> \r\n        </td>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"delete\">\r\n        <th mat-header-cell *matHeaderCellDef> Delete </th>\r\n        <td mat-cell *matCellDef=\"let element\"(click)=\"delete(element)\"> <i class=\"fas fa-trash \"></i> \r\n        </td>\r\n      </ng-container> -->\r\n    \r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n        <tr class=\"mat-row\" *matNoDataRow>\r\n          <td class=\"mat-cell\" colspan=\"4\">Data Not  Found  \"{{input.value}}\"</td>\r\n        </tr>\r\n      </table>\r\n    \r\n      <mat-paginator [pageSizeOptions]=\"[20]\"\r\n                     showFirstLastButtons \r\n                     aria-label=\"Select page of periodic elements\">\r\n      </mat-paginator>\r\n    </div>\r\n    \r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { FormBuilder, FormGroup,  Validators,FormArray,} from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-add-risk-level',\r\n  templateUrl: './add-risk-level.component.html',\r\n  styleUrls: ['./add-risk-level.component.scss']\r\n})\r\nexport class AddRiskLevelComponent implements OnInit {\r\n  addRiskForm:FormGroup;\r\n  numberOfLineBreaks: any;\r\n  constructor( \r\n    private fb:FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    private router: Router,\r\n    ) { \r\n      this.addRiskForm=this.fb.group({\r\n        arrObj: this.fb.array([]),\r\n      })\r\n    }\r\n\r\n  ngOnInit(): void {\r\n    this.addRisk();\r\n  }\r\n  addRisk() {\r\n    {\r\n      this.add().push(this.newAction());\r\n    }\r\n  }\r\n  add(): FormArray {\r\n    return this.addRiskForm.get('arrObj') as FormArray;\r\n  }\r\n  newAction(): FormGroup {\r\n    return this.fb.group({\r\n     \r\n      title: ['', Validators.required],\r\n    });\r\n  }\r\n  \r\n  removeRisk(i) {\r\n    const item = <FormArray>this.addRiskForm.controls['arrObj'];\r\n    if (item.length > 1) {\r\n      item.removeAt(i);\r\n    \r\n    }\r\n  }\r\n  onFormSubmit() {\r\n    console.log(this.addRiskForm.value);\r\n    let data={\r\n      arrObj:this.addRiskForm.get('arrObj').value\r\n    }\r\n    this.logicalFormInfo.addMultipleRiskLevel(data).subscribe((data) => {\r\n      console.log('chemical=>', data);\r\n      this.router.navigate(['/admin/siteInfo/riskLevel']);      \r\n    },(err)=>{console.error(err);} \r\n  \r\n    );\r\n    \r\n  }\r\n  calcHeight(value) {\r\n    this.numberOfLineBreaks = (value.match(/\\n/g) || []).length+1;\r\n    console.log(\"numberOfLineBreaks\",this.numberOfLineBreaks)\r\n  }\r\n}\r\n","<div class=\"btn btn-outline-primary\" [routerLink]=\"['/admin/siteInfo/riskLevel']\">\r\n    <i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\r\n  </div>\r\n\r\n    <div class=\"container px-4 py-4 bg-white\" >\r\n        <form  [formGroup]=\"addRiskForm\" (ngSubmit)=\"onFormSubmit()\">\r\n      <h2  class=\"text-center\"> RiskLevel Info</h2>\r\n      <br />\r\n      <hr />\r\n      <ng-container formArrayName=\"arrObj\">\r\n        <ng-container\r\n          *ngFor=\"let control of add().controls; let i = index\"\r\n          [formGroupName]=\"i\"\r\n        >\r\n          <div class=\"row justify-content-center\">\r\n            <div class=\"mr-1 mt-2\">\r\n              <span \r\n                >{{i+1}}.\r\n              </span>\r\n            </div>\r\n            <div class=\"col-8\">\r\n              <textarea  autosize\r\n              (keyup)=\" calcHeight($event.target.value)\"\r\n              [rows]=\"numberOfLineBreaks\"\r\n                type=\"text\"\r\n                formControlName=\"title\"\r\n                class=\"form-control sign\"\r\n                id=\"title\"\r\n              ></textarea>\r\n            </div>\r\n            <div class=\"col-1 mt-2\">\r\n              <span class=\"material-icons\" (click)=\"addRisk()\"\r\n                >add_circle_outline\r\n              </span>\r\n            </div>\r\n            <div class=\"col-1 mt-2\">\r\n              <span class=\"material-icons\" (click)=\"removeRisk(i)\">\r\n                remove_circle_outline\r\n              </span>\r\n            </div>\r\n          </div>\r\n  \r\n          <hr />\r\n        </ng-container>\r\n      </ng-container>\r\n      <br />\r\n          <div  class=\"col-md-2\">\r\n            <button class=\"btn btn-primary\"[disabled]=\"addRiskForm.get('arrObj').invalid\" >\r\n              Add\r\n            </button>\r\n          </div>\r\n        \r\n        </form>\r\n        </div>","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n  FormArray,\r\n  \r\n} from '@angular/forms'\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { Router } from '@angular/router';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-add-contr-act',\r\n  templateUrl: './add-contr-act.component.html',\r\n  styleUrls: ['./add-contr-act.component.scss']\r\n})\r\nexport class AddContrActComponent implements OnInit {\r\n\r\n  contrlAndActFG!: FormGroup;\r\n  formData: any;numberOfLineBreaks: any;\r\n;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private router: Router,\r\n    private logicalFormInfo:LogicalFormInfoService\r\n  ) { \r\n    this.contrlAndActFG=this.fb.group({\r\n     // mode:\"JobTask\",\r\n      arrObj: this.fb.array([]),\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.addAction();\r\n  }\r\n  addAction() {\r\n    {\r\n      this.add().push(this.newAction());\r\n    }\r\n  }\r\n  add(): FormArray {\r\n    return this.contrlAndActFG.get('arrObj') as FormArray;\r\n  }\r\n  newAction(): FormGroup {\r\n    return this.fb.group({\r\n     \r\n      title: ['', Validators.required],\r\n    });\r\n  }\r\n  \r\n  removeSafetyModule(i) {\r\n    const item = <FormArray>this.contrlAndActFG.controls['arrObj'];\r\n    if (item.length > 1) {\r\n      item.removeAt(i);\r\n    \r\n    }\r\n  }\r\n  onFormSubmit() {\r\n    console.log(this.contrlAndActFG.value);\r\n    let data={\r\n      arrObj:this.contrlAndActFG.get('arrObj').value\r\n    }\r\n    this.logicalFormInfo.addMultipleContrlActReq(data).subscribe((data) => {\r\n      console.log('PPE=>', data);\r\n      Swal.fire({\r\n        title: 'Parameter Added successfully',\r\n        showConfirmButton: false,\r\n        timer: 1200,\r\n      });\r\n      this.router.navigate(['/admin/siteInfo/contrlActReq']);      \r\n    },(err)=>{console.error(err);} \r\n  \r\n    );\r\n    \r\n  }\r\n  calcHeight(value) {\r\n    this.numberOfLineBreaks = (value.match(/\\n/g) || []).length+1;\r\n    console.log(\"numberOfLineBreaks\",this.numberOfLineBreaks)\r\n }\r\n}\r\n","<div class=\"btn btn-outline-primary\" [routerLink]=\"['/admin/siteInfo/contrlActReq']\">\r\n    <i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\r\n  </div>\r\n  <div class=\"container px-4 py-4 bg-white\">\r\n    <form [formGroup]=\"contrlAndActFG\" (ngSubmit)=\"onFormSubmit()\">\r\n      <h2 class=\"text-center\">Add Control And Action</h2>\r\n      <br />\r\n      <hr />\r\n      <ng-container formArrayName=\"arrObj\">\r\n        <ng-container\r\n          *ngFor=\"let control of add().controls; let i = index\"\r\n          [formGroupName]=\"i\"\r\n        >\r\n          <div class=\"row justify-content-center\">\r\n            <div class=\"mr-1 mt-2\">\r\n              <span \r\n                >{{i+1}}.\r\n              </span>\r\n            </div>\r\n            <div class=\"col-8\">\r\n              <!-- <p for=\"exampleFormControlInput1\" class=\"form-Label\">Job Task Type</p> -->\r\n              <textarea autosize\r\n              (keyup)=\" calcHeight($event.target.value)\"\r\n              [rows]=\"numberOfLineBreaks\"\r\n                type=\"text\"\r\n                formControlName=\"title\"\r\n                class=\"form-control sign\"\r\n                id=\"name\"\r\n              ></textarea>\r\n            </div>\r\n            <div class=\"col-1 mt-2\">\r\n              <span class=\"material-icons\" (click)=\"addAction()\"\r\n                >add_circle_outline\r\n              </span>\r\n            </div>\r\n            <div class=\"col-1 mt-2\">\r\n              <span class=\"material-icons\" (click)=\"removeSafetyModule(i)\">\r\n                remove_circle_outline\r\n              </span>\r\n            </div>\r\n          </div>\r\n  \r\n          <hr />\r\n        </ng-container>\r\n      </ng-container>\r\n      <br />\r\n  \r\n      <div class=\"col-md-2\">\r\n        <button type=\"submit\" class=\"btn btn-primary\"[disabled]=\"contrlAndActFG.get('arrObj').invalid\">Add</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  ","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport {  ViewChild } from '@angular/core';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table'\r\nimport { AddEditProjMangComponent } from './add-edit-proj-mang/add-edit-proj-mang.component';\r\nimport { MatSort } from '@angular/material/sort';\r\n@Component({\r\n  selector: 'app-project-manager',\r\n  templateUrl: './project-manager.component.html',\r\n  styleUrls: ['./project-manager.component.scss']\r\n})\r\nexport class ProjectManagerComponent implements OnInit {\r\n\r\n  mode: any;\r\n  jobTaskData: any = [];\r\n  ELEMENT_DATA = [];\r\n  /////////////mat table////////////////\r\n  displayedColumns: string[] = ['index', 'title' ,'action'];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n  /////////////mat table end////////////////\r\n\r\n  constructor(private logicalFormInfo: LogicalFormInfoService,private dialog:MatDialog) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getAllProjectMang();\r\n  }\r\n\r\n  getAllProjectMang() {\r\n    this.logicalFormInfo.getAllProjectMang().subscribe((res:any) => {\r\n      console.log('getAllProjectMang=>', res);\r\n      // this.jobTaskData = res.data[0].subComponents;\r\n      let data = res.data;\r\n      data.forEach((element, index) => {\r\n        element.index = index + 1; //adding index\r\n      });\r\n\r\n      this.ELEMENT_DATA = data;\r\n      this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n\r\n      //  this.task = res.data.subComponents;\r\n    });\r\n \r\n  }\r\n  \r\n  edit(element){\r\n    const dialogRef = this.dialog.open(AddEditProjMangComponent, {\r\n      width: \"550px\",\r\n      data: element,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if ((result == \"true\")) {\r\n        this.getAllProjectMang();\r\n      }\r\n      console.log(\"The dialog was closed\");\r\n    });\r\n  }\r\n\r\n  delete(item) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: `Do you want to delete \"${item.title}\"?`,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#00B96F',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Delete!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.logicalFormInfo\r\n        .deleteProjectMang(item._id)\r\n        .subscribe((res) => {\r\n          Swal.fire({\r\n            title: 'Project Manager Deleted successfully',\r\n            showConfirmButton: false,\r\n            timer: 1200,\r\n          });\r\n          console.log('deleted res', res);\r\n          this.getAllProjectMang();\r\n            \r\n        });\r\n      }\r\n    });\r\n  }\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n}\r\n","<div class=\"col ml-2 pt-3\">\r\n<h1> Project Manager List</h1>\r\n</div>\r\n<div class=\"col ml-2 mb-2\">\r\n  \r\n  <button  class=\"btn btn-outline-primary mt-1 mr-2 float-right\"(click)=\"edit('')\">\r\n    <i class=\"fas fa-folder-plus mr-2\"></i>Add Project Manager \r\n  </button>\r\n</div>\r\n<div class=\"col-6\">\r\n  <mat-form-field>\r\n    <input\r\n      matInput\r\n      #input\r\n      placeholder=\"Search\"\r\n      (keyup)=\"applyFilter($event)\"\r\n    />\r\n  </mat-form-field>\r\n</div>\r\n<div class=\"\">\r\n  <table mat-table [dataSource]=\"dataSource\" matSort>\r\n\r\n    <!-- Position Column -->\r\n    <ng-container matColumnDef=\"index\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> No. </th>\r\n      <td mat-cell *matCellDef=\"let element\">{{element.index}}</td>\r\n    </ng-container>\r\n\r\n    <!-- Name Column -->\r\n   \r\n<!-- Name Column -->\r\n<ng-container matColumnDef=\"title\">\r\n  <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\r\n  <td mat-cell *matCellDef=\"let element\"> <span class=\"flex-start\"> {{element.title}}</span> </td>\r\n</ng-container>\r\n\r\n<ng-container matColumnDef=\"action\">\r\n  <th mat-header-cell *matHeaderCellDef> Action </th>\r\n  <td mat-cell *matCellDef=\"let element\"> \r\n    <!-- <i class=\"fas fa-pencil-alt mr-2 \" (click)=\"edit(element)\" title=\"edit\"></i>  <i  class=\"fas fa-trash ml-2 \" (click)=\"delete(element)\" title=\"delete\"></i>  -->\r\n    <button mat-icon-button class=\"mr-2\" aria-label=\"Example icon button with a delete icon\" (click)=\"edit(element)\">\r\n      <mat-icon >edit</mat-icon>\r\n    </button>\r\n    <button mat-icon-button aria-label=\"Example icon button with a delete icon\" (click)=\"delete(element)\">\r\n      <mat-icon >delete</mat-icon>\r\n    </button>\r\n  </td>\r\n</ng-container>\r\n<!-- <ng-container matColumnDef=\"edit\">\r\n  <th mat-header-cell *matHeaderCellDef> Edit </th>\r\n  <td mat-cell *matCellDef=\"let element\"(click)=\"edit(element)\"> <i class=\"fas fa-pencil-alt \"></i> \r\n  </td>\r\n</ng-container>\r\n<ng-container matColumnDef=\"delete\">\r\n  <th mat-header-cell *matHeaderCellDef> Delete </th>\r\n  <td mat-cell *matCellDef=\"let element\"(click)=\"delete(element)\"> <i class=\"fas fa-trash \"></i> \r\n  </td>\r\n</ng-container> -->\r\n\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n    <tr class=\"mat-row\" *matNoDataRow>\r\n      <td class=\"mat-cell\" colspan=\"4\"> Data Not  Found  \"{{input.value}}\"</td>\r\n    </tr>\r\n  </table>\r\n\r\n  <mat-paginator [pageSizeOptions]=\"[20]\"\r\n                 showFirstLastButtons \r\n                 aria-label=\"Select page of periodic elements\">\r\n  </mat-paginator>\r\n</div>\r\n","import { FormBuilder, FormGroup,FormArray } from '@angular/forms';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport Swal from 'sweetalert2';\r\n@Component({\r\n  selector: 'app-edit-cust',\r\n  templateUrl: './edit-cust.component.html',\r\n  styleUrls: ['./edit-cust.component.scss']\r\n})\r\nexport class EditCustComponent implements OnInit {\r\n  editCustomerForm:FormGroup;\r\n  StatesData:any=[''];\r\n  formData:any;\r\n  constructor(\r\n    private dialogRef: MatDialogRef<EditCustComponent>,\r\n\t\t@Inject(MAT_DIALOG_DATA) public data: any,\r\n    private fb : FormBuilder,\r\n    private logicalFormInfoService: LogicalFormInfoService\r\n    ) {this.formData=data ;\r\n    console.log(\"fdata\",this.formData)}\r\n\r\n  ngOnInit(): void {\r\n    console.log(this.formData);\r\n    \r\n    this.editCustomerForm = this.fb.group({\r\n      customerName:[this.formData.customerName],\r\n      customerContact:[this.formData.customerContact],\r\n       streetAddress:[this.formData.streetAddress],\r\n      stateId:[this.formData.stateId._id],\r\n      postCode:[this.formData.postCode],\r\n      ABN:[this.formData.ABN],\r\n      contacts: this.fb.array([]),\r\n\r\n   \r\n    })\r\n  \r\n    this.formData.contacts.forEach(element => {\r\n       this.addCustomerDetails(element.position,element.email,element.phone );\r\n    });\r\n  //  this.addCustomerDetails();\r\n    this.getAllStates();\r\n  }\r\n\r\n  onSubmit(){\r\n    \r\n    this.logicalFormInfoService.updateCustomer(this.data._id,this.editCustomerForm.value).subscribe(res => {\r\n      console.log(res);\r\n      this.dialogRef.close('true');\r\n      Swal.fire({\r\n        title: 'Customer Edited successfully',\r\n        showConfirmButton: false,\r\n        timer: 1200,\r\n      });\r\n    });\r\n  }\r\n  close() {\r\n    this.dialogRef.close();\r\n}\r\naddCustomerDetails(position,email,phone) {\r\n  this.customerArr().push(this.customerForm(position,email,phone));\r\n\r\n}\r\ncustomerArr(): FormArray {\r\n  return this.editCustomerForm.get('contacts') as FormArray;\r\n}\r\ncustomerForm(position,email,phone): FormGroup {\r\n  return this.fb.group({\r\n    position:[position],\r\n    email:[email],\r\n    phone:[phone]\r\n\r\n  });\r\n\r\n}\r\nremoveCustomerDetails(i) {\r\n  const item = <FormArray>this.editCustomerForm.controls['contacts'];\r\n  if (item.length > 1) {\r\n    item.removeAt(i);\r\n\r\n  }\r\n}\r\ngetAllStates() {\r\n  this.logicalFormInfoService.getAllStates().subscribe((res: any) => {\r\n    console.log('setStatesDetails=>', res);\r\n    this.StatesData = res.data;\r\n  });\r\n}\r\n}\r\n","<section [formGroup]=\"editCustomerForm\">\r\n    <div >\r\n      <div mat-dialog-title class=\"dialog-title\">\r\n        <h2>Update Customer</h2>\r\n        <button type=\"button\"  class=\"close\" \r\n        style=\"font-size: 30px;\"\r\n        (click)=\"close()\" aria-label=\"Close\">\r\n        <span aria-hidden=\"true\">×</span>\r\n      </button>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"my-3 col\">\r\n            <p for=\"exampleFormControlInput1\" class=\"form-Label\">Customer Name</p>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"customerName\"\r\n              formControlName=\"customerName\"\r\n            />\r\n          </div>\r\n          <div class=\"my-3 col\">\r\n            <p for=\"exampleFormControlInput1\" class=\"form-Label\">Customer Contact</p>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"customerContact\"\r\n              formControlName=\"customerContact\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"my-3 col\">\r\n            <p for=\"exampleFormControlInput1\" class=\"form-Label\">Street Address</p>\r\n            <textarea\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"streetAddress\"\r\n              formControlName=\"streetAddress\"\r\n            ></textarea>\r\n          </div>\r\n          <div class=\"my-3 col\">\r\n            <p for=\"exampleFormControlInput1\" class=\"form-Label\">State</p>\r\n            <select class=\"form-select form-control\" aria-label=\"Default select example\" formControlName=\"stateId\" >\r\n              <option value=\"\" selected hidden> Select State</option>\r\n             <option *ngFor=\"let state of StatesData\" [value]=\"state._id\">{{state.title}}</option>\r\n           \r\n           </select>\r\n            <!-- <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"customerState\"\r\n              formControlName=\"customerState\"\r\n            /> -->\r\n          </div>\r\n          <div class=\"my-3 col\">\r\n            <p for=\"exampleFormControlInput1\" class=\"form-Label\">PostCode</p>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"postCode\"\r\n              formControlName=\"postCode\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n        <div class=\"my-3 col\">\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">Australian Business Name (ABN)</p>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            id=\"ABN\"\r\n            formControlName=\"ABN\"\r\n          />\r\n        </div>\r\n        </div>\r\n        <ng-container formArrayName=\"contacts\">\r\n          <ng-container\r\n            *ngFor=\"let control of customerArr().controls; let i = index\"\r\n            [formGroupName]=\"i\"\r\n          >\r\n            <div>\r\n            <h1> Contact {{i+1}}</h1>\r\n              <div class=\"row\">\r\n\r\n                <div class=\"my-3 col-4\">\r\n                  <p for=\"exampleFormControlInput1\" class=\"form-Label\"> Position</p>\r\n                  <input\r\n                    type=\"text\"\r\n                    formControlName=\"position\"\r\n                   \r\n                    class=\"form-control\"\r\n                    id=\"position\"\r\n                  />\r\n                </div>\r\n                <div class=\"my-3 col-4\">\r\n                  <p for=\"exampleFormControlInput1\" class=\"form-Label\">\r\n                   Email\r\n                  </p>\r\n                  <input\r\n                  type=\"text\"\r\n                  formControlName=\"email\"\r\n             \r\n                  class=\"form-control\"\r\n                  id=\"email\"\r\n                />\r\n                </div>\r\n                <div class=\"my-3 col-4\">\r\n                  <p for=\"exampleFormControlInput1\" class=\"form-Label\">  Phone Number</p>\r\n                  <input\r\n                    type=\"text\"\r\n                    formControlName=\"phone\"\r\n                  \r\n                    class=\"form-control\"\r\n                    id=\"phone\"\r\n                  />\r\n                </div>\r\n              \r\n                <div >\r\n                  <span (click)=\"addCustomerDetails('','','')\"\r\n                    >\r\n                  </span>\r\n                </div>\r\n                <div>\r\n                  <span   (click)=\"removeCustomerDetails(i)\">\r\n                 \r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <hr />\r\n          </ng-container>\r\n        </ng-container>\r\n        <!-- <div class=\"row\">\r\n          <div class=\"my-3 col\">\r\n            <p for=\"exampleFormControlInput1\" class=\"form-Label\">Customer Name</p>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"customerName\"\r\n              formControlName=\"customerName\"\r\n            />\r\n          </div>\r\n          <div class=\"my-3 col\">\r\n            <p for=\"exampleFormControlInput1\" class=\"form-Label\">Customer Contact</p>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"customerContact\"\r\n              formControlName=\"customerContact\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"my-3 col\">\r\n            <p for=\"exampleFormControlInput1\" class=\"form-Label\">Customer Contact Phone</p>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"customerContactPhone\"\r\n              formControlName=\"customerContactPhone\"\r\n            />\r\n          </div>\r\n          <div class=\"my-3 col\">\r\n            <p for=\"exampleFormControlInput1\" class=\"form-Label\">Customer Email</p>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"customerEmail\"\r\n              formControlName=\"customerEmail\"\r\n            />\r\n          </div>\r\n        </div>  -->\r\n    \r\n      <div >\r\n        <button class=\"btn btn-primary\" (click)=\"onSubmit()\">\r\n         Update        </button>\r\n      </div>\r\n   </div>\r\n    </section>\r\n","import { NgxSpinnerService } from 'ngx-spinner';\r\nimport Swal from 'sweetalert2';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { SetTitleService } from 'src/app/utils/services/set-title.service';\r\nimport { AddSiteComponent } from './add-site/add-site.component';\r\nimport { EditSiteComponent } from './edit-site/edit-site.component';\r\nimport { MatSort } from '@angular/material/sort';\r\n\r\n@Component({\r\n  selector: 'app-add-site-info',\r\n  templateUrl: './add-site-info.component.html',\r\n  styleUrls: ['./add-site-info.component.scss']\r\n})\r\nexport class AddSiteInfoComponent implements OnInit {\r\n  mode: any;\r\n  jobTaskData: any = [];\r\n  ELEMENT_DATA = [];\r\n  /////////////mat table////////////////\r\n  displayedColumns: string[] = ['index', 'siteName',/* 'siteForemen', */'streetNo','streetAddress','Suburb','State', 'action'];\r\n  dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  allSites: any[]=[];\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n  /////////////mat table end////////////////\r\n\r\n  constructor( \r\n    private dialog: MatDialog, \r\n    private setTitle: SetTitleService,\r\n    private logicalFormInfoService: LogicalFormInfoService,\r\n    private spinner: NgxSpinnerService\r\n    ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.setTitle.setTitle('WHS-Add Site Info');\r\n    this.getAllSites()\r\n  }\r\n  getAllSites(){\r\n    this.logicalFormInfoService.getAllSite().subscribe((res:any)=> {\r\n      console.log(res)\r\n   this.dataSource.data = res.data\r\n   this.dataSource.paginator = this.paginator;\r\n   this.dataSource.sort = this.sort;\r\n   })\r\n  }\r\n\r\n  getAllJobTask() {\r\n    // this.logicalFormInfo.getAllJobtask().subscribe((res: any) => {\r\n    //   console.log('jobTaskDetails=>', res);\r\n    //   // this.jobTaskData = res.data[0].subComponents;\r\n    //   let data = res.data\r\n    //   data.forEach((element, index) => {\r\n    //     element.index = index + 1; //adding index\r\n    //   });\r\n\r\n    //   this.ELEMENT_DATA = data;\r\n    //   this.dataSource = new MatTableDataSource(this.ELEMENT_DATA);\r\n    //   this.dataSource.paginator = this.paginator;\r\n\r\n    //   //  this.task = res.data.subComponents;\r\n    // });\r\n\r\n  }\r\n\r\n  openDialog(id) {\r\n\t\tlet dialogRef = this.dialog.open(AddSiteComponent, {\r\n      // width: \"550px\",\r\n      height:'500px',\r\n\t\t\tdata: {\r\n\t\t\t\taction: \"new\",\r\n\t\t\t\tuserId: id,\r\n\t\t\t},\r\n      width: \"630px\",\r\n\t\t});\r\n\t\tdialogRef.afterClosed().subscribe((result) => {\r\n      if(result == 'true'){\r\n        this.getAllSites()\r\n      }\r\n\t\t\tconsole.log(\"CustomerInfoComponent -> openDialog -> result\", result);\r\n\t\t\t\r\n\t\t\tconsole.log(\"The dialog was closed\");\r\n\t\t});\r\n\t}\r\n  edit(element) {\r\n    const dialogRef = this.dialog.open(EditSiteComponent, {\r\n      width: \"600px\",\r\n      // width: \"550px\",\r\n      height:'500px',\r\n      data: element,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if ((result == \"true\")) {\r\n        this.getAllSites()\r\n      }\r\n      console.log(\"The dialog was closed\");\r\n    });\r\n  }\r\n  delete(item) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: `Do you want to delete \"${item.siteName}\"?`,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#00B96F',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, Delete!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        console.log(result)\r\n        // this.model.attributes.splice(i,1);\r\n        this.spinner.show()\r\n        this.logicalFormInfoService.deleteSite(item._id).subscribe((res => {\r\n        this.getAllSites()\r\n        this.spinner.hide()\r\n        }))\r\n      }\r\n    });\r\n  }\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n}\r\n","<div class=\"col ml-2 pt-3\">\r\n  <h1>\r\n    Site Information List\r\n  </h1>\r\n</div>\r\n<div class=\"col ml-2 mb-2\">\r\n\r\n  <button (click)=\"openDialog('abcd')\" _ngcontent-hqi-c400=\"\" type=\"button\"\r\n    class=\"btn btn-outline-primary mt-1 mr-2 float-right\"><i _ngcontent-hqi-c400=\"\" class=\"fas fa-plus\"></i> Add Site\r\n  </button>\r\n</div>\r\n<div class=\"col-6\">\r\n  <mat-form-field>\r\n    <input\r\n      matInput\r\n      #input\r\n      placeholder=\"Search\"\r\n      (keyup)=\"applyFilter($event)\"\r\n    />\r\n  </mat-form-field>\r\n</div>\r\n<div class=\"\">\r\n  <table mat-table [dataSource]=\"dataSource\" matSort>\r\n\r\n    <!-- Position Column -->\r\n    <ng-container matColumnDef=\"index\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> No. </th>\r\n      <td mat-cell *matCellDef=\"let element,let i = index\">{{i+1}}</td>\r\n    </ng-container>\r\n\r\n    <!-- Name Column -->\r\n\r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"siteName\">\r\n      <th mat-header-cell *matHeaderCellDef > Site Name </th>\r\n          <p for=\"exampleFormControlInput1\" class=\"form-Label\">Site Name</p>\r\n      <td mat-cell *matCellDef=\"let element\"> <span class=\"flex-start\">{{element.siteName}}</span>  </td>\r\n    </ng-container>\r\n\r\n    <!-- <ng-container matColumnDef=\"siteForemen\">\r\n      <th mat-header-cell *matHeaderCellDef> Site Foremen </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.siteForemen}} </td>\r\n    </ng-container> -->\r\n\r\n    <ng-container matColumnDef=\"streetNo\">\r\n      <th mat-header-cell *matHeaderCellDef > Street No </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.streetNumber}} </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"streetAddress\">\r\n      <th mat-header-cell *matHeaderCellDef> Street Address </th>\r\n      <td mat-cell *matCellDef=\"let element\"> <span class=\"flex-start\">{{element.streetAddress}} </span></td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"Suburb\">\r\n      <th mat-header-cell *matHeaderCellDef> Suburb </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.suburb}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"State\">\r\n      <th mat-header-cell *matHeaderCellDef> State </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.stateId?.title}} </td>\r\n    </ng-container>\r\n   \r\n<ng-container matColumnDef=\"action\">\r\n  <th mat-header-cell *matHeaderCellDef> Action </th>\r\n  <td mat-cell *matCellDef=\"let element\"> \r\n    <!-- <i class=\"fas fa-pencil-alt mr-2 \" (click)=\"edit(element)\" title=\"edit\"></i>  <i  class=\"fas fa-trash ml-2 \" (click)=\"delete(element)\" title=\"delete\"></i>  -->\r\n    <button mat-icon-button class=\"mr-2\" aria-label=\"Example icon button with a delete icon\" (click)=\"edit(element)\">\r\n      <mat-icon >edit</mat-icon>\r\n    </button>\r\n    <button mat-icon-button aria-label=\"Example icon button with a delete icon\" (click)=\"delete(element)\">\r\n      <mat-icon >delete</mat-icon>\r\n    </button>\r\n  </td>\r\n</ng-container>\r\n    <!-- <ng-container matColumnDef=\"edit\">\r\n      <th mat-header-cell *matHeaderCellDef> Edit </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"edit(element)\"> <i class=\"fas fa-pencil-alt \"></i>\r\n      </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"delete\">\r\n      <th mat-header-cell *matHeaderCellDef> Delete </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"delete(element)\"> <i class=\"fas fa-trash \"></i>\r\n      </td>\r\n    </ng-container> -->\r\n\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n    <tr class=\"mat-row\" *matNoDataRow>\r\n      <td class=\"mat-cell\" colspan=\"4\"> Data Not  Found  \"{{input.value}}\"</td>\r\n    </tr>\r\n  </table>\r\n\r\n  <mat-paginator [pageSizeOptions]=\"[20]\" showFirstLastButtons aria-label=\"Select page of periodic elements\">\r\n  </mat-paginator>\r\n</div>","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { LogicalFormInfoService } from 'src/app/utils/services/logical-form-info.service';\r\nimport { FormBuilder, FormGroup,  Validators,\r\n  FormArray,} from '@angular/forms';\r\n\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-add-staff',\r\n  templateUrl: './add-staff.component.html',\r\n  styleUrls: ['./add-staff.component.scss']\r\n})\r\nexport class AddStaffComponent implements OnInit {\r\n  addStaffForm:FormGroup;\r\n  numberOfLineBreaks: any;\r\n  constructor( \r\n    private fb:FormBuilder,\r\n    private logicalFormInfo: LogicalFormInfoService,\r\n    private router: Router,\r\n    ) { \r\n      this.addStaffForm=this.fb.group({\r\n        arrObj: this.fb.array([]),\r\n      })\r\n    }\r\n\r\n    ngOnInit(): void {\r\n      this.addStaff();\r\n    }\r\n    addStaff() {\r\n      {\r\n        this.add().push(this.newAction());\r\n      }\r\n    }\r\n    add(): FormArray {\r\n      return this.addStaffForm.get('arrObj') as FormArray;\r\n    }\r\n    newAction(): FormGroup {\r\n      return this.fb.group({\r\n       \r\n        title: ['', Validators.required],\r\n      });\r\n    }\r\n    \r\n    removeStaff(i) {\r\n      const item = <FormArray>this.addStaffForm.controls['arrObj'];\r\n      if (item.length > 1) {\r\n        item.removeAt(i);\r\n      \r\n      }\r\n    }\r\n    onFormSubmit() {\r\n      console.log(this.addStaffForm.value);\r\n      let data={\r\n        arrObj:this.addStaffForm.get('arrObj').value\r\n      }\r\n      this.logicalFormInfo.addMultipleStaff(data).subscribe((data) => {\r\n        console.log('chemical=>', data);\r\n        this.router.navigate(['/admin/siteInfo/staff']);      \r\n      },(err)=>{console.error(err);} \r\n    \r\n      );\r\n      \r\n    }\r\n      calcHeight(value) {\r\n    this.numberOfLineBreaks = (value.match(/\\n/g) || []).length+1;\r\n    console.log(\"numberOfLineBreaks\",this.numberOfLineBreaks)\r\n  }\r\n\r\n}\r\n","<div class=\"btn btn-outline-primary\" [routerLink]=\"['/admin/siteInfo/staff']\">\r\n    <i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\r\n  </div>\r\n\r\n    <div class=\"container px-4 py-4 bg-white\" >\r\n        <form  [formGroup]=\"addStaffForm\" (ngSubmit)=\"onFormSubmit()\">\r\n      <h2  class=\"text-center\"> Staff Info</h2>\r\n      <br />\r\n      <hr />\r\n      <ng-container formArrayName=\"arrObj\">\r\n        <ng-container\r\n          *ngFor=\"let control of add().controls; let i = index\"\r\n          [formGroupName]=\"i\"\r\n        >\r\n          <div class=\"row justify-content-center\">\r\n            <div class=\"mr-1 mt-2\">\r\n              <span \r\n                >{{i+1}}\r\n              </span>\r\n            </div>\r\n            <div class=\"col-8\">\r\n              <textarea  autosize\r\n              (keyup)=\" calcHeight($event.target.value)\"\r\n              [rows]=\"numberOfLineBreaks\"\r\n                type=\"text\"\r\n                formControlName=\"title\"\r\n                class=\"form-control sign\"\r\n                id=\"title\"\r\n              ></textarea>\r\n            </div>\r\n            <div class=\"col-1 mt-2\">\r\n              <span class=\"material-icons\" (click)=\"addStaff()\"\r\n                >add_circle_outline\r\n              </span>\r\n            </div>\r\n            <div class=\"col-1 mt-2\">\r\n              <span class=\"material-icons\" (click)=\"removeStaff(i)\">\r\n                remove_circle_outline\r\n              </span>\r\n            </div>\r\n          </div>\r\n  \r\n          <hr />\r\n        </ng-container>\r\n      </ng-container>\r\n      <br />\r\n          <div  class=\"col-md-2\">\r\n            <button class=\"btn btn-primary\"[disabled]=\"addStaffForm.get('arrObj').invalid\" >\r\n              Add\r\n            </button>\r\n          </div>\r\n        \r\n        </form>\r\n        </div>","import { AddContrActComponent } from './contr-and-act-req/add-contr-act/add-contr-act.component';\r\nimport { ContrAndActReqComponent } from './contr-and-act-req/contr-and-act-req.component';\r\nimport { AddHazardComponent } from './identify-hazards/add-hazard/add-hazard.component';\r\nimport { IdentifyHazardsComponent } from './identify-hazards/identify-hazards.component';\r\nimport { ProjectManagerComponent } from './project-manager/project-manager.component';\r\nimport { EditCOPComponent } from './code-of-pract/edit-cop/edit-cop.component';\r\nimport { AddCOPComponent } from './code-of-pract/add-cop/add-cop.component';\r\nimport { CodeOfPractComponent } from './code-of-pract/code-of-pract.component';\r\nimport { EditLicenceCatComponent } from './licence-and-qual/licence-cat/edit-licence-cat/edit-licence-cat.component';\r\nimport { LicenceCatComponent } from './licence-and-qual/licence-cat/licence-cat.component';\r\nimport { EditLicenceComponent } from './licence-and-qual/edit-licence/edit-licence.component';\r\nimport { AddLicenceComponent } from './licence-and-qual/add-licence/add-licence.component';\r\nimport { AddPPEComponent } from './ppe-select/add-ppe/add-ppe.component';\r\nimport { AddHighRiskConstructionComponent } from './high-risk-con/add-high-risk-construction/add-high-risk-construction.component';\r\nimport { AddJobTaskComponent } from './job-task/add-job-task/add-job-task.component';\r\nimport { AddCustomerComponent } from './add-customer/add-customer.component';\r\nimport { PpeSelectComponent } from './ppe-select/ppe-select.component';\r\nimport { LicenceAndQualComponent } from './licence-and-qual/licence-and-qual.component';\r\nimport { HighRiskConComponent } from './high-risk-con/high-risk-con.component';\r\nimport { JobTaskComponent } from './job-task/job-task.component';\r\nimport { AddSiteInfoComponent } from './add-site-info/add-site-info.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { SiteInfoComponent } from './site-info.component';\r\nimport { AddLicenceCatComponent } from './licence-and-qual/licence-cat/add-licence-cat/add-licence-cat.component';\r\nimport { AddSiteComponent } from './add-site-info/add-site/add-site.component';\r\nimport { EditSiteComponent } from './add-site-info/edit-site/edit-site.component';\r\nimport { ChemicalComponent } from './chemical/chemical.component';\r\nimport { RiskLevelComponent } from './risk-level/risk-level.component';\r\nimport { ResidualRiskLevelComponent } from './residual-risk-level/residual-risk-level.component';\r\nimport { StaffComponent } from './staff/staff.component';\r\nimport { AddChemicalComponent } from './chemical/add-chemical/add-chemical.component';\r\nimport { AddRiskLevelComponent } from './risk-level/add-risk-level/add-risk-level.component';\r\nimport { AddResidualRiskLevelComponent } from './residual-risk-level/add-residual-risk-level/add-residual-risk-level.component';\r\nimport { AddStaffComponent } from './staff/add-staff/add-staff.component';\r\nimport { EditStaffComponent } from './staff/edit-staff/edit-staff.component';\r\nimport { AddingCustComponent } from './add-customer/adding-cust/adding-cust.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'addSite', component: AddSiteInfoComponent, children: [\r\n      { path: 'addSite1', component: AddSiteComponent },\r\n      { path: 'editSite', component: EditSiteComponent }\r\n    ]\r\n  },\r\n  { path: 'addCustomer', component: AddCustomerComponent },\r\n  { path: 'addingCustomer', component: AddingCustComponent },\r\n  { path: 'jobTask', component: JobTaskComponent },\r\n  { path: 'addJobTask', component: AddJobTaskComponent },\r\n  { path: 'addHighRisk', component: AddHighRiskConstructionComponent },\r\n  { path: 'addPPE', component: AddPPEComponent },\r\n\r\n  { path: 'highRisk', component: HighRiskConComponent },\r\n  { path: 'licenceAndQual', component: LicenceAndQualComponent },\r\n  { path: 'addLicence', component: AddLicenceComponent },\r\n  { path: 'editLicence', component: EditLicenceComponent },\r\n  { path: 'licenceCat', component: LicenceCatComponent },\r\n  { path: 'addLicenceCat', component: AddLicenceCatComponent },\r\n  { path: 'editLicenceCat', component: EditLicenceCatComponent },\r\n  { path: 'ppeSel', component: PpeSelectComponent },\r\n  { path: 'codeOfpract', component: CodeOfPractComponent },\r\n  { path: 'addCOP', component: AddCOPComponent },\r\n  { path: 'editCOP', component: EditCOPComponent },\r\n  // { path: 'uploadData', component: UploadBulkDataComponent },\r\n  { path: 'projMang', component: ProjectManagerComponent },\r\n  { path: 'hazards', component: IdentifyHazardsComponent },\r\n  { path: 'addHazards', component: AddHazardComponent },\r\n  { path: 'contrlActReq', component: ContrAndActReqComponent },\r\n  { path: 'addContrlActReq', component: AddContrActComponent },\r\n  { path: 'chemical', component: ChemicalComponent },\r\n  { path: 'addChemical', component: AddChemicalComponent },\r\n  { path: 'riskLevel', component: RiskLevelComponent },\r\n  { path: 'addRisk', component: AddRiskLevelComponent },\r\n  { path: 'residual', component: ResidualRiskLevelComponent },\r\n  { path: 'addResidual', component: AddResidualRiskLevelComponent },\r\n  { path: 'staff', component: StaffComponent },\r\n  { path: 'addStaff', component: AddStaffComponent },\r\n  { path: 'editStaff', component: EditStaffComponent }\r\n\r\n  // { path: 'uploadDataInBulk', component: UploadBulkDataComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class SiteInfoRoutingModule { }\r\n"]}